{"contents": ["empty"], "code_tokens": [".", "Fixed", "bug", "#", "68594", "(", "Use", "after", "free", "vulnerability", "in", "unserialize", "(", "))", ".", "(", "Stefan", "Esser", ")", "-", "-", "TEST", "-", "-", "Bug", "#", "68545", "Use", "after", "free", "vulnerability", "in", "unserialize", "(", ")", "-", "-", "FILE", "-", "-", "<", "?", "php", "for", "(", "$", "i", "=", "4", ";", "$", "i", "<", "100", ";", "$", "i", "+", "+)", "{", "$", "m", "=", "new", "StdClass", "(", ");", "$", "u", "=", "array", "(", "1", ")", ";", "$", "m", "-", ">", "aaa", "=", "array", "(", "1", ",", "2", ",", "&$", "u", ",", "4", ",", "5", ")", ";", "$", "m", "-", ">", "bbb", "=", "1", ";", "$", "m", "-", ">", "ccc", "=", "&", "$", "u", ";", "$", "m", "-", ">", "ddd", "=", "str_repeat", "(", "\"", "A", "\"", ",", "$", "i", ")", ";", "$", "z", "=", "serialize", "(", "$", "m", ")", ";", "$", "z", "=", "str_replace", "(", "\"", "bbb", "\"", ",", "\"", "aaa", "\"", ",", "$", "z", ")", ";", "$", "y", "=", "unserialize", "(", "$", "z", ")", ";", "$", "z", "=", "serialize", "(", "$", "y", ")", ";", "}", "?", ">", "=", "==", "DONE", "=", "==", "-", "-", "EXPECTF", "-", "-", "=", "==", "DONE", "=", "==", "@", "@", "-", "1", ",", "4", "+", "1", ",", "4", "@", "@", "/", "*", "Generated", "by", "re2c", "0", ".", "13", ".", "7", ".", "5", "on", "Thu", "Dec", "11", "19", ":", "26", ":", "19", "2014", "*", "/", "+", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "if", "(", "zend_symtable_find", "(", "ht", ",", "Z_STRVAL_P", "(", "key", ")", ",", "Z_STRLEN_P", "(", "key", ")", "+", "1", ",", "(", "void", "*", "*)", "&", "old_data", ")", "==", "SUCCESS", ")", "{", "var_push_dtor", "(", "var_hash", ",", "old_data", ")", ";", "}", "#", "line", "487", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "838", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "549", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "832", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "598", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "if", "(", "yych", "<", "=", "'", "/'", ")", "goto", "yy18", ";", "if", "(", "yych", ">", "=", "'", ";'", ")", "goto", "yy18", ";", "+", "+", "YYCURSOR", ";", "#", "line", "686", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "775", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "678", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "808", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "658", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "849", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "629", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "899", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "601", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "948", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "591", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1046", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "576", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1120", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "549", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1174", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "542", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1189", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "535", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1199", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "512", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1245", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "491", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1289", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "840", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "if", "(", "zend_symtable_find", "(", "ht", ",", "Z_STRVAL_P", "(", "key", ")", ",", "Z_STRLEN_P", "(", "key", ")", "+", "1", ",", "(", "void", "*", "*)", "&", "old_data", ")", "==", "SUCCESS", ")", "{", "var_push_dtor", "(", "var_hash", ",", "old_data", ")", ";", "}</s>-", "Core", ":", "/", "*", "Generated", "by", "re2c", "0", ".", "13", ".", "5", "*", "/", "#", "line", "484", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "835", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "546", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "829", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "595", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "if", "(", "yych", "!", "=", "'", ":'", ")", "goto", "yy18", ";", "#", "line", "683", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "771", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "675", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "804", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "655", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "845", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "626", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "895", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "598", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "944", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "588", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1042", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "573", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1116", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "546", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1170", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "539", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1185", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "532", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1195", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "509", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1241", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "488", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1285", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "837", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\""], "docstring_tokens": ["use-after-free", "error"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "Get", "a", "local", "copy", "of", "a", "request", ".", "*", "*", "Use", "this", "in", "preference", "to", "RING_GET_REQUEST", "(", ")", "so", "all", "processing", "is", "*", "done", "on", "a", "local", "copy", "that", "cannot", "be", "modified", "by", "the", "other", "end", ".", "*", "*", "Note", "that", "https", ":", "//", "gcc", ".", "gnu", ".", "org", "/", "bugzilla", "/", "show_bug", ".", "cgi", "?", "id", "=", "58145", "may", "cause", "this", "*", "to", "be", "ineffective", "where", "_req", "is", "a", "struct", "which", "consists", "of", "only", "bitfields", ".", "*", "/", "#", "define", "RING_COPY_REQUEST", "(", "_r", ",", "_idx", ",", "_req", ")", "do", "{", "\\", "/", "*", "Use", "volatile", "to", "force", "the", "copy", "into", "_req", ".", "*", "/", "\\", "*", "(", "_req", ")", "=", "*", "(", "volatile", "typeof", "(", "_req", ")", ")", "RING_GET_REQUEST", "(", "_r", ",", "_idx", ")", ";", "\\", "}", "while", "(", "0", ")</s>"], "docstring_tokens": ["double", "fetch"]}
{"contents": ["empty"], "code_tokens": ["#", "include", "<", "linux", "/", "seq_file", ".", "h", ">", "static", "int", "snd_mem_proc_read", "(", "struct", "seq_file", "*", "seq", ",", "void", "*", "offset", ")", "seq_printf", "(", "seq", ",", "\"", "pages", ":", "%", "li", "bytes", "(", "%", "li", "pages", "per", "%", "likB", ")", "\\", "n", "\"", ",", "pages", "*", "PAGE_SIZE", ",", "pages", ",", "PAGE_SIZE", "/", "1024", ")", ";", "seq_printf", "(", "seq", ",", "\"", "buffer", "%", "d", ":", "ID", "%", "08x", ":", "type", "%", "s", "\\", "n", "\"", ",", "devno", ",", "mem", "-", ">", "id", ",", "types", "[", "mem", "-", ">", "buffer", ".", "dev", ".", "type", "]", ");", "seq_printf", "(", "seq", ",", "\"", "addr", "=", "0x", "%", "lx", ",", "size", "=", "%", "d", "bytes", "\\", "n", "\"", ",", "(", "unsigned", "long", ")", "mem", "-", ">", "buffer", ".", "addr", ",", "(", "int", ")", "mem", "-", ">", "buffer", ".", "bytes", ")", ";", "return", "0", ";", "}", "static", "int", "snd_mem_proc_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "{", "return", "single_open", "(", "file", ",", "snd_mem_proc_read", ",", "NULL", ")", ";", "static", "ssize_t", "snd_mem_proc_write", "(", "struct", "file", "*", "file", ",", "const", "char", "__user", "*", "buffer", ",", "size_t", "count", ",", "loff_t", "*", "ppos", ")", "if", "(", "count", ">", "sizeof", "(", "buf", ")", "-", "1", ")", "return", "-", "EINVAL", ";", "buf", "[", "count", "]", "=", "'", "\\", "0", "'", ";", "return", "count", ";", "return", "count", ";", "return", "count", ";", "return", "count", ";", "return", "count", ";", "static", "const", "struct", "file_operations", "snd_mem_proc_fops", "=", "{", ".", "owner", "=", "THIS_MODULE", ",", ".", "open", "=", "snd_mem_proc_open", ",", ".", "read", "=", "seq_read", ",", "#", "ifdef", "CONFIG_PCI", ".", "write", "=", "snd_mem_proc_write", ",", "#", "endif", ".", "llseek", "=", "seq_lseek", ",", ".", "release", "=", "single_release", ",", "}", ";", "if", "(", "snd_mem_proc", ")", "snd_mem_proc", "-", ">", "proc_fops", "=", "&", "snd_mem_proc_fops", ";</s>static", "int", "snd_mem_proc_read", "(", "char", "*", "page", ",", "char", "*", "*", "start", ",", "off_t", "off", ",", "int", "count", ",", "int", "*", "eof", ",", "void", "*", "data", ")", "int", "len", "=", "0", ";", "len", "+", "=", "snprintf", "(", "page", "+", "len", ",", "count", "-", "len", ",", "\"", "pages", ":", "%", "li", "bytes", "(", "%", "li", "pages", "per", "%", "likB", ")", "\\", "n", "\"", ",", "pages", "*", "PAGE_SIZE", ",", "pages", ",", "PAGE_SIZE", "/", "1024", ")", ";", "len", "+", "=", "snprintf", "(", "page", "+", "len", ",", "count", "-", "len", ",", "\"", "buffer", "%", "d", ":", "ID", "%", "08x", ":", "type", "%", "s", "\\", "n", "\"", ",", "devno", ",", "mem", "-", ">", "id", ",", "types", "[", "mem", "-", ">", "buffer", ".", "dev", ".", "type", "]", ");", "len", "+", "=", "snprintf", "(", "page", "+", "len", ",", "count", "-", "len", ",", "\"", "addr", "=", "0x", "%", "lx", ",", "size", "=", "%", "d", "bytes", "\\", "n", "\"", ",", "(", "unsigned", "long", ")", "mem", "-", ">", "buffer", ".", "addr", ",", "(", "int", ")", "mem", "-", ">", "buffer", ".", "bytes", ")", ";", "return", "len", ";", "static", "int", "snd_mem_proc_write", "(", "struct", "file", "*", "file", ",", "const", "char", "__user", "*", "buffer", ",", "unsigned", "long", "count", ",", "void", "*", "data", ")", "if", "(", "count", ">", "ARRAY_SIZE", "(", "buf", ")", "-", "1", ")", "count", "=", "ARRAY_SIZE", "(", "buf", ")", "-", "1", ";", "buf", "[", "ARRAY_SIZE", "(", "buf", ")", "-", "1", "]", "=", "'", "\\", "0", "'", ";", "return", "(", "int", ")", "count", ";", "return", "(", "int", ")", "count", ";", "return", "(", "int", ")", "count", ";", "return", "(", "int", ")", "count", ";", "return", "(", "int", ")", "count", ";", "if", "(", "snd_mem_proc", ")", "{", "snd_mem_proc", "-", ">", "read_proc", "=", "snd_mem_proc_read", ";", "#", "ifdef", "CONFIG_PCI", "snd_mem_proc", "-", ">", "write_proc", "=", "snd_mem_proc_write", ";", "#", "endif", "}"], "docstring_tokens": ["alsa", "snd-page-alloc", "local", "proc", "file", "information", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["What", ":", "tcp_dma_copybreak", "sysctl", "Date", ":", "Removed", "in", "kernel", "v3", ".", "13", "Contact", ":", "Dan", "Williams", "<", "dan", ".", "j", ".", "williams", "@", "intel", ".", "com", ">", "Description", ":", "Formerly", "the", "lower", "limit", ",", "in", "bytes", ",", "of", "the", "size", "of", "socket", "reads", "that", "will", "be", "offloaded", "to", "a", "DMA", "copy", "engine", ".", "Removed", "due", "to", "coherency", "issues", "of", "the", "cpu", "potentially", "touching", "the", "buffers", "while", "dma", "is", "in", "flight", ".", "@", "@", "-", "582", ",", "12", "+", "582", ",", "6", "@", "@", "tcp_workaround_signed_windows", "-", "BOOLEAN", "struct", "dma_chan", "*", "chan", ")", ";", "#", "ifdef", "CONFIG_NET_RX_BUSY_POLL", "unsigned", "int", "napi_id", ";", "static", "inline", "void", "sk_eat_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ")", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "+", "+", "seq", ";", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "err", "=", "skb_copy_datagram_iovec", "(", "skb", ",", "offset", ",", "msg", "-", ">", "msg_iov", ",", "used", ")", ";", "if", "(", "err", ")", "{", "/", "*", "Exception", ".", "Bailout", "!", "*", "/", "if", "(", "!", "copied", ")", "copied", "=", "-", "EFAULT", ";", "break", ";", "if", "(", "!(", "flags", "&", "MSG_PEEK", ")", ")", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "+", "+*", "seq", ";", "if", "(", "!(", "flags", "&", "MSG_PEEK", ")", ")", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "if", "(", "!", "tcp_prequeue", "(", "sk", ",", "skb", ")", ")", "if", "(", "!", "tcp_prequeue", "(", "sk", ",", "skb", ")", ")", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "spin_lock_irqsave", "(", "&", "sk", "-", ">", "sk_receive_queue", ".", "lock", ",", "cpu_flags", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ")", ";", "spin_unlock_irqrestore", "(", "&", "sk", "-", ">", "sk_receive_queue", ".", "lock", ",", "cpu_flags", ")", ";", "*", "seq", "=", "0", ";</s>tcp_dma_copybreak", "-", "INTEGER", "Lower", "limit", ",", "in", "bytes", ",", "of", "the", "size", "of", "socket", "reads", "that", "will", "be", "offloaded", "to", "a", "DMA", "copy", "engine", ",", "if", "one", "is", "present", "in", "the", "system", "and", "CONFIG_NET_DMA", "is", "enabled", ".", "Default", ":", "4096", "config", "NET_DMA", "bool", "\"", "Network", ":", "TCP", "receive", "copy", "offload", "\"", "depends", "on", "DMA_ENGINE", "&", "&", "NET", "default", "(", "INTEL_IOATDMA", "|", "|", "FSL_DMA", ")", "depends", "on", "BROKEN", "help", "This", "enables", "the", "use", "of", "DMA", "engines", "in", "the", "network", "stack", "to", "offload", "receive", "copy", "-", "to", "-", "user", "operations", ",", "freeing", "CPU", "cycles", ".", "Say", "Y", "here", "if", "you", "enabled", "INTEL_IOATDMA", "or", "FSL_DMA", ",", "otherwise", "say", "N", ".", "obj", "-", "$(", "CONFIG_NET_DMA", ")", "+", "=", "iovlock", ".", "o", "/", "**", "*", "dma_async_memcpy_pg_to_pg", "-", "offloaded", "copy", "from", "page", "to", "page", "*", "@", "chan", ":", "DMA", "channel", "to", "offload", "copy", "to", "*", "@", "dest_pg", ":", "destination", "page", "*", "@", "dest_off", ":", "offset", "in", "page", "to", "copy", "to", "*", "@", "src_pg", ":", "source", "page", "*", "@", "src_off", ":", "offset", "in", "page", "to", "copy", "from", "*", "@", "len", ":", "length", "*", "*", "Both", "@", "dest_page", "/", "@", "dest_off", "and", "@", "src_page", "/", "@", "src_off", "must", "be", "mappable", "to", "a", "bus", "*", "address", "according", "to", "the", "DMA", "mapping", "API", "rules", "for", "streaming", "mappings", ".", "*", "Both", "@", "dest_page", "/", "@", "dest_off", "and", "@", "src_page", "/", "@", "src_off", "must", "stay", "memory", "resident", "*", "(", "kernel", "memory", "or", "locked", "user", "space", "pages", ")", ".", "*", "/", "dma_cookie_t", "dma_async_memcpy_pg_to_pg", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "page", "*", "dest_pg", ",", "unsigned", "int", "dest_off", ",", "struct", "page", "*", "src_pg", ",", "unsigned", "int", "src_off", ",", "size_t", "len", ")", "{", "struct", "dma_device", "*", "dev", "=", "chan", "-", ">", "device", ";", "struct", "dma_async_tx_descriptor", "*", "tx", ";", "struct", "dmaengine_unmap_data", "*", "unmap", ";", "dma_cookie_t", "cookie", ";", "unsigned", "long", "flags", ";", "unmap", "=", "dmaengine_get_unmap_data", "(", "dev", "-", ">", "dev", ",", "2", ",", "GFP_NOWAIT", ")", ";", "if", "(", "!", "unmap", ")", "return", "-", "ENOMEM", ";", "unmap", "-", ">", "to_cnt", "=", "1", ";", "unmap", "-", ">", "from_cnt", "=", "1", ";", "unmap", "-", ">", "addr", "[", "0", "]", "=", "dma_map_page", "(", "dev", "-", ">", "dev", ",", "src_pg", ",", "src_off", ",", "len", ",", "DMA_TO_DEVICE", ")", ";", "unmap", "-", ">", "addr", "[", "1", "]", "=", "dma_map_page", "(", "dev", "-", ">", "dev", ",", "dest_pg", ",", "dest_off", ",", "len", ",", "DMA_FROM_DEVICE", ")", ";", "unmap", "-", ">", "len", "=", "len", ";", "flags", "=", "DMA_CTRL_ACK", ";", "tx", "=", "dev", "-", ">", "device_prep_dma_memcpy", "(", "chan", ",", "unmap", "-", ">", "addr", "[", "1", "]", ",", "unmap", "-", ">", "addr", "[", "0", "]", ",", "len", ",", "flags", ")", ";", "if", "(", "!", "tx", ")", "{", "dmaengine_unmap_put", "(", "unmap", ")", ";", "return", "-", "ENOMEM", ";", "}", "dma_set_unmap", "(", "tx", ",", "unmap", ")", ";", "cookie", "=", "tx", "-", ">", "tx_submit", "(", "tx", ")", ";", "dmaengine_unmap_put", "(", "unmap", ")", ";", "preempt_disable", "(", ");", "__this_cpu_add", "(", "chan", "-", ">", "local", "-", ">", "bytes_transferred", ",", "len", ")", ";", "__this_cpu_inc", "(", "chan", "-", ">", "local", "-", ">", "memcpy_count", ")", ";", "preempt_enable", "(", ");", "return", "cookie", ";", "}", "EXPORT_SYMBOL", "(", "dma_async_memcpy_pg_to_pg", ")", ";", "/", "**", "*", "dma_async_memcpy_buf_to_buf", "-", "offloaded", "copy", "between", "virtual", "addresses", "*", "@", "chan", ":", "DMA", "channel", "to", "offload", "copy", "to", "*", "@", "dest", ":", "destination", "address", "(", "virtual", ")", "*", "@", "src", ":", "source", "address", "(", "virtual", ")", "*", "@", "len", ":", "length", "*", "*", "Both", "@", "dest", "and", "@", "src", "must", "be", "mappable", "to", "a", "bus", "address", "according", "to", "the", "*", "DMA", "mapping", "API", "rules", "for", "streaming", "mappings", ".", "*", "Both", "@", "dest", "and", "@", "src", "must", "stay", "memory", "resident", "(", "kernel", "memory", "or", "locked", "*", "user", "space", "pages", ")", ".", "*", "/", "dma_cookie_t", "dma_async_memcpy_buf_to_buf", "(", "struct", "dma_chan", "*", "chan", ",", "void", "*", "dest", ",", "void", "*", "src", ",", "size_t", "len", ")", "{", "return", "dma_async_memcpy_pg_to_pg", "(", "chan", ",", "virt_to_page", "(", "dest", ")", ",", "(", "unsigned", "long", ")", "dest", "&", "~", "PAGE_MASK", ",", "virt_to_page", "(", "src", ")", ",", "(", "unsigned", "long", ")", "src", "&", "~", "PAGE_MASK", ",", "len", ")", ";", "}", "EXPORT_SYMBOL", "(", "dma_async_memcpy_buf_to_buf", ")", ";", "/", "**", "*", "dma_async_memcpy_buf_to_pg", "-", "offloaded", "copy", "from", "address", "to", "page", "*", "@", "chan", ":", "DMA", "channel", "to", "offload", "copy", "to", "*", "@", "page", ":", "destination", "page", "*", "@", "offset", ":", "offset", "in", "page", "to", "copy", "to", "*", "@", "kdata", ":", "source", "address", "(", "virtual", ")", "*", "@", "len", ":", "length", "*", "*", "Both", "@", "page", "/", "@", "offset", "and", "@", "kdata", "must", "be", "mappable", "to", "a", "bus", "address", "according", "*", "to", "the", "DMA", "mapping", "API", "rules", "for", "streaming", "mappings", ".", "*", "Both", "@", "page", "/", "@", "offset", "and", "@", "kdata", "must", "stay", "memory", "resident", "(", "kernel", "memory", "or", "*", "locked", "user", "space", "pages", ")", "*", "/", "dma_cookie_t", "dma_async_memcpy_buf_to_pg", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "page", "*", "page", ",", "unsigned", "int", "offset", ",", "void", "*", "kdata", ",", "size_t", "len", ")", "{", "return", "dma_async_memcpy_pg_to_pg", "(", "chan", ",", "page", ",", "offset", ",", "virt_to_page", "(", "kdata", ")", ",", "(", "unsigned", "long", ")", "kdata", "&", "~", "PAGE_MASK", ",", "len", ")", ";", "}", "EXPORT_SYMBOL", "(", "dma_async_memcpy_buf_to_pg", ")", ";", "ioat_set_tcp_copy_break", "(", "4096", ")", ";", "static", "inline", "void", "ioat_set_tcp_copy_break", "(", "unsigned", "long", "copybreak", ")", "{", "#", "ifdef", "CONFIG_NET_DMA", "sysctl_tcp_dma_copybreak", "=", "copybreak", ";", "#", "endif", "}", "ioat_set_tcp_copy_break", "(", "2048", ")", ";", "ioat_set_tcp_copy_break", "(", "262144", ")", ";", "/", "*", "*", "Copyright", "(", "c", ")", "2004", "-", "2006", "Intel", "Corporation", ".", "All", "rights", "reserved", ".", "*", "Portions", "based", "on", "net", "/", "core", "/", "datagram", ".", "c", "and", "copyrighted", "by", "their", "authors", ".", "*", "*", "This", "program", "is", "free", "software", ";", "you", "can", "redistribute", "it", "and", "/", "or", "modify", "it", "*", "under", "the", "terms", "of", "the", "GNU", "General", "Public", "License", "as", "published", "by", "the", "Free", "*", "Software", "Foundation", ";", "either", "version", "2", "of", "the", "License", ",", "or", "(", "at", "your", "option", ")", "*", "any", "later", "version", ".", "*", "*", "This", "program", "is", "distributed", "in", "the", "hope", "that", "it", "will", "be", "useful", ",", "but", "WITHOUT", "*", "ANY", "WARRANTY", ";", "without", "even", "the", "implied", "warranty", "of", "MERCHANTABILITY", "or", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", ".", "See", "the", "GNU", "General", "Public", "License", "for", "*", "more", "details", ".", "*", "*", "You", "should", "have", "received", "a", "copy", "of", "the", "GNU", "General", "Public", "License", "along", "with", "*", "this", "program", ";", "if", "not", ",", "write", "to", "the", "Free", "Software", "Foundation", ",", "Inc", ".", ",", "59", "*", "Temple", "Place", "-", "Suite", "330", ",", "Boston", ",", "MA", "02111", "-", "1307", ",", "USA", ".", "*", "*", "The", "full", "GNU", "General", "Public", "License", "is", "included", "in", "this", "distribution", "in", "the", "*", "file", "called", "COPYING", ".", "*", "/", "/", "*", "*", "This", "code", "allows", "the", "net", "stack", "to", "make", "use", "of", "a", "DMA", "engine", "for", "*", "skb", "to", "iovec", "copies", ".", "*", "/", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "#", "include", "<", "linux", "/", "pagemap", ".", "h", ">", "#", "include", "<", "linux", "/", "slab", ".", "h", ">", "#", "include", "<", "net", "/", "tcp", ".", "h", ">", "/", "*", "for", "memcpy_toiovec", "*", "/", "#", "include", "<", "asm", "/", "io", ".", "h", ">", "#", "include", "<", "asm", "/", "uaccess", ".", "h", ">", "static", "int", "num_pages_spanned", "(", "struct", "iovec", "*", "iov", ")", "{", "return", "(", "(", "PAGE_ALIGN", "(", "(", "unsigned", "long", ")", "iov", "-", ">", "iov_base", "+", "iov", "-", ">", "iov_len", ")", "(", "(", "unsigned", "long", ")", "iov", "-", ">", "iov_base", "&", "PAGE_MASK", ")", ")", ">", ">", "PAGE_SHIFT", ")", ";", "}", "/", "*", "*", "Pin", "down", "all", "the", "iovec", "pages", "needed", "for", "len", "bytes", ".", "*", "Return", "a", "struct", "dma_pinned_list", "to", "keep", "track", "of", "pages", "pinned", "down", ".", "*", "*", "We", "are", "allocating", "a", "single", "chunk", "of", "memory", ",", "and", "then", "carving", "it", "up", "into", "*", "3", "sections", ",", "the", "latter", "2", "whose", "size", "depends", "on", "the", "number", "of", "iovecs", "and", "the", "*", "total", "number", "of", "pages", ",", "respectively", ".", "*", "/", "struct", "dma_pinned_list", "*", "dma_pin_iovec_pages", "(", "struct", "iovec", "*", "iov", ",", "size_t", "len", ")", "{", "struct", "dma_pinned_list", "*", "local_list", ";", "struct", "page", "*", "*", "pages", ";", "int", "i", ";", "int", "ret", ";", "int", "nr_iovecs", "=", "0", ";", "int", "iovec_len_used", "=", "0", ";", "int", "iovec_pages_used", "=", "0", ";", "/", "*", "don", "'", "t", "pin", "down", "non", "-", "user", "-", "based", "iovecs", "*", "/", "if", "(", "segment_eq", "(", "get_fs", "(", "),", "KERNEL_DS", ")", ")", "return", "NULL", ";", "/", "*", "determine", "how", "many", "iovecs", "/", "pages", "there", "are", ",", "up", "front", "*", "/", "do", "{", "iovec_len_used", "+", "=", "iov", "[", "nr_iovecs", "]", ".", "iov_len", ";", "iovec_pages_used", "+", "=", "num_pages_spanned", "(", "&", "iov", "[", "nr_iovecs", "]", ");", "nr_iovecs", "+", "+;", "}", "while", "(", "iovec_len_used", "<", "len", ")", ";", "/", "*", "single", "kmalloc", "for", "pinned", "list", ",", "page_list", "[", "],", "and", "the", "page", "arrays", "*", "/", "local_list", "=", "kmalloc", "(", "sizeof", "(", "*", "local_list", ")", "+", "(", "nr_iovecs", "*", "sizeof", "(", "struct", "dma_page_list", ")", ")", "+", "(", "iovec_pages_used", "*", "sizeof", "(", "struct", "page", "*", "))", ",", "GFP_KERNEL", ")", ";", "if", "(", "!", "local_list", ")", "goto", "out", ";", "/", "*", "list", "of", "pages", "starts", "right", "after", "the", "page", "list", "array", "*", "/", "pages", "=", "(", "struct", "page", "*", "*)", "&", "local_list", "-", ">", "page_list", "[", "nr_iovecs", "]", ";", "local_list", "-", ">", "nr_iovecs", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "nr_iovecs", ";", "i", "+", "+)", "{", "struct", "dma_page_list", "*", "page_list", "=", "&", "local_list", "-", ">", "page_list", "[", "i", "]", ";", "len", "-", "=", "iov", "[", "i", "]", ".", "iov_len", ";", "if", "(", "!", "access_ok", "(", "VERIFY_WRITE", ",", "iov", "[", "i", "]", ".", "iov_base", ",", "iov", "[", "i", "]", ".", "iov_len", ")", ")", "goto", "unpin", ";", "page_list", "-", ">", "nr_pages", "=", "num_pages_spanned", "(", "&", "iov", "[", "i", "]", ");", "page_list", "-", ">", "base_address", "=", "iov", "[", "i", "]", ".", "iov_base", ";", "page_list", "-", ">", "pages", "=", "pages", ";", "pages", "+", "=", "page_list", "-", ">", "nr_pages", ";", "/", "*", "pin", "pages", "down", "*", "/", "down_read", "(", "&", "current", "-", ">", "mm", "-", ">", "mmap_sem", ")", ";", "ret", "=", "get_user_pages", "(", "current", ",", "current", "-", ">", "mm", ",", "(", "unsigned", "long", ")", "iov", "[", "i", "]", ".", "iov_base", ",", "page_list", "-", ">", "nr_pages", ",", "1", ",", "/", "*", "write", "*", "/", "0", ",", "/", "*", "force", "*", "/", "page_list", "-", ">", "pages", ",", "NULL", ")", ";", "up_read", "(", "&", "current", "-", ">", "mm", "-", ">", "mmap_sem", ")", ";", "if", "(", "ret", "!", "=", "page_list", "-", ">", "nr_pages", ")", "goto", "unpin", ";", "local_list", "-", ">", "nr_iovecs", "=", "i", "+", "1", ";", "}", "return", "local_list", ";", "unpin", ":", "dma_unpin_iovec_pages", "(", "local_list", ")", ";", "out", ":", "return", "NULL", ";", "}", "void", "dma_unpin_iovec_pages", "(", "struct", "dma_pinned_list", "*", "pinned_list", ")", "{", "int", "i", ",", "j", ";", "if", "(", "!", "pinned_list", ")", "return", ";", "for", "(", "i", "=", "0", ";", "i", "<", "pinned_list", "-", ">", "nr_iovecs", ";", "i", "+", "+)", "{", "struct", "dma_page_list", "*", "page_list", "=", "&", "pinned_list", "-", ">", "page_list", "[", "i", "]", ";", "for", "(", "j", "=", "0", ";", "j", "<", "page_list", "-", ">", "nr_pages", ";", "j", "+", "+)", "{", "set_page_dirty_lock", "(", "page_list", "-", ">", "pages", "[", "j", "]", ");", "page_cache_release", "(", "page_list", "-", ">", "pages", "[", "j", "]", ");", "}", "}", "kfree", "(", "pinned_list", ")", ";", "}", "/", "*", "*", "We", "have", "already", "pinned", "down", "the", "pages", "we", "will", "be", "using", "in", "the", "iovecs", ".", "*", "Each", "entry", "in", "iov", "array", "has", "corresponding", "entry", "in", "pinned_list", "-", ">", "page_list", ".", "*", "Using", "array", "indexing", "to", "keep", "iov", "[", "]", "and", "page_list", "[", "]", "in", "sync", ".", "*", "Initial", "elements", "in", "iov", "array", "'", "s", "iov", "-", ">", "iov_len", "will", "be", "0", "if", "already", "copied", "into", "*", "by", "another", "call", ".", "*", "iov", "array", "length", "remaining", "guaranteed", "to", "be", "bigger", "than", "len", ".", "*", "/", "dma_cookie_t", "dma_memcpy_to_iovec", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "iovec", "*", "iov", ",", "struct", "dma_pinned_list", "*", "pinned_list", ",", "unsigned", "char", "*", "kdata", ",", "size_t", "len", ")", "{", "int", "iov_byte_offset", ";", "int", "copy", ";", "dma_cookie_t", "dma_cookie", "=", "0", ";", "int", "iovec_idx", ";", "int", "page_idx", ";", "if", "(", "!", "chan", ")", "return", "memcpy_toiovec", "(", "iov", ",", "kdata", ",", "len", ")", ";", "iovec_idx", "=", "0", ";", "while", "(", "iovec_idx", "<", "pinned_list", "-", ">", "nr_iovecs", ")", "{", "struct", "dma_page_list", "*", "page_list", ";", "/", "*", "skip", "already", "used", "-", "up", "iovecs", "*", "/", "while", "(", "!", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", "iovec_idx", "+", "+;", "page_list", "=", "&", "pinned_list", "-", ">", "page_list", "[", "iovec_idx", "]", ";", "iov_byte_offset", "=", "(", "(", "unsigned", "long", ")", "iov", "[", "iovec_idx", "]", ".", "iov_base", "&", "~", "PAGE_MASK", ")", ";", "page_idx", "=", "(", "((", "unsigned", "long", ")", "iov", "[", "iovec_idx", "]", ".", "iov_base", "&", "PAGE_MASK", ")", "-", "(", "(", "unsigned", "long", ")", "page_list", "-", ">", "base_address", "&", "PAGE_MASK", ")", ")", ">", ">", "PAGE_SHIFT", ";", "/", "*", "break", "up", "copies", "to", "not", "cross", "page", "boundary", "*", "/", "while", "(", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", "{", "copy", "=", "min_t", "(", "int", ",", "PAGE_SIZE", "-", "iov_byte_offset", ",", "len", ")", ";", "copy", "=", "min_t", "(", "int", ",", "copy", ",", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", ";", "dma_cookie", "=", "dma_async_memcpy_buf_to_pg", "(", "chan", ",", "page_list", "-", ">", "pages", "[", "page_idx", "]", ",", "iov_byte_offset", ",", "kdata", ",", "copy", ")", ";", "/", "*", "poll", "for", "a", "descriptor", "slot", "*", "/", "if", "(", "unlikely", "(", "dma_cookie", "<", "0", ")", ")", "{", "dma_async_issue_pending", "(", "chan", ")", ";", "continue", ";", "}", "len", "-", "=", "copy", ";", "iov", "[", "iovec_idx", "]", ".", "iov_len", "-", "=", "copy", ";", "iov", "[", "iovec_idx", "]", ".", "iov_base", "+", "=", "copy", ";", "if", "(", "!", "len", ")", "return", "dma_cookie", ";", "kdata", "+", "=", "copy", ";", "iov_byte_offset", "=", "0", ";", "page_idx", "+", "+;", "}", "iovec_idx", "+", "+;", "}", "/", "*", "really", "bad", "if", "we", "ever", "run", "out", "of", "iovecs", "*", "/", "BUG", "(", ");", "return", "-", "EFAULT", ";", "}", "dma_cookie_t", "dma_memcpy_pg_to_iovec", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "iovec", "*", "iov", ",", "struct", "dma_pinned_list", "*", "pinned_list", ",", "struct", "page", "*", "page", ",", "unsigned", "int", "offset", ",", "size_t", "len", ")", "{", "int", "iov_byte_offset", ";", "int", "copy", ";", "dma_cookie_t", "dma_cookie", "=", "0", ";", "int", "iovec_idx", ";", "int", "page_idx", ";", "int", "err", ";", "/", "*", "this", "needs", "as", "-", "yet", "-", "unimplemented", "buf", "-", "to", "-", "buff", ",", "so", "punt", ".", "*", "/", "/", "*", "TODO", ":", "use", "dma", "for", "this", "*", "/", "if", "(", "!", "chan", "|", "|", "!", "pinned_list", ")", "{", "u8", "*", "vaddr", "=", "kmap", "(", "page", ")", ";", "err", "=", "memcpy_toiovec", "(", "iov", ",", "vaddr", "+", "offset", ",", "len", ")", ";", "kunmap", "(", "page", ")", ";", "return", "err", ";", "}", "iovec_idx", "=", "0", ";", "while", "(", "iovec_idx", "<", "pinned_list", "-", ">", "nr_iovecs", ")", "{", "struct", "dma_page_list", "*", "page_list", ";", "/", "*", "skip", "already", "used", "-", "up", "iovecs", "*", "/", "while", "(", "!", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", "iovec_idx", "+", "+;", "page_list", "=", "&", "pinned_list", "-", ">", "page_list", "[", "iovec_idx", "]", ";", "iov_byte_offset", "=", "(", "(", "unsigned", "long", ")", "iov", "[", "iovec_idx", "]", ".", "iov_base", "&", "~", "PAGE_MASK", ")", ";", "page_idx", "=", "(", "((", "unsigned", "long", ")", "iov", "[", "iovec_idx", "]", ".", "iov_base", "&", "PAGE_MASK", ")", "-", "(", "(", "unsigned", "long", ")", "page_list", "-", ">", "base_address", "&", "PAGE_MASK", ")", ")", ">", ">", "PAGE_SHIFT", ";", "/", "*", "break", "up", "copies", "to", "not", "cross", "page", "boundary", "*", "/", "while", "(", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", "{", "copy", "=", "min_t", "(", "int", ",", "PAGE_SIZE", "-", "iov_byte_offset", ",", "len", ")", ";", "copy", "=", "min_t", "(", "int", ",", "copy", ",", "iov", "[", "iovec_idx", "]", ".", "iov_len", ")", ";", "dma_cookie", "=", "dma_async_memcpy_pg_to_pg", "(", "chan", ",", "page_list", "-", ">", "pages", "[", "page_idx", "]", ",", "iov_byte_offset", ",", "page", ",", "offset", ",", "copy", ")", ";", "/", "*", "poll", "for", "a", "descriptor", "slot", "*", "/", "if", "(", "unlikely", "(", "dma_cookie", "<", "0", ")", ")", "{", "dma_async_issue_pending", "(", "chan", ")", ";", "continue", ";", "}", "len", "-", "=", "copy", ";", "iov", "[", "iovec_idx", "]", ".", "iov_len", "-", "=", "copy", ";", "iov", "[", "iovec_idx", "]", ".", "iov_base", "+", "=", "copy", ";", "if", "(", "!", "len", ")", "return", "dma_cookie", ";", "offset", "+", "=", "copy", ";", "iov_byte_offset", "=", "0", ";", "page_idx", "+", "+;", "}", "iovec_idx", "+", "+;", "}", "/", "*", "really", "bad", "if", "we", "ever", "run", "out", "of", "iovecs", "*", "/", "BUG", "(", ");", "return", "-", "EFAULT", ";", "}", "@", "@", "-", "903", ",", "18", "+", "903", ",", "6", "@", "@", "static", "inline", "void", "dmaengine_put", "(", "void", ")", "#", "ifdef", "CONFIG_NET_DMA", "#", "define", "net_dmaengine_get", "(", ")", "dmaengine_get", "(", ")", "#", "define", "net_dmaengine_put", "(", ")", "dmaengine_put", "(", ")", "#", "else", "static", "inline", "void", "net_dmaengine_get", "(", "void", ")", "{", "}", "static", "inline", "void", "net_dmaengine_put", "(", "void", ")", "{", "}", "#", "endif", "dma_cookie_t", "dma_async_memcpy_buf_to_buf", "(", "struct", "dma_chan", "*", "chan", ",", "void", "*", "dest", ",", "void", "*", "src", ",", "size_t", "len", ")", ";", "dma_cookie_t", "dma_async_memcpy_buf_to_pg", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "page", "*", "page", ",", "unsigned", "int", "offset", ",", "void", "*", "kdata", ",", "size_t", "len", ")", ";", "dma_cookie_t", "dma_async_memcpy_pg_to_pg", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "page", "*", "dest_pg", ",", "unsigned", "int", "dest_off", ",", "struct", "page", "*", "src_pg", ",", "unsigned", "int", "src_off", ",", "size_t", "len", ")", ";", "struct", "dma_chan", "*", "chan", ")", ";", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "#", "if", "defined", "CONFIG_NET_DMA", "|", "|", "defined", "CONFIG_NET_RX_BUSY_POLL", "union", "{", "unsigned", "int", "napi_id", ";", "dma_cookie_t", "dma_cookie", ";", "}", ";", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "#", "ifdef", "CONFIG_NET_DMA", "/", "*", "members", "for", "async", "copy", "*", "/", "struct", "dma_chan", "*", "dma_chan", ";", "int", "wakeup", ";", "struct", "dma_pinned_list", "*", "pinned_list", ";", "dma_cookie_t", "dma_cookie", ";", "#", "endif", "/", "*", "*", "Copyright", "(", "c", ")", "2004", "-", "2006", "Intel", "Corporation", ".", "All", "rights", "reserved", ".", "*", "*", "This", "program", "is", "free", "software", ";", "you", "can", "redistribute", "it", "and", "/", "or", "modify", "it", "*", "under", "the", "terms", "of", "the", "GNU", "General", "Public", "License", "as", "published", "by", "the", "Free", "*", "Software", "Foundation", ";", "either", "version", "2", "of", "the", "License", ",", "or", "(", "at", "your", "option", ")", "*", "any", "later", "version", ".", "*", "*", "This", "program", "is", "distributed", "in", "the", "hope", "that", "it", "will", "be", "useful", ",", "but", "WITHOUT", "*", "ANY", "WARRANTY", ";", "without", "even", "the", "implied", "warranty", "of", "MERCHANTABILITY", "or", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", ".", "See", "the", "GNU", "General", "Public", "License", "for", "*", "more", "details", ".", "*", "*", "You", "should", "have", "received", "a", "copy", "of", "the", "GNU", "General", "Public", "License", "along", "with", "*", "this", "program", ";", "if", "not", ",", "write", "to", "the", "Free", "Software", "Foundation", ",", "Inc", ".", ",", "59", "*", "Temple", "Place", "-", "Suite", "330", ",", "Boston", ",", "MA", "02111", "-", "1307", ",", "USA", ".", "*", "*", "The", "full", "GNU", "General", "Public", "License", "is", "included", "in", "this", "distribution", "in", "the", "*", "file", "called", "COPYING", ".", "*", "/", "#", "ifndef", "NETDMA_H", "#", "define", "NETDMA_H", "#", "ifdef", "CONFIG_NET_DMA", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "#", "include", "<", "linux", "/", "skbuff", ".", "h", ">", "int", "dma_skb_copy_datagram_iovec", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "sk_buff", "*", "skb", ",", "int", "offset", ",", "struct", "iovec", "*", "to", ",", "size_t", "len", ",", "struct", "dma_pinned_list", "*", "pinned_list", ")", ";", "#", "endif", "/", "*", "CONFIG_NET_DMA", "*", "/", "#", "endif", "/", "*", "NETDMA_H", "*", "/", "@", "@", "-", "231", ",", "7", "+", "231", ",", "6", "@", "@", "struct", "cg_proto", ";", "*", "@", "sk_async_wait_queue", ":", "DMA", "copied", "packets", "#", "ifdef", "CONFIG_NET_DMA", "struct", "sk_buff_head", "sk_async_wait_queue", ";", "#", "endif", "*", "@", "copied_early", ":", "flag", "indicating", "whether", "DMA", "operations", "copied", "this", "data", "early", "#", "ifdef", "CONFIG_NET_DMA", "static", "inline", "void", "sk_eat_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ",", "bool", "copied_early", ")", "{", "__skb_unlink", "(", "skb", ",", "&", "sk", "-", ">", "sk_receive_queue", ")", ";", "if", "(", "!", "copied_early", ")", "__kfree_skb", "(", "skb", ")", ";", "else", "__skb_queue_tail", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ",", "skb", ")", ";", "}", "#", "else", "static", "inline", "void", "sk_eat_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ",", "bool", "copied_early", ")", "#", "endif", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "extern", "int", "sysctl_tcp_dma_copybreak", ";", "#", "ifdef", "CONFIG_NET_DMA", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "NULL", ";", "tp", "-", ">", "ucopy", ".", "wakeup", "=", "0", ";", "tp", "-", ">", "ucopy", ".", "pinned_list", "=", "NULL", ";", "tp", "-", ">", "ucopy", ".", "dma_cookie", "=", "0", ";", "#", "endif", "{", "CTL_INT", ",", "NET_TCP_DMA_COPYBREAK", ",", "\"", "tcp_dma_copybreak", "\"", "}", ",", "obj", "-", "$(", "CONFIG_NET_DMA", ")", "+", "=", "user_dma", ".", "o", "net_dmaengine_get", "(", ");", "net_dmaengine_put", "(", ");", "#", "ifdef", "CONFIG_NET_DMA", "/", "*", "*", "There", "may", "not", "be", "any", "more", "sk_buffs", "coming", "right", "now", ",", "so", "push", "*", "any", "pending", "DMA", "copies", "to", "hardware", "*", "/", "dma_issue_pending_all", "(", ");", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "skb_queue_head_init", "(", "&", "newsk", "-", ">", "sk_async_wait_queue", ")", ";", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "skb_queue_head_init", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ";", "#", "endif", "/", "*", "*", "Copyright", "(", "c", ")", "2004", "-", "2006", "Intel", "Corporation", ".", "All", "rights", "reserved", ".", "*", "Portions", "based", "on", "net", "/", "core", "/", "datagram", ".", "c", "and", "copyrighted", "by", "their", "authors", ".", "*", "*", "This", "program", "is", "free", "software", ";", "you", "can", "redistribute", "it", "and", "/", "or", "modify", "it", "*", "under", "the", "terms", "of", "the", "GNU", "General", "Public", "License", "as", "published", "by", "the", "Free", "*", "Software", "Foundation", ";", "either", "version", "2", "of", "the", "License", ",", "or", "(", "at", "your", "option", ")", "*", "any", "later", "version", ".", "*", "*", "This", "program", "is", "distributed", "in", "the", "hope", "that", "it", "will", "be", "useful", ",", "but", "WITHOUT", "*", "ANY", "WARRANTY", ";", "without", "even", "the", "implied", "warranty", "of", "MERCHANTABILITY", "or", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", ".", "See", "the", "GNU", "General", "Public", "License", "for", "*", "more", "details", ".", "*", "*", "You", "should", "have", "received", "a", "copy", "of", "the", "GNU", "General", "Public", "License", "along", "with", "*", "this", "program", ";", "if", "not", ",", "write", "to", "the", "Free", "Software", "Foundation", ",", "Inc", ".", ",", "59", "*", "Temple", "Place", "-", "Suite", "330", ",", "Boston", ",", "MA", "02111", "-", "1307", ",", "USA", ".", "*", "*", "The", "full", "GNU", "General", "Public", "License", "is", "included", "in", "this", "distribution", "in", "the", "*", "file", "called", "COPYING", ".", "*", "/", "/", "*", "*", "This", "code", "allows", "the", "net", "stack", "to", "make", "use", "of", "a", "DMA", "engine", "for", "*", "skb", "to", "iovec", "copies", ".", "*", "/", "#", "include", "<", "linux", "/", "dmaengine", ".", "h", ">", "#", "include", "<", "linux", "/", "socket", ".", "h", ">", "#", "include", "<", "linux", "/", "export", ".", "h", ">", "#", "include", "<", "net", "/", "tcp", ".", "h", ">", "#", "include", "<", "net", "/", "netdma", ".", "h", ">", "#", "define", "NET_DMA_DEFAULT_COPYBREAK", "4096", "int", "sysctl_tcp_dma_copybreak", "=", "NET_DMA_DEFAULT_COPYBREAK", ";", "EXPORT_SYMBOL", "(", "sysctl_tcp_dma_copybreak", ")", ";", "/", "**", "*", "dma_skb_copy_datagram_iovec", "-", "Copy", "a", "datagram", "to", "an", "iovec", ".", "*", "@", "skb", "-", "buffer", "to", "copy", "*", "@", "offset", "-", "offset", "in", "the", "buffer", "to", "start", "copying", "from", "*", "@", "iovec", "-", "io", "vector", "to", "copy", "to", "*", "@", "len", "-", "amount", "of", "data", "to", "copy", "from", "buffer", "to", "iovec", "*", "@", "pinned_list", "-", "locked", "iovec", "buffer", "data", "*", "*", "Note", ":", "the", "iovec", "is", "modified", "during", "the", "copy", ".", "*", "/", "int", "dma_skb_copy_datagram_iovec", "(", "struct", "dma_chan", "*", "chan", ",", "struct", "sk_buff", "*", "skb", ",", "int", "offset", ",", "struct", "iovec", "*", "to", ",", "size_t", "len", ",", "struct", "dma_pinned_list", "*", "pinned_list", ")", "{", "int", "start", "=", "skb_headlen", "(", "skb", ")", ";", "int", "i", ",", "copy", "=", "start", "-", "offset", ";", "struct", "sk_buff", "*", "frag_iter", ";", "dma_cookie_t", "cookie", "=", "0", ";", "/", "*", "Copy", "header", ".", "*", "/", "if", "(", "copy", ">", "0", ")", "{", "if", "(", "copy", ">", "len", ")", "copy", "=", "len", ";", "cookie", "=", "dma_memcpy_to_iovec", "(", "chan", ",", "to", ",", "pinned_list", ",", "skb", "-", ">", "data", "+", "offset", ",", "copy", ")", ";", "if", "(", "cookie", "<", "0", ")", "goto", "fault", ";", "len", "-", "=", "copy", ";", "if", "(", "len", "=", "=", "0", ")", "goto", "end", ";", "offset", "+", "=", "copy", ";", "}", "/", "*", "Copy", "paged", "appendix", ".", "Hmm", ".", "..", "why", "does", "this", "look", "so", "complicated", "?", "*", "/", "for", "(", "i", "=", "0", ";", "i", "<", "skb_shinfo", "(", "skb", ")", "->", "nr_frags", ";", "i", "+", "+)", "{", "int", "end", ";", "const", "skb_frag_t", "*", "frag", "=", "&", "skb_shinfo", "(", "skb", ")", "->", "frags", "[", "i", "]", ";", "WARN_ON", "(", "start", ">", "offset", "+", "len", ")", ";", "end", "=", "start", "+", "skb_frag_size", "(", "frag", ")", ";", "copy", "=", "end", "-", "offset", ";", "if", "(", "copy", ">", "0", ")", "{", "struct", "page", "*", "page", "=", "skb_frag_page", "(", "frag", ")", ";", "if", "(", "copy", ">", "len", ")", "copy", "=", "len", ";", "cookie", "=", "dma_memcpy_pg_to_iovec", "(", "chan", ",", "to", ",", "pinned_list", ",", "page", ",", "frag", "-", ">", "page_offset", "+", "offset", "-", "start", ",", "copy", ")", ";", "if", "(", "cookie", "<", "0", ")", "goto", "fault", ";", "len", "-", "=", "copy", ";", "if", "(", "len", "=", "=", "0", ")", "goto", "end", ";", "offset", "+", "=", "copy", ";", "}", "start", "=", "end", ";", "}", "skb_walk_frags", "(", "skb", ",", "frag_iter", ")", "{", "int", "end", ";", "WARN_ON", "(", "start", ">", "offset", "+", "len", ")", ";", "end", "=", "start", "+", "frag_iter", "-", ">", "len", ";", "copy", "=", "end", "-", "offset", ";", "if", "(", "copy", ">", "0", ")", "{", "if", "(", "copy", ">", "len", ")", "copy", "=", "len", ";", "cookie", "=", "dma_skb_copy_datagram_iovec", "(", "chan", ",", "frag_iter", ",", "offset", "-", "start", ",", "to", ",", "copy", ",", "pinned_list", ")", ";", "if", "(", "cookie", "<", "0", ")", "goto", "fault", ";", "len", "-", "=", "copy", ";", "if", "(", "len", "=", "=", "0", ")", "goto", "end", ";", "offset", "+", "=", "copy", ";", "}", "start", "=", "end", ";", "}", "end", ":", "if", "(", "!", "len", ")", "{", "skb", "-", ">", "dma_cookie", "=", "cookie", ";", "return", "cookie", ";", "}", "fault", ":", "return", "-", "EFAULT", ";", "}", "@", "@", "-", "848", ",", "7", "+", "848", ",", "7", "@", "@", "int", "dccp_recvmsg", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "sock", "*", "sk", ",", "struct", "msghdr", "*", "msg", ",", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "#", "ifdef", "CONFIG_NET_DMA", "{", ".", "procname", "=", "\"", "tcp_dma_copybreak", "\"", ",", ".", "data", "=", "&", "sysctl_tcp_dma_copybreak", ",", ".", "maxlen", "=", "sizeof", "(", "int", ")", ",", ".", "mode", "=", "0644", ",", ".", "proc_handler", "=", "proc_dointvec", "}", ",", "#", "endif", "#", "include", "<", "net", "/", "netdma", ".", "h", ">", "#", "ifdef", "CONFIG_NET_DMA", "static", "void", "tcp_service_net_dma", "(", "struct", "sock", "*", "sk", ",", "bool", "wait", ")", "{", "dma_cookie_t", "done", ",", "used", ";", "dma_cookie_t", "last_issued", ";", "struct", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "if", "(", "!", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", "return", ";", "last_issued", "=", "tp", "-", ">", "ucopy", ".", "dma_cookie", ";", "dma_async_issue_pending", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", ";", "do", "{", "if", "(", "dma_async_is_tx_complete", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ",", "last_issued", ",", "&", "done", ",", "&", "used", ")", "=", "=", "DMA_COMPLETE", ")", "{", "/", "*", "Safe", "to", "free", "early", "-", "copied", "skbs", "now", "*", "/", "__skb_queue_purge", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ";", "break", ";", "}", "else", "{", "struct", "sk_buff", "*", "skb", ";", "while", "(", "(", "skb", "=", "skb_peek", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ")", "&", "&", "(", "dma_async_is_complete", "(", "skb", "-", ">", "dma_cookie", ",", "done", ",", "used", ")", "=", "=", "DMA_COMPLETE", ")", ")", "{", "__skb_dequeue", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ";", "kfree_skb", "(", "skb", ")", ";", "}", "}", "}", "while", "(", "wait", ")", ";", "}", "#", "endif", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "bool", "copied_early", "=", "false", ";", "#", "ifdef", "CONFIG_NET_DMA", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "NULL", ";", "preempt_disable", "(", ");", "skb", "=", "skb_peek_tail", "(", "&", "sk", "-", ">", "sk_receive_queue", ")", ";", "{", "int", "available", "=", "0", ";", "if", "(", "skb", ")", "available", "=", "TCP_SKB_CB", "(", "skb", ")", "->", "seq", "+", "skb", "-", ">", "len", "-", "(", "*", "seq", ")", ";", "if", "(", "(", "available", "<", "target", ")", "&", "&", "(", "len", ">", "sysctl_tcp_dma_copybreak", ")", "&", "&", "!", "(", "flags", "&", "MSG_PEEK", ")", "&", "&", "!", "sysctl_tcp_low_latency", "&", "&", "net_dma_find_channel", "(", "))", "{", "preempt_enable", "(", ");", "tp", "-", ">", "ucopy", ".", "pinned_list", "=", "dma_pin_iovec_pages", "(", "msg", "-", ">", "msg_iov", ",", "len", ")", ";", "}", "else", "{", "preempt_enable", "(", ");", "}", "}", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", "{", "if", "(", "tp", "-", ">", "rcv_wnd", "=", "=", "0", "&", "&", "!", "skb_queue_empty", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ")", "{", "tcp_service_net_dma", "(", "sk", ",", "true", ")", ";", "tcp_cleanup_rbuf", "(", "sk", ",", "copied", ")", ";", "}", "else", "dma_async_issue_pending", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", ";", "}", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "tcp_service_net_dma", "(", "sk", ",", "false", ")", ";", "/", "*", "Don", "'", "t", "block", "*", "/", "tp", "-", ">", "ucopy", ".", "wakeup", "=", "0", ";", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "if", "(", "!", "tp", "-", ">", "ucopy", ".", "dma_chan", "&", "&", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "net_dma_find_channel", "(", ");", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", "{", "tp", "-", ">", "ucopy", ".", "dma_cookie", "=", "dma_skb_copy_datagram_iovec", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ",", "skb", ",", "offset", ",", "msg", "-", ">", "msg_iov", ",", "used", ",", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", ";", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_cookie", "<", "0", ")", "{", "pr_alert", "(", "\"%", "s", ":", "dma_cookie", "<", "0", "\\", "n", "\"", ",", "__func__", ")", ";", "/", "*", "Exception", ".", "Bailout", "!", "*", "/", "if", "(", "!", "copied", ")", "copied", "=", "-", "EFAULT", ";", "break", ";", "}", "dma_async_issue_pending", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", ";", "if", "(", "(", "offset", "+", "used", ")", "=", "=", "skb", "-", ">", "len", ")", "copied_early", "=", "true", ";", "}", "else", "#", "endif", "{", "err", "=", "skb_copy_datagram_iovec", "(", "skb", ",", "offset", ",", "msg", "-", ">", "msg_iov", ",", "used", ")", ";", "if", "(", "err", ")", "{", "/", "*", "Exception", ".", "Bailout", "!", "*", "/", "if", "(", "!", "copied", ")", "copied", "=", "-", "EFAULT", ";", "break", ";", "}", "if", "(", "!(", "flags", "&", "MSG_PEEK", ")", ")", "{", "sk_eat_skb", "(", "sk", ",", "skb", ",", "copied_early", ")", ";", "copied_early", "=", "false", ";", "}", "if", "(", "!(", "flags", "&", "MSG_PEEK", ")", ")", "{", "sk_eat_skb", "(", "sk", ",", "skb", ",", "copied_early", ")", ";", "copied_early", "=", "false", ";", "}", "#", "ifdef", "CONFIG_NET_DMA", "tcp_service_net_dma", "(", "sk", ",", "true", ")", ";", "/", "*", "Wait", "for", "queue", "to", "drain", "*", "/", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "NULL", ";", "if", "(", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", "{", "dma_unpin_iovec_pages", "(", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", ";", "tp", "-", ">", "ucopy", ".", "pinned_list", "=", "NULL", ";", "}", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "__skb_queue_purge", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ";", "#", "endif", "#", "include", "<", "net", "/", "netdma", ".", "h", ">", "#", "ifdef", "CONFIG_NET_DMA", "static", "bool", "tcp_dma_try_early_copy", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ",", "int", "hlen", ")", "{", "struct", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "int", "chunk", "=", "skb", "-", ">", "len", "-", "hlen", ";", "int", "dma_cookie", ";", "bool", "copied_early", "=", "false", ";", "if", "(", "tp", "-", ">", "ucopy", ".", "wakeup", ")", "return", "false", ";", "if", "(", "!", "tp", "-", ">", "ucopy", ".", "dma_chan", "&", "&", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "net_dma_find_channel", "(", ");", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", "&", "&", "skb_csum_unnecessary", "(", "skb", ")", ")", "{", "dma_cookie", "=", "dma_skb_copy_datagram_iovec", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ",", "skb", ",", "hlen", ",", "tp", "-", ">", "ucopy", ".", "iov", ",", "chunk", ",", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", ";", "if", "(", "dma_cookie", "<", "0", ")", "goto", "out", ";", "tp", "-", ">", "ucopy", ".", "dma_cookie", "=", "dma_cookie", ";", "copied_early", "=", "true", ";", "tp", "-", ">", "ucopy", ".", "len", "-", "=", "chunk", ";", "tp", "-", ">", "copied_seq", "+", "=", "chunk", ";", "tcp_rcv_space_adjust", "(", "sk", ")", ";", "if", "(", "(", "tp", "-", ">", "ucopy", ".", "len", "=", "=", "0", ")", "|", "|", "(", "tcp_flag_word", "(", "tcp_hdr", "(", "skb", ")", ")", "&", "TCP_FLAG_PSH", ")", "|", "|", "(", "atomic_read", "(", "&", "sk", "-", ">", "sk_rmem_alloc", ")", ">", "(", "sk", "-", ">", "sk_rcvbuf", ">", ">", "1", ")", "))", "{", "tp", "-", ">", "ucopy", ".", "wakeup", "=", "1", ";", "sk", "-", ">", "sk_data_ready", "(", "sk", ",", "0", ")", ";", "}", "}", "else", "if", "(", "chunk", ">", "0", ")", "{", "tp", "-", ">", "ucopy", ".", "wakeup", "=", "1", ";", "sk", "-", ">", "sk_data_ready", "(", "sk", ",", "0", ")", ";", "}", "out", ":", "return", "copied_early", ";", "}", "#", "endif", "/", "*", "CONFIG_NET_DMA", "*", "/", "#", "ifdef", "CONFIG_NET_DMA", "if", "(", "tp", "-", ">", "ucopy", ".", "task", "=", "=", "current", "&", "&", "sock_owned_by_user", "(", "sk", ")", "&", "&", "tcp_dma_try_early_copy", "(", "sk", ",", "skb", ",", "tcp_header_len", ")", ")", "{", "copied_early", "=", "1", ";", "eaten", "=", "1", ";", "}", "#", "endif", "#", "ifdef", "CONFIG_NET_DMA", "if", "(", "copied_early", ")", "__skb_queue_tail", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ",", "skb", ")", ";", "else", "#", "endif", "#", "include", "<", "net", "/", "netdma", ".", "h", ">", "#", "ifdef", "CONFIG_NET_DMA", "struct", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "if", "(", "!", "tp", "-", ">", "ucopy", ".", "dma_chan", "&", "&", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "net_dma_find_channel", "(", ");", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", "else", "#", "endif", "{", "if", "(", "!", "tcp_prequeue", "(", "sk", ",", "skb", ")", ")", "ret", "=", "tcp_v4_do_rcv", "(", "sk", ",", "skb", ")", ";", "}", "#", "ifdef", "CONFIG_NET_DMA", "/", "*", "Cleans", "up", "our", "sk_async_wait_queue", "*", "/", "__skb_queue_purge", "(", "&", "sk", "-", ">", "sk_async_wait_queue", ")", ";", "#", "endif", "#", "include", "<", "net", "/", "netdma", ".", "h", ">", "#", "ifdef", "CONFIG_NET_DMA", "struct", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "if", "(", "!", "tp", "-", ">", "ucopy", ".", "dma_chan", "&", "&", "tp", "-", ">", "ucopy", ".", "pinned_list", ")", "tp", "-", ">", "ucopy", ".", "dma_chan", "=", "net_dma_find_channel", "(", ");", "if", "(", "tp", "-", ">", "ucopy", ".", "dma_chan", ")", "else", "#", "endif", "{", "if", "(", "!", "tcp_prequeue", "(", "sk", ",", "skb", ")", ")", "ret", "=", "tcp_v6_do_rcv", "(", "sk", ",", "skb", ")", ";", "}", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "spin_lock_irqsave", "(", "&", "sk", "-", ">", "sk_receive_queue", ".", "lock", ",", "cpu_flags", ")", ";", "sk_eat_skb", "(", "sk", ",", "skb", ",", "false", ")", ";", "spin_unlock_irqrestore", "(", "&", "sk", "-", ">", "sk_receive_queue", ".", "lock", ",", "cpu_flags", ")", ";", "*", "seq", "=", "0", ";"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["parseLocation", "=", "false", ";", "parseLocation", "=", "false", ";", "parseLocation", "=", "false", ";</s>parseLocation", "=", "false", ";", "parseLocation", "=", "false", ";", "parseLocation", "=", "false", ";"], "docstring_tokens": ["namespace", "redirect", "ognl", "injection"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "The", "stack", "spill", "tracking", "logic", "in", "check_stack_write", "(", ")", "*", "and", "check_stack_read", "(", ")", "relies", "on", "stack", "accesses", "being", "*", "aligned", ".", "*", "/", "strict", "=", "true", ";</s>"], "docstring_tokens": ["register", "truncation"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "len", "<", "0", "|", "|", "len", ">", "MAX_RDS_PS_NAME", ")", "{", "if", "(", "len", "<", "0", "|", "|", "len", ">", "MAX_RDS_RADIO_TEXT", ")", "{</s>if", "(", "len", ">", "MAX_RDS_PS_NAME", ")", "{", "if", "(", "len", ">", "MAX_RDS_RADIO_TEXT", ")", "{"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["-", "-", "TEST", "-", "-", "Use", "of", "double", "-", "port", "in", "fsockopen", "(", ")", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "try", "=", "[", "'", "127", ".", "0", ".", "0", ".", "1", ":", "80", "'", ",", "'", "tcp", ":", "//", "127", ".", "0", ".", "0", ".", "1", ":", "80", "'", ",", "'", "[:", ":", "1", "]", ":", "80", "'", ",", "'", "tcp", ":", "//", "[:", ":", "1", "]", ":", "80", "'", ",", "'", "localhost", ":", "80", "'", ",", "'", "tcp", ":", "//", "localhost", ":", "80", "'", ",", "]", ";", "foreach", "(", "$", "try", "as", "$", "addr", ")", "{", "echo", "\"", "==", "$", "addr", "=", "=\\", "n", "\"", ";", "var_dump", "(", "@", "fsockopen", "(", "$", "addr", ",", "81", ",", "$", "errno", ",", "$", "errstr", ")", ",", "$", "errstr", ")", ";", "}", "-", "-", "EXPECTF", "-", "-", "=", "=", "127", ".", "0", ".", "0", ".", "1", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "41", ")", "\"", "Failed", "to", "parse", "address", "\"", "127", ".", "0", ".", "0", ".", "1", ":", "80", ":", "81", "\"", "\"", "=", "=", "tcp", ":", "//", "127", ".", "0", ".", "0", ".", "1", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "41", ")", "\"", "Failed", "to", "parse", "address", "\"", "127", ".", "0", ".", "0", ".", "1", ":", "80", ":", "81", "\"", "\"", "=", "=", "[", "::", "1", "]", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "37", ")", "\"", "Failed", "to", "parse", "address", "\"", "[:", ":", "1", "]", ":", "80", ":", "81", "\"", "\"", "=", "=", "tcp", ":", "//", "[:", ":", "1", "]", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "37", ")", "\"", "Failed", "to", "parse", "address", "\"", "[:", ":", "1", "]", ":", "80", ":", "81", "\"", "\"", "=", "=", "localhost", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "41", ")", "\"", "Failed", "to", "parse", "address", "\"", "localhost", ":", "80", ":", "81", "\"", "\"", "=", "=", "tcp", ":", "//", "localhost", ":", "80", "=", "=", "bool", "(", "false", ")", "string", "(", "41", ")", "\"", "Failed", "to", "parse", "address", "\"", "localhost", ":", "80", ":", "81", "\"", "\"", "char", "*", "p", "=", "memchr", "(", "str", "+", "1", ",", "'", "]'", ",", "str_len", "-", "2", ")", ",", "*", "e", "=", "NULL", ";", "*", "portno", "=", "strtol", "(", "p", "+", "2", ",", "&", "e", ",", "10", ")", ";", "if", "(", "e", "&", "&", "*", "e", ")", "{", "if", "(", "get_err", ")", "{", "*", "err", "=", "strpprintf", "(", "0", ",", "\"", "Failed", "to", "parse", "address", "\\", "\"%", "s", "\\", "\"\"", ",", "str", ")", ";", "}", "return", "NULL", ";", "}", "char", "*", "e", "=", "NULL", ";", "*", "portno", "=", "strtol", "(", "colon", "+", "1", ",", "&", "e", ",", "10", ")", ";", "if", "(", "!", "e", "|", "|", "!", "*", "e", ")", "{", "return", "estrndup", "(", "str", ",", "colon", "-", "str", ")", ";", "if", "(", "get_err", ")", "{", "*", "err", "=", "strpprintf", "(", "0", ",", "\"", "Failed", "to", "parse", "address", "\\", "\"%", "s", "\\", "\"\"", ",", "str", ")", ";", "}", "return", "NULL", ";</s>char", "*", "p", ";", "p", "=", "memchr", "(", "str", "+", "1", ",", "'", "]'", ",", "str_len", "-", "2", ")", ";", "*", "portno", "=", "atoi", "(", "p", "+", "2", ")", ";", "*", "portno", "=", "atoi", "(", "colon", "+", "1", ")", ";", "host", "=", "estrndup", "(", "str", ",", "colon", "-", "str", ")", ";", "}", "else", "{", "if", "(", "get_err", ")", "{", "*", "err", "=", "strpprintf", "(", "0", ",", "\"", "Failed", "to", "parse", "address", "\\", "\"%", "s", "\\", "\"\"", ",", "str", ")", ";", "return", "NULL", ";", "return", "host", ";"], "docstring_tokens": ["request", "forgery"]}
{"contents": ["empty"], "code_tokens": ["import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "java", ".", "security", ".", "Principal", ";", "protected", "HttpServletRequest", "httpRequest", ";", "public", "SolrRequestInfo", "(", "HttpServletRequest", "httpReq", ",", "SolrQueryResponse", "rsp", ")", "{", "this", ".", "httpRequest", "=", "httpReq", ";", "this", ".", "rsp", "=", "rsp", ";", "}", "public", "Principal", "getUserPrincipal", "(", ")", "{", "if", "(", "req", "!", "=", "null", ")", "return", "req", ".", "getUserPrincipal", "(", ");", "if", "(", "httpRequest", "!", "=", "null", ")", "return", "httpRequest", ".", "getUserPrincipal", "(", ");", "return", "null", ";", "}", "Principal", "principal", "=", "reqInfo", ".", "getUserPrincipal", "(", ");", "SolrRequestInfo", ".", "setRequestInfo", "(", "new", "SolrRequestInfo", "(", "req", ",", "new", "SolrQueryResponse", "(", "))", ");", "UpdateRequest", "delQuery", "=", "null", ";", "delQuery", "=", "new", "UpdateRequest", "(", ").", "deleteByQuery", "(", "\"*", ":*", "\")", ";", "delQuery", ".", "setBasicAuthCredentials", "(", "\"", "harry", "\"", ",\"", "HarryIsUberCool", "\"", ");", "delQuery", ".", "process", "(", "aNewClient", ",", "COLLECTION", ")", ";/", "/", "this", "should", "succeed</s>Principal", "principal", "=", "reqInfo", ".", "getReq", "(", ").", "getUserPrincipal", "(", ");", "SolrRequestInfo", ".", "setRequestInfo", "(", "new", "SolrRequestInfo", "(", "solrReq", ",", "new", "SolrQueryResponse", "(", "))", ");", "@", "AwaitsFix", "(", "bugUrl", "=", "\"", "https", ":", "//", "issues", ".", "apache", ".", "org", "/", "jira", "/", "browse", "/", "SOLR", "-", "13098", "\"", ")", "UpdateRequest", "delQuery", "=", "null", ";", "delQuery", "=", "new", "UpdateRequest", "(", ").", "deleteByQuery", "(", "\"*", ":*", "\")", ";", "delQuery", ".", "setBasicAuthCredentials", "(", "\"", "harry", "\"", ",\"", "HarryIsUberCool", "\"", ");", "delQuery", ".", "process", "(", "aNewClient", ",", "COLLECTION", ")", ";/", "/", "this", "should", "succeed"], "docstring_tokens": ["bug", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["=", "==", "=", "Query", "Parameters", "(", "87", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "@", "UriParam", "(", "label", "=", "\"", "producer", "\"", ",", "defaultValue", "=", "\"", "true", "\"", ")", "protected", "boolean", "jailStartingDirectory", "=", "true", ";", "public", "boolean", "isJailStartingDirectory", "(", ")", "{", "return", "jailStartingDirectory", ";", "}", "/", "**", "*", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "*", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "*", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "*", "/", "public", "void", "setJailStartingDirectory", "(", "boolean", "jailStartingDirectory", ")", "{", "this", ".", "jailStartingDirectory", "=", "jailStartingDirectory", ";", "}", "import", "org", ".", "apache", ".", "camel", ".", "CamelExchangeException", ";", "if", "(", "value", "instanceof", "String", "&", "&", "StringHelper", ".", "hasStartToken", "(", "(", "String", ")", "value", ",", "\"", "simple", "\"", "))", "{", "if", "(", "endpoint", ".", "isJailStartingDirectory", "(", "))", "{", "/", "/", "check", "for", "file", "must", "be", "within", "starting", "directory", "(", "need", "to", "compact", "first", "as", "the", "name", "can", "be", "using", "relative", "paths", "via", ".", "./", "etc", ")", "String", "compatchAnswer", "=", "FileUtil", ".", "compactPath", "(", "answer", ")", ";", "String", "compatchBaseDir", "=", "FileUtil", ".", "compactPath", "(", "baseDir", ")", ";", "if", "(", "!", "compatchAnswer", ".", "startsWith", "(", "compatchBaseDir", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Cannot", "write", "file", "with", "name", ":", "\"", "+", "compatchAnswer", "+", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", ":", "\"", "+", "compatchBaseDir", ")", ";", "}", "}", "template", ".", "sendBody", "(", "\"", "file", ":", "//", "target", "/", "filelanguage", "?", "jailStartingDirectory", "=", "false", "&", "fileName", "=", "\"", "+", "expression", ",", "\"", "Hello", "World", "\"", ");", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "file", ";", "import", "org", ".", "apache", ".", "camel", ".", "ContextTestSupport", ";", "import", "org", ".", "apache", ".", "camel", ".", "Exchange", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "FileProducerJailStartingDirectoryTest", "extends", "ContextTestSupport", "{", "@", "Override", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "deleteDirectory", "(", "\"", "target", "/", "jail", "\"", ");", "super", ".", "setUp", "(", ");", "}", "@", "Test", "public", "void", "testWriteOutsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "0", ")", ";", "try", "{", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Hello", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "hello", ".", "txt", "\"", ");", "fail", "(", "\"", "Should", "have", "thrown", "exception", "\"", ");", "}", "catch", "(", "Exception", "e", ")", "{", "IllegalArgumentException", "iae", "=", "assertIsInstanceOf", "(", "IllegalArgumentException", ".", "class", ",", "e", ".", "getCause", "(", "))", ";", "assertTrue", "(", "iae", ".", "getMessage", "(", ").", "contains", "(", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", "\"", "))", ";", "}", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Test", "public", "void", "testWriteInsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Bye", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "outbox", "/", "bye", ".", "txt", "\"", ");", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "setHeader", "(", "Exchange", ".", "FILE_NAME", ",", "simple", "(", "\".", "./", "${", "file", ":", "name", "}", "\")", ")", ".", "to", "(", "\"", "file", ":", "target", "/", "jail", "/", "outbox", "\"", ")", ".", "to", "(", "\"", "mock", ":", "result", "\"", ");", "}", "}", ";", "}", "}", "@", "@", "-", "100", ",", "7", "+", "100", ",", "7", "@", "@", "with", "the", "following", "path", "and", "query", "parameters", ":", "=", "==", "=", "Query", "Parameters", "(", "110", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "122", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "118", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "String", "url", "=", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "filelanguage", "/", "foo", "?", "password", "=", "admin", "&", "jailStartingDirectory", "=", "false", "\"", ";", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "file", ".", "remote", ";", "import", "org", ".", "apache", ".", "camel", ".", "Exchange", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "FtpProducerJailStartingDirectoryTest", "extends", "FtpServerTestSupport", "{", "private", "String", "getFtpUrl", "(", ")", "{", "return", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "upload", "/", "jail", "?", "binary", "=", "false", "&", "password", "=", "admin", "&", "tempPrefix", "=", ".", "uploading", "\"", ";", "}", "@", "Test", "public", "void", "testWriteOutsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "0", ")", ";", "try", "{", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Hello", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "hello", ".", "txt", "\"", ");", "fail", "(", "\"", "Should", "have", "thrown", "exception", "\"", ");", "}", "catch", "(", "Exception", "e", ")", "{", "IllegalArgumentException", "iae", "=", "assertIsInstanceOf", "(", "IllegalArgumentException", ".", "class", ",", "e", ".", "getCause", "(", "))", ";", "assertTrue", "(", "iae", ".", "getMessage", "(", ").", "contains", "(", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", "\"", "))", ";", "}", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Test", "public", "void", "testWriteInsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Bye", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "jail", "/", "bye", ".", "txt", "\"", ");", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "setHeader", "(", "Exchange", ".", "FILE_NAME", ",", "simple", "(", "\".", "./", "${", "file", ":", "name", "}", "\")", ")", ".", "to", "(", "getFtpUrl", "(", "))", ".", "to", "(", "\"", "mock", ":", "result", "\"", ");", "}", "}", ";", "}", "}", "=", "==", "=", "Query", "Parameters", "(", "22", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean</s>=", "==", "=", "Query", "Parameters", "(", "86", "parameters", ")", ":", "if", "(", "value", "!", "=", "null", "&", "&", "value", "instanceof", "String", "&", "&", "StringHelper", ".", "hasStartToken", "(", "(", "String", ")", "value", ",", "\"", "simple", "\"", "))", "{", "template", ".", "sendBody", "(", "\"", "file", ":", "//", "target", "/", "filelanguage", "?", "fileName", "=", "\"", "+", "expression", ",", "\"", "Hello", "World", "\"", ");", "=", "==", "=", "Query", "Parameters", "(", "109", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "121", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "117", "parameters", ")", ":", "String", "url", "=", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "filelanguage", "/", "foo", "?", "password", "=", "admin", "\"", ";", "=", "==", "=", "Query", "Parameters", "(", "21", "parameters", ")", ":"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["req", "-", ">", "ki_filp", "=", "file", ";</s>req", "-", ">", "ki_filp", "=", "file", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "SSL3_RANDOM_SIZE", "+", "session_length", "+", "1", ">", "=", "(", "d", "+", "n", ")", "-", "p", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "j", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "1", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "cookie_len", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "2", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "i", "+", "1", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "p", "<", "i", ")", "{", "if", "(", "limit", "-", "session_id", "<", "len", ")", "{", "if", "(", "limit", "-", "data", "<", "=", "2", ")", "if", "(", "limit", "-", "data", "<", "4", ")", "if", "(", "limit", "-", "data", "<", "size", ")", "if", "(", "limit", "-", "data", "!", "=", "(", "int", ")", "(", "len1", "+", "len2", ")", ")", "if", "(", "limit", "-", "data", "!", "=", "(", "int", ")", "(", "len", ")", ")", "if", "(", "limit", "-", "data", "<", "2", ")", "if", "(", "limit", "-", "data", "!", "=", "len", ")", "while", "(", "limit", "-", "data", ">", "=", "4", ")", "{", "if", "(", "limit", "-", "data", "<", "size", ")", "if", "(", "limit", "-", "data", "<", "=", "2", ")", "if", "(", "limit", "-", "data", "<", "len", ")", "while", "(", "limit", "-", "data", ">", "=", "4", ")", "{", "if", "(", "limit", "-", "data", "<", "size", ")", "if", "(", "(", "d", "+", "n", ")", "-", "data", "<", "=", "2", ")", "if", "(", "(", "d", "+", "n", ")", "-", "data", "!", "=", "length", ")", "{", "while", "(", "(", "d", "+", "n", ")", "-", "data", ">", "=", "4", ")", "{", "if", "(", "(", "d", "+", "n", ")", "-", "data", "<", "size", ")", "if", "(", "limit", "-", "p", "<", "=", "i", ")", "p", "+", "=", "i", ";", "if", "(", "limit", "-", "p", "<", "=", "i", ")", "p", "+", "=", "i", ";", "if", "(", "limit", "-", "p", "<", "i", ")", "p", "+", "=", "i", ";", "if", "(", "limit", "-", "p", "<", "=", "2", ")", "while", "(", "limit", "-", "p", ">", "=", "4", ")", "{", "if", "(", "limit", "-", "p", "<", "size", ")</s>if", "(", "p", "+", "SSL3_RANDOM_SIZE", "+", "session_length", "+", "1", ">", "=", "d", "+", "n", ")", "{", "if", "(", "p", "+", "j", ">", "d", "+", "n", ")", "{", "if", "(", "p", "+", "1", ">", "d", "+", "n", ")", "{", "if", "(", "p", "+", "cookie_len", ">", "d", "+", "n", ")", "{", "if", "(", "p", "+", "2", ">", "d", "+", "n", ")", "{", "if", "(", "(", "p", "+", "i", "+", "1", ")", ">", "(", "d", "+", "n", ")", ")", "{", "if", "(", "(", "p", "+", "i", ")", ">", "(", "d", "+", "n", ")", ")", "{", "if", "(", "session_id", "+", "len", ">", "limit", ")", "{", "if", "(", "data", ">", "=", "(", "limit", "-", "2", ")", ")", "if", "(", "data", ">", "(", "limit", "-", "4", ")", ")", "if", "(", "data", "+", "size", ">", "limit", ")", "if", "(", "data", "+", "len1", "+", "len2", "!", "=", "limit", ")", "if", "(", "data", "+", "len", "!", "=", "limit", ")", "if", "(", "data", ">", "(", "limit", "-", "2", ")", ")", "if", "(", "data", "+", "len", "!", "=", "limit", ")", "while", "(", "data", "<", "=", "(", "limit", "-", "4", ")", ")", "{", "if", "(", "data", "+", "size", ">", "(", "limit", ")", ")", "if", "(", "data", ">", "=", "limit", "-", "2", ")", "if", "(", "data", ">", "limit", "-", "len", ")", "while", "(", "data", "<", "=", "limit", "-", "4", ")", "{", "if", "(", "data", "+", "size", ">", "limit", ")", "if", "(", "data", ">", "=", "(", "d", "+", "n", "-", "2", ")", ")", "if", "(", "data", "+", "length", "!", "=", "d", "+", "n", ")", "{", "while", "(", "data", "<", "=", "(", "d", "+", "n", "-", "4", ")", ")", "{", "if", "(", "data", "+", "size", ">", "(", "d", "+", "n", ")", ")", "p", "+", "=", "i", ";", "if", "(", "p", ">", "=", "limit", ")", "p", "+", "=", "i", ";", "if", "(", "p", ">", "=", "limit", ")", "p", "+", "=", "i", ";", "if", "(", "p", ">", "limit", ")", "if", "(", "(", "p", "+", "2", ")", ">", "=", "limit", ")", "while", "(", "(", "p", "+", "4", ")", "<", "=", "limit", ")", "{", "if", "(", "p", "+", "size", ">", "limit", ")"], "docstring_tokens": ["integer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["ac", ".", "formatResult", "=", "ac", ".", "formatEscapedResult", ";</s>"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["import", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "jsontype", ".", "impl", ".", "SubTypeValidator", ";", "_validateSubType", "(", "ctxt", ",", "type", ",", "beanDesc", ")", ";", "*", "@", "since", "2", ".", "8", ".", "11", "protected", "void", "_validateSubType", "(", "DeserializationContext", "ctxt", ",", "JavaType", "type", ",", "SubTypeValidator", ".", "instance", "(", ").", "validateSubType", "(", "ctxt", ",", "type", ")", ";", "package", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "jsontype", ".", "impl", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "DeserializationContext", ";", "import", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "JavaType", ";", "import", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "JsonMappingException", ";", "/", "**", "*", "Helper", "class", "used", "to", "encapsulate", "rules", "that", "determine", "subtypes", "that", "*", "are", "invalid", "to", "use", ",", "even", "with", "default", "typing", ",", "mostly", "due", "to", "security", "*", "concerns", ".", "*", "Used", "by", "<", "code", ">", "BeanDeserializerFacotry", "<", "/", "code", ">", "*", "*", "@", "since", "2", ".", "8", ".", "11", "*", "/", "public", "class", "SubTypeValidator", "{", "protected", "final", "static", "String", "PREFIX_STRING", "=", "\"", "org", ".", "springframework", ".", "\";", "/", "**", "*", "Set", "of", "well", "-", "known", "\"", "nasty", "classes", "\"", ",", "deserialization", "of", "which", "is", "considered", "dangerous", "*", "and", "should", "(", "and", "is", ")", "prevented", "by", "default", ".", "*", "/", "protected", "final", "static", "Set", "<", "String", ">", "DEFAULT_NO_DESER_CLASS_NAMES", ";", "static", "{", "Set", "<", "String", ">", "s", "=", "new", "HashSet", "<", "String", ">", "()", ";", "/", "/", "Courtesy", "of", "[", "https", ":", "//", "github", ".", "com", "/", "kantega", "/", "notsoserial", "]", ":", "/", "/", "(", "and", "wrt", "[", "databind", "#", "1599", "]", ")", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections", ".", "functors", ".", "InvokerTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections", ".", "functors", ".", "InstantiateTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections4", ".", "functors", ".", "InvokerTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections4", ".", "functors", ".", "InstantiateTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "codehaus", ".", "groovy", ".", "runtime", ".", "ConvertedClosure", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "codehaus", ".", "groovy", ".", "runtime", ".", "MethodClosure", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "beans", ".", "factory", ".", "ObjectFactory", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "org", ".", "apache", ".", "xalan", ".", "internal", ".", "xsltc", ".", "trax", ".", "TemplatesImpl", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "xalan", ".", "xsltc", ".", "trax", ".", "TemplatesImpl", "\"", ");", "/", "/", "[", "databind", "#", "1680", "]", ":", "may", "or", "may", "not", "be", "problem", ",", "take", "no", "chance", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "rowset", ".", "JdbcRowSetImpl", "\"", ");", "/", "/", "[", "databind", "#", "1737", "]", ";", "JDK", "provided", "s", ".", "add", "(", "\"", "java", ".", "util", ".", "logging", ".", "FileHandler", "\"", ");", "s", ".", "add", "(", "\"", "java", ".", "rmi", ".", "server", ".", "UnicastRemoteObject", "\"", ");", "/", "/", "[", "databind", "#", "1737", "]", ";", "3rd", "party", "/", "/", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "aop", ".", "support", ".", "AbstractBeanFactoryPointcutAdvisor", "\"", ");", "/", "/", "deprecated", "by", "[", "databind", "#", "1855", "]", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "beans", ".", "factory", ".", "config", ".", "PropertyPathFactoryBean", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "JndiRefForwardingDataSource", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "WrapperConnectionPoolDataSource", "\"", ");", "/", "/", "[", "databind", "#", "1855", "]", ":", "more", "3rd", "party", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "tomcat", ".", "dbcp", ".", "dbcp2", ".", "BasicDataSource", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "org", ".", "apache", ".", "bcel", ".", "internal", ".", "util", ".", "ClassLoader", "\"", ");", "DEFAULT_NO_DESER_CLASS_NAMES", "=", "Collections", ".", "unmodifiableSet", "(", "s", ")", ";", "}", "/", "**", "*", "Set", "of", "class", "names", "of", "types", "that", "are", "never", "to", "be", "deserialized", ".", "*", "/", "protected", "Set", "<", "String", ">", "_cfgIllegalClassNames", "=", "DEFAULT_NO_DESER_CLASS_NAMES", ";", "private", "final", "static", "SubTypeValidator", "instance", "=", "new", "SubTypeValidator", "(", ");", "protected", "SubTypeValidator", "(", ")", "{", "}", "public", "static", "SubTypeValidator", "instance", "(", ")", "{", "return", "instance", ";", "}", "public", "void", "validateSubType", "(", "DeserializationContext", "ctxt", ",", "JavaType", "type", ")", "throws", "JsonMappingException", "{", "/", "/", "There", "are", "certain", "nasty", "classes", "that", "could", "cause", "problems", ",", "mostly", "/", "/", "via", "default", "typing", "-", "-", "catch", "them", "here", ".", "final", "Class", "<", "?>", "raw", "=", "type", ".", "getRawClass", "(", ");", "String", "full", "=", "raw", ".", "getName", "(", ");", "do", "{", "if", "(", "_cfgIllegalClassNames", ".", "contains", "(", "full", ")", ")", "{", "break", ";", "}", "/", "/", "18", "-", "Dec", "-", "2017", ",", "tatu", ":", "As", "per", "[", "databind", "#", "1855", "]", ",", "need", "bit", "more", "sophisticated", "handling", "/", "/", "for", "some", "Spring", "framework", "types", "if", "(", "full", ".", "startsWith", "(", "PREFIX_STRING", ")", ")", "{", "for", "(", "Class", "<", "?>", "cls", "=", "raw", ";", "cls", "!", "=", "Object", ".", "class", ";", "cls", "=", "cls", ".", "getSuperclass", "(", "))", "{", "String", "name", "=", "cls", ".", "getSimpleName", "(", ");", "/", "/", "looking", "for", "\"", "AbstractBeanFactoryPointcutAdvisor", "\"", "but", "no", "point", "to", "allow", "any", "is", "there", "?", "if", "(", "\"", "AbstractPointcutAdvisor", "\"", ".", "equals", "(", "name", ")", "/", "/", "ditto", "for", "\"", "FileSystemXmlApplicationContext", "\"", ":", "block", "all", "ApplicationContexts", "|", "|", "\"", "AbstractApplicationContext", ".", "equals", "\"", ".", "equals", "(", "name", ")", ")", "{", "break", ";", "}", "}", "}", "return", ";", "}", "while", "(", "false", ")", ";", "throw", "JsonMappingException", ".", "from", "(", "ctxt", ",", "String", ".", "format", "(", "\"", "Illegal", "type", "(", "%", "s", ")", "to", "deserialize", ":", "prevented", "for", "security", "reasons", "\"", ",", "full", ")", ");", "}", "}</s>/", "**", "*", "Set", "of", "well", "-", "known", "\"", "nasty", "classes", "\"", ",", "deserialization", "of", "which", "is", "considered", "dangerous", "*", "and", "should", "(", "and", "is", ")", "prevented", "by", "default", ".", "*", "/", "protected", "final", "static", "Set", "<", "String", ">", "DEFAULT_NO_DESER_CLASS_NAMES", ";", "static", "{", "Set", "<", "String", ">", "s", "=", "new", "HashSet", "<", "String", ">", "()", ";", "/", "/", "Courtesy", "of", "[", "https", ":", "//", "github", ".", "com", "/", "kantega", "/", "notsoserial", "]", ":", "/", "/", "(", "and", "wrt", "[", "databind", "#", "1599", "]", ")", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections", ".", "functors", ".", "InvokerTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections", ".", "functors", ".", "InstantiateTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections4", ".", "functors", ".", "InvokerTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "commons", ".", "collections4", ".", "functors", ".", "InstantiateTransformer", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "codehaus", ".", "groovy", ".", "runtime", ".", "ConvertedClosure", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "codehaus", ".", "groovy", ".", "runtime", ".", "MethodClosure", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "beans", ".", "factory", ".", "ObjectFactory", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "org", ".", "apache", ".", "xalan", ".", "internal", ".", "xsltc", ".", "trax", ".", "TemplatesImpl", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "xalan", ".", "xsltc", ".", "trax", ".", "TemplatesImpl", "\"", ");", "/", "/", "[", "databind", "#", "1680", "]", ":", "may", "or", "may", "not", "be", "problem", ",", "take", "no", "chance", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "rowset", ".", "JdbcRowSetImpl", "\"", ");", "/", "/", "[", "databind", "#", "1737", "]", ";", "JDK", "provided", "s", ".", "add", "(", "\"", "java", ".", "util", ".", "logging", ".", "FileHandler", "\"", ");", "s", ".", "add", "(", "\"", "java", ".", "rmi", ".", "server", ".", "UnicastRemoteObject", "\"", ");", "/", "/", "[", "databind", "#", "1737", "]", ";", "3rd", "party", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "aop", ".", "support", ".", "AbstractBeanFactoryPointcutAdvisor", "\"", ");", "s", ".", "add", "(", "\"", "org", ".", "springframework", ".", "beans", ".", "factory", ".", "config", ".", "PropertyPathFactoryBean", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "JndiRefForwardingDataSource", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "WrapperConnectionPoolDataSource", "\"", ");", "/", "/", "[", "databind", "#", "1855", "]", ":", "more", "3rd", "party", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "tomcat", ".", "dbcp", ".", "dbcp2", ".", "BasicDataSource", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "org", ".", "apache", ".", "bcel", ".", "internal", ".", "util", ".", "ClassLoader", "\"", ");", "DEFAULT_NO_DESER_CLASS_NAMES", "=", "Collections", ".", "unmodifiableSet", "(", "s", ")", ";", "}", "/", "**", "*", "Set", "of", "class", "names", "of", "types", "that", "are", "never", "to", "be", "deserialized", ".", "*", "/", "protected", "Set", "<", "String", ">", "_cfgIllegalClassNames", "=", "DEFAULT_NO_DESER_CLASS_NAMES", ";", "checkIllegalTypes", "(", "ctxt", ",", "type", ",", "beanDesc", ")", ";", "*", "@", "since", "2", ".", "8", ".", "9", "protected", "void", "checkIllegalTypes", "(", "DeserializationContext", "ctxt", ",", "JavaType", "type", ",", "/", "/", "There", "are", "certain", "nasty", "classes", "that", "could", "cause", "problems", ",", "mostly", "/", "/", "via", "default", "typing", "-", "-", "catch", "them", "here", ".", "String", "full", "=", "type", ".", "getRawClass", "(", ").", "getName", "(", ");", "if", "(", "_cfgIllegalClassNames", ".", "contains", "(", "full", ")", ")", "{", "throw", "JsonMappingException", ".", "from", "(", "ctxt", ",", "String", ".", "format", "(", "\"", "Illegal", "type", "(", "%", "s", ")", "to", "deserialize", ":", "prevented", "for", "security", "reasons", "\"", ",", "full", ")", ");", "}"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["bool", "compat", ",", "struct", "iov_iter", "*", "iter", ")", "iov_iter_init", "(", "iter", ",", "rw", ",", "*", "iovec", ",", "*", "nr_segs", ",", "*", "len", ")", ";", "struct", "iovec", "*", "iovec", ",", "struct", "iov_iter", "*", "iter", ")", "if", "(", "len", ">", "MAX_RW_COUNT", ")", "len", "=", "MAX_RW_COUNT", ";", "iov_iter_init", "(", "iter", ",", "rw", ",", "iovec", ",", "*", "nr_segs", ",", "len", ")", ";", "&", "len", ",", "&", "iovec", ",", "compat", ",", "&", "iter", ")", ";", "len", ",", "iovec", ",", "&", "iter", ")", ";", "ret", "=", "rw_op", "(", "req", ",", "iter", ".", "iov", ",", "iter", ".", "nr_segs", ",", "req", "-", ">", "ki_pos", ")", ";</s>bool", "compat", ")", "struct", "iovec", "*", "iovec", ")", "&", "len", ",", "&", "iovec", ",", "compat", ")", ";", "len", ",", "iovec", ")", ";", "iov_iter_init", "(", "&", "iter", ",", "rw", ",", "iovec", ",", "nr_segs", ",", "len", ")", ";", "ret", "=", "rw_op", "(", "req", ",", "iovec", ",", "nr_segs", ",", "req", "-", ">", "ki_pos", ")", ";"], "docstring_tokens": ["integer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["const", "zend_uchar", "*", "const", "packet_end", "=", "(", "zend_uchar", "*", ")", "row_buffer", "-", ">", "ptr", "+", "data_size", ";", "const", "unsigned", "long", "len", "=", "php_mysqlnd_net_field_length", "(", "&", "p", ")", ";", "if", "(", "len", "!", "=", "MYSQLND_NULL_LENGTH", "&", "&", "(", "(", "p", "+", "len", ")", ">", "packet_end", ")", ")", "{", "php_error_docref", "(", "NULL", ",", "E_WARNING", ",", "\"", "Malformed", "server", "packet", ".", "Field", "length", "pointing", "\"", "MYSQLND_SZ_T_SPEC", "\"", "bytes", "after", "end", "of", "packet", "\"", ",", "(", "p", "+", "len", ")", "-", "packet_end", "-", "1", ")", ";", "DBG_RETURN", "(", "FAIL", ")", ";", "}</s>unsigned", "long", "len", "=", "php_mysqlnd_net_field_length", "(", "&", "p", ")", ";"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "context", "&", "&", "if", "(", "context", "&", "&", "}", "else", "if", "(", "context", "&", "&", "}", "ulong", "numindx", ";", "int", "res", "=", "zend_hash_get_current_key", "(", "Z_ARRVAL_PP", "(", "cookies", ")", ",", "&", "key", ",", "&", "numindx", ",", "FALSE", ")", ";", "if", "(", "res", "=", "=", "HASH_KEY_IS_STRING", "&", "&", "Z_TYPE_PP", "(", "data", ")", "=", "=", "IS_ARRAY", ")", "{", "Z_TYPE_PP", "(", "tmp", ")", "!", "=", "IS_STRING", "|", "|", "Z_TYPE_PP", "(", "tmp", ")", "!", "=", "IS_STRING", "|", "|", "}", "}</s>if", "(", "context", "&", "&", "if", "(", "context", "&", "&", "}", "else", "if", "(", "context", "&", "&", "}", "zend_hash_get_current_key", "(", "Z_ARRVAL_PP", "(", "cookies", ")", ",", "&", "key", ",", "NULL", ",", "FALSE", ")", ";", "if", "(", "Z_TYPE_PP", "(", "data", ")", "=", "=", "IS_ARRAY", ")", "{", "}", "}"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "s", "-", ">", "width", "!", "=", "avctx", "-", ">", "width", "|", "|", "s", "-", ">", "height", "!", "=", "avctx", "-", ">", "height", ")", "{</s>if", "(", "s", "-", ">", "width", "!", "=", "avctx", "-", ">", "width", "&", "&", "s", "-", ">", "height", "!", "=", "avctx", "-", ">", "height", ")", "{"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["addParameter", "(", "\"", "href", "\"", ",", "ensureAttributeSafelyNotEscaped", "(", "findString", "(", "href", ")", "))", ";", "/", "**", "*", "Ensures", "an", "unescaped", "attribute", "value", "cannot", "be", "vulnerable", "to", "XSS", "attacks", "*", "*", "@", "param", "val", "The", "value", "to", "check", "*", "@", "return", "The", "escaped", "value", "*", "/", "protected", "String", "ensureAttributeSafelyNotEscaped", "(", "String", "val", ")", "{", "if", "(", "val", "!", "=", "null", ")", "{", "return", "val", ".", "replaceAll", "(", "\"\\", "\"\"", ",", "\"", "&#", "34", ";", "\")", ";", "}", "else", "{", "return", "\"", "\";", "}", "}", "public", "void", "testSimpleBadQuote", "(", ")", "throws", "Exception", "{", "TestAction", "testAction", "=", "(", "TestAction", ")", "action", ";", "testAction", ".", "setFoo", "(", "\"", "bar", "\"", ");", "AnchorTag", "tag", "=", "new", "AnchorTag", "(", ");", "tag", ".", "setPageContext", "(", "pageContext", ")", ";", "tag", ".", "setId", "(", "\"", "mylink", "\"", ");", "tag", ".", "setHref", "(", "\"", "a", "\\", "\"\"", ");", "tag", ".", "doStartTag", "(", ");", "tag", ".", "doEndTag", "(", ");", "verify", "(", "AnchorTest", ".", "class", ".", "getResource", "(", "\"", "href", "-", "2", ".", "txt", "\"", "))", ";", "}", "<", "a", "id", "=", "\"", "mylink", "\"", "href", "=", "\"", "a", "&", "#", "34", ";", "\">", "<", "/", "a", "></s>addParameter", "(", "\"", "href", "\"", ",", "findString", "(", "href", ")", ");"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "(", "unsigned", "int", ")", "addr", "-", ">", "srose_ndigis", ">", "ROSE_MAX_DIGIS", ")", "if", "(", "(", "unsigned", "int", ")", "addr", "-", ">", "srose_ndigis", ">", "ROSE_MAX_DIGIS", ")</s>if", "(", "addr", "-", ">", "srose_ndigis", ">", "ROSE_MAX_DIGIS", ")", "if", "(", "addr", "-", ">", "srose_ndigis", ">", "ROSE_MAX_DIGIS", ")"], "docstring_tokens": ["integer", "signedness"]}
{"contents": ["empty"], "code_tokens": ["HFSPLUS_SB", "(", "sb", ")", "->", "hidden_dir", "&", "&", "create_date", ")", ")", "{</s>create_date", ")", "&", "&", "HFSPLUS_SB", "(", "sb", ")", "->", "hidden_dir", ")", "{"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["slf4jVersion", "=", "\"", "1", ".", "7", ".", "25", "\"", "springIntegrationVersion", "=", "'", "4", ".", "3", ".", "15", ".", "RELEASE", "'", "ztZipVersion", "=", "'", "1", ".", "13", "'", "*", "Copyright", "2015", "-", "2018", "the", "original", "author", "or", "authors", ".", "import", "org", ".", "zeroturnaround", ".", "zip", ".", "ZipException", ";", "*", "\"", "The", "only", "supported", "payload", "types", "are", "java", ".", "io", ".", "File", ",", "byte", "[", "]", "and", "java", ".", "io", ".", "InputStream", "\"", ",", "\"", "Compressed", "Size", ":", "'", "%", "s", "'", ",", "Type", ":", "'", "%", "s", "'", "\",", "/", "*", "If", "we", "see", "the", "relative", "traversal", "string", "of", "\"", "..", "\"", "we", "need", "to", "make", "sure", "*", "that", "the", "outputdir", "+", "name", "doesn", "'", "t", "leave", "the", "outputdir", ".", "*", "/", "if", "(", "zipEntryName", ".", "contains", "(", "\".", ".\"", ")", "&", "&", "!", "destinationFile", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "workDirectory", ".", "getCanonicalPath", "(", "))", ")", "{", "throw", "new", "ZipException", "(", "\"", "The", "file", "\"", "+", "zipEntryName", "\"", "is", "trying", "to", "leave", "the", "target", "output", "directory", "of", "\"", "+", "workDirectory", ")", ";", "}", "String", ".", "format", "(", "\"", "The", "UnZip", "operation", "extracted", "%", "s", "\"", "+", "\"", "result", "objects", "but", "expectSingleResult", "was", "'", "true", "'", ".\"", ",", "uncompressedData", ".", "size", "(", "))", ");", "*", "Copyright", "2015", "-", "2018", "the", "original", "author", "or", "authors", ".", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "containsString", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "instanceOf", ";", "import", "org", ".", "zeroturnaround", ".", "zip", ".", "ZipException", ";", "import", "org", ".", "springframework", ".", "integration", ".", "transformer", ".", "MessageTransformationException", ";", "import", "org", ".", "springframework", ".", "messaging", ".", "MessageHandlingException", ";", "*", "@", "Test", "public", "void", "testUnzipMaliciousTraversalZipFile", "(", ")", "throws", "IOException", "{", "final", "Resource", "resource", "=", "this", ".", "resourceLoader", ".", "getResource", "(", "\"", "classpath", ":", "testzipdata", "/", "zip", "-", "malicious", "-", "traversal", ".", "zip", "\"", ");", "final", "InputStream", "is", "=", "resource", ".", "getInputStream", "(", ");", "final", "Message", "<", "InputStream", ">", "message", "=", "MessageBuilder", ".", "withPayload", "(", "is", ")", ".", "build", "(", ");", "final", "UnZipTransformer", "unZipTransformer", "=", "new", "UnZipTransformer", "(", ");", "unZipTransformer", ".", "afterPropertiesSet", "(", ");", "try", "{", "unZipTransformer", ".", "transform", "(", "message", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "Assert", ".", "assertThat", "(", "e", ",", "instanceOf", "(", "MessageTransformationException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", "),", "instanceOf", "(", "MessageHandlingException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", ").", "getCause", "(", "),", "instanceOf", "(", "ZipException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", ").", "getCause", "(", ").", "getMessage", "(", "),", "containsString", "(", "\"", "is", "trying", "to", "leave", "the", "target", "output", "directory", "\"", "))", ";", "}", "}</s>slf4jVersion", "=", "\"", "1", ".", "7", ".", "21", "\"", "springIntegrationVersion", "=", "'", "4", ".", "3", ".", "10", ".", "RELEASE", "'", "ztZipVersion", "=", "'", "1", ".", "11", "'", "*", "Copyright", "2015", "-", "2016", "the", "original", "author", "or", "authors", ".", "\"", "The", "only", "supported", "payload", "types", "are", "java", ".", "io", ".", "File", ",", "byte", "[", "]", "and", "java", ".", "io", ".", "InputStream", "\"", ",", "\"", "Compressed", "Size", ":", "'", "%", "s", "'", ",", "Type", ":", "'", "%", "s", "'", "\",", "String", ".", "format", "(", "\"", "The", "UnZip", "operation", "extracted", "%", "s", "\"", "+", "\"", "result", "objects", "but", "expectSingleResult", "was", "'", "true", "'", ".\"", ",", "uncompressedData", ".", "size", "(", "))", ");", "*", "Copyright", "2015", "-", "2016", "the", "original", "author", "or", "authors", "."], "docstring_tokens": ["path", "traversal"]}
{"contents": ["empty"], "code_tokens": ["import", "hudson", ".", "util", ".", "Secret", ";", "GitlabApi", "api", "=", "new", "GitlabApi", "(", "descriptor", ".", "getEndpointUrl", "(", "),", "descriptor", ".", "getPrivateToken", "(", ").", "getPlainText", "(", "))", ";", "private", "Secret", "privateToken", ";", "privateToken", "=", "Secret", ".", "fromString", "(", "formData", ".", "getString", "(", "\"", "privateToken", "\"", "))", ";", "public", "Secret", "getPrivateToken", "(", ")", "{</s>GitlabApi", "api", "=", "new", "GitlabApi", "(", "descriptor", ".", "getEndpointUrl", "(", "),", "descriptor", ".", "getPrivateToken", "(", "))", ";", "private", "String", "privateToken", ";", "privateToken", "=", "formData", ".", "getString", "(", "\"", "privateToken", "\"", ");", "public", "String", "getPrivateToken", "(", ")", "{"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["-", "Fixed", "bug", "#", "52784", "(", "Race", "condition", "when", "handling", "many", "concurrent", "signals", ")", ".", "(", "nick", "dot", "telford", "at", "gmail", "dot", "com", ",", "Arnaud", ")", "if", "(", "php_signal4", "(", "signo", ",", "pcntl_signal_handler", ",", "(", "int", ")", "restart_syscalls", ",", "1", ")", "=", "=", "SIG_ERR", ")", "{", "sigset_t", "mask", ";", "sigset_t", "old_mask", ";", "/", "*", "Mask", "all", "signals", "*", "/", "sigfillset", "(", "&", "mask", ")", ";", "sigprocmask", "(", "SIG_BLOCK", ",", "&", "mask", ",", "&", "old_mask", ")", ";", "if", "(", "!", "PCNTL_G", "(", "head", ")", "|", "|", "PCNTL_G", "(", "processing_signal_queue", ")", ")", "{", "sigprocmask", "(", "SIG_SETMASK", ",", "&", "old_mask", ",", "NULL", ")", ";", "}", "/", "*", "return", "signal", "mask", "to", "previous", "state", "*", "/", "sigprocmask", "(", "SIG_SETMASK", ",", "&", "old_mask", ",", "NULL", ")", ";", "Sigfunc", "*", "php_signal4", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ",", "int", "mask_all", ")", "if", "(", "mask_all", ")", "{", "sigfillset", "(", "&", "act", ".", "sa_mask", ")", ";", "}", "else", "{", "sigemptyset", "(", "&", "act", ".", "sa_mask", ")", ";", "}", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", "{", "return", "php_signal4", "(", "signo", ",", "func", ",", "restart", ",", "0", ")", ";", "}", "Sigfunc", "*", "php_signal4", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ",", "int", "mask_all", ")", ";</s>-", "Fixed", "bug", "#", "52786", "(", "PHP", "should", "reset", "section", "to", "[", "PHP", "]", "after", "ini", "sections", ")", ".", "-", "Fixed", "bug", "#", "52772", "(", "var_dump", "(", ")", "doesn", "'", "t", "check", "for", "the", "existence", "of", "-", "Fixed", "bug", "#", "52744", "(", "cal_days_in_month", "incorrect", "for", "December", "1", "BCE", ")", ".", "@", "@", "-", "887", ",", "7", "+", "887", ",", "7", "@", "@", "PHP_FUNCTION", "(", "pcntl_signal", ")", "if", "(", "php_signal", "(", "signo", ",", "pcntl_signal_handler", ",", "(", "int", ")", "restart_syscalls", ")", "=", "=", "SIG_ERR", ")", "{", "if", "(", "!", "PCNTL_G", "(", "head", ")", "|", "|", "PCNTL_G", "(", "processing_signal_queue", ")", ")", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", "sigemptyset", "(", "&", "act", ".", "sa_mask", ")", ";"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["String", "canonicalDestinationDirPath", "=", "dir", ".", "getCanonicalPath", "(", ");", "/", "/", "https", ":", "//", "snyk", ".", "io", "/", "research", "/", "zip", "-", "slip", "-", "vulnerability", "String", "canonicalDestinationFile", "=", "file", ".", "getCanonicalPath", "(", ");", "if", "(", "!", "canonicalDestinationFile", ".", "startsWith", "(", "canonicalDestinationDirPath", "+", "File", ".", "separator", ")", ")", "{", "throw", "new", "IOException", "(", "\"", "Entry", "is", "outside", "of", "the", "target", "dir", ":", "\"", "+", "entry", ".", "getName", "(", "))", ";", "}</s>"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["}", "else", "{", "if", "(", "hdr", "-", ">", "substreamid", "!", "=", "0", ")", "{", "avpriv_request_sample", "(", "mov", "-", ">", "fc", ",", "\"", "Multiple", "non", "EAC3", "independent", "substreams", "\"", ");", "ret", "=", "AVERROR_PATCHWELCOME", ";", "goto", "end", ";", "}</s>"], "docstring_tokens": ["out-of-bounds", "write"]}
{"contents": ["empty"], "code_tokens": ["beqz", "t0", ",", "einval", "#", "do", "not", "recurse", "subu", "t0", ",", "a0", ",", "__NR_O32_Linux", "#", "check", "syscall", "number", "sltiu", "v0", ",", "t0", ",", "__NR_O32_Linux_syscalls", "+", "1", "beqz", "t0", ",", "einval", "#", "do", "not", "recurse", "dsll", "t1", ",", "t0", ",", "3", "ld", "t2", ",", "sys_call_table", "(", "t1", ")", "#", "syscall", "routine</s>li", "v1", ",", "4000", "-", "__NR_O32_Linux", "#", "index", "of", "sys_syscall", "beq", "t0", ",", "v1", ",", "einval", "#", "do", "not", "recurse", "sltu", "v0", ",", "a0", ",", "__NR_O32_Linux", "+", "__NR_O32_Linux_syscalls", "+", "1", "dsll", "v0", ",", "a0", ",", "3", "ld", "t2", ",", "(", "sys_call_table", "-", "(", "__NR_O32_Linux", "*", "8", ")", ")(", "v0", ")", "li", "v1", ",", "4000", "#", "indirect", "syscall", "number", "beq", "a0", ",", "v1", ",", "einval", "#", "do", "not", "recurse"], "docstring_tokens": ["out", "of", "bounds", "array", "access"]}
{"contents": ["empty"], "code_tokens": ["ndtmsg", "-", ">", "ndtm_pad1", "=", "0", ";", "ndtmsg", "-", ">", "ndtm_pad2", "=", "0", ";", "ndtmsg", "-", ">", "ndtm_pad1", "=", "0", ";", "ndtmsg", "-", ">", "ndtm_pad2", "=", "0", ";", "ndm", "-", ">", "ndm_pad1", "=", "0", ";", "ndm", "-", ">", "ndm_pad2", "=", "0", ";", "r", "-", ">", "__ifi_pad", "=", "0", ";", "r", "-", ">", "__ifi_pad", "=", "0", ";", "struct", "nlmsgerr", "*", "e", ";", "e", "=", "NLMSG_DATA", "(", "nlh", ")", ";", "e", "-", ">", "error", "=", "-", "ETIMEDOUT", ";", "memset", "(", "&", "e", "-", ">", "msg", ",", "0", ",", "sizeof", "(", "e", "-", ">", "msg", ")", ");", "struct", "nlmsgerr", "*", "e", ";", "e", "=", "NLMSG_DATA", "(", "nlh", ")", ";", "e", "-", ">", "error", "=", "-", "EMSGSIZE", ";", "memset", "(", "&", "e", "-", ">", "msg", ",", "0", ",", "sizeof", "(", "e", "-", ">", "msg", ")", ");", "r", "-", ">", "__ifi_pad", "=", "0", ";", "t", "-", ">", "tca__pad1", "=", "0", ";", "t", "-", ">", "tca__pad2", "=", "0", ";", "t", "-", ">", "tca__pad1", "=", "0", ";", "t", "-", ">", "tca__pad2", "=", "0", ";", "t", "-", ">", "tca__pad1", "=", "0", ";", "t", "-", ">", "tca__pad2", "=", "0", ";", "t", "-", ">", "tca__pad1", "=", "0", ";", "t", "-", ">", "tca__pad2", "=", "0", ";", "tcm", "-", ">", "tcm__pad1", "=", "0", ";", "tcm", "-", ">", "tcm__pad1", "=", "0", ";", "tcm", "-", ">", "tcm__pad1", "=", "0", ";", "tcm", "-", ">", "tcm__pad2", "=", "0", ";", "opt", ".", "__res1", "=", "0", ";", "opt", ".", "__res2", "=", "0", ";</s>(", "(", "struct", "nlmsgerr", "*", ")", "NLMSG_DATA", "(", "nlh", ")", ")-", ">", "error", "=", "-", "ETIMEDOUT", ";", "(", "(", "struct", "nlmsgerr", "*", ")", "NLMSG_DATA", "(", "nlh", ")", ")-", ">", "error", "=", "-", "EMSGSIZE", ";"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["#", "ifdef", "HAVE_JPEG", "#", "include", "<", "setjmp", ".", "h", ">", "struct", "canvas_jpeg_error_mgr", ":", "jpeg_error_mgr", "{", "jmp_buf", "setjmp_buffer", ";", "}", ";", "#", "endif", "/", "*", "*", "Callback", "to", "recover", "from", "jpeg", "errors", "*", "/", "METHODDEF", "(", "void", ")", "canvas_jpeg_error_exit", "(", "j_common_ptr", "cinfo", ")", "{", "canvas_jpeg_error_mgr", "*", "cjerr", "=", "static_cast", "<", "canvas_jpeg_error_mgr", "*", ">(", "cinfo", "-", ">", "err", ")", ";", "/", "/", "Return", "control", "to", "the", "setjmp", "point", "longjmp", "(", "cjerr", "-", ">", "setjmp_buffer", ",", "1", ")", ";", "}", "struct", "canvas_jpeg_error_mgr", "err", ";", "args", ".", "err", "-", ">", "error_exit", "=", "canvas_jpeg_error_exit", ";", "/", "/", "Establish", "the", "setjmp", "return", "context", "for", "canvas_jpeg_error_exit", "to", "use", "if", "(", "setjmp", "(", "err", ".", "setjmp_buffer", ")", ")", "{", "/", "/", "If", "we", "get", "here", ",", "the", "JPEG", "code", "has", "signaled", "an", "error", ".", "/", "/", "We", "need", "to", "clean", "up", "the", "JPEG", "object", ",", "close", "the", "input", "file", ",", "and", "return", ".", "jpeg_destroy_decompress", "(", "&", "args", ")", ";", "return", "CAIRO_STATUS_READ_ERROR", ";", "}", "struct", "canvas_jpeg_error_mgr", "err", ";", "args", ".", "err", "-", ">", "error_exit", "=", "canvas_jpeg_error_exit", ";", "/", "/", "Establish", "the", "setjmp", "return", "context", "for", "canvas_jpeg_error_exit", "to", "use", "if", "(", "setjmp", "(", "err", ".", "setjmp_buffer", ")", ")", "{", "/", "/", "If", "we", "get", "here", ",", "the", "JPEG", "code", "has", "signaled", "an", "error", ".", "/", "/", "We", "need", "to", "clean", "up", "the", "JPEG", "object", ",", "close", "the", "input", "file", ",", "and", "return", ".", "jpeg_destroy_decompress", "(", "&", "args", ")", ";", "return", "CAIRO_STATUS_READ_ERROR", ";", "}", "struct", "canvas_jpeg_error_mgr", "err", ";", "args", ".", "err", "-", ">", "error_exit", "=", "canvas_jpeg_error_exit", ";", "/", "/", "Establish", "the", "setjmp", "return", "context", "for", "canvas_jpeg_error_exit", "to", "use", "if", "(", "setjmp", "(", "err", ".", "setjmp_buffer", ")", ")", "{", "/", "/", "If", "we", "get", "here", ",", "the", "JPEG", "code", "has", "signaled", "an", "error", ".", "/", "/", "We", "need", "to", "clean", "up", "the", "JPEG", "object", ",", "close", "the", "input", "file", ",", "and", "return", ".", "jpeg_destroy_decompress", "(", "&", "args", ")", ";", "return", "CAIRO_STATUS_READ_ERROR", ";", "}", ",", "assert", "=", "require", "(", "'", "assert", "'", ")", ",", "fs", "=", "require", "(", "'", "fs", "'", ");", "var", "jpg_chrome", "=", "__dirname", "+", "'", "/", "fixtures", "/", "chrome", ".", "jpg", "'", "it", "(", "'", "does", "not", "crash", "on", "invalid", "images", "'", ",", "function", "(", ")", "{", "function", "tryImage", "(", "src", ")", "{", "var", "img", "=", "new", "Image", "(", ")", "img", ".", "src", "=", "src", "/", "/", "if", "we", "came", "this", "far", "we", "didn", "'", "t", "crash", "!", "}", "function", "withIncreasedByte", "(", "source", ",", "index", ")", "{", "var", "copy", "=", "source", ".", "slice", "(", "0", ")", "copy", "[", "index", "]", "+", "=", "1", "return", "copy", "}", "var", "source", "=", "fs", ".", "readFileSync", "(", "jpg_chrome", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "0", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1060", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1061", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1062", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1063", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1064", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1065", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1066", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1067", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1068", ")", ")", "tryImage", "(", "withIncreasedByte", "(", "source", ",", "1069", ")", ")", "}", ")", "}", ")</s>struct", "jpeg_error_mgr", "err", ";", "struct", "jpeg_error_mgr", "err", ";", "struct", "jpeg_error_mgr", "err", ";", ",", "assert", "=", "require", "(", "'", "assert", "'", ");", "}", ");"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["std", ":", ":", "string", "switch_name", "=", "base", ":", ":", "ToLowerASCII", "(", "base", ":", ":", "StringPiece", "(", "a", ",", "strcspn", "(", "a", ",", "\"", "=\"", "))", ");</s>std", ":", ":", "string", "switch_name", "(", "a", ",", "strcspn", "(", "a", ",", "\"", "=\"", "))", ";"], "docstring_tokens": ["command", "injection"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "isdn", "prepends", "a", "header", "in", "the", "tx", "path", ",", "can", "'", "t", "share", "skbs", "*", "/", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "else", "{", "bond_dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "}", "bond_dev", "-", ">", "priv_flags", "&", "=", "~", "(", "IFF_XMIT_DST_RELEASE", "|", "IFF_TX_SKB_SHARING", ")", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "(", "IFF_XMIT_DST_RELEASE", "|", "IFF_TX_SKB_SHARING", ")", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "(", "IFF_XMIT_DST_RELEASE", "|", "IFF_TX_SKB_SHARING", ")", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "if", "(", "type", "=", "=", "ARPHRD_ETHER", ")", "{", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "}", "else", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "(", "IFF_XMIT_DST_RELEASE", "|", "IFF_TX_SKB_SHARING", ")", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_TX_SKB_SHARING", ";</s>else", "bond_dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_XMIT_DST_RELEASE", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_XMIT_DST_RELEASE", ";", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_XMIT_DST_RELEASE", ";", "if", "(", "type", "=", "=", "ARPHRD_ETHER", ")", "else", "dev", "-", ">", "priv_flags", "&", "=", "~", "IFF_XMIT_DST_RELEASE", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "i_mmap_sem", "is", "for", "serializing", "page", "faults", "with", "truncate", "/", "punch", "hole", "*", "operations", ".", "We", "have", "to", "make", "sure", "that", "new", "page", "cannot", "be", "faulted", "in", "*", "a", "section", "of", "the", "inode", "that", "is", "being", "punched", ".", "We", "cannot", "easily", "use", "*", "i_data_sem", "for", "this", "since", "we", "need", "protection", "for", "the", "whole", "punch", "*", "operation", "and", "i_data_sem", "ranks", "below", "transaction", "start", "so", "we", "have", "*", "to", "occasionally", "drop", "it", ".", "*", "/", "struct", "rw_semaphore", "i_mmap_sem", ";", "extern", "int", "ext4_filemap_fault", "(", "struct", "vm_area_struct", "*", "vma", ",", "struct", "vm_fault", "*", "vmf", ")", ";", "/", "*", "*", "Prevent", "page", "faults", "from", "reinstantiating", "pages", "we", "have", "*", "released", "from", "page", "cache", ".", "*", "/", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "/", "*", "Now", "release", "the", "pages", "and", "zero", "block", "aligned", "part", "of", "pages", "*", "/", "truncate_pagecache_range", "(", "inode", ",", "start", ",", "end", "-", "1", ")", ";", "inode", "-", ">", "i_mtime", "=", "inode", "-", ">", "i_ctime", "=", "ext4_current_time", "(", "inode", ")", ";", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "/", "*", "*", "Prevent", "page", "faults", "from", "reinstantiating", "pages", "we", "have", "released", "from", "*", "page", "cache", ".", "*", "/", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "truncate_pagecache", "(", "inode", ",", "ioffset", ")", ";", "goto", "out_mmap", ";", "out_mmap", ":", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "/", "*", "*", "Prevent", "page", "faults", "from", "reinstantiating", "pages", "we", "have", "released", "from", "*", "page", "cache", ".", "*", "/", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "truncate_pagecache", "(", "inode", ",", "ioffset", ")", ";", "goto", "out_mmap", ";", "out_mmap", ":", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "struct", "inode", "*", "inode", "=", "file_inode", "(", "vma", "-", ">", "vm_file", ")", ";", "struct", "super_block", "*", "sb", "=", "inode", "-", ">", "i_sb", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "}", "else", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "}", "else", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "}", "else", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "}", "else", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "int", "err", ";", "struct", "inode", "*", "inode", "=", "file_inode", "(", "vma", "-", ">", "vm_file", ")", ";", "sb_start_pagefault", "(", "inode", "-", ">", "i_sb", ")", ";", "file_update_time", "(", "vma", "-", ">", "vm_file", ")", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "err", "=", "__dax_mkwrite", "(", "vma", ",", "vmf", ",", "ext4_get_block_dax", ",", "ext4_end_io_unwritten", ")", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "sb_end_pagefault", "(", "inode", "-", ">", "i_sb", ")", ";", "return", "err", ";", "}", "/", "*", "*", "Handle", "write", "fault", "for", "VM_MIXEDMAP", "mappings", ".", "Similarly", "to", "ext4_dax_mkwrite", "(", ")", "*", "handler", "we", "check", "for", "races", "agaist", "truncate", ".", "Note", "that", "since", "we", "cycle", "through", "*", "i_mmap_sem", ",", "we", "are", "sure", "that", "also", "any", "hole", "punching", "that", "began", "before", "we", "*", "were", "called", "is", "finished", "by", "now", "and", "so", "if", "it", "included", "part", "of", "the", "file", "we", "*", "are", "working", "on", ",", "our", "pte", "will", "get", "unmapped", "and", "the", "check", "for", "pte_same", "(", ")", "in", "*", "wp_pfn_shared", "(", ")", "fails", ".", "Thus", "fault", "gets", "retried", "and", "things", "work", "out", "as", "*", "desired", ".", "*", "/", "static", "int", "ext4_dax_pfn_mkwrite", "(", "struct", "vm_area_struct", "*", "vma", ",", "struct", "vm_fault", "*", "vmf", ")", "{", "struct", "inode", "*", "inode", "=", "file_inode", "(", "vma", "-", ">", "vm_file", ")", ";", "struct", "super_block", "*", "sb", "=", "inode", "-", ">", "i_sb", ";", "int", "ret", "=", "VM_FAULT_NOPAGE", ";", "loff_t", "size", ";", "sb_start_pagefault", "(", "sb", ")", ";", "file_update_time", "(", "vma", "-", ">", "vm_file", ")", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "size", "=", "(", "i_size_read", "(", "inode", ")", "+", "PAGE_SIZE", "-", "1", ")", ">", ">", "PAGE_SHIFT", ";", "if", "(", "vmf", "-", ">", "pgoff", ">", "=", "size", ")", "ret", "=", "VM_FAULT_SIGBUS", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "sb_end_pagefault", "(", "sb", ")", ";", "return", "ret", ";", ".", "pfn_mkwrite", "=", "ext4_dax_pfn_mkwrite", ",", ".", "fault", "=", "ext4_filemap_fault", ",", "/", "*", "Wait", "all", "existing", "dio", "workers", ",", "newcomers", "will", "block", "on", "i_mutex", "*", "/", "ext4_inode_block_unlocked_dio", "(", "inode", ")", ";", "inode_dio_wait", "(", "inode", ")", ";", "/", "*", "*", "Prevent", "page", "faults", "from", "reinstantiating", "pages", "we", "have", "released", "from", "*", "page", "cache", ".", "*", "/", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "int", "ext4_filemap_fault", "(", "struct", "vm_area_struct", "*", "vma", ",", "struct", "vm_fault", "*", "vmf", ")", "{", "struct", "inode", "*", "inode", "=", "file_inode", "(", "vma", "-", ">", "vm_file", ")", ";", "int", "err", ";", "down_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "err", "=", "filemap_fault", "(", "vma", ",", "vmf", ")", ";", "up_read", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "return", "err", ";", "}", "@", "@", "-", "958", ",", "6", "+", "958", ",", "7", "@", "@", "static", "void", "init_once", "(", "void", "*", "foo", ")", "init_rwsem", "(", "&", "ei", "-", ">", "i_mmap_sem", ")", ";", "down_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";", "up_write", "(", "&", "EXT4_I", "(", "inode", ")", "->", "i_mmap_sem", ")", ";</s>struct", "address_space", "*", "mapping", "=", "inode", "-", ">", "i_mapping", ";", "/", "*", "*", "Write", "out", "all", "dirty", "pages", "to", "avoid", "race", "conditions", "*", "Then", "release", "them", ".", "*", "/", "if", "(", "mapping", "-", ">", "nrpages", "&", "&", "mapping_tagged", "(", "mapping", ",", "PAGECACHE_TAG_DIRTY", ")", ")", "{", "ret", "=", "filemap_write_and_wait_range", "(", "mapping", ",", "offset", ",", "offset", "+", "len", "-", "1", ")", ";", "if", "(", "ret", ")", "return", "ret", ";", "}", "/", "*", "Now", "release", "the", "pages", "and", "zero", "block", "aligned", "part", "of", "pages", "*", "/", "truncate_pagecache_range", "(", "inode", ",", "start", ",", "end", "-", "1", ")", ";", "inode", "-", ">", "i_mtime", "=", "inode", "-", ">", "i_ctime", "=", "ext4_current_time", "(", "inode", ")", ";", "truncate_pagecache", "(", "inode", ",", "ioffset", ")", ";", "goto", "out_dio", ";", "out_dio", ":", "truncate_pagecache", "(", "inode", ",", "ioffset", ")", ";", "goto", "out_dio", ";", "out_dio", ":", "struct", "super_block", "*", "sb", "=", "file_inode", "(", "vma", "-", ">", "vm_file", ")", "->", "i_sb", ";", "}", "}", "}", "}", "return", "dax_mkwrite", "(", "vma", ",", "vmf", ",", "ext4_get_block_dax", ",", "ext4_end_io_unwritten", ")", ";", ".", "pfn_mkwrite", "=", "dax_pfn_mkwrite", ",", ".", "fault", "=", "filemap_fault", ",", "/", "*", "Wait", "all", "existing", "dio", "workers", ",", "newcomers", "will", "block", "on", "i_mutex", "*", "/", "ext4_inode_block_unlocked_dio", "(", "inode", ")", ";", "inode_dio_wait", "(", "inode", ")", ";", "/", "*", "Now", "release", "the", "pages", "again", "to", "reduce", "race", "window", "*", "/", "if", "(", "last_block_offset", ">", "first_block_offset", ")", "truncate_pagecache_range", "(", "inode", ",", "first_block_offset", ",", "last_block_offset", ")", ";"], "docstring_tokens": ["race", "conditions"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "spark", ".", "launcher", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "io", ".", "ObjectStreamClass", ";", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "List", ";", "/", "**", "*", "An", "object", "input", "stream", "that", "only", "allows", "classes", "used", "by", "the", "launcher", "protocol", "to", "be", "in", "the", "*", "serialized", "stream", ".", "See", "SPARK", "-", "20922", ".", "*", "/", "class", "FilteredObjectInputStream", "extends", "ObjectInputStream", "{", "private", "static", "final", "List", "<", "String", ">", "ALLOWED_PACKAGES", "=", "Arrays", ".", "asList", "(", "\"", "org", ".", "apache", ".", "spark", ".", "launcher", ".", "\",", "\"", "java", ".", "lang", ".", "\")", ";", "FilteredObjectInputStream", "(", "InputStream", "is", ")", "throws", "IOException", "{", "super", "(", "is", ")", ";", "}", "@", "Override", "protected", "Class", "<", "?>", "resolveClass", "(", "ObjectStreamClass", "desc", ")", "throws", "IOException", ",", "ClassNotFoundException", "{", "boolean", "isValid", "=", "ALLOWED_PACKAGES", ".", "stream", "(", ").", "anyMatch", "(", "p", "-", ">", "desc", ".", "getName", "(", ").", "startsWith", "(", "p", ")", ");", "if", "(", "!", "isValid", ")", "{", "throw", "new", "IllegalArgumentException", "(", "String", ".", "format", "(", "\"", "Unexpected", "class", "in", "stream", ":", "%", "s", "\"", ",", "desc", ".", "getName", "(", "))", ");", "}", "return", "super", ".", "resolveClass", "(", "desc", ")", ";", "}", "}", "@", "@", "-", "20", ",", "7", "+", "20", ",", "6", "@", "@", "FilteredObjectInputStream", "in", "=", "new", "FilteredObjectInputStream", "(", "socket", ".", "getInputStream", "(", "))", ";", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "List", ";", "waitForError", "(", "client", ",", "handle", ".", "getSecret", "(", "))", ";", "@", "Test", "public", "void", "testStreamFiltering", "(", ")", "throws", "Exception", "{", "ChildProcAppHandle", "handle", "=", "LauncherServer", ".", "newAppHandle", "(", ");", "TestClient", "client", "=", "null", ";", "try", "{", "Socket", "s", "=", "new", "Socket", "(", "InetAddress", ".", "getLoopbackAddress", "(", "),", "LauncherServer", ".", "getServerInstance", "(", ").", "getPort", "(", "))", ";", "client", "=", "new", "TestClient", "(", "s", ")", ";", "client", ".", "send", "(", "new", "EvilPayload", "(", "))", ";", "waitForError", "(", "client", ",", "handle", ".", "getSecret", "(", "))", ";", "assertEquals", "(", "0", ",", "EvilPayload", ".", "EVIL_BIT", ")", ";", "}", "finally", "{", "kill", "(", "handle", ")", ";", "close", "(", "client", ")", ";", "client", ".", "clientThread", ".", "join", "(", ");", "}", "}", "/", "**", "*", "Try", "a", "few", "times", "to", "get", "a", "client", "-", "side", "error", ",", "since", "the", "client", "-", "side", "socket", "may", "not", "reflect", "the", "*", "server", "-", "side", "close", "immediately", ".", "*", "/", "private", "void", "waitForError", "(", "TestClient", "client", ",", "String", "secret", ")", "throws", "Exception", "{", "boolean", "helloSent", "=", "false", ";", "int", "maxTries", "=", "10", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "maxTries", ";", "i", "+", "+)", "{", "try", "{", "if", "(", "!", "helloSent", ")", "{", "client", ".", "send", "(", "new", "Hello", "(", "secret", ",", "\"", "1", ".", "4", ".", "0", "\"", "))", ";", "helloSent", "=", "true", ";", "}", "else", "{", "client", ".", "send", "(", "new", "SetAppId", "(", "\"", "appId", "\"", "))", ";", "}", "fail", "(", "\"", "Expected", "error", "but", "message", "went", "through", ".", "\")", ";", "}", "catch", "(", "IllegalStateException", "|", "IOException", "e", ")", "{", "/", "/", "Expected", ".", "break", ";", "}", "catch", "(", "AssertionError", "e", ")", "{", "if", "(", "i", "<", "maxTries", "-", "1", ")", "{", "Thread", ".", "sleep", "(", "100", ")", ";", "}", "else", "{", "throw", "new", "AssertionError", "(", "\"", "Test", "failed", "after", "\"", "+", "maxTries", "+", "\"", "attempts", ".", "\",", "e", ")", ";", "}", "}", "}", "}", "private", "static", "class", "EvilPayload", "extends", "LauncherProtocol", ".", "Message", "{", "static", "int", "EVIL_BIT", "=", "0", ";", "/", "/", "This", "field", "should", "cause", "the", "launcher", "server", "to", "throw", "an", "error", "and", "not", "deserialize", "the", "/", "/", "message", ".", "private", "List", "<", "String", ">", "notAllowedField", "=", "Arrays", ".", "asList", "(", "\"", "disallowed", "\"", ");", "private", "void", "readObject", "(", "ObjectInputStream", "stream", ")", "throws", "IOException", ",", "ClassNotFoundException", "{", "stream", ".", "defaultReadObject", "(", ");", "EVIL_BIT", "=", "1", ";", "}", "}</s>import", "java", ".", "io", ".", "ObjectInputStream", ";", "ObjectInputStream", "in", "=", "new", "ObjectInputStream", "(", "socket", ".", "getInputStream", "(", "))", ";", "/", "/", "Try", "a", "few", "times", "since", "the", "client", "-", "side", "socket", "may", "not", "reflect", "the", "server", "-", "side", "close", "/", "/", "immediately", ".", "boolean", "helloSent", "=", "false", ";", "int", "maxTries", "=", "10", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "maxTries", ";", "i", "+", "+)", "{", "try", "{", "if", "(", "!", "helloSent", ")", "{", "client", ".", "send", "(", "new", "Hello", "(", "handle", ".", "getSecret", "(", "),", "\"", "1", ".", "4", ".", "0", "\"", "))", ";", "helloSent", "=", "true", ";", "}", "else", "{", "client", ".", "send", "(", "new", "SetAppId", "(", "\"", "appId", "\"", "))", ";", "}", "fail", "(", "\"", "Expected", "exception", "caused", "by", "connection", "timeout", ".", "\")", ";", "}", "catch", "(", "IllegalStateException", "|", "IOException", "e", ")", "{", "/", "/", "Expected", ".", "break", ";", "}", "catch", "(", "AssertionError", "e", ")", "{", "if", "(", "i", "<", "maxTries", "-", "1", ")", "{", "Thread", ".", "sleep", "(", "100", ")", ";", "}", "else", "{", "throw", "new", "AssertionError", "(", "\"", "Test", "failed", "after", "\"", "+", "maxTries", "+", "\"", "attempts", ".", "\",", "e", ")", ";", "}", "}", "}"], "docstring_tokens": ["arbitrary", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["Utils", ".", "unpack", "(", "new", "File", "(", "downloadFile", ")", ",", "new", "File", "(", "localFileWithVersion", ")", ",", "(", "boolean", ")", "OR", "(", "_conf", ".", "get", "(", "Config", ".", "DISABLE_SYMLINKS", ")", ",", "false", ")", ");", "public", "static", "void", "unJar", "(", "File", "jarFile", ",", "File", "toDir", ")", "throws", "IOException", "{", "try", "(", "JarFile", "jar", "=", "new", "JarFile", "(", "jarFile", ")", ")", "{", "extractZipFile", "(", "jar", ",", "toDir", ",", "null", ")", ";", "*", "@", "param", "symlinksDisabled", "true", "if", "symlinks", "should", "be", "disabled", ",", "else", "false", ".", "public", "static", "void", "unTar", "(", "File", "inFile", ",", "File", "untarDir", ",", "boolean", "symlinksDisabled", ")", "throws", "IOException", "{", "ensureDirectory", "(", "untarDir", ")", ";", "if", "(", "Utils", ".", "isOnWindows", "(", ")", "|", "|", "symlinksDisabled", ")", "{", "unTarUsingJava", "(", "inFile", ",", "untarDir", ",", "gzipped", ",", "symlinksDisabled", ")", ";", "boolean", "gzipped", ",", "boolean", "symlinksDisabled", ")", "throws", "IOException", "{", "final", "String", "base", "=", "untarDir", ".", "getCanonicalPath", "(", ");", "LOG", ".", "trace", "(", "\"", "java", "untar", "{", "}", "to", "{", "}\"", ",", "inFile", ",", "base", ")", ";", "unpackEntries", "(", "tis", ",", "entry", ",", "untarDir", ",", "base", ",", "symlinksDisabled", ")", ";", "TarArchiveEntry", "entry", ",", "File", "outputDir", ",", "final", "String", "base", ",", "boolean", "symlinksDisabled", ")", "throws", "IOException", "{", "File", "target", "=", "new", "File", "(", "outputDir", ",", "entry", ".", "getName", "(", "))", ";", "String", "found", "=", "target", ".", "getCanonicalPath", "(", ");", "if", "(", "!", "found", ".", "startsWith", "(", "base", ")", ")", "{", "LOG", ".", "error", "(", "\"", "Invalid", "location", "{", "}", "is", "outside", "of", "{", "}\"", ",", "found", ",", "base", ")", ";", "return", ";", "}", "LOG", ".", "trace", "(", "\"", "Extracting", "dir", "{", "}\"", ",", "target", ")", ";", "ensureDirectory", "(", "target", ")", ";", "unpackEntries", "(", "tis", ",", "e", ",", "target", ",", "base", ",", "symlinksDisabled", ")", ";", "}", "else", "if", "(", "entry", ".", "isSymbolicLink", "(", "))", "{", "if", "(", "symlinksDisabled", ")", "{", "LOG", ".", "info", "(", "\"", "Symlinks", "disabled", "skipping", "{", "}\"", ",", "target", ")", ";", "}", "else", "{", "Path", "src", "=", "target", ".", "toPath", "(", ");", "Path", "dest", "=", "Paths", ".", "get", "(", "entry", ".", "getLinkName", "(", "))", ";", "LOG", ".", "trace", "(", "\"", "Extracting", "sym", "link", "{", "}", "to", "{", "}\"", ",", "target", ",", "dest", ")", ";", "/", "/", "Create", "symbolic", "link", "relative", "to", "tar", "parent", "dir", "Files", ".", "createSymbolicLink", "(", "src", ",", "dest", ")", ";", "}", "}", "else", "if", "(", "entry", ".", "isFile", "(", "))", "{", "LOG", ".", "trace", "(", "\"", "Extracting", "file", "{", "}\"", ",", "target", ")", ";", "ensureDirectory", "(", "target", ".", "getParentFile", "(", "))", ";", "try", "(", "BufferedOutputStream", "outputStream", "=", "new", "BufferedOutputStream", "(", "new", "FileOutputStream", "(", "target", ")", "))", "{", "IOUtils", ".", "copy", "(", "tis", ",", "outputStream", ")", ";", "}", "}", "else", "{", "LOG", ".", "error", "(", "\"{", "}", "is", "not", "a", "currently", "supported", "tar", "entry", "type", ".", "\",", "entry", ")", ";", "Path", "p", "=", "target", ".", "toPath", "(", ");", "if", "(", "Files", ".", "exists", "(", "p", ")", ")", "{", "try", "{", "/", "/", "We", "created", "it", "so", "lets", "chmod", "it", "properly", "int", "mode", "=", "entry", ".", "getMode", "(", ");", "Files", ".", "setPosixFilePermissions", "(", "p", ",", "parsePerms", "(", "mode", ")", ");", "}", "catch", "(", "UnsupportedOperationException", "e", ")", "{", "/", "/", "Ignored", "the", "file", "system", "we", "are", "on", "does", "not", "support", "this", ",", "so", "don", "'", "t", "do", "it", ".", "}", "private", "static", "Set", "<", "PosixFilePermission", ">", "parsePerms", "(", "int", "mode", ")", "{", "Set", "<", "PosixFilePermission", ">", "ret", "=", "new", "HashSet", "<", ">(", ");", "if", "(", "(", "mode", "&", "0001", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OTHERS_EXECUTE", ")", ";", "}", "if", "(", "(", "mode", "&", "0002", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OTHERS_WRITE", ")", ";", "}", "if", "(", "(", "mode", "&", "0004", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OTHERS_READ", ")", ";", "}", "if", "(", "(", "mode", "&", "0010", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "GROUP_EXECUTE", ")", ";", "if", "(", "(", "mode", "&", "0020", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "GROUP_WRITE", ")", ";", "}", "if", "(", "(", "mode", "&", "0040", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "GROUP_READ", ")", ";", "}", "if", "(", "(", "mode", "&", "0100", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OWNER_EXECUTE", ")", ";", "}", "if", "(", "(", "mode", "&", "0200", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OWNER_WRITE", ")", ";", "}", "if", "(", "(", "mode", "&", "0400", ")", ">", "0", ")", "{", "ret", ".", "add", "(", "PosixFilePermission", ".", "OWNER_READ", ")", ";", "}", "return", "ret", ";", "public", "static", "void", "unpack", "(", "File", "localrsrc", ",", "File", "dst", ",", "boolean", "symLinksDisabled", ")", "throws", "IOException", "{", "if", "(", "lowerDst", ".", "endsWith", "(", "\".", "jar", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\"", "_jar", "\"", "))", "{", "}", "else", "if", "(", "lowerDst", ".", "endsWith", "(", "\".", "zip", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\"", "_zip", "\"", "))", "{", "lowerDst", ".", "endsWith", "(", "\"", "_tar_gz", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\".", "tgz", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\"", "_tgz", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\".", "tar", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\"", "_tar", "\"", "))", "{", "unTar", "(", "localrsrc", ",", "dst", ",", "symLinksDisabled", ")", ";", "private", "static", "void", "extractZipFile", "(", "ZipFile", "zipFile", ",", "File", "toDir", ",", "String", "prefix", ")", "throws", "IOException", "{", "ensureDirectory", "(", "toDir", ")", ";", "final", "String", "base", "=", "toDir", ".", "getCanonicalPath", "(", ");", "Enumeration", "<", "?", "extends", "ZipEntry", ">", "entries", "=", "zipFile", ".", "entries", "(", ");", "while", "(", "entries", ".", "hasMoreElements", "(", "))", "{", "ZipEntry", "entry", "=", "entries", ".", "nextElement", "(", ");", "if", "(", "!", "entry", ".", "isDirectory", "(", "))", "{", "if", "(", "prefix", "!", "=", "null", "&", "&", "!", "entry", ".", "getName", "(", ").", "startsWith", "(", "prefix", ")", ")", "{", "/", "/", "No", "need", "to", "extract", "it", ",", "it", "is", "not", "what", "we", "are", "looking", "for", ".", "continue", ";", "}", "File", "file", "=", "new", "File", "(", "toDir", ",", "entry", ".", "getName", "(", "))", ";", "String", "found", "=", "file", ".", "getCanonicalPath", "(", ");", "if", "(", "!", "found", ".", "startsWith", "(", "base", ")", ")", "{", "LOG", ".", "error", "(", "\"", "Invalid", "location", "{", "}", "is", "outside", "of", "{", "}\"", ",", "found", ",", "base", ")", ";", "continue", ";", "}", "try", "(", "InputStream", "in", "=", "zipFile", ".", "getInputStream", "(", "entry", ")", ")", "{", "ensureDirectory", "(", "file", ".", "getParentFile", "(", "))", ";", "try", "(", "OutputStream", "out", "=", "new", "FileOutputStream", "(", "file", ")", ")", "{", "IOUtils", ".", "copy", "(", "in", ",", "out", ")", ";", "}", "}", "}", "}", "}", "*", "@", "param", "toDir", "The", "unzip", "directory", "where", "to", "unzip", "the", "zip", "file", ".", "public", "static", "void", "unZip", "(", "File", "inFile", ",", "File", "toDir", ")", "throws", "IOException", "{", "try", "(", "ZipFile", "zipFile", "=", "new", "ZipFile", "(", "inFile", ")", ")", "{", "extractZipFile", "(", "zipFile", ",", "toDir", ",", "null", ")", ";", "}", "extractZipFile", "(", "jarFile", ",", "destdir", ",", "dir", ")", ";</s>Utils", ".", "unpack", "(", "new", "File", "(", "downloadFile", ")", ",", "new", "File", "(", "localFileWithVersion", ")", ");", "public", "static", "void", "unJar", "(", "File", "jarFile", ",", "File", "toDir", ")", "throws", "IOException", "{", "JarFile", "jar", "=", "new", "JarFile", "(", "jarFile", ")", ";", "try", "{", "Enumeration", "<", "JarEntry", ">", "entries", "=", "jar", ".", "entries", "(", ");", "while", "(", "entries", ".", "hasMoreElements", "(", "))", "{", "final", "JarEntry", "entry", "=", "entries", ".", "nextElement", "(", ");", "if", "(", "!", "entry", ".", "isDirectory", "(", "))", "{", "InputStream", "in", "=", "jar", ".", "getInputStream", "(", "entry", ")", ";", "try", "{", "File", "file", "=", "new", "File", "(", "toDir", ",", "entry", ".", "getName", "(", "))", ";", "ensureDirectory", "(", "file", ".", "getParentFile", "(", "))", ";", "OutputStream", "out", "=", "new", "FileOutputStream", "(", "file", ")", ";", "try", "{", "copyBytes", "(", "in", ",", "out", ",", "8192", ")", ";", "}", "finally", "{", "out", ".", "close", "(", ");", "}", "}", "finally", "{", "in", ".", "close", "(", ");", "}", "}", "}", "}", "finally", "{", "jar", ".", "close", "(", ");", "}", "}", "/", "**", "*", "Copies", "from", "one", "stream", "to", "another", ".", "*", "*", "@", "param", "in", "InputStream", "to", "read", "from", "*", "@", "param", "out", "OutputStream", "to", "write", "to", "*", "@", "param", "buffSize", "the", "size", "of", "the", "buffer", "*", "/", "public", "static", "void", "copyBytes", "(", "InputStream", "in", ",", "OutputStream", "out", ",", "int", "buffSize", ")", "throws", "IOException", "{", "PrintStream", "ps", "=", "out", "instanceof", "PrintStream", "?", "(", "PrintStream", ")", "out", ":", "null", ";", "byte", "buf", "[", "]", "=", "new", "byte", "[", "buffSize", "]", ";", "int", "bytesRead", "=", "in", ".", "read", "(", "buf", ")", ";", "while", "(", "bytesRead", ">", "=", "0", ")", "{", "out", ".", "write", "(", "buf", ",", "0", ",", "bytesRead", ")", ";", "if", "(", "(", "ps", "!", "=", "null", ")", "&", "&", "ps", ".", "checkError", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "Unable", "to", "write", "to", "output", "stream", ".", "\")", ";", "}", "bytesRead", "=", "in", ".", "read", "(", "buf", ")", ";", "public", "static", "void", "unTar", "(", "File", "inFile", ",", "File", "untarDir", ")", "throws", "IOException", "{", "if", "(", "!", "untarDir", ".", "mkdirs", "(", "))", "{", "if", "(", "!", "untarDir", ".", "isDirectory", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "Mkdirs", "failed", "to", "create", "\"", "+", "untarDir", ")", ";", "}", "}", "if", "(", "isOnWindows", "(", "))", "{", "unTarUsingJava", "(", "inFile", ",", "untarDir", ",", "gzipped", ")", ";", "boolean", "gzipped", ")", "throws", "IOException", "{", "unpackEntries", "(", "tis", ",", "entry", ",", "untarDir", ")", ";", "TarArchiveEntry", "entry", ",", "File", "outputDir", ")", "throws", "IOException", "{", "File", "subDir", "=", "new", "File", "(", "outputDir", ",", "entry", ".", "getName", "(", "))", ";", "if", "(", "!", "subDir", ".", "mkdirs", "(", ")", "&", "&", "!", "subDir", ".", "isDirectory", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "Mkdirs", "failed", "to", "create", "tar", "internal", "dir", "\"", "+", "outputDir", ")", ";", "}", "unpackEntries", "(", "tis", ",", "e", ",", "subDir", ")", ";", "return", ";", "File", "outputFile", "=", "new", "File", "(", "outputDir", ",", "entry", ".", "getName", "(", "))", ";", "if", "(", "!", "outputFile", ".", "getParentFile", "(", ").", "exists", "(", "))", "{", "if", "(", "!", "outputFile", ".", "getParentFile", "(", ").", "mkdirs", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "Mkdirs", "failed", "to", "create", "tar", "internal", "dir", "\"", "+", "outputDir", ")", ";", "int", "count", ";", "byte", "data", "[", "]", "=", "new", "byte", "[", "2048", "]", ";", "BufferedOutputStream", "outputStream", "=", "new", "BufferedOutputStream", "(", "new", "FileOutputStream", "(", "outputFile", ")", ");", "while", "(", "(", "count", "=", "tis", ".", "read", "(", "data", ")", ")", "!", "=", "-", "1", ")", "{", "outputStream", ".", "write", "(", "data", ",", "0", ",", "count", ")", ";", "outputStream", ".", "flush", "(", ");", "outputStream", ".", "close", "(", ");", "public", "static", "void", "unpack", "(", "File", "localrsrc", ",", "File", "dst", ")", "throws", "IOException", "{", "if", "(", "lowerDst", ".", "endsWith", "(", "\".", "jar", "\"", "))", "{", "}", "else", "if", "(", "lowerDst", ".", "endsWith", "(", "\".", "zip", "\"", "))", "{", "lowerDst", ".", "endsWith", "(", "\".", "tgz", "\"", ")", "|", "|", "lowerDst", ".", "endsWith", "(", "\".", "tar", "\"", "))", "{", "unTar", "(", "localrsrc", ",", "dst", ")", ";", "*", "@", "param", "unzipDir", "The", "unzip", "directory", "where", "to", "unzip", "the", "zip", "file", ".", "public", "static", "void", "unZip", "(", "File", "inFile", ",", "File", "unzipDir", ")", "throws", "IOException", "{", "Enumeration", "<", "?", "extends", "ZipEntry", ">", "entries", ";", "ZipFile", "zipFile", "=", "new", "ZipFile", "(", "inFile", ")", ";", "try", "{", "entries", "=", "zipFile", ".", "entries", "(", ");", "while", "(", "entries", ".", "hasMoreElements", "(", "))", "{", "ZipEntry", "entry", "=", "entries", ".", "nextElement", "(", ");", "if", "(", "!", "entry", ".", "isDirectory", "(", "))", "{", "InputStream", "in", "=", "zipFile", ".", "getInputStream", "(", "entry", ")", ";", "try", "{", "File", "file", "=", "new", "File", "(", "unzipDir", ",", "entry", ".", "getName", "(", "))", ";", "if", "(", "!", "file", ".", "getParentFile", "(", ").", "mkdirs", "(", "))", "{", "if", "(", "!", "file", ".", "getParentFile", "(", ").", "isDirectory", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "Mkdirs", "failed", "to", "create", "\"", "+", "file", ".", "getParentFile", "(", ").", "toString", "(", "))", ";", "}", "}", "OutputStream", "out", "=", "new", "FileOutputStream", "(", "file", ")", ";", "try", "{", "byte", "[", "]", "buffer", "=", "new", "byte", "[", "8192", "]", ";", "int", "i", ";", "while", "(", "(", "i", "=", "in", ".", "read", "(", "buffer", ")", ")", "!", "=", "-", "1", ")", "{", "out", ".", "write", "(", "buffer", ",", "0", ",", "i", ")", ";", "}", "}", "finally", "{", "out", ".", "close", "(", ");", "}", "}", "finally", "{", "in", ".", "close", "(", ");", "}", "}", "}", "}", "finally", "{", "zipFile", ".", "close", "(", ");", "}", "Enumeration", "<", "JarEntry", ">", "jarEnums", "=", "jarFile", ".", "entries", "(", ");", "while", "(", "jarEnums", ".", "hasMoreElements", "(", "))", "{", "JarEntry", "entry", "=", "jarEnums", ".", "nextElement", "(", ");", "if", "(", "!", "entry", ".", "isDirectory", "(", ")", "&", "&", "entry", ".", "getName", "(", ").", "startsWith", "(", "dir", ")", ")", "{", "File", "aFile", "=", "new", "File", "(", "destdir", ",", "entry", ".", "getName", "(", "))", ";", "aFile", ".", "getParentFile", "(", ").", "mkdirs", "(", ");", "try", "(", "FileOutputStream", "out", "=", "new", "FileOutputStream", "(", "aFile", ")", ";", "InputStream", "in", "=", "jarFile", ".", "getInputStream", "(", "entry", ")", ")", "{", "IOUtils", ".", "copy", "(", "in", ",", "out", ")", ";", "}", "}", "}"], "docstring_tokens": ["arbitrary", "file", "write"]}
{"contents": ["empty"], "code_tokens": [".", "Fixed", "bug", "#", "54061", "(", "Memory", "leaks", "when", "openssl_decrypt", ")", ".", "(", "Pierre", ")", "EVP_CIPHER_CTX_cleanup", "(", "&", "cipher_ctx", ")", ";</s>-", "Exif", "extension", ":", "-", "OpenSSL", "extension", ":", "-", "SPL", "extension", ":"], "docstring_tokens": ["memory", "leaks"]}
{"contents": ["empty"], "code_tokens": ["/", "**", "*", "Jenkins", "historically", "created", "a", "(", "usually", ")", "ephemeral", "user", "record", "when", "an", "user", "with", "Overall", "/", "Administer", "permission", "*", "accesses", "a", "/", "user", "/", "arbitraryName", "URL", ".", "*", "<", "p", ">", "*", "Unfortunately", "this", "constitutes", "a", "CSRF", "vulnerability", ",", "as", "malicious", "users", "can", "make", "admins", "create", "arbitrary", "numbers", "*", "of", "ephemeral", "user", "records", ",", "so", "the", "behavior", "was", "changed", "in", "Jenkins", "2", ".", "TODO", "/", "2", ".", "32", ".", "2", ".", "*", "<", "p", ">", "*", "As", "some", "users", "may", "be", "relying", "on", "the", "previous", "behavior", ",", "setting", "this", "to", "true", "restores", "the", "previous", "behavior", ".", "This", "*", "is", "not", "recommended", ".", "*", "*", "SECURITY", "-", "406", ".", "*", "/", "/", "/", "TODO", "2", ".", "4", "+", "SystemProperties", "@", "Restricted", "(", "NoExternalUse", ".", "class", ")", "public", "static", "boolean", "ALLOW_USER_CREATION_VIA_URL", "=", "Boolean", ".", "getBoolean", "(", "User", ".", "class", ".", "getName", "(", ")", "+", "\"", ".", "allowUserCreationViaUrl", "\"", ");", "*", "@", "return", "the", "user", "of", "the", "given", "name", "(", "which", "may", "or", "may", "not", "be", "an", "id", ")", ",", "if", "that", "person", "exists", ";", "else", "null", "return", "User", ".", "get", "(", "name", ",", "User", ".", "ALLOW_USER_CREATION_VIA_URL", "&", "&", "hasPermission", "(", "ADMINISTER", ")", ");", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertNotNull", ";", "@", "Issue", "(", "\"", "SECURITY", "-", "406", "\"", ")", "@", "Test", "public", "void", "testUserCreationFromUrlForAdmins", "(", ")", "throws", "Exception", "{", "WebClient", "wc", "=", "j", ".", "createWebClient", "(", ");", "assertNull", "(", "\"", "User", "not", "supposed", "to", "exist", "\"", ",", "User", ".", "getById", "(", "\"", "nonexistent", "\"", ",", "false", ")", ");", "wc", ".", "assertFails", "(", "\"", "user", "/", "nonexistent", "\"", ",", "404", ")", ";", "assertNull", "(", "\"", "User", "not", "supposed", "to", "exist", "\"", ",", "User", ".", "getById", "(", "\"", "nonexistent", "\"", ",", "false", ")", ");", "try", "{", "User", ".", "ALLOW_USER_CREATION_VIA_URL", "=", "true", ";", "/", "/", "expected", "to", "work", "wc", ".", "goTo", "(", "\"", "user", "/", "nonexistent2", "\"", ");", "assertNotNull", "(", "\"", "User", "supposed", "to", "exist", "\"", ",", "User", ".", "getById", "(", "\"", "nonexistent2", "\"", ",", "false", ")", ");", "}", "finally", "{", "User", ".", "ALLOW_USER_CREATION_VIA_URL", "=", "false", ";", "}", "}</s>*", "@", "return", "the", "user", "of", "the", "given", "name", "(", "which", "may", "or", "may", "not", "be", "an", "id", ")", ",", "if", "that", "person", "exists", "or", "the", "invoker", "{", "@", "link", "#", "hasPermission", "}", "on", "{", "@", "link", "#", "ADMINISTER", "}", ";", "else", "null", "return", "User", ".", "get", "(", "name", ",", "hasPermission", "(", "ADMINISTER", ")", ");"], "docstring_tokens": ["cross-site", "request", "forgery"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "springframework", ".", "util", ".", "ResourceUtils", ";", "import", "java", ".", "io", ".", "UnsupportedEncodingException", ";", "import", "java", ".", "net", ".", "MalformedURLException", ";", "import", "java", ".", "net", ".", "URL", ";", "import", "java", ".", "net", ".", "URLEncoder", ";", "private", "void", "checkUrl", "(", "String", "url", ",", "String", "propertyName", ")", "throws", "RepositoryAdminException", "{", "if", "(", "StringUtils", ".", "isNotEmpty", "(", "url", ")", ")", "{", "if", "(", "!", "ResourceUtils", ".", "isUrl", "(", "url", ")", ")", "{", "throw", "new", "RepositoryAdminException", "(", "\"", "Bad", "URL", "in", "\"", "+", "propertyName", "+", "\"", ":", "\"", "+", "url", ")", ";", "}", "}", "}", "checkUrl", "(", "organisationInformation", ".", "getUrl", "(", "),", "\"", "url", "\"", ");", "checkUrl", "(", "organisationInformation", ".", "getLogoLocation", "(", "),", "\"", "logoLocation", "\"", ")", ";", "Configuration", "configuration", "=", "getArchivaConfiguration", "(", ")", ".", "getConfiguration", "(", ")", ";", "getModelMapper", "(", ")", ".", "map", "(", "organisationInformation", ",", "org", ".", "apache", ".", "archiva", ".", "configuration", ".", "OrganisationInformation", ".", "class", ")", ";", "@", "Test", "public", "void", "badOrganisationInfoLogoLocation", "(", ")", "{", "try", "{", "OrganisationInformation", "newOrganisationInformation", "=", "new", "OrganisationInformation", "(", ")", ";", "newOrganisationInformation", ".", "setLogoLocation", "(", "\"", "'/", "><", "svg", "/", "onload", "=", "alert", "(", "/", "logoLocation_xss", "/", ")>", "\"", ")", ";", "newOrganisationInformation", ".", "setName", "(", "\"", "foo", "org", "\"", ")", ";", "newOrganisationInformation", ".", "setUrl", "(", "\"", "http", ":", "//", "foo", ".", "com", "\"", ")", ";", "archivaAdministration", ".", "setOrganisationInformation", "(", "newOrganisationInformation", ")", ";", "fail", "(", "\"", "RepositoryAdminException", "expected", ".", "Bad", "URL", "content", "should", "not", "be", "allowed", "for", "logo", "location", ".", "\"", ")", ";", "}", "catch", "(", "RepositoryAdminException", "e", ")", "{", "/", "/", "OK", "}", "}", "@", "Test", "public", "void", "badOrganisationInfoUrl", "(", ")", "{", "try", "{", "OrganisationInformation", "newOrganisationInformation", "=", "new", "OrganisationInformation", "(", ")", ";", "newOrganisationInformation", ".", "setUrl", "(", "\"", "'/", "><", "svg", "/", "onload", "=", "alert", "(", "/", "url_xss", "/", ")>", "\"", ")", ";", "newOrganisationInformation", ".", "setName", "(", "\"", "foo", "org", "\"", ")", ";", "newOrganisationInformation", ".", "setLogoLocation", "(", "\"", "http", ":", "//", "foo", ".", "com", "/", "bar", ".", "png", "\"", ")", ";", "archivaAdministration", ".", "setOrganisationInformation", "(", "newOrganisationInformation", ")", ";", "fail", "(", "\"", "RepositoryAdminException", "expected", ".", "Bad", "URL", "content", "should", "not", "be", "allowed", "for", "logo", "location", ".", "\"", ")", ";", "}", "catch", "(", "RepositoryAdminException", "e", ")", "{", "/", "/", "OK", "}", "}</s>Configuration", "configuration", "=", "getArchivaConfiguration", "(", ").", "getConfiguration", "(", ");", "getModelMapper", "(", ").", "map", "(", "organisationInformation", ",", "org", ".", "apache", ".", "archiva", ".", "configuration", ".", "OrganisationInformation", ".", "class", ")", ";"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "Sanity", "check", "that", "a", "device", "has", "an", "endpoint", "*", "/", "if", "(", "usbinterface", "-", ">", "altsetting", "[", "0", "]", ".", "desc", ".", "bNumEndpoints", "<", "1", ")", "{", "dev_err", "(", "&", "usbinterface", "-", ">", "dev", ",", "\"", "Invalid", "number", "of", "endpoints", "\\", "n", "\"", ");", "error", "=", "-", "EINVAL", ";", "goto", "err_free_urb", ";", "}", "HID_DEVICE_TYPE", ",", "&", "hid_desc", ")", "!", "=", "0", ")", "{</s>HID_DEVICE_TYPE", ",", "&", "hid_desc", ")", "!", "=", "0", ")", "{"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "jruby", ".", "runtime", ".", "builtin", ".", "IRubyObject", ";", "static", "XmlSchema", "createSchemaInstance", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ",", "IRubyObject", "parseOptions", ")", "{", "if", "(", "parseOptions", "=", "=", "null", ")", "{", "parseOptions", "=", "defaultParseOptions", "(", "context", ".", "getRuntime", "(", "))", ";", "}", "xmlRelaxng", ".", "setInstanceVariable", "(", "\"@", "parse_options", "\"", ",", "parseOptions", ")", ";", "static", "XmlSchema", "createSchemaInstance", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ",", "IRubyObject", "parseOptions", ")", "{", "if", "(", "parseOptions", "=", "=", "null", ")", "{", "parseOptions", "=", "defaultParseOptions", "(", "context", ".", "getRuntime", "(", "))", ";", "}", "xmlSchema", ".", "setInstanceVariable", "(", "\"@", "parse_options", "\"", ",", "parseOptions", ")", ";", "protected", "static", "IRubyObject", "defaultParseOptions", "(", "Ruby", "runtime", ")", "{", "return", "(", "(", "RubyClass", ")", "runtime", ".", "getClassFromPath", "(", "\"", "Nokogiri", ":", ":", "XML", ":", ":", "ParseOptions", "\"", "))", ".", "getConstant", "(", "\"", "DEFAULT_SCHEMA", "\"", ");", "}", "@", "JRubyMethod", "(", "meta", "=", "true", ",", "required", "=", "1", ",", "optional", "=", "1", ")", "public", "static", "IRubyObject", "from_document", "(", "ThreadContext", "context", ",", "IRubyObject", "klazz", ",", "IRubyObject", "[", "]", "args", ")", "{", "IRubyObject", "document", "=", "args", "[", "0", "]", ";", "IRubyObject", "parseOptions", "=", "null", ";", "if", "(", "args", ".", "length", ">", "1", ")", "{", "parseOptions", "=", "args", "[", "1", "]", ";", "}", "return", "getSchema", "(", "context", ",", "(", "RubyClass", ")", "klazz", ",", "source", ",", "parseOptions", ")", ";", "@", "JRubyMethod", "(", "meta", "=", "true", ",", "required", "=", "1", ",", "optional", "=", "1", ")", "public", "static", "IRubyObject", "read_memory", "(", "ThreadContext", "context", ",", "IRubyObject", "klazz", ",", "IRubyObject", "[", "]", "args", ")", "{", "IRubyObject", "content", "=", "args", "[", "0", "]", ";", "IRubyObject", "parseOptions", "=", "null", ";", "if", "(", "args", ".", "length", ">", "1", ")", "{", "parseOptions", "=", "args", "[", "1", "]", ";", "}", "String", "data", "=", "content", ".", "convertToString", "(", ").", "asJavaString", "(", ");", "return", "getSchema", "(", "context", ",", "(", "RubyClass", ")", "klazz", ",", "new", "StreamSource", "(", "new", "StringReader", "(", "data", ")", "),", "parseOptions", ")", ";", "}", "private", "static", "IRubyObject", "getSchema", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ",", "IRubyObject", "parseOptions", ")", "{", "return", "XmlSchema", ".", "createSchemaInstance", "(", "context", ",", "klazz", ",", "source", ",", "parseOptions", ")", ";", "return", "XmlRelaxng", ".", "createSchemaInstance", "(", "context", ",", "klazz", ",", "source", ",", "parseOptions", ")", ";</s>static", "XmlSchema", "createSchemaInstance", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ")", "{", "static", "XmlSchema", "createSchemaInstance", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ")", "{", "@", "JRubyMethod", "(", "meta", "=", "true", ")", "public", "static", "IRubyObject", "from_document", "(", "ThreadContext", "context", ",", "IRubyObject", "klazz", ",", "IRubyObject", "document", ")", "{", "return", "getSchema", "(", "context", ",", "(", "RubyClass", ")", "klazz", ",", "source", ")", ";", "private", "static", "IRubyObject", "getSchema", "(", "ThreadContext", "context", ",", "RubyClass", "klazz", ",", "Source", "source", ")", "{", "return", "XmlSchema", ".", "createSchemaInstance", "(", "context", ",", "klazz", ",", "source", ")", ";", "return", "XmlRelaxng", ".", "createSchemaInstance", "(", "context", ",", "klazz", ",", "source", ")", ";", "@", "JRubyMethod", "(", "meta", "=", "true", ")", "public", "static", "IRubyObject", "read_memory", "(", "ThreadContext", "context", ",", "IRubyObject", "klazz", ",", "IRubyObject", "content", ")", "{", "String", "data", "=", "content", ".", "convertToString", "(", ").", "asJavaString", "(", ");", "return", "getSchema", "(", "context", ",", "(", "RubyClass", ")", "klazz", ",", "new", "StreamSource", "(", "new", "StringReader", "(", "data", ")", "))", ";", "}"], "docstring_tokens": ["xml", "external", "entity", "(xxe", ")"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "make", "sure", "we", "ignore", "the", "inode", "flag", "if", "the", "filesystem", "doesn", "'", "t", "have", "a", "*", "configured", "realtime", "device", ".", "*", "/", "#", "define", "XFS_IS_REALTIME_INODE", "(", "ip", ")", "\\", "(", "((", "ip", ")", "->", "i_d", ".", "di_flags", "&", "XFS_DIFLAG_REALTIME", ")", "&", "&", "\\", "(", "ip", ")", "->", "i_mount", "-", ">", "m_rtdev_targp", ")</s>#", "define", "XFS_IS_REALTIME_INODE", "(", "ip", ")", "(", "(", "ip", ")", "->", "i_d", ".", "di_flags", "&", "XFS_DIFLAG_REALTIME", ")"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["buffer", "[", "filter", "-", ">", "status", "+", "+]", "=", "'", "&'", ";", "unsigned", "char", "*", "buffer", ";", "int", "err", "=", "0", ";", "buffer", "=", "(", "unsigned", "char", "*", ")", "filter", "-", ">", "opaque", ";", "filter", "-", ">", "status", "=", "0", ";", "int", "e", "=", "(", "*", "filter", "-", ">", "output_function", ")", "(", "buffer", "[", "pos", "+", "+]", ",", "filter", "-", ">", "data", ")", ";", "if", "(", "e", "!", "=", "0", ")", "err", "=", "e", ";", "return", "err", ";", "-", "-", "TEST", "-", "-", "Bug", "#", "45722", "(", "mb_check_encoding", "(", ")", "crashes", ")", "-", "-", "FILE", "-", "-", "<", "?", "php", "var_dump", "(", "mb_check_encoding", "(", "\"&", "\\", "xc2", "\\", "xb7", "TEST", "TEST", "TEST", "TEST", "TEST", "TEST", "\"", ",", "\"", "HTML", "-", "ENTITIES", "\"", "))", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "bool", "(", "false", ")</s>filter", "-", ">", "status", "=", "1", ";", "buffer", "[", "0", "]", "=", "'", "&'", ";", "char", "*", "buffer", ";", "buffer", "=", "(", "char", "*", ")", "filter", "-", ">", "opaque", ";", "CK", "(", "(*", "filter", "-", ">", "output_function", ")", "(", "buffer", "[", "pos", "+", "+]", ",", "filter", "-", ">", "data", ")", ");", "filter", "-", ">", "status", "=", "0", ";", "/", "*", "filter", "-", ">", "buffer", "=", "0", ";", "of", "cause", "NOT", "*", "/", "return", "0", ";"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "width", "=", "=", "0", ")", "return", "(", "threshold_image", ")", ";</s>"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["while", "(", "bytes", "|", "|", "unlikely", "(", "i", "-", ">", "count", "&", "&", "!", "iov", "-", ">", "iov_len", ")", ")", "{</s>while", "(", "bytes", "|", "|", "unlikely", "(", "!", "iov", "-", ">", "iov_len", "&", "&", "i", "-", ">", "count", ")", ")", "{"], "docstring_tokens": ["off-by-one", "error"]}
{"contents": ["empty"], "code_tokens": ["import", "java", ".", "io", ".", "FileNotFoundException", ";", "import", "java", ".", "util", ".", "logging", ".", "Level", ";", "import", "java", ".", "util", ".", "logging", ".", "Logger", ";", "return", "new", "FileVF", "(", "f", ",", "f", ")", ";", "private", "final", "File", "root", ";", "FileVF", "(", "File", "f", ",", "File", "root", ")", "{", "this", ".", "root", "=", "root", ";", "return", "new", "FileVF", "(", "f", ".", "getParentFile", "(", "),", "root", ")", ";", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "new", "VirtualFile", "[", "0", "]", ";", "}", "vfs", "[", "i", "]", "=", "new", "FileVF", "(", "kids", "[", "i", "]", ",", "root", ")", ";", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "new", "String", "[", "0", "]", ";", "}", "return", "new", "FileVF", "(", "new", "File", "(", "f", ",", "name", ")", ",", "root", ")", ";", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "0", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "0", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "if", "(", "isIllegalSymlink", "(", "))", "{", "throw", "new", "FileNotFoundException", "(", "f", ".", "getPath", "(", "))", ";", "}", "private", "boolean", "isIllegalSymlink", "(", ")", "{", "/", "/", "TODO", "JENKINS", "-", "26838", "try", "{", "String", "myPath", "=", "f", ".", "getCanonicalPath", "(", ");", "String", "rootPath", "=", "root", ".", "getCanonicalPath", "(", ");", "if", "(", "!", "myPath", ".", "equals", "(", "rootPath", ")", "&", "&", "!", "myPath", ".", "startsWith", "(", "rootPath", "+", "File", ".", "separatorChar", ")", ")", "{", "return", "true", ";", "}", "}", "catch", "(", "IOException", "x", ")", "{", "Logger", ".", "getLogger", "(", "VirtualFile", ".", "class", ".", "getName", "(", "))", ".", "log", "(", "Level", ".", "FINE", ",", "\"", "could", "not", "determine", "symlink", "status", "of", "\"", "+", "f", ",", "x", ")", ";", "}", "return", "false", ";", "}", "/", "*", "*", "The", "MIT", "License", "*", "*", "Copyright", "2015", "Jesse", "Glick", ".", "*", "*", "Permission", "is", "hereby", "granted", ",", "free", "of", "charge", ",", "to", "any", "person", "obtaining", "a", "copy", "*", "of", "this", "software", "and", "associated", "documentation", "files", "(", "the", "\"", "Software", "\"", "),", "to", "deal", "*", "in", "the", "Software", "without", "restriction", ",", "including", "without", "limitation", "the", "rights", "*", "to", "use", ",", "copy", ",", "modify", ",", "merge", ",", "publish", ",", "distribute", ",", "sublicense", ",", "and", "/", "or", "sell", "*", "copies", "of", "the", "Software", ",", "and", "to", "permit", "persons", "to", "whom", "the", "Software", "is", "*", "furnished", "to", "do", "so", ",", "subject", "to", "the", "following", "conditions", ":", "*", "*", "The", "above", "copyright", "notice", "and", "this", "permission", "notice", "shall", "be", "included", "in", "*", "all", "copies", "or", "substantial", "portions", "of", "the", "Software", ".", "*", "*", "THE", "SOFTWARE", "IS", "PROVIDED", "\"", "AS", "IS", "\"", ",", "WITHOUT", "WARRANTY", "OF", "ANY", "KIND", ",", "EXPRESS", "OR", "*", "IMPLIED", ",", "INCLUDING", "BUT", "NOT", "LIMITED", "TO", "THE", "WARRANTIES", "OF", "MERCHANTABILITY", ",", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", "AND", "NONINFRINGEMENT", ".", "IN", "NO", "EVENT", "SHALL", "THE", "*", "AUTHORS", "OR", "COPYRIGHT", "HOLDERS", "BE", "LIABLE", "FOR", "ANY", "CLAIM", ",", "DAMAGES", "OR", "OTHER", "*", "LIABILITY", ",", "WHETHER", "IN", "AN", "ACTION", "OF", "CONTRACT", ",", "TORT", "OR", "OTHERWISE", ",", "ARISING", "FROM", ",", "*", "OUT", "OF", "OR", "IN", "CONNECTION", "WITH", "THE", "SOFTWARE", "OR", "THE", "USE", "OR", "OTHER", "DEALINGS", "IN", "*", "THE", "SOFTWARE", ".", "*", "/", "package", "jenkins", ".", "util", ";", "import", "hudson", ".", "Util", ";", "import", "hudson", ".", "model", ".", "TaskListener", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "FileNotFoundException", ";", "import", "org", ".", "apache", ".", "commons", ".", "io", ".", "FileUtils", ";", "import", "org", ".", "apache", ".", "commons", ".", "io", ".", "IOUtils", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "rules", ".", "TemporaryFolder", ";", "public", "class", "VirtualFileTest", "{", "@", "Rule", "public", "TemporaryFolder", "tmp", "=", "new", "TemporaryFolder", "(", ");", "/", "/@", "Issue", "(", "\"", "SECURITY", "-", "162", "\"", ")", "@", "Test", "public", "void", "outsideSymlinks", "(", ")", "throws", "Exception", "{", "File", "ws", "=", "tmp", ".", "newFolder", "(", "\"", "ws", "\"", ");", "FileUtils", ".", "write", "(", "new", "File", "(", "ws", ",", "\"", "safe", "\"", "),", "\"", "safe", "\"", ");", "Util", ".", "createSymlink", "(", "ws", ",", "\"", "safe", "\"", ",", "\"", "supported", "\"", ",", "TaskListener", ".", "NULL", ")", ";", "File", "other", "=", "tmp", ".", "newFolder", "(", "\"", "other", "\"", ");", "FileUtils", ".", "write", "(", "new", "File", "(", "other", ",", "\"", "secret", "\"", "),", "\"", "s3cr3t", "\"", ");", "Util", ".", "createSymlink", "(", "ws", ",", "\"", "..", "/", "other", "/", "secret", "\"", ",", "\"", "hack", "\"", ",", "TaskListener", ".", "NULL", ")", ";", "VirtualFile", "root", "=", "VirtualFile", ".", "forFile", "(", "ws", ")", ";", "VirtualFile", "supported", "=", "root", ".", "child", "(", "\"", "supported", "\"", ");", "assertTrue", "(", "supported", ".", "isFile", "(", "))", ";", "assertTrue", "(", "supported", ".", "exists", "(", "))", ";", "assertEquals", "(", "\"", "safe", "\"", ",", "IOUtils", ".", "toString", "(", "supported", ".", "open", "(", "),", "(", "String", ")", "null", ")", ");", "VirtualFile", "hack", "=", "root", ".", "child", "(", "\"", "hack", "\"", ");", "assertFalse", "(", "hack", ".", "isFile", "(", "))", ";", "assertFalse", "(", "hack", ".", "exists", "(", "))", ";", "try", "{", "hack", ".", "open", "(", ");", "fail", "(", ");", "}", "catch", "(", "FileNotFoundException", "x", ")", "{", "/", "/", "OK", "}", "}", "}</s>return", "new", "FileVF", "(", "f", ")", ";", "FileVF", "(", "File", "f", ")", "{", "return", "forFile", "(", "f", ".", "getParentFile", "(", "))", ";", "vfs", "[", "i", "]", "=", "forFile", "(", "kids", "[", "i", "]", ");", "return", "forFile", "(", "new", "File", "(", "f", ",", "name", ")", ");", "import", "org", ".", "junit", ".", "Ignore", ";", "@", "Ignore", "(", "\"", "TODO", "currently", "fails", "as", "expected", "\"", ")"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["/", "/", "Strict", "HTML", "recognition", "(", "#", "11290", ":", "must", "start", "with", "<", ")", "rquickExpr", "=", "/", "^(", "?:", "(<", "[\\", "w", "\\", "W", "]", "+>", ")[", "^>", "]*", "|#", "([", "\\", "w", "-", "]*", "))", "$/", ",", "Subproject", "commit", "8c6ed151bdfd03b8a8ec3707963caada8e73d041", "@", "@", "-", "27", ",", "7", "+", "27", ",", "7", "@", "@", "test", "(", "\"", "jQuery", "(", ")\"", ",", "function", "(", ")", "{", "expected", "=", "22", ",", "expect", "(", "13", ")", ";", "equal", "(", "jQuery", ".", "parseHTML", "(", "\"", "<", "div", "/", ">", "\"", ")[", "0", "]", ".", "nodeType", ",", "3", ",", "\"", "Leading", "spaces", "are", "treated", "as", "text", "nodes", "(", "#", "11290", ")", "\"", ")", ";", "/", "/", "#", "7533", "test", "(", "\"", "jQuery", "only", "-", "broken", "\"", ",", "1", ",", "function", "(", ")", "{", "raises", "(", "function", "(", ")", "{", "/", "/", "Setting", "context", "to", "null", "here", "somehow", "avoids", "QUnit", "'", "s", "window", ".", "error", "handling", "/", "/", "making", "the", "e", "&", "e", ".", "message", "correct", "/", "/", "For", "whatever", "reason", ",", "without", "this", ",", "/", "/", "Sizzle", ".", "error", "will", "be", "called", "but", "no", "error", "will", "be", "seen", "in", "oldIE", "jQuery", ".", "call", "(", "null", ",", "\"", "<", "div", "/", ">", "\"", ")", ";", "}", ",", "function", "(", "e", ")", "{", "return", "e", ".", "message", ".", "indexOf", "(", "\"", "Syntax", "error", "\"", ")", ">", "=", "0", ";", "}", ",", "\"", "leading", "space", "invalid", ":", "$", "('", "<", "div", "/", ">", "'", ")\"", ")", ";", "}", ");", "equal", "(", "jQuery", "(", "sel", ")", ".", "is", "(", "match", ")", ",", "expect", ",", "\"", "jQuery", "(", "'\"", "+", "sel", "+", "\"", "')", ".", "is", "(", "'\"", "+", "match", "+", "\"", "')", "\"", ")", ";</s>rquickExpr", "=", "/", "^(", "?:", "[^", "#<", "]*", "(<", "[\\", "w", "\\", "W", "]", "+>", ")[", "^>", "]*", "|#", "([", "\\", "w", "-", "]*", "))", "$/", ",", "Subproject", "commit", "20ad5f811e22bf8528d8c33f0e7966fdb461c55a", "expected", "=", "26", ",", "equal", "(", "jQuery", "(", "\"", "<", "div", "/", ">", "\"", ").", "length", ",", "1", ",", "\"", "Make", "sure", "whitespace", "is", "trimmed", ".", "\"", ")", ";", "equal", "(", "jQuery", "(", "\"", "a", "<", "div", "/", ">", "b", "\"", ").", "length", ",", "1", ",", "\"", "Make", "sure", "whitespace", "and", "other", "characters", "are", "trimmed", ".", "\"", ")", ";", "equal", "(", "jQuery", "(", "\"", "<", "div", ">", "\"", "+", "lng", "+", "\"", "</", "div", ">", "\"", ").", "length", ",", "1", ",", "\"", "Make", "sure", "whitespace", "is", "trimmed", "on", "long", "strings", ".", "\"", ")", ";", "equal", "(", "jQuery", "(", "\"", "a", "<", "div", ">", "\"", "+", "lng", "+", "\"", "</", "div", ">", "b", "\"", ").", "length", ",", "1", ",", "\"", "Make", "sure", "whitespace", "and", "other", "characters", "are", "trimmed", "on", "long", "strings", ".", "\"", ")", ";", "expect", "(", "12", ")", ";", "/", "/#", "7533", "equal", "(", "jQuery", "(", "sel", ")", ".", "is", "(", "match", ")", ",", "expect", ",", "\"", "jQuery", "(", "\"", "+", "sel", "+", "\"", ")", ".", "is", "(", "\"", "+", "match", "+", "\"", ")", "\"", ")", ";"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "len", ">", "INT_MAX", ")", "{", "/", "*", "string", "length", "is", "int", "in", "5", ".", "x", "so", "we", "can", "not", "read", "more", "than", "int", "*", "/", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "Length", "parameter", "must", "be", "no", "more", "than", "%", "d", "\"", ",", "INT_MAX", ")", ";", "RETURN_FALSE", ";", "}", "-", "-", "TEST", "-", "-", "Bug", "#", "72114", "(", "Integer", "underflow", "/", "arbitrary", "null", "write", "in", "fread", "/", "gzread", ")", "-", "-", "FILE", "-", "-", "<", "?", "php", "ini_set", "(", "'", "memory_limit", "'", ",", "\"", "2500M", "\"", ");", "$", "fp", "=", "fopen", "(", "\"/", "dev", "/", "zero", "\"", ",", "\"", "r", "\"", ");", "fread", "(", "$", "fp", ",", "2147483648", ")", ";", "?", ">", "Done", "-", "-", "EXPECTF", "-", "-", "Warning", ":", "fread", "(", "):", "Length", "parameter", "must", "be", "no", "more", "than", "2147483647", "in", "%", "s", "/", "bug72114", ".", "php", "on", "line", "%", "d", "Done</s>"], "docstring_tokens": ["out-of-bounds", "read"]}
{"contents": ["empty"], "code_tokens": ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "SAXReader", "reader", "=", "SAXReader", ".", "createDefault", "(", ");", "*", "*", "*", "*", "*", "*", "*", "*", "*", "import", "javax", ".", "xml", ".", "parsers", ".", "SAXParserFactory", ";", "*", "*", "*", "This", "method", "internally", "calls", "{", "@", "link", "SAXParserFactory", "}", "{@", "code", ".", "newInstance", "(", ").", "newSAXParser", "(", ").", "getXMLReader", "(", ")}", "or", "{", "@", "link", "XMLReaderFactory", "#", "createXMLReader", "(", ")}", ".", "*", "Be", "sure", "to", "configure", "returned", "reader", "if", "the", "default", "configuration", "does", "not", "suit", "you", ".", "Consider", "setting", "the", "following", "properties", ":", "*", "*", "<", "pre", ">", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "*", "<", "/", "pre", ">", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "import", "javax", ".", "xml", ".", "parsers", ".", "SAXParserFactory", ";", "*", "<", "p", ">", "*", "<", "p", ">", "*", "<", "p", ">", "*", "<", "p", ">", "*", "<", "p", ">", "*", "<", "p", ">", "private", "static", "final", "String", "SAX_STRING_INTERNING", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "string", "-", "interning", "\"", ";", "private", "static", "final", "String", "SAX_DECL_HANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "properties", "/", "declaration", "-", "handler", "\"", ";", "private", "static", "final", "String", "SAX_LEXICAL_HANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "properties", "/", "lexical", "-", "handler", "\"", ";", "private", "static", "final", "String", "SAX_LEXICALHANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "handlers", "/", "LexicalHandler", "\"", ";", "/", "**", "*", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "new", "document", "objects", "*", "/", "private", "DocumentFactory", "factory", ";", "/", "**", "*", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "the", "SAX", "events", "*", "/", "private", "XMLReader", "xmlReader", ";", "/", "**", "*", "Whether", "validation", "should", "occur", "*", "/", "private", "boolean", "validating", ";", "/", "**", "*", "DispatchHandler", "to", "call", "when", "each", "<", "code", ">", "Element", "<", "/", "code", ">", "is", "encountered", "*", "/", "private", "DispatchHandler", "dispatchHandler", ";", "/", "**", "*", "ErrorHandler", "class", "to", "use", "*", "/", "private", "ErrorHandler", "errorHandler", ";", "/", "**", "*", "The", "entity", "resolver", "*", "/", "private", "EntityResolver", "entityResolver", ";", "/", "**", "*", "Should", "element", "&", "attribute", "names", "and", "namespace", "URIs", "be", "interned", "?", "*", "/", "private", "boolean", "stringInternEnabled", "=", "true", ";", "/", "**", "*", "Should", "internal", "DTD", "declarations", "be", "expanded", "into", "a", "List", "in", "the", "DTD", "*", "/", "private", "boolean", "includeInternalDTDDeclarations", "=", "false", ";", "/", "**", "*", "Should", "external", "DTD", "declarations", "be", "expanded", "into", "a", "List", "in", "the", "DTD", "*", "/", "private", "boolean", "includeExternalDTDDeclarations", "=", "false", ";", "/", "**", "*", "Whether", "adjacent", "text", "nodes", "should", "be", "merged", "*", "/", "private", "boolean", "mergeAdjacentText", "=", "false", ";", "/", "**", "*", "Holds", "value", "of", "property", "stripWhitespaceText", ".", "*", "/", "private", "boolean", "stripWhitespaceText", "=", "false", ";", "/", "**", "*", "Should", "we", "ignore", "comments", "*", "/", "private", "boolean", "ignoreComments", "=", "false", ";", "/", "**", "*", "Encoding", "of", "InputSource", "-", "null", "means", "system", "default", "encoding", "*", "/", "private", "String", "encoding", "=", "null", ";", "/", "/", "private", "boolean", "includeExternalGeneralEntities", "=", "false", ";", "/", "/", "private", "boolean", "includeExternalParameterEntities", "=", "false", ";", "/", "**", "*", "The", "SAX", "filter", "used", "to", "filter", "SAX", "events", "*", "*", "@", "since", "2", ".", "1", ".", "2", "*", "/", "private", "XMLFilter", "xmlFilter", ";", "public", "static", "SAXReader", "createDefault", "(", ")", "{", "SAXReader", "reader", "=", "new", "SAXReader", "(", ");", "try", "{", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "}", "catch", "(", "SAXException", "e", ")", "{", "/", "/", "nothing", "to", "do", ",", "incompatible", "reader", "}", "return", "reader", ";", "}", "/", "**", "*", "This", "method", "internally", "calls", "{", "@", "link", "SAXParserFactory", "}", "{@", "code", ".", "newInstance", "(", ").", "newSAXParser", "(", ").", "getXMLReader", "(", ")}", "or", "{", "@", "link", "XMLReaderFactory", "#", "createXMLReader", "(", ")}", ".", "*", "Be", "sure", "to", "configure", "returned", "reader", "if", "the", "default", "configuration", "does", "not", "suit", "you", ".", "Consider", "setting", "the", "following", "properties", ":", "*", "*", "<", "pre", ">", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "*", "<", "/", "pre", ">", "*", "/", "public", "SAXReader", "(", ")", "{", "}", "/", "**", "*", "This", "method", "internally", "calls", "{", "@", "link", "SAXParserFactory", "}", "{@", "code", ".", "newInstance", "(", ").", "newSAXParser", "(", ").", "getXMLReader", "(", ")}", "or", "{", "@", "link", "XMLReaderFactory", "#", "createXMLReader", "(", ")}", ".", "*", "Be", "sure", "to", "configure", "returned", "reader", "if", "the", "default", "configuration", "does", "not", "suit", "you", ".", "Consider", "setting", "the", "following", "properties", ":", "*", "*", "<", "pre", ">", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "*", "<", "/", "pre", ">", "*", "*", "@", "param", "validating", "*", "/", "public", "SAXReader", "(", "boolean", "validating", ")", "{", "this", ".", "validating", "=", "validating", ";", "}", "/", "**", "*", "This", "method", "internally", "calls", "{", "@", "link", "SAXParserFactory", "}", "{@", "code", ".", "newInstance", "(", ").", "newSAXParser", "(", ").", "getXMLReader", "(", ")}", "or", "{", "@", "link", "XMLReaderFactory", "#", "createXMLReader", "(", ")}", ".", "*", "Be", "sure", "to", "configure", "returned", "reader", "if", "the", "default", "configuration", "does", "not", "suit", "you", ".", "Consider", "setting", "the", "following", "properties", ":", "*", "*", "<", "pre", ">", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "*", "<", "/", "pre", ">", "*", "*", "@", "param", "factory", "*", "/", "public", "SAXReader", "(", "DocumentFactory", "factory", ")", "{", "this", ".", "factory", "=", "factory", ";", "}", "/", "**", "*", "This", "method", "internally", "calls", "{", "@", "link", "SAXParserFactory", "}", "{@", "code", ".", "newInstance", "(", ").", "newSAXParser", "(", ").", "getXMLReader", "(", ")}", "or", "{", "@", "link", "XMLReaderFactory", "#", "createXMLReader", "(", ")}", ".", "*", "Be", "sure", "to", "configure", "returned", "reader", "if", "the", "default", "configuration", "does", "not", "suit", "you", ".", "Consider", "setting", "the", "following", "properties", ":", "*", "*", "<", "pre", ">", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "*", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "*", "<", "/", "pre", ">", "*", "*", "@", "param", "factory", "*", "@", "param", "validating", "*", "/", "public", "SAXReader", "(", "DocumentFactory", "factory", ",", "boolean", "validating", ")", "{", "this", ".", "factory", "=", "factory", ";", "this", ".", "validating", "=", "validating", ";", "}", "public", "SAXReader", "(", "XMLReader", "xmlReader", ")", "{", "this", ".", "xmlReader", "=", "xmlReader", ";", "}", "public", "SAXReader", "(", "XMLReader", "xmlReader", ",", "boolean", "validating", ")", "{", "this", ".", "xmlReader", "=", "xmlReader", ";", "this", ".", "validating", "=", "validating", ";", "}", "public", "SAXReader", "(", "String", "xmlReaderClassName", ")", "throws", "SAXException", "{", "if", "(", "xmlReaderClassName", "!", "=", "null", ")", "{", "this", ".", "xmlReader", "=", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ";", "}", "}", "public", "SAXReader", "(", "String", "xmlReaderClassName", ",", "boolean", "validating", ")", "throws", "SAXException", "{", "if", "(", "xmlReaderClassName", "!", "=", "null", ")", "{", "this", ".", "xmlReader", "=", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ";", "}", "this", ".", "validating", "=", "validating", ";", "}", "/", "**", "*", "Allows", "a", "SAX", "property", "to", "be", "set", "on", "the", "underlying", "SAX", "parser", ".", "This", "can", "be", "*", "useful", "to", "set", "parser", "-", "specific", "properties", "such", "as", "the", "location", "of", "schema", "*", "or", "DTD", "resources", ".", "Though", "use", "this", "method", "with", "caution", "as", "it", "has", "the", "*", "possibility", "of", "breaking", "the", "standard", "behaviour", ".", "An", "alternative", "to", "calling", "*", "this", "method", "is", "to", "correctly", "configure", "an", "XMLReader", "object", "instance", "and", "*", "call", "the", "{", "@", "link", "#", "setXMLReader", "(", "XMLReader", ")", "}", "method", "*", "*", "@", "param", "name", "is", "the", "SAX", "property", "name", "*", "@", "param", "value", "is", "the", "value", "of", "the", "SAX", "property", "*", "@", "throws", "SAXException", "if", "the", "XMLReader", "could", "not", "be", "created", "or", "the", "property", "could", "*", "not", "be", "changed", ".", "*", "/", "public", "void", "setProperty", "(", "String", "name", ",", "Object", "value", ")", "throws", "SAXException", "{", "getXMLReader", "(", ").", "setProperty", "(", "name", ",", "value", ")", ";", "}", "/", "**", "*", "Sets", "a", "SAX", "feature", "on", "the", "underlying", "SAX", "parser", ".", "This", "can", "be", "useful", "to", "*", "set", "parser", "-", "specific", "features", ".", "Though", "use", "this", "method", "with", "caution", "as", "it", "*", "has", "the", "possibility", "of", "breaking", "the", "standard", "behaviour", ".", "An", "alternative", "to", "*", "calling", "this", "method", "is", "to", "correctly", "configure", "an", "XMLReader", "object", "*", "instance", "and", "call", "the", "{", "@", "link", "#", "setXMLReader", "(", "XMLReader", ")", "}", "method", "*", "*", "@", "param", "name", "is", "the", "SAX", "feature", "name", "*", "@", "param", "value", "is", "the", "value", "of", "the", "SAX", "feature", "*", "@", "throws", "SAXException", "if", "the", "XMLReader", "could", "not", "be", "created", "or", "the", "feature", "could", "*", "not", "be", "changed", ".", "*", "/", "public", "void", "setFeature", "(", "String", "name", ",", "boolean", "value", ")", "throws", "SAXException", "{", "getXMLReader", "(", ").", "setFeature", "(", "name", ",", "value", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "File", "<", "/", "code", ">", "*", "<", "/", "p", ">", "*", "*", "@", "param", "file", "is", "the", "<", "code", ">", "File", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "File", "file", ")", "throws", "DocumentException", "{", "try", "{", "/", "*", "*", "We", "cannot", "convert", "the", "file", "to", "an", "URL", "because", "if", "the", "filename", "*", "contains", "'", "#'", "characters", ",", "there", "will", "be", "problems", "with", "the", "URL", "in", "*", "the", "InputSource", "(", "because", "a", "URL", "like", "*", "http", ":", "//", "myhost", ".", "com", "/", "index", "#", "anchor", "is", "treated", "the", "same", "as", "*", "http", ":", "//", "myhost", ".", "com", "/", "index", ")", "Thanks", "to", "Christian", "Oetterli", "*", "/", "InputSource", "source", "=", "new", "InputSource", "(", "new", "FileInputStream", "(", "file", ")", ");", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "String", "path", "=", "file", ".", "getAbsolutePath", "(", ");", "if", "(", "path", "!", "=", "null", ")", "{", "/", "/", "Code", "taken", "from", "Ant", "FileUtils", "StringBuffer", "sb", "=", "new", "StringBuffer", "(", "\"", "file", ":", "//", "\")", ";", "/", "/", "add", "an", "extra", "slash", "for", "filesystems", "with", "drive", "-", "specifiers", "if", "(", "!", "path", ".", "startsWith", "(", "File", ".", "separator", ")", ")", "{", "sb", ".", "append", "(", "\"/", "\")", ";", "path", "=", "path", ".", "replace", "(", "'\\", "\\'", ",", "'", "/'", ");", "sb", ".", "append", "(", "path", ")", ";", "source", ".", "setSystemId", "(", "sb", ".", "toString", "(", "))", ";", "}", "return", "read", "(", "source", ")", ";", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "throw", "new", "DocumentException", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "}", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "URL", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "url", "<", "code", ">", "URL", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "URL", "url", ")", "throws", "DocumentException", "{", "String", "systemID", "=", "url", ".", "toExternalForm", "(", ");", "InputSource", "source", "=", "new", "InputSource", "(", "systemID", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "URL", "or", "filename", "using", "SAX", ".", "*", "<", "/", "p", ">", "*", "*", "<", "p", ">", "*", "If", "the", "systemId", "contains", "a", "<", "code", ">", "':", "'<", "/", "code", ">", "character", "then", "it", "is", "*", "assumed", "to", "be", "a", "URL", "otherwise", "its", "assumed", "to", "be", "a", "file", "name", ".", "If", "you", "want", "*", "finer", "grained", "control", "over", "this", "mechansim", "then", "please", "explicitly", "pass", "in", "*", "either", "a", "{", "@", "link", "URL", "}", "or", "a", "{", "@", "link", "File", "}", "instance", "instead", "of", "a", "{", "@", "link", "*", "String", "}", "to", "denote", "the", "source", "of", "the", "document", ".", "*", "<", "/", "p", ">", "*", "*", "@", "param", "systemId", "is", "a", "URL", "for", "a", "document", "or", "a", "file", "name", ".", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "stream", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "<", "code", ">", "InputStream", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputStream", "in", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "in", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "Reader", "<", "/", "code", ">", "using", "SAX", "*", "*", "@", "param", "reader", "is", "the", "reader", "for", "the", "input", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "Reader", "reader", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "reader", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "stream", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "<", "code", ">", "InputStream", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "param", "systemId", "is", "the", "URI", "for", "the", "input", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputStream", "in", ",", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "in", ")", ";", "source", ".", "setSystemId", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "Reader", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "reader", "is", "the", "reader", "for", "the", "input", "*", "@", "param", "systemId", "is", "the", "URI", "for", "the", "input", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "Reader", "reader", ",", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "reader", ")", ";", "source", ".", "setSystemId", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "InputSource", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "<", "code", ">", "InputSource", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "@", "throws", "DocumentException", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputSource", "in", ")", "throws", "DocumentException", "{", "try", "{", "XMLReader", "reader", "=", "getXMLReader", "(", ");", "reader", "=", "installXMLFilter", "(", "reader", ")", ";", "EntityResolver", "thatEntityResolver", "=", "this", ".", "entityResolver", ";", "if", "(", "thatEntityResolver", "=", "=", "null", ")", "{", "thatEntityResolver", "=", "createDefaultEntityResolver", "(", "in", ".", "getSystemId", "(", "))", ";", "this", ".", "entityResolver", "=", "thatEntityResolver", ";", "}", "reader", ".", "setEntityResolver", "(", "thatEntityResolver", ")", ";", "SAXContentHandler", "contentHandler", "=", "createContentHandler", "(", "reader", ")", ";", "contentHandler", ".", "setEntityResolver", "(", "thatEntityResolver", ")", ";", "contentHandler", ".", "setInputSource", "(", "in", ")", ";", "boolean", "internal", "=", "isIncludeInternalDTDDeclarations", "(", ");", "boolean", "external", "=", "isIncludeExternalDTDDeclarations", "(", ");", "contentHandler", ".", "setIncludeInternalDTDDeclarations", "(", "internal", ")", ";", "contentHandler", ".", "setIncludeExternalDTDDeclarations", "(", "external", ")", ";", "contentHandler", ".", "setMergeAdjacentText", "(", "isMergeAdjacentText", "(", "))", ";", "contentHandler", ".", "setStripWhitespaceText", "(", "isStripWhitespaceText", "(", "))", ";", "contentHandler", ".", "setIgnoreComments", "(", "isIgnoreComments", "(", "))", ";", "reader", ".", "setContentHandler", "(", "contentHandler", ")", ";", "configureReader", "(", "reader", ",", "contentHandler", ")", ";", "reader", ".", "parse", "(", "in", ")", ";", "return", "contentHandler", ".", "getDocument", "(", ");", "}", "catch", "(", "Exception", "e", ")", "{", "if", "(", "e", "instanceof", "SAXParseException", ")", "{", "/", "/", "e", ".", "printStackTrace", "(", ");", "SAXParseException", "parseException", "=", "(", "SAXParseException", ")", "e", ";", "String", "systemId", "=", "parseException", ".", "getSystemId", "(", ");", "if", "(", "systemId", "=", "=", "null", ")", "{", "systemId", "=", "\"", "\";", "String", "message", "=", "\"", "Error", "on", "line", "\"", "+", "parseException", ".", "getLineNumber", "(", ")", "+", "\"", "of", "document", "\"", "+", "systemId", "+", "\"", ":", "\"", "+", "parseException", ".", "getMessage", "(", ");", "throw", "new", "DocumentException", "(", "message", ",", "e", ")", ";", "}", "else", "{", "throw", "new", "DocumentException", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "}", "}", "}", "/", "/", "Properties", "/", "/", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "validation", "mode", ",", "true", "if", "validating", "will", "be", "done", "otherwise", "*", "false", ".", "*", "/", "public", "boolean", "isValidating", "(", ")", "{", "return", "validating", ";", "}", "/", "**", "*", "Sets", "the", "validation", "mode", ".", "*", "*", "@", "param", "validation", "indicates", "whether", "or", "not", "validation", "should", "occur", ".", "*", "/", "public", "void", "setValidation", "(", "boolean", "validation", ")", "{", "this", ".", "validating", "=", "validation", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "whether", "internal", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "/", "public", "boolean", "isIncludeInternalDTDDeclarations", "(", ")", "{", "return", "includeInternalDTDDeclarations", ";", "}", "/", "**", "*", "Sets", "whether", "internal", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "*", "@", "param", "include", "whether", "or", "not", "DTD", "declarations", "should", "be", "expanded", "and", "*", "included", "into", "the", "DocumentType", "object", ".", "*", "/", "public", "void", "setIncludeInternalDTDDeclarations", "(", "boolean", "include", ")", "{", "this", ".", "includeInternalDTDDeclarations", "=", "include", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "whether", "external", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "/", "public", "boolean", "isIncludeExternalDTDDeclarations", "(", ")", "{", "return", "includeExternalDTDDeclarations", ";", "}", "/", "**", "*", "Sets", "whether", "DTD", "external", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "*", "@", "param", "include", "whether", "or", "not", "DTD", "declarations", "should", "be", "expanded", "and", "*", "included", "into", "the", "DocumentType", "object", ".", "*", "/", "public", "void", "setIncludeExternalDTDDeclarations", "(", "boolean", "include", ")", "{", "this", ".", "includeExternalDTDDeclarations", "=", "include", ";", "}", "/", "**", "*", "Sets", "whether", "String", "interning", "is", "enabled", "or", "disabled", "for", "element", "&", "amp", ";", "*", "attribute", "names", "and", "namespace", "URIs", ".", "This", "proprety", "is", "enabled", "by", "default", ".", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "public", "boolean", "isStringInternEnabled", "(", ")", "{", "return", "stringInternEnabled", ";", "}", "/", "**", "*", "Sets", "whether", "String", "interning", "is", "enabled", "or", "disabled", "for", "element", "&", "amp", ";", "*", "attribute", "names", "and", "namespace", "URIs", "*", "*", "@", "param", "stringInternEnabled", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setStringInternEnabled", "(", "boolean", "stringInternEnabled", ")", "{", "this", ".", "stringInternEnabled", "=", "stringInternEnabled", ";", "}", "/", "**", "*", "Returns", "whether", "adjacent", "text", "nodes", "should", "be", "merged", "together", ".", "*", "*", "@", "return", "Value", "of", "property", "mergeAdjacentText", ".", "*", "/", "public", "boolean", "isMergeAdjacentText", "(", ")", "{", "return", "mergeAdjacentText", ";", "}", "/", "**", "*", "Sets", "whether", "or", "not", "adjacent", "text", "nodes", "should", "be", "merged", "together", "when", "*", "parsing", ".", "*", "*", "@", "param", "mergeAdjacentText", "New", "value", "of", "property", "mergeAdjacentText", ".", "*", "/", "public", "void", "setMergeAdjacentText", "(", "boolean", "mergeAdjacentText", ")", "{", "this", ".", "mergeAdjacentText", "=", "mergeAdjacentText", ";", "}", "/", "**", "*", "Sets", "whether", "whitespace", "between", "element", "start", "and", "end", "tags", "should", "be", "*", "ignored", "*", "*", "@", "return", "Value", "of", "property", "stripWhitespaceText", ".", "*", "/", "public", "boolean", "isStripWhitespaceText", "(", ")", "{", "return", "stripWhitespaceText", ";", "}", "/", "**", "*", "Sets", "whether", "whitespace", "between", "element", "start", "and", "end", "tags", "should", "be", "*", "ignored", ".", "*", "*", "@", "param", "stripWhitespaceText", "New", "value", "of", "property", "stripWhitespaceText", ".", "*", "/", "public", "void", "setStripWhitespaceText", "(", "boolean", "stripWhitespaceText", ")", "{", "this", ".", "stripWhitespaceText", "=", "stripWhitespaceText", ";", "}", "/", "**", "*", "Returns", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "*", "@", "return", "boolean", "*", "/", "public", "boolean", "isIgnoreComments", "(", ")", "{", "return", "ignoreComments", ";", "}", "/", "**", "*", "Sets", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "*", "@", "param", "ignoreComments", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "/", "public", "void", "setIgnoreComments", "(", "boolean", "ignoreComments", ")", "{", "this", ".", "ignoreComments", "=", "ignoreComments", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "document", "*", "objects", "*", "/", "public", "DocumentFactory", "getDocumentFactory", "(", ")", "{", "if", "(", "factory", "=", "=", "null", ")", "{", "factory", "=", "DocumentFactory", ".", "getInstance", "(", ");", "}", "return", "factory", ";", "}", "/", "**", "*", "<", "p", ">", "*", "This", "sets", "the", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "new", "*", "documents", ".", "This", "method", "allows", "the", "building", "of", "custom", "DOM4J", "tree", "objects", "*", "to", "be", "implemented", "easily", "using", "a", "custom", "derivation", "of", "*", "{", "@", "link", "DocumentFactory", "}", "*", "<", "/", "p", ">", "*", "*", "@", "param", "documentFactory", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "DOM4J", "objects", "*", "/", "public", "void", "setDocumentFactory", "(", "DocumentFactory", "documentFactory", ")", "{", "this", ".", "factory", "=", "documentFactory", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "SAX", "*", "/", "public", "ErrorHandler", "getErrorHandler", "(", ")", "{", "return", "errorHandler", ";", "}", "/", "**", "*", "Sets", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "the", "SAX", "*", "<", "code", ">", "XMLReader", "<", "/", "code", ">", ".", "*", "*", "@", "param", "errorHandler", "is", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "SAX", "*", "/", "public", "void", "setErrorHandler", "(", "ErrorHandler", "errorHandler", ")", "{", "this", ".", "errorHandler", "=", "errorHandler", ";", "}", "/", "**", "*", "Returns", "the", "current", "entity", "resolver", "used", "to", "resolve", "entities", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "public", "EntityResolver", "getEntityResolver", "(", ")", "{", "return", "entityResolver", ";", "}", "/", "**", "*", "Sets", "the", "entity", "resolver", "used", "to", "resolve", "entities", ".", "*", "*", "@", "param", "entityResolver", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setEntityResolver", "(", "EntityResolver", "entityResolver", ")", "{", "this", ".", "entityResolver", "=", "entityResolver", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "SAX", "events", "*", "@", "throws", "SAXException", "DOCUMENT", "ME", "!", "*", "/", "public", "XMLReader", "getXMLReader", "(", ")", "throws", "SAXException", "{", "if", "(", "xmlReader", "=", "=", "null", ")", "{", "xmlReader", "=", "createXMLReader", "(", ");", "}", "return", "xmlReader", ";", "}", "/", "**", "*", "Sets", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "SAX", "events", "*", "*", "@", "param", "reader", "is", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "parse", "SAX", "events", "*", "/", "public", "void", "setXMLReader", "(", "XMLReader", "reader", ")", "{", "this", ".", "xmlReader", "=", "reader", ";", "}", "/", "**", "*", "Returns", "encoding", "used", "for", "InputSource", "(", "null", "means", "system", "default", "*", "encoding", ")", "*", "*", "@", "return", "encoding", "used", "for", "InputSource", "*", "/", "public", "String", "getEncoding", "(", ")", "{", "return", "encoding", ";", "}", "/", "**", "*", "Sets", "encoding", "used", "for", "InputSource", "(", "null", "means", "system", "default", "encoding", ")", "*", "*", "@", "param", "encoding", "is", "encoding", "used", "for", "InputSource", "*", "/", "public", "void", "setEncoding", "(", "String", "encoding", ")", "{", "this", ".", "encoding", "=", "encoding", ";", "}", "/", "**", "*", "Sets", "the", "class", "name", "of", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "be", "used", "to", "parse", "*", "SAX", "events", ".", "*", "*", "@", "param", "xmlReaderClassName", "is", "the", "class", "name", "of", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "parse", "SAX", "*", "events", "*", "@", "throws", "SAXException", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setXMLReaderClassName", "(", "String", "xmlReaderClassName", ")", "throws", "SAXException", "{", "setXMLReader", "(", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ");", "}", "/", "**", "*", "Adds", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "when", "the", "specified", "*", "path", "is", "encounted", ".", "*", "*", "@", "param", "path", "is", "the", "path", "to", "be", "handled", "*", "@", "param", "handler", "is", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "by", "the", "event", "*", "based", "processor", ".", "*", "/", "public", "void", "addHandler", "(", "String", "path", ",", "ElementHandler", "handler", ")", "{", "getDispatchHandler", "(", ").", "addHandler", "(", "path", ",", "handler", ")", ";", "}", "/", "**", "*", "Removes", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "from", "the", "event", "based", "processor", ",", "*", "for", "the", "specified", "path", ".", "*", "*", "@", "param", "path", "is", "the", "path", "to", "remove", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "for", ".", "*", "/", "public", "void", "removeHandler", "(", "String", "path", ")", "{", "getDispatchHandler", "(", ").", "removeHandler", "(", "path", ")", ";", "}", "/", "**", "*", "When", "multiple", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "instances", "have", "been", "*", "registered", ",", "this", "will", "set", "a", "default", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "*", "called", "for", "any", "path", "which", "does", "<", "b", ">", "NOT", "<", "/", "b", ">", "have", "a", "handler", "registered", ".", "*", "*", "@", "param", "handler", "is", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "by", "the", "event", "*", "based", "processor", ".", "*", "/", "public", "void", "setDefaultHandler", "(", "ElementHandler", "handler", ")", "{", "getDispatchHandler", "(", ").", "setDefaultHandler", "(", "handler", ")", ";", "}", "/", "**", "*", "This", "method", "clears", "out", "all", "the", "existing", "handlers", "and", "default", "handler", "*", "setting", "things", "back", "as", "if", "no", "handler", "existed", ".", "Useful", "when", "reusing", "an", "*", "object", "instance", ".", "*", "/", "public", "void", "resetHandlers", "(", ")", "{", "getDispatchHandler", "(", ").", "resetHandlers", "(", ");", "}", "/", "**", "*", "Returns", "the", "SAX", "filter", "being", "used", "to", "filter", "SAX", "events", ".", "*", "*", "@", "return", "the", "SAX", "filter", "being", "used", "or", "null", "if", "no", "SAX", "filter", "is", "installed", "*", "/", "public", "XMLFilter", "getXMLFilter", "(", ")", "{", "return", "xmlFilter", ";", "}", "/", "**", "*", "Sets", "the", "SAX", "filter", "to", "be", "used", "when", "filtering", "SAX", "events", "*", "*", "@", "param", "filter", "is", "the", "SAX", "filter", "to", "use", "or", "null", "to", "disable", "filtering", "*", "/", "public", "void", "setXMLFilter", "(", "XMLFilter", "filter", ")", "{", "this", ".", "xmlFilter", "=", "filter", ";", "}", "/", "/", "Implementation", "methods", "/", "/", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "/", "**", "*", "Installs", "any", "XMLFilter", "objects", "required", "to", "allow", "the", "SAX", "event", "stream", "to", "*", "be", "filtered", "and", "preprocessed", "before", "it", "gets", "to", "dom4j", ".", "*", "*", "@", "param", "reader", "DOCUMENT", "ME", "!", "*", "@", "return", "the", "new", "XMLFilter", "if", "applicable", "or", "the", "original", "XMLReader", "if", "no", "*", "filter", "is", "being", "used", ".", "*", "/", "protected", "XMLReader", "installXMLFilter", "(", "XMLReader", "reader", ")", "{", "XMLFilter", "filter", "=", "getXMLFilter", "(", ");", "if", "(", "filter", "!", "=", "null", ")", "{", "/", "/", "find", "the", "root", "XMLFilter", "XMLFilter", "root", "=", "filter", ";", "while", "(", "true", ")", "{", "XMLReader", "parent", "=", "root", ".", "getParent", "(", ");", "if", "(", "parent", "instanceof", "XMLFilter", ")", "{", "root", "=", "(", "XMLFilter", ")", "parent", ";", "}", "else", "{", "break", ";", "}", "root", ".", "setParent", "(", "reader", ")", ";", "return", "filter", ";", "return", "reader", ";", "}", "protected", "DispatchHandler", "getDispatchHandler", "(", ")", "{", "if", "(", "dispatchHandler", "=", "=", "null", ")", "{", "dispatchHandler", "=", "new", "DispatchHandler", "(", ");", "}", "return", "dispatchHandler", ";", "}", "protected", "void", "setDispatchHandler", "(", "DispatchHandler", "dispatchHandler", ")", "{", "this", ".", "dispatchHandler", "=", "dispatchHandler", ";", "}", "/", "**", "*", "Factory", "Method", "to", "allow", "alternate", "methods", "of", "creating", "and", "configuring", "*", "XMLReader", "objects", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "@", "throws", "SAXException", "DOCUMENT", "ME", "!", "*", "/", "protected", "XMLReader", "createXMLReader", "(", ")", "throws", "SAXException", "{", "return", "SAXHelper", ".", "createXMLReader", "(", "isValidating", "(", "))", ";", "}", "/", "**", "*", "Configures", "the", "XMLReader", "before", "use", "*", "*", "@", "param", "reader", "DOCUMENT", "ME", "!", "*", "@", "param", "handler", "DOCUMENT", "ME", "!", "*", "@", "throws", "DocumentException", "DOCUMENT", "ME", "!", "*", "/", "protected", "void", "configureReader", "(", "XMLReader", "reader", ",", "DefaultHandler", "handler", ")", "throws", "DocumentException", "{", "/", "/", "configure", "lexical", "handling", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_LEXICALHANDLER", ",", "handler", ")", ";", "/", "/", "try", "alternate", "property", "just", "in", "case", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_LEXICAL_HANDLER", ",", "handler", ")", ";", "/", "/", "register", "the", "DeclHandler", "if", "(", "includeInternalDTDDeclarations", "|", "|", "includeExternalDTDDeclarations", ")", "{", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_DECL_HANDLER", ",", "handler", ")", ";", "}", "/", "/", "string", "interning", "SAXHelper", ".", "setParserFeature", "(", "reader", ",", "SAX_STRING_INTERNING", ",", "isStringInternEnabled", "(", "))", ";", "try", "{", "/", "/", "configure", "validation", "support", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "validation", "\"", ",", "isValidating", "(", "))", ";", "if", "(", "errorHandler", "!", "=", "null", ")", "{", "reader", ".", "setErrorHandler", "(", "errorHandler", ")", ";", "}", "else", "{", "reader", ".", "setErrorHandler", "(", "handler", ")", ";", "}", "}", "catch", "(", "Exception", "e", ")", "{", "if", "(", "isValidating", "(", "))", "{", "throw", "new", "DocumentException", "(", "\"", "Validation", "not", "supported", "for", "\"", "+", "\"", "XMLReader", ":", "\"", "+", "reader", ",", "e", ")", ";", "}", "}", "}", "/", "**", "*", "Factory", "Method", "to", "allow", "user", "derived", "SAXContentHandler", "objects", "to", "be", "used", "*", "*", "@", "param", "reader", "DOCUMENT", "ME", "!", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "protected", "SAXContentHandler", "createContentHandler", "(", "XMLReader", "reader", ")", "{", "return", "new", "SAXContentHandler", "(", "getDocumentFactory", "(", "),", "dispatchHandler", ")", ";", "}", "protected", "EntityResolver", "createDefaultEntityResolver", "(", "String", "systemId", ")", "{", "String", "prefix", "=", "null", ";", "if", "(", "(", "systemId", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "length", "(", ")", ">", "0", ")", ")", "{", "int", "idx", "=", "systemId", ".", "lastIndexOf", "(", "'/", "')", ";", "if", "(", "idx", ">", "0", ")", "{", "prefix", "=", "systemId", ".", "substring", "(", "0", ",", "idx", "+", "1", ")", ";", "}", "}", "return", "new", "SAXEntityResolver", "(", "prefix", ")", ";", "}", "protected", "static", "class", "SAXEntityResolver", "implements", "EntityResolver", ",", "Serializable", "{", "protected", "String", "uriPrefix", ";", "public", "SAXEntityResolver", "(", "String", "uriPrefix", ")", "{", "this", ".", "uriPrefix", "=", "uriPrefix", ";", "}", "public", "InputSource", "resolveEntity", "(", "String", "publicId", ",", "String", "systemId", ")", "{", "/", "/", "try", "create", "a", "relative", "URI", "reader", ".", "..", "if", "(", "(", "systemId", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "length", "(", ")", ">", "0", ")", ")", "{", "if", "(", "(", "uriPrefix", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "indexOf", "(", "':", "')", "<", "=", "0", ")", ")", "{", "systemId", "=", "uriPrefix", "+", "systemId", ";", "}", "return", "new", "InputSource", "(", "systemId", ")", ";", "}", "*", "*", "*", "*", "*", "*", "*</s>*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "SAXReader", "reader", "=", "new", "SAXReader", "(", ");", "try", "{", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "}", "catch", "(", "SAXException", "e", ")", "{", "/", "/", "Parse", "with", "external", "resources", "downloading", "allowed", ".", "}", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "private", "static", "final", "String", "SAX_STRING_INTERNING", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "string", "-", "interning", "\"", ";", "private", "static", "final", "String", "SAX_DECL_HANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "properties", "/", "declaration", "-", "handler", "\"", ";", "private", "static", "final", "String", "SAX_LEXICAL_HANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "properties", "/", "lexical", "-", "handler", "\"", ";", "private", "static", "final", "String", "SAX_LEXICALHANDLER", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "handlers", "/", "LexicalHandler", "\"", ";", "/", "**", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "new", "document", "objects", "*", "/", "private", "DocumentFactory", "factory", ";", "/", "**", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "the", "SAX", "events", "*", "/", "private", "XMLReader", "xmlReader", ";", "/", "**", "Whether", "validation", "should", "occur", "*", "/", "private", "boolean", "validating", ";", "/", "**", "DispatchHandler", "to", "call", "when", "each", "<", "code", ">", "Element", "<", "/", "code", ">", "is", "encountered", "*", "/", "private", "DispatchHandler", "dispatchHandler", ";", "/", "**", "ErrorHandler", "class", "to", "use", "*", "/", "private", "ErrorHandler", "errorHandler", ";", "/", "**", "The", "entity", "resolver", "*", "/", "private", "EntityResolver", "entityResolver", ";", "/", "**", "Should", "element", "&", "attribute", "names", "and", "namespace", "URIs", "be", "interned", "?", "*", "/", "private", "boolean", "stringInternEnabled", "=", "true", ";", "/", "**", "Should", "internal", "DTD", "declarations", "be", "expanded", "into", "a", "List", "in", "the", "DTD", "*", "/", "private", "boolean", "includeInternalDTDDeclarations", "=", "false", ";", "/", "**", "Should", "external", "DTD", "declarations", "be", "expanded", "into", "a", "List", "in", "the", "DTD", "*", "/", "private", "boolean", "includeExternalDTDDeclarations", "=", "false", ";", "/", "**", "Whether", "adjacent", "text", "nodes", "should", "be", "merged", "*", "/", "private", "boolean", "mergeAdjacentText", "=", "false", ";", "/", "**", "Holds", "value", "of", "property", "stripWhitespaceText", ".", "*", "/", "private", "boolean", "stripWhitespaceText", "=", "false", ";", "/", "**", "Should", "we", "ignore", "comments", "*", "/", "private", "boolean", "ignoreComments", "=", "false", ";", "/", "**", "Encoding", "of", "InputSource", "-", "null", "means", "system", "default", "encoding", "*", "/", "private", "String", "encoding", "=", "null", ";", "/", "/", "private", "boolean", "includeExternalGeneralEntities", "=", "false", ";", "/", "/", "private", "boolean", "includeExternalParameterEntities", "=", "false", ";", "/", "**", "The", "SAX", "filter", "used", "to", "filter", "SAX", "events", "*", "/", "private", "XMLFilter", "xmlFilter", ";", "public", "SAXReader", "(", ")", "{", "}", "public", "SAXReader", "(", "boolean", "validating", ")", "{", "this", ".", "validating", "=", "validating", ";", "}", "public", "SAXReader", "(", "DocumentFactory", "factory", ")", "{", "this", ".", "factory", "=", "factory", ";", "}", "public", "SAXReader", "(", "DocumentFactory", "factory", ",", "boolean", "validating", ")", "{", "this", ".", "factory", "=", "factory", ";", "this", ".", "validating", "=", "validating", ";", "}", "public", "SAXReader", "(", "XMLReader", "xmlReader", ")", "{", "this", ".", "xmlReader", "=", "xmlReader", ";", "}", "public", "SAXReader", "(", "XMLReader", "xmlReader", ",", "boolean", "validating", ")", "{", "this", ".", "xmlReader", "=", "xmlReader", ";", "this", ".", "validating", "=", "validating", ";", "}", "public", "SAXReader", "(", "String", "xmlReaderClassName", ")", "throws", "SAXException", "{", "if", "(", "xmlReaderClassName", "!", "=", "null", ")", "{", "this", ".", "xmlReader", "=", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ";", "}", "public", "SAXReader", "(", "String", "xmlReaderClassName", ",", "boolean", "validating", ")", "throws", "SAXException", "{", "if", "(", "xmlReaderClassName", "!", "=", "null", ")", "{", "this", ".", "xmlReader", "=", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ";", "this", ".", "validating", "=", "validating", ";", "}", "/", "**", "*", "Allows", "a", "SAX", "property", "to", "be", "set", "on", "the", "underlying", "SAX", "parser", ".", "This", "can", "be", "*", "useful", "to", "set", "parser", "-", "specific", "properties", "such", "as", "the", "location", "of", "schema", "*", "or", "DTD", "resources", ".", "Though", "use", "this", "method", "with", "caution", "as", "it", "has", "the", "*", "possibility", "of", "breaking", "the", "standard", "behaviour", ".", "An", "alternative", "to", "calling", "*", "this", "method", "is", "to", "correctly", "configure", "an", "XMLReader", "object", "instance", "and", "*", "call", "the", "{", "@", "link", "#", "setXMLReader", "(", "XMLReader", ")", "}", "method", "*", "*", "@", "param", "name", "*", "is", "the", "SAX", "property", "name", "*", "@", "param", "value", "*", "is", "the", "value", "of", "the", "SAX", "property", "*", "*", "@", "throws", "SAXException", "*", "if", "the", "XMLReader", "could", "not", "be", "created", "or", "the", "property", "could", "*", "not", "be", "changed", ".", "*", "/", "public", "void", "setProperty", "(", "String", "name", ",", "Object", "value", ")", "throws", "SAXException", "{", "getXMLReader", "(", ").", "setProperty", "(", "name", ",", "value", ")", ";", "}", "/", "**", "*", "Sets", "a", "SAX", "feature", "on", "the", "underlying", "SAX", "parser", ".", "This", "can", "be", "useful", "to", "*", "set", "parser", "-", "specific", "features", ".", "Though", "use", "this", "method", "with", "caution", "as", "it", "*", "has", "the", "possibility", "of", "breaking", "the", "standard", "behaviour", ".", "An", "alternative", "to", "*", "calling", "this", "method", "is", "to", "correctly", "configure", "an", "XMLReader", "object", "*", "instance", "and", "call", "the", "{", "@", "link", "#", "setXMLReader", "(", "XMLReader", ")", "}", "method", "*", "*", "@", "param", "name", "*", "is", "the", "SAX", "feature", "name", "*", "@", "param", "value", "*", "is", "the", "value", "of", "the", "SAX", "feature", "*", "*", "@", "throws", "SAXException", "*", "if", "the", "XMLReader", "could", "not", "be", "created", "or", "the", "feature", "could", "*", "not", "be", "changed", ".", "*", "/", "public", "void", "setFeature", "(", "String", "name", ",", "boolean", "value", ")", "throws", "SAXException", "{", "getXMLReader", "(", ").", "setFeature", "(", "name", ",", "value", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "File", "<", "/", "code", ">", "*", "<", "/", "p", ">", "*", "*", "@", "param", "file", "*", "is", "the", "<", "code", ">", "File", "<", "/", "code", ">", "to", "read", "from", ".", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "File", "file", ")", "throws", "DocumentException", "{", "try", "{", "/", "*", "*", "We", "cannot", "convert", "the", "file", "to", "an", "URL", "because", "if", "the", "filename", "*", "contains", "'", "#'", "characters", ",", "there", "will", "be", "problems", "with", "the", "URL", "in", "*", "the", "InputSource", "(", "because", "a", "URL", "like", "*", "http", ":", "//", "myhost", ".", "com", "/", "index", "#", "anchor", "is", "treated", "the", "same", "as", "*", "http", ":", "//", "myhost", ".", "com", "/", "index", ")", "Thanks", "to", "Christian", "Oetterli", "*", "/", "InputSource", "source", "=", "new", "InputSource", "(", "new", "FileInputStream", "(", "file", ")", ");", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "String", "path", "=", "file", ".", "getAbsolutePath", "(", ");", "if", "(", "path", "!", "=", "null", ")", "{", "/", "/", "Code", "taken", "from", "Ant", "FileUtils", "StringBuffer", "sb", "=", "new", "StringBuffer", "(", "\"", "file", ":", "//", "\")", ";", "/", "/", "add", "an", "extra", "slash", "for", "filesystems", "with", "drive", "-", "specifiers", "if", "(", "!", "path", ".", "startsWith", "(", "File", ".", "separator", ")", ")", "{", "sb", ".", "append", "(", "\"/", "\")", ";", "}", "path", "=", "path", ".", "replace", "(", "'\\", "\\'", ",", "'", "/'", ");", "sb", ".", "append", "(", "path", ")", ";", "source", ".", "setSystemId", "(", "sb", ".", "toString", "(", "))", ";", "}", "return", "read", "(", "source", ")", ";", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "throw", "new", "DocumentException", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "URL", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "url", "*", "<", "code", ">", "URL", "<", "/", "code", ">", "to", "read", "from", ".", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "URL", "url", ")", "throws", "DocumentException", "{", "String", "systemID", "=", "url", ".", "toExternalForm", "(", ");", "InputSource", "source", "=", "new", "InputSource", "(", "systemID", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "URL", "or", "filename", "using", "SAX", ".", "*", "<", "/", "p", ">", "*", "*", "<", "p", ">", "*", "If", "the", "systemId", "contains", "a", "<", "code", ">", "':", "'<", "/", "code", ">", "character", "then", "it", "is", "*", "assumed", "to", "be", "a", "URL", "otherwise", "its", "assumed", "to", "be", "a", "file", "name", ".", "If", "you", "want", "*", "finer", "grained", "control", "over", "this", "mechansim", "then", "please", "explicitly", "pass", "in", "*", "either", "a", "{", "@", "link", "URL", "}", "or", "a", "{", "@", "link", "File", "}", "instance", "instead", "of", "a", "{", "@", "link", "*", "String", "}", "to", "denote", "the", "source", "of", "the", "document", ".", "*", "<", "/", "p", ">", "*", "*", "@", "param", "systemId", "*", "is", "a", "URL", "for", "a", "document", "or", "a", "file", "name", ".", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "stream", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "*", "<", "code", ">", "InputStream", "<", "/", "code", ">", "to", "read", "from", ".", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputStream", "in", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "in", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "Reader", "<", "/", "code", ">", "using", "SAX", "*", "*", "@", "param", "reader", "*", "is", "the", "reader", "for", "the", "input", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "Reader", "reader", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "reader", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "stream", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "*", "<", "code", ">", "InputStream", "<", "/", "code", ">", "to", "read", "from", ".", "*", "@", "param", "systemId", "*", "is", "the", "URI", "for", "the", "input", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputStream", "in", ",", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "in", ")", ";", "source", ".", "setSystemId", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "Reader", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "reader", "*", "is", "the", "reader", "for", "the", "input", "*", "@", "param", "systemId", "*", "is", "the", "URI", "for", "the", "input", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "Reader", "reader", ",", "String", "systemId", ")", "throws", "DocumentException", "{", "InputSource", "source", "=", "new", "InputSource", "(", "reader", ")", ";", "source", ".", "setSystemId", "(", "systemId", ")", ";", "if", "(", "this", ".", "encoding", "!", "=", "null", ")", "{", "source", ".", "setEncoding", "(", "this", ".", "encoding", ")", ";", "}", "return", "read", "(", "source", ")", ";", "}", "/", "**", "*", "<", "p", ">", "*", "Reads", "a", "Document", "from", "the", "given", "<", "code", ">", "InputSource", "<", "/", "code", ">", "using", "SAX", "*", "<", "/", "p", ">", "*", "*", "@", "param", "in", "*", "<", "code", ">", "InputSource", "<", "/", "code", ">", "to", "read", "from", ".", "*", "*", "@", "return", "the", "newly", "created", "Document", "instance", "*", "*", "@", "throws", "DocumentException", "*", "if", "an", "error", "occurs", "during", "parsing", ".", "*", "/", "public", "Document", "read", "(", "InputSource", "in", ")", "throws", "DocumentException", "{", "try", "{", "XMLReader", "reader", "=", "getXMLReader", "(", ");", "reader", "=", "installXMLFilter", "(", "reader", ")", ";", "EntityResolver", "thatEntityResolver", "=", "this", ".", "entityResolver", ";", "if", "(", "thatEntityResolver", "=", "=", "null", ")", "{", "thatEntityResolver", "=", "createDefaultEntityResolver", "(", "in", ".", "getSystemId", "(", "))", ";", "this", ".", "entityResolver", "=", "thatEntityResolver", ";", "}", "reader", ".", "setEntityResolver", "(", "thatEntityResolver", ")", ";", "SAXContentHandler", "contentHandler", "=", "createContentHandler", "(", "reader", ")", ";", "contentHandler", ".", "setEntityResolver", "(", "thatEntityResolver", ")", ";", "contentHandler", ".", "setInputSource", "(", "in", ")", ";", "boolean", "internal", "=", "isIncludeInternalDTDDeclarations", "(", ");", "boolean", "external", "=", "isIncludeExternalDTDDeclarations", "(", ");", "contentHandler", ".", "setIncludeInternalDTDDeclarations", "(", "internal", ")", ";", "contentHandler", ".", "setIncludeExternalDTDDeclarations", "(", "external", ")", ";", "contentHandler", ".", "setMergeAdjacentText", "(", "isMergeAdjacentText", "(", "))", ";", "contentHandler", ".", "setStripWhitespaceText", "(", "isStripWhitespaceText", "(", "))", ";", "contentHandler", ".", "setIgnoreComments", "(", "isIgnoreComments", "(", "))", ";", "reader", ".", "setContentHandler", "(", "contentHandler", ")", ";", "configureReader", "(", "reader", ",", "contentHandler", ")", ";", "reader", ".", "parse", "(", "in", ")", ";", "return", "contentHandler", ".", "getDocument", "(", ");", "}", "catch", "(", "Exception", "e", ")", "{", "if", "(", "e", "instanceof", "SAXParseException", ")", "{", "/", "/", "e", ".", "printStackTrace", "(", ");", "SAXParseException", "parseException", "=", "(", "SAXParseException", ")", "e", ";", "String", "systemId", "=", "parseException", ".", "getSystemId", "(", ");", "if", "(", "systemId", "=", "=", "null", ")", "{", "systemId", "=", "\"", "\";", "}", "String", "message", "=", "\"", "Error", "on", "line", "\"", "+", "parseException", ".", "getLineNumber", "(", ")", "+", "\"", "of", "document", "\"", "+", "systemId", "+", "\"", ":", "\"", "+", "parseException", ".", "getMessage", "(", ");", "throw", "new", "DocumentException", "(", "message", ",", "e", ")", ";", "}", "else", "{", "throw", "new", "DocumentException", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "}", "}", "/", "/", "Properties", "/", "/", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "validation", "mode", ",", "true", "if", "validating", "will", "be", "done", "otherwise", "*", "false", ".", "*", "/", "public", "boolean", "isValidating", "(", ")", "{", "return", "validating", ";", "}", "/", "**", "*", "Sets", "the", "validation", "mode", ".", "*", "*", "@", "param", "validation", "*", "indicates", "whether", "or", "not", "validation", "should", "occur", ".", "*", "/", "public", "void", "setValidation", "(", "boolean", "validation", ")", "{", "this", ".", "validating", "=", "validation", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "whether", "internal", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "/", "public", "boolean", "isIncludeInternalDTDDeclarations", "(", ")", "{", "return", "includeInternalDTDDeclarations", ";", "}", "/", "**", "*", "Sets", "whether", "internal", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "*", "@", "param", "include", "*", "whether", "or", "not", "DTD", "declarations", "should", "be", "expanded", "and", "*", "included", "into", "the", "DocumentType", "object", ".", "*", "/", "public", "void", "setIncludeInternalDTDDeclarations", "(", "boolean", "include", ")", "{", "this", ".", "includeInternalDTDDeclarations", "=", "include", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "whether", "external", "DTD", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "/", "public", "boolean", "isIncludeExternalDTDDeclarations", "(", ")", "{", "return", "includeExternalDTDDeclarations", ";", "}", "/", "**", "*", "Sets", "whether", "DTD", "external", "declarations", "should", "be", "expanded", "into", "the", "*", "DocumentType", "object", "or", "not", ".", "*", "*", "@", "param", "include", "*", "whether", "or", "not", "DTD", "declarations", "should", "be", "expanded", "and", "*", "included", "into", "the", "DocumentType", "object", ".", "*", "/", "public", "void", "setIncludeExternalDTDDeclarations", "(", "boolean", "include", ")", "{", "this", ".", "includeExternalDTDDeclarations", "=", "include", ";", "}", "/", "**", "*", "Sets", "whether", "String", "interning", "is", "enabled", "or", "disabled", "for", "element", "&", "amp", ";", "*", "attribute", "names", "and", "namespace", "URIs", ".", "This", "proprety", "is", "enabled", "by", "default", ".", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "public", "boolean", "isStringInternEnabled", "(", ")", "{", "return", "stringInternEnabled", ";", "}", "/", "**", "*", "Sets", "whether", "String", "interning", "is", "enabled", "or", "disabled", "for", "element", "&", "amp", ";", "*", "attribute", "names", "and", "namespace", "URIs", "*", "*", "@", "param", "stringInternEnabled", "*", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setStringInternEnabled", "(", "boolean", "stringInternEnabled", ")", "{", "this", ".", "stringInternEnabled", "=", "stringInternEnabled", ";", "}", "/", "**", "*", "Returns", "whether", "adjacent", "text", "nodes", "should", "be", "merged", "together", ".", "*", "*", "@", "return", "Value", "of", "property", "mergeAdjacentText", ".", "*", "/", "public", "boolean", "isMergeAdjacentText", "(", ")", "{", "return", "mergeAdjacentText", ";", "}", "/", "**", "*", "Sets", "whether", "or", "not", "adjacent", "text", "nodes", "should", "be", "merged", "together", "when", "*", "parsing", ".", "*", "*", "@", "param", "mergeAdjacentText", "*", "New", "value", "of", "property", "mergeAdjacentText", ".", "*", "/", "public", "void", "setMergeAdjacentText", "(", "boolean", "mergeAdjacentText", ")", "{", "this", ".", "mergeAdjacentText", "=", "mergeAdjacentText", ";", "}", "/", "**", "*", "Sets", "whether", "whitespace", "between", "element", "start", "and", "end", "tags", "should", "be", "*", "ignored", "*", "*", "@", "return", "Value", "of", "property", "stripWhitespaceText", ".", "*", "/", "public", "boolean", "isStripWhitespaceText", "(", ")", "{", "return", "stripWhitespaceText", ";", "}", "/", "**", "*", "Sets", "whether", "whitespace", "between", "element", "start", "and", "end", "tags", "should", "be", "*", "ignored", ".", "*", "*", "@", "param", "stripWhitespaceText", "*", "New", "value", "of", "property", "stripWhitespaceText", ".", "*", "/", "public", "void", "setStripWhitespaceText", "(", "boolean", "stripWhitespaceText", ")", "{", "this", ".", "stripWhitespaceText", "=", "stripWhitespaceText", ";", "}", "/", "**", "*", "Returns", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "*", "@", "return", "boolean", "*", "/", "public", "boolean", "isIgnoreComments", "(", ")", "{", "return", "ignoreComments", ";", "}", "/", "**", "*", "Sets", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "*", "@", "param", "ignoreComments", "*", "whether", "we", "should", "ignore", "comments", "or", "not", ".", "*", "/", "public", "void", "setIgnoreComments", "(", "boolean", "ignoreComments", ")", "{", "this", ".", "ignoreComments", "=", "ignoreComments", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "document", "*", "objects", "*", "/", "public", "DocumentFactory", "getDocumentFactory", "(", ")", "{", "if", "(", "factory", "=", "=", "null", ")", "{", "factory", "=", "DocumentFactory", ".", "getInstance", "(", ");", "}", "return", "factory", ";", "}", "/", "**", "*", "<", "p", ">", "*", "This", "sets", "the", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "new", "*", "documents", ".", "This", "method", "allows", "the", "building", "of", "custom", "DOM4J", "tree", "objects", "*", "to", "be", "implemented", "easily", "using", "a", "custom", "derivation", "of", "*", "{", "@", "link", "DocumentFactory", "}", "*", "<", "/", "p", ">", "*", "*", "@", "param", "documentFactory", "*", "<", "code", ">", "DocumentFactory", "<", "/", "code", ">", "used", "to", "create", "DOM4J", "objects", "*", "/", "public", "void", "setDocumentFactory", "(", "DocumentFactory", "documentFactory", ")", "{", "this", ".", "factory", "=", "documentFactory", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "SAX", "*", "/", "public", "ErrorHandler", "getErrorHandler", "(", ")", "{", "return", "errorHandler", ";", "}", "/", "**", "*", "Sets", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "the", "SAX", "*", "<", "code", ">", "XMLReader", "<", "/", "code", ">", ".", "*", "*", "@", "param", "errorHandler", "*", "is", "the", "<", "code", ">", "ErrorHandler", "<", "/", "code", ">", "used", "by", "SAX", "*", "/", "public", "void", "setErrorHandler", "(", "ErrorHandler", "errorHandler", ")", "{", "this", ".", "errorHandler", "=", "errorHandler", ";", "}", "/", "**", "*", "Returns", "the", "current", "entity", "resolver", "used", "to", "resolve", "entities", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "public", "EntityResolver", "getEntityResolver", "(", ")", "{", "return", "entityResolver", ";", "}", "/", "**", "*", "Sets", "the", "entity", "resolver", "used", "to", "resolve", "entities", ".", "*", "*", "@", "param", "entityResolver", "*", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setEntityResolver", "(", "EntityResolver", "entityResolver", ")", "{", "this", ".", "entityResolver", "=", "entityResolver", ";", "}", "/", "**", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "SAX", "events", "*", "*", "@", "throws", "SAXException", "*", "DOCUMENT", "ME", "!", "*", "/", "public", "XMLReader", "getXMLReader", "(", ")", "throws", "SAXException", "{", "if", "(", "xmlReader", "=", "=", "null", ")", "{", "xmlReader", "=", "createXMLReader", "(", ");", "}", "return", "xmlReader", ";", "}", "/", "**", "*", "Sets", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "used", "to", "parse", "SAX", "events", "*", "*", "@", "param", "reader", "*", "is", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "parse", "SAX", "events", "*", "/", "public", "void", "setXMLReader", "(", "XMLReader", "reader", ")", "{", "this", ".", "xmlReader", "=", "reader", ";", "}", "/", "**", "*", "Returns", "encoding", "used", "for", "InputSource", "(", "null", "means", "system", "default", "*", "encoding", ")", "*", "*", "@", "return", "encoding", "used", "for", "InputSource", "*", "*", "/", "public", "String", "getEncoding", "(", ")", "{", "return", "encoding", ";", "}", "/", "**", "*", "Sets", "encoding", "used", "for", "InputSource", "(", "null", "means", "system", "default", "encoding", ")", "*", "*", "@", "param", "encoding", "*", "is", "encoding", "used", "for", "InputSource", "*", "/", "public", "void", "setEncoding", "(", "String", "encoding", ")", "{", "this", ".", "encoding", "=", "encoding", ";", "}", "/", "**", "*", "Sets", "the", "class", "name", "of", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "be", "used", "to", "parse", "*", "SAX", "events", ".", "*", "*", "@", "param", "xmlReaderClassName", "*", "is", "the", "class", "name", "of", "the", "<", "code", ">", "XMLReader", "<", "/", "code", ">", "to", "parse", "SAX", "*", "events", "*", "*", "@", "throws", "SAXException", "*", "DOCUMENT", "ME", "!", "*", "/", "public", "void", "setXMLReaderClassName", "(", "String", "xmlReaderClassName", ")", "throws", "SAXException", "{", "setXMLReader", "(", "XMLReaderFactory", ".", "createXMLReader", "(", "xmlReaderClassName", ")", ");", "}", "/", "**", "*", "Adds", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "when", "the", "specified", "*", "path", "is", "encounted", ".", "*", "*", "@", "param", "path", "*", "is", "the", "path", "to", "be", "handled", "*", "@", "param", "handler", "*", "is", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "by", "the", "event", "*", "based", "processor", ".", "*", "/", "public", "void", "addHandler", "(", "String", "path", ",", "ElementHandler", "handler", ")", "{", "getDispatchHandler", "(", ").", "addHandler", "(", "path", ",", "handler", ")", ";", "}", "/", "**", "*", "Removes", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "from", "the", "event", "based", "processor", ",", "*", "for", "the", "specified", "path", ".", "*", "*", "@", "param", "path", "*", "is", "the", "path", "to", "remove", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "for", ".", "*", "/", "public", "void", "removeHandler", "(", "String", "path", ")", "{", "getDispatchHandler", "(", ").", "removeHandler", "(", "path", ")", ";", "}", "/", "**", "*", "When", "multiple", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "instances", "have", "been", "*", "registered", ",", "this", "will", "set", "a", "default", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "*", "called", "for", "any", "path", "which", "does", "<", "b", ">", "NOT", "<", "/", "b", ">", "have", "a", "handler", "registered", ".", "*", "*", "@", "param", "handler", "*", "is", "the", "<", "code", ">", "ElementHandler", "<", "/", "code", ">", "to", "be", "called", "by", "the", "event", "*", "based", "processor", ".", "*", "/", "public", "void", "setDefaultHandler", "(", "ElementHandler", "handler", ")", "{", "getDispatchHandler", "(", ").", "setDefaultHandler", "(", "handler", ")", ";", "}", "/", "**", "*", "This", "method", "clears", "out", "all", "the", "existing", "handlers", "and", "default", "handler", "*", "setting", "things", "back", "as", "if", "no", "handler", "existed", ".", "Useful", "when", "reusing", "an", "*", "object", "instance", ".", "*", "/", "public", "void", "resetHandlers", "(", ")", "{", "getDispatchHandler", "(", ").", "resetHandlers", "(", ");", "}", "/", "**", "*", "Returns", "the", "SAX", "filter", "being", "used", "to", "filter", "SAX", "events", ".", "*", "*", "@", "return", "the", "SAX", "filter", "being", "used", "or", "null", "if", "no", "SAX", "filter", "is", "installed", "*", "/", "public", "XMLFilter", "getXMLFilter", "(", ")", "{", "return", "xmlFilter", ";", "}", "/", "**", "*", "Sets", "the", "SAX", "filter", "to", "be", "used", "when", "filtering", "SAX", "events", "*", "*", "@", "param", "filter", "*", "is", "the", "SAX", "filter", "to", "use", "or", "null", "to", "disable", "filtering", "*", "/", "public", "void", "setXMLFilter", "(", "XMLFilter", "filter", ")", "{", "this", ".", "xmlFilter", "=", "filter", ";", "}", "/", "/", "Implementation", "methods", "/", "/", "/", "**", "*", "Installs", "any", "XMLFilter", "objects", "required", "to", "allow", "the", "SAX", "event", "stream", "to", "*", "be", "filtered", "and", "preprocessed", "before", "it", "gets", "to", "dom4j", ".", "*", "*", "@", "param", "reader", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "the", "new", "XMLFilter", "if", "applicable", "or", "the", "original", "XMLReader", "if", "no", "*", "filter", "is", "being", "used", ".", "*", "/", "protected", "XMLReader", "installXMLFilter", "(", "XMLReader", "reader", ")", "{", "XMLFilter", "filter", "=", "getXMLFilter", "(", ");", "if", "(", "filter", "!", "=", "null", ")", "{", "/", "/", "find", "the", "root", "XMLFilter", "XMLFilter", "root", "=", "filter", ";", "while", "(", "true", ")", "{", "XMLReader", "parent", "=", "root", ".", "getParent", "(", ");", "if", "(", "parent", "instanceof", "XMLFilter", ")", "{", "root", "=", "(", "XMLFilter", ")", "parent", ";", "}", "else", "{", "break", ";", "}", "}", "root", ".", "setParent", "(", "reader", ")", ";", "return", "filter", ";", "}", "return", "reader", ";", "}", "protected", "DispatchHandler", "getDispatchHandler", "(", ")", "{", "if", "(", "dispatchHandler", "=", "=", "null", ")", "{", "dispatchHandler", "=", "new", "DispatchHandler", "(", ");", "}", "return", "dispatchHandler", ";", "}", "protected", "void", "setDispatchHandler", "(", "DispatchHandler", "dispatchHandler", ")", "{", "this", ".", "dispatchHandler", "=", "dispatchHandler", ";", "}", "/", "**", "*", "Factory", "Method", "to", "allow", "alternate", "methods", "of", "creating", "and", "configuring", "*", "XMLReader", "objects", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "*", "@", "throws", "SAXException", "*", "DOCUMENT", "ME", "!", "*", "/", "protected", "XMLReader", "createXMLReader", "(", ")", "throws", "SAXException", "{", "return", "SAXHelper", ".", "createXMLReader", "(", "isValidating", "(", "))", ";", "}", "/", "**", "*", "Configures", "the", "XMLReader", "before", "use", "*", "*", "@", "param", "reader", "*", "DOCUMENT", "ME", "!", "*", "@", "param", "handler", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "throws", "DocumentException", "*", "DOCUMENT", "ME", "!", "*", "/", "protected", "void", "configureReader", "(", "XMLReader", "reader", ",", "DefaultHandler", "handler", ")", "throws", "DocumentException", "{", "/", "/", "configure", "lexical", "handling", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_LEXICALHANDLER", ",", "handler", ")", ";", "/", "/", "try", "alternate", "property", "just", "in", "case", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_LEXICAL_HANDLER", ",", "handler", ")", ";", "/", "/", "register", "the", "DeclHandler", "if", "(", "includeInternalDTDDeclarations", "|", "|", "includeExternalDTDDeclarations", ")", "{", "SAXHelper", ".", "setParserProperty", "(", "reader", ",", "SAX_DECL_HANDLER", ",", "handler", ")", ";", "}", "/", "/", "string", "interning", "SAXHelper", ".", "setParserFeature", "(", "reader", ",", "SAX_STRING_INTERNING", ",", "isStringInternEnabled", "(", "))", ";", "try", "{", "/", "/", "configure", "validation", "support", "reader", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "validation", "\"", ",", "isValidating", "(", "))", ";", "if", "(", "errorHandler", "!", "=", "null", ")", "{", "reader", ".", "setErrorHandler", "(", "errorHandler", ")", ";", "}", "else", "{", "reader", ".", "setErrorHandler", "(", "handler", ")", ";", "}", "}", "catch", "(", "Exception", "e", ")", "{", "if", "(", "isValidating", "(", "))", "{", "throw", "new", "DocumentException", "(", "\"", "Validation", "not", "supported", "for", "\"", "+", "\"", "XMLReader", ":", "\"", "+", "reader", ",", "e", ")", ";", "}", "}", "}", "/", "**", "*", "Factory", "Method", "to", "allow", "user", "derived", "SAXContentHandler", "objects", "to", "be", "used", "*", "*", "@", "param", "reader", "*", "DOCUMENT", "ME", "!", "*", "*", "@", "return", "DOCUMENT", "ME", "!", "*", "/", "protected", "SAXContentHandler", "createContentHandler", "(", "XMLReader", "reader", ")", "{", "return", "new", "SAXContentHandler", "(", "getDocumentFactory", "(", "),", "dispatchHandler", ")", ";", "}", "protected", "EntityResolver", "createDefaultEntityResolver", "(", "String", "systemId", ")", "{", "String", "prefix", "=", "null", ";", "if", "(", "(", "systemId", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "length", "(", ")", ">", "0", ")", ")", "{", "int", "idx", "=", "systemId", ".", "lastIndexOf", "(", "'/", "')", ";", "if", "(", "idx", ">", "0", ")", "{", "prefix", "=", "systemId", ".", "substring", "(", "0", ",", "idx", "+", "1", ")", ";", "}", "}", "return", "new", "SAXEntityResolver", "(", "prefix", ")", ";", "}", "protected", "static", "class", "SAXEntityResolver", "implements", "EntityResolver", ",", "Serializable", "{", "protected", "String", "uriPrefix", ";", "public", "SAXEntityResolver", "(", "String", "uriPrefix", ")", "{", "this", ".", "uriPrefix", "=", "uriPrefix", ";", "}", "public", "InputSource", "resolveEntity", "(", "String", "publicId", ",", "String", "systemId", ")", "{", "/", "/", "try", "create", "a", "relative", "URI", "reader", ".", "..", "if", "(", "(", "systemId", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "length", "(", ")", ">", "0", ")", ")", "{", "if", "(", "(", "uriPrefix", "!", "=", "null", ")", "&", "&", "(", "systemId", ".", "indexOf", "(", "':", "')", "<", "=", "0", ")", ")", "{", "systemId", "=", "uriPrefix", "+", "systemId", ";", "}", "}", "return", "new", "InputSource", "(", "systemId", ")", ";", "}", "*", "*", "*", "*", "*", "*", "*"], "docstring_tokens": ["xml", "external", "entity", "(xxe", ")"]}
{"contents": ["empty"], "code_tokens": ["int", "slot", ",", "blocks_in_map", ";", "if", "(", "blocks_in_map", "<", "0", "|", "|", "blocks_in_map", ">", "=", "DISK_MAX_PARTS", ")", "{", "put_dev_sector", "(", "sect", ")", ";", "return", "0", ";", "}", "strlcat", "(", "state", "-", ">", "pp_buf", ",", "\"", "[", "mac", "]", "\",", "PAGE_SIZE", ")", ";", "for", "(", "slot", "=", "1", ";", "slot", "<", "=", "blocks_in_map", ";", "+", "+", "slot", ")", "{", "int", "pos", "=", "slot", "*", "secsize", ";", "found_root", "=", "slot", ";</s>int", "slot", "=", "1", ";", "int", "blk", ",", "blocks_in_map", ";", "strlcat", "(", "state", "-", ">", "pp_buf", ",", "\"", "[", "mac", "]", "\",", "PAGE_SIZE", ")", ";", "for", "(", "blk", "=", "1", ";", "blk", "<", "=", "blocks_in_map", ";", "+", "+", "blk", ")", "{", "int", "pos", "=", "blk", "*", "secsize", ";", "found_root", "=", "blk", ";", "+", "+", "slot", ";"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["<", "version", ">", "1", ".", "23", "<", "/", "version", ">", "@", "Issue", "(", "\"", "SECURITY", "-", "1538", "\"", ")", "@", "Test", "public", "void", "blockMethodNameInMethodCalls", "(", ")", "throws", "Exception", "{", "assertRejected", "(", "new", "GenericWhitelist", "(", "),", "\"", "staticMethod", "jenkins", ".", "model", ".", "Jenkins", "getInstance", "\"", ",", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "1", ".", "({", "Jenkins", ".", "getInstance", "(", ");", "'", "toString", "'", "}", "()", ")(", ")\"", ");", "}", "@", "Issue", "(", "\"", "SECURITY", "-", "1538", "\"", ")", "@", "Test", "public", "void", "blockPropertyNameInAssignment", "(", ")", "throws", "Exception", "{", "assertRejected", "(", "new", "GenericWhitelist", "(", "),", "\"", "staticMethod", "jenkins", ".", "model", ".", "Jenkins", "getInstance", "\"", ",", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "class", "Test", "{", "def", "x", "=", "0", "}", "\\", "n", "\"", "\"", "def", "t", "=", "new", "Test", "(", ")\\", "n", "\"", "\"", "t", ".", "({", "Jenkins", ".", "getInstance", "(", ");", "'", "x", "'", "}", "()", ")", "=", "1", "\\", "n", "\"", ");", "}", "@", "Issue", "(", "\"", "SECURITY", "-", "1538", "\"", ")", "@", "Test", "public", "void", "blockPropertyNameInPrefixPostfixExpressions", "(", ")", "throws", "Exception", "{", "assertRejected", "(", "new", "GenericWhitelist", "(", "),", "\"", "staticMethod", "jenkins", ".", "model", ".", "Jenkins", "getInstance", "\"", ",", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "class", "Test", "{", "def", "x", "=", "0", "}", "\\", "n", "\"", "\"", "def", "t", "=", "new", "Test", "(", ")\\", "n", "\"", "\"", "t", ".", "({", "Jenkins", ".", "getInstance", "(", ");", "'", "x", "'", "}", "()", ")+", "+\\", "n", "\"", ");", "}", "@", "Issue", "(", "\"", "SECURITY", "-", "1538", "\"", ")", "@", "Test", "public", "void", "blockSubexpressionsInPrefixPostfixExpressions", "(", ")", "throws", "Exception", "{", "assertRejected", "(", "new", "GenericWhitelist", "(", "),", "\"", "staticMethod", "jenkins", ".", "model", ".", "Jenkins", "getInstance", "\"", ",", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "++", "({", "Jenkins", ".", "getInstance", "(", ");", "1", "}", "()", ")\\", "n", "\"", ");", "assertRejected", "(", "new", "GenericWhitelist", "(", "),", "\"", "staticMethod", "jenkins", ".", "model", ".", "Jenkins", "getInstance", "\"", ",", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "({", "Jenkins", ".", "getInstance", "(", ");", "1", "}", "()", ")+", "+\\", "n", "\"", ");", "}</s><", "version", ">", "1", ".", "22", "<", "/", "version", ">"], "docstring_tokens": ["sandbox", "bypass"]}
{"contents": ["empty"], "code_tokens": ["import", "static", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTokens", ".", "CARRIAGE_RETURN", ";", "import", "static", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTokens", ".", "LINE_FEED", ";", "import", "static", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTokens", ".", "SPACE", ";", "import", "static", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTokens", ".", "TAB", ";", "private", "final", "static", "int", "MAX_CHUNK_LENGTH", "=", "Integer", ".", "MAX_VALUE", "/", "16", "-", "16", ";", "private", "boolean", "_hasContentLength", ";", "this", "(", "code", ",", "message", ",", "null", ")", ";", "}", "private", "BadMessageException", "(", "int", "code", ",", "String", "message", ",", "Throwable", "cause", ")", "{", "super", "(", "message", ",", "cause", ")", ";", "{", "else", "if", "(", "ch", "!", "='", "\\", "n", "'", ")", "else", "if", "(", "version", "!", "=", "HttpVersion", ".", "HTTP_1_0", "&", "&", "version", "!", "=", "HttpVersion", ".", "HTTP_1_1", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Version", "\"", ");", "if", "(", "_version", "!", "=", "HttpVersion", ".", "HTTP_1_0", "&", "&", "_version", "!", "=", "HttpVersion", ".", "HTTP_1_1", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Version", "\"", ");", "if", "(", "_connectionFields", "=", "=", "null", "&", "&", "_version", ".", "getVersion", "(", ")=", "=", "HttpVersion", ".", "HTTP_1_1", ".", "getVersion", "(", "))", "if", "(", "_hasContentLength", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Content", "-", "Lengths", "\"", ");", "_hasContentLength", "=", "true", ";", "if", "(", "_endOfContent", "=", "=", "EndOfContent", ".", "CHUNKED_CONTENT", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Content", "-", "Length", "\"", ");", "try", "_contentLength", "=", "Long", ".", "parseLong", "(", "_valueString", ")", ";", "catch", "(", "NumberFormatException", "e", ")", "{", "LOG", ".", "ignore", "(", "e", ")", ";", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Content", "-", "Length", "\"", ");", "}", "if", "(", "_contentLength", "<", "=", "0", ")", "_endOfContent", "=", "EndOfContent", ".", "NO_CONTENT", ";", "else", "_endOfContent", "=", "EndOfContent", ".", "CONTENT_LENGTH", ";", "if", "(", "_hasContentLength", "&", "&", "_endOfContent", "=", "=", "EndOfContent", ".", "CHUNKED_CONTENT", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "chunking", "\"", ");", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Host", "header", "\"", ",", "e", ")", ";", "{", "}", "{", "if", "(", "_chunkLength", ">", "MAX_CHUNK_LENGTH", ")", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "REQUEST_ENTITY_TOO_LARGE_413", ")", ";", "}", "_hasContentLength", "=", "false", ";", "@", "Test", "public", "void", "testAllowedLinePreamble", "(", ")", "throws", "Exception", "{", "ByteBuffer", "buffer", "=", "BufferUtil", ".", "toBuffer", "(", "\"\\", "r", "\\", "n", "\\", "r", "\\", "nGET", "/", "HTTP", "/", "1", ".", "0", "\\", "r", "\\", "n", "\"", ");", "HttpParser", ".", "RequestHandler", "<", "ByteBuffer", ">", "handler", "=", "new", "Handler", "(", ");", "HttpParser", "parser", "=", "new", "HttpParser", "(", "handler", ")", ";", "parseAll", "(", "parser", ",", "buffer", ")", ";", "assertEquals", "(", "\"", "GET", "\"", ",", "_methodOrVersion", ")", ";", "assertEquals", "(", "\"/", "\",", "_uriOrStatus", ")", ";", "assertEquals", "(", "\"", "HTTP", "/", "1", ".", "0", "\"", ",", "_versionOrReason", ")", ";", "assertEquals", "(", "-", "1", ",", "_headers", ")", ";", "}", "@", "Test", "public", "void", "testDisallowedLinePreamble", "(", ")", "throws", "Exception", "{", "ByteBuffer", "buffer", "=", "BufferUtil", ".", "toBuffer", "(", "\"\\", "r", "\\", "n", "\\", "r", "\\", "nGET", "/", "HTTP", "/", "1", ".", "0", "\\", "r", "\\", "n", "\"", ");", "HttpParser", ".", "RequestHandler", "<", "ByteBuffer", ">", "handler", "=", "new", "Handler", "(", ");", "HttpParser", "parser", "=", "new", "HttpParser", "(", "handler", ")", ";", "parseAll", "(", "parser", ",", "buffer", ")", ";", "assertEquals", "(", "\"", "400", "\"", ",", "_bad", ")", ";", "}", "}", "assertEquals", "(", "\"", "Bad", "Version", "\"", ",", "_bad", ")", ";", "if", "(", "_state", ".", "unhandle", "(", ")=", "=", "Action", ".", "COMPLETE", ")", "_state", ".", "completed", "(", ");", "catch", "(", "Throwable", "e", ")", "_transport", ".", "abort", "(", ");", "import", "java", ".", "io", ".", "BufferedReader", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "io", ".", "PrintWriter", ";", "import", "java", ".", "io", ".", "StringReader", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "concurrent", ".", "CountDownLatch", ";", "import", "java", ".", "util", ".", "concurrent", ".", "TimeUnit", ";", "import", "javax", ".", "servlet", ".", "ServletException", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletResponse", ";", "import", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTester", ";", "import", "static", "org", ".", "hamcrest", ".", "CoreMatchers", ".", "is", ";", "import", "static", "org", ".", "hamcrest", ".", "CoreMatchers", ".", "not", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "anyOf", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "containsString", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "isEmptyOrNullString", ";", "HttpConfiguration", "config", "=", "new", "HttpConfiguration", "(", ");", "config", ".", "setRequestHeaderSize", "(", "1024", ")", ";", "config", ".", "setResponseHeaderSize", "(", "1024", ")", ";", "config", ".", "setSendDateHeader", "(", "true", ")", ";", "HttpConnectionFactory", "http", "=", "new", "HttpConnectionFactory", "(", "config", ")", ";", "/", "**", "*", "HTTP", "/", "0", ".", "9", "does", "not", "support", "HttpVersion", "(", "this", "is", "a", "bad", "request", ")", "*", "/", "@", "Test", "public", "void", "testHttp09_NoVersion", "(", ")", "throws", "Exception", "{", "String", "request", "=", "\"", "GET", "/", "HTTP", "/", "0", ".", "9", "\\", "r", "\\", "n", "\\", "r", "\\", "n", "\"", ";", "String", "response", "=", "connector", ".", "getResponses", "(", "request", ")", ";", "assertThat", "(", "response", ",", "containsString", "(", "\"", "400", "Bad", "Version", "\"", "))", ";", "}", "/", "**", "*", "HTTP", "/", "0", ".", "9", "does", "not", "support", "headers", "*", "/", "@", "Test", "public", "void", "testHttp09_NoHeaders", "(", ")", "throws", "Exception", "{", "/", "/", "header", "looking", "like", "another", "request", "is", "ignored", "String", "request", "=", "\"", "GET", "/", "one", "\\", "r", "\\", "nGET", ":", "/", "two", "\\", "r", "\\", "n", "\\", "r", "\\", "n", "\"", ";", "String", "response", "=", "connector", ".", "getResponses", "(", "request", ")", ";", "assertThat", "(", "response", ",", "containsString", "(", "\"", "pathInfo", "=", "/\"", "))", ";", "assertThat", "(", "response", ",", "not", "(", "containsString", "(", "\"", "two", "\"", "))", ");", "}", "/", "**", "*", "Http", "/", "0", ".", "9", "does", "not", "support", "pipelining", ".", "*", "/", "@", "Test", "public", "void", "testHttp09_MultipleRequests", "(", ")", "throws", "Exception", "{", "/", "/", "Verify", "that", "LocalConnector", "supports", "pipelining", "with", "HTTP", "/", "1", ".", "1", ".", "String", "requests", "=", "\"", "GET", "/", "?", "id", "=", "123", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "nHost", ":", "localhost", "\\", "r", "\\", "n", "\\", "r", "\\", "nGET", "/", "?", "id", "=", "456", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "nHost", ":", "localhost", "\\", "r", "\\", "nConnection", ":", "close", "\\", "r", "\\", "n", "\\", "r", "\\", "n", "\"", ";", "String", "responses", "=", "connector", ".", "getResponses", "(", "requests", ")", ";", "assertThat", "(", "responses", ",", "containsString", "(", "\"", "id", "=", "123", "\"", "))", ";", "assertThat", "(", "responses", ",", "containsString", "(", "\"", "id", "=", "456", "\"", "))", ";", "/", "/", "Verify", "that", "pipelining", "does", "not", "work", "with", "HTTP", "/", "0", ".", "9", ".", "requests", "=", "\"", "GET", "/", "?", "id", "=", "123", "\\", "r", "\\", "n", "\\", "r", "\\", "nGET", "/", "?", "id", "=", "456", "\\", "r", "\\", "n", "\\", "r", "\\", "nGET", "/", "?", "id", "=", "789", "\\", "r", "\\", "n", "\\", "r", "\\", "n", "\"", ";", "responses", "=", "connector", ".", "getResponses", "(", "requests", ")", ";", "assertThat", "(", "responses", ",", "containsString", "(", "\"", "id", "=", "123", "\"", "))", ";", "assertThat", "(", "responses", ",", "not", "(", "containsString", "(", "\"", "id", "=", "456", "\"", "))", ");", "assertThat", "(", "responses", ",", "not", "(", "containsString", "(", "\"", "id", "=", "789", "\"", "))", ");", "}", "/", "**", "*", "Ensure", "that", "excessively", "large", "hexadecimal", "chunk", "body", "length", "is", "parsed", "properly", ".", "*", "/", "@", "Test", "public", "void", "testHttp10_ChunkedBodyTruncation", "(", ")", "throws", "Exception", "{", "String", "request", "=", "\"", "POST", "/", "?", "id", "=", "123", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", "\"", "Host", ":", "local", "\\", "r", "\\", "n", "\"", "\"", "Transfer", "-", "Encoding", ":", "chunked", "\\", "r", "\\", "n", "\"", "\"", "Content", "-", "Type", ":", "text", "/", "plain", "\\", "r", "\\", "n", "\"", "\"", "Connection", ":", "close", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "1ff00000008", "\\", "r", "\\", "n", "\"", "\"", "abcdefgh", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "0", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "POST", "/", "?", "id", "=", "bogus", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", "\"", "Content", "-", "Length", ":", "5", "\\", "r", "\\", "n", "\"", "\"", "Host", ":", "dummy", "-", "host", ".", "example", ".", "com", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "12345", "\"", ";", "String", "responses", "=", "connector", ".", "getResponses", "(", "request", ")", ";", "assertThat", "(", "responses", ",", "anyOf", "(", "isEmptyOrNullString", "(", "),", "containsString", "(", "\"", "413", "\"", "),", "containsString", "(", "\"", "500", "\"", ")", ")", ");", "}", "/", "**", "*", "More", "then", "1", "Content", "-", "Length", "is", "a", "bad", "requests", "per", "HTTP", "rfcs", ".", "*", "/", "@", "Test", "public", "void", "testHttp11_MultipleContentLength", "(", ")", "throws", "Exception", "{", "HttpParser", ".", "LOG", ".", "info", "(", "\"", "badMessage", ":", "400", "Bad", "messages", "EXPECTED", ".", "..", "\")", ";", "int", "contentLengths", "[", "][", "]=", "{", "{", "0", ",", "8", "}", ",", "{", "8", ",", "0", "}", ",", "{", "8", ",", "8", "}", ",", "{", "0", ",", "8", ",", "0", "}", ",", "{", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", "}", ",", "{", "8", ",", "2", ",", "1", "}", ",", "{", "0", ",", "0", "}", ",", "{", "8", ",", "0", ",", "8", "}", ",", "{", "-", "1", ",", "8", "}", ",", "{", "8", ",", "-", "1", "}", ",", "{", "-", "1", ",", "8", ",", "-", "1", "}", ",", "{", "-", "1", ",", "-", "1", "}", ",", "{", "8", ",", "-", "1", ",", "8", "}", ",", "}", ";", "for", "(", "int", "x", "=", "0", ";", "x", "<", "contentLengths", ".", "length", ";", "x", "+", "+)", "{", "StringBuilder", "request", "=", "new", "StringBuilder", "(", ");", "request", ".", "append", "(", "\"", "POST", "/", "?", "id", "=", "\")", ".", "append", "(", "Integer", ".", "toString", "(", "x", ")", ").", "append", "(", "\"", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "Host", ":", "local", "\\", "r", "\\", "n", "\"", ");", "int", "clen", "[", "]", "=", "contentLengths", "[", "x", "]", ";", "for", "(", "int", "n", "=", "0", ";", "n", "<", "clen", ".", "length", ";", "n", "+", "+)", "{", "request", ".", "append", "(", "\"", "Content", "-", "Length", ":", "\"", ").", "append", "(", "Integer", ".", "toString", "(", "clen", "[", "n", "]", "))", ".", "append", "(", "\"\\", "r", "\\", "n", "\"", ");", "}", "request", ".", "append", "(", "\"", "Content", "-", "Type", ":", "text", "/", "plain", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "Connection", ":", "close", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "abcdefgh", "\"", ");", "/", "/", "actual", "content", "of", "8", "bytes", "String", "rawResponses", "=", "connector", ".", "getResponses", "(", "request", ".", "toString", "(", "))", ";", "HttpTester", ".", "Response", "response", "=", "HttpTester", ".", "parseResponse", "(", "rawResponses", ")", ";", "assertThat", "(", "\"", "Response", ".", "status", "\"", ",", "response", ".", "getStatus", "(", "),", "is", "(", "HttpServletResponse", ".", "SC_BAD_REQUEST", ")", ");", "}", "}", "/", "**", "*", "More", "then", "1", "Content", "-", "Length", "is", "a", "bad", "requests", "per", "HTTP", "rfcs", ".", "*", "/", "@", "Test", "public", "void", "testHttp11_ContentLengthAndChunk", "(", ")", "throws", "Exception", "{", "HttpParser", ".", "LOG", ".", "info", "(", "\"", "badMessage", ":", "400", "Bad", "messages", "EXPECTED", ".", "..", "\")", ";", "int", "contentLengths", "[", "][", "]=", "{", "{", "-", "1", ",", "8", "}", ",", "{", "8", ",", "-", "1", "}", ",", "{", "8", ",", "-", "1", ",", "8", "}", ",", "}", ";", "for", "(", "int", "x", "=", "0", ";", "x", "<", "contentLengths", ".", "length", ";", "x", "+", "+)", "{", "StringBuilder", "request", "=", "new", "StringBuilder", "(", ");", "request", ".", "append", "(", "\"", "POST", "/", "?", "id", "=", "\")", ".", "append", "(", "Integer", ".", "toString", "(", "x", ")", ").", "append", "(", "\"", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "Host", ":", "local", "\\", "r", "\\", "n", "\"", ");", "int", "clen", "[", "]", "=", "contentLengths", "[", "x", "]", ";", "for", "(", "int", "n", "=", "0", ";", "n", "<", "clen", ".", "length", ";", "n", "+", "+)", "{", "if", "(", "clen", "[", "n", "]", "==", "-", "1", ")", "request", ".", "append", "(", "\"", "Transfer", "-", "Encoding", ":", "chunked", "\\", "r", "\\", "n", "\"", ");", "else", "request", ".", "append", "(", "\"", "Content", "-", "Length", ":", "\"", ").", "append", "(", "Integer", ".", "toString", "(", "clen", "[", "n", "]", "))", ".", "append", "(", "\"\\", "r", "\\", "n", "\"", ");", "}", "request", ".", "append", "(", "\"", "Content", "-", "Type", ":", "text", "/", "plain", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "Connection", ":", "close", "\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"\\", "r", "\\", "n", "\"", ");", "request", ".", "append", "(", "\"", "8", ";", "\\", "r", "\\", "n", "\"", ");", "/", "/", "chunk", "header", "request", ".", "append", "(", "\"", "abcdefgh", "\"", ");", "/", "/", "actual", "content", "of", "8", "bytes", "request", ".", "append", "(", "\"\\", "r", "\\", "n0", ";", "\\", "r", "\\", "n", "\"", ");", "/", "/", "last", "chunk", "String", "rawResponses", "=", "connector", ".", "getResponses", "(", "request", ".", "toString", "(", "))", ";", "HttpTester", ".", "Response", "response", "=", "HttpTester", ".", "parseResponse", "(", "rawResponses", ")", ";", "assertThat", "(", "\"", "Response", ".", "status", "\"", ",", "response", ".", "getStatus", "(", "),", "is", "(", "HttpServletResponse", ".", "SC_BAD_REQUEST", ")", ");", "}", "}", "@", "Test", "public", "void", "test4_1", "(", ")", "throws", "Exception", "{", "int", "offset", "=", "0", ";", "/", "/", "If", "_content", "length", "not", "used", ",", "second", "request", "will", "not", "be", "read", ".", "String", "response", "=", "connector", ".", "getResponses", "(", "\"", "\\", "r", "\\", "n", "\"", "\"", "GET", "/", "R1", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", "\"", "Host", ":", "localhost", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "GET", "/", "R2", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", "\"", "Host", ":", "localhost", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", "\"", "GET", "/", "R3", "HTTP", "/", "1", ".", "1", "\\", "r", "\\", "n", "\"", "\"", "Host", ":", "localhost", "\\", "r", "\\", "n", "\"", "\"", "Connection", ":", "close", "\\", "r", "\\", "n", "\"", "\"", "\\", "r", "\\", "n", "\"", ")", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "200", "OK", "\"", ",\"", "2", ".", "identity", "\"", ")+", "10", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"/", "R1", "\"", ",\"", "2", ".", "identity", "\"", ")+", "3", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "200", "OK", "\"", ",\"", "2", ".", "identity", "\"", ")+", "10", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"/", "R2", "\"", ",\"", "2", ".", "identity", "\"", ")+", "3", ";", "checkNotContained", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "200", "OK", "\"", ",\"", "2", ".", "identity", "\"", ");", "checkNotContained", "(", "response", ",", "offset", ",", "\"/", "R3", "\"", ",\"", "2", ".", "identity", "\"", ");", "}", "/", "/", "Due", "to", "smuggling", "concerns", ",", "handling", "has", "been", "changed", "to", "/", "/", "treat", "content", "length", "and", "chunking", "as", "a", "bad", "request", ".", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "400", "Bad", "\"", ",\"", "3", ".", "ignore", "c", "-", "l", "\"", ")+", "1", ";", "checkNotContained", "(", "response", ",", "offset", ",", "\"/", "R2", "\"", ",\"", "3", ".", "_content", "-", "length", "\"", ");", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertEquals", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertThat", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "import", "static", "org", ".", "junit", ".", "matchers", ".", "JUnitMatchers", ".", "containsString", ";", "/", "/", "Server", "-", "bad", "message", "to", "avoid", "smuggling", "concerns", "Assert", ".", "assertEquals", "(", "\"", "Response", "Count", "\"", ",", "1", ",", "responses", ".", "size", "(", "))", ";", "assertEquals", "(", "\"", "4", ".", "4", ".", "3", "Ignore", "Content", "-", "Length", "/", "Response", "Code", "\"", ",", "HttpStatus", ".", "BAD_REQUEST_400", ",", "response", ".", "getStatus", "(", "))", ";</s>import", "static", "org", ".", "eclipse", ".", "jetty", ".", "http", ".", "HttpTokens", ".", "*;", "import", "org", ".", "eclipse", ".", "jetty", ".", "util", ".", "StringUtil", ";", "super", "(", "message", ")", ";", "{", "else", "if", "(", "ch", "<", "0", ")", "else", "if", "(", "_connectionFields", "=", "=", "null", "&", "&", "_version", ".", "getVersion", "(", ")>", "=", "HttpVersion", ".", "HTTP_1_1", ".", "getVersion", "(", "))", "if", "(", "_endOfContent", "!", "=", "EndOfContent", ".", "CHUNKED_CONTENT", ")", "try", "{", "_contentLength", "=", "Long", ".", "parseLong", "(", "_valueString", ")", ";", "}", "catch", "(", "NumberFormatException", "e", ")", "{", "LOG", ".", "ignore", "(", "e", ")", ";", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Content", "-", "Length", "\"", ");", "}", "if", "(", "_contentLength", "<", "=", "0", ")", "_endOfContent", "=", "EndOfContent", ".", "NO_CONTENT", ";", "else", "_endOfContent", "=", "EndOfContent", ".", "CONTENT_LENGTH", ";", "throw", "new", "BadMessageException", "(", "HttpStatus", ".", "BAD_REQUEST_400", ",", "\"", "Bad", "Host", "header", "\"", ")", "{", "{", "initCause", "(", "e", ")", ";}", "};", "}", "assertTrue", "(", "_headerCompleted", ")", ";", "assertTrue", "(", "_messageCompleted", ")", ";", "assertEquals", "(", "\"", "PRI", "\"", ",", "_methodOrVersion", ")", ";", "assertEquals", "(", "\"*", "\",", "_uriOrStatus", ")", ";", "assertEquals", "(", "\"", "HTTP", "/", "2", ".", "0", "\"", ",", "_versionOrReason", ")", ";", "assertEquals", "(", "-", "1", ",", "_headers", ")", ";", "assertEquals", "(", "null", ",", "_bad", ")", ";", "catch", "(", "IOException", "e", ")", "}", "finally", "{", "if", "(", "_state", ".", "unhandle", "(", ")=", "=", "Action", ".", "COMPLETE", ")", "_state", ".", "completed", "(", ");", "else", "throw", "new", "IllegalStateException", "(", ");", "import", "javax", ".", "servlet", ".", "ServletException", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletResponse", ";", "import", "java", ".", "io", ".", "BufferedReader", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "io", ".", "PrintWriter", ";", "import", "java", ".", "io", ".", "StringReader", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "concurrent", ".", "CountDownLatch", ";", "import", "java", ".", "util", ".", "concurrent", ".", "TimeUnit", ";", "HttpConnectionFactory", "http", "=", "new", "HttpConnectionFactory", "(", ");", "http", ".", "getHttpConfiguration", "(", ").", "setRequestHeaderSize", "(", "1024", ")", ";", "http", ".", "getHttpConfiguration", "(", ").", "setResponseHeaderSize", "(", "1024", ")", ";", "connector", ".", "getConnectionFactory", "(", "HttpConnectionFactory", ".", "class", ")", ".", "getHttpConfiguration", "(", ").", "setSendDateHeader", "(", "true", ")", ";", "/", "/", "_content", "length", "is", "ignored", ",", "as", "chunking", "is", "used", ".", "If", "it", "is", "/", "/", "not", "ignored", ",", "the", "second", "request", "wont", "be", "seen", ".", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "200", "OK", "\"", ",\"", "3", ".", "ignore", "c", "-", "l", "\"", ")+", "1", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"/", "R1", "\"", ",\"", "3", ".", "ignore", "c", "-", "l", "\"", ")+", "1", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "123456", "\"", ",\"", "3", ".", "ignore", "c", "-", "l", "\"", ")+", "1", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "HTTP", "/", "1", ".", "1", "200", "OK", "\"", ",\"", "3", ".", "ignore", "c", "-", "l", "\"", ")+", "1", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"/", "R2", "\"", ",\"", "3", ".", "_content", "-", "length", "\"", ")+", "1", ";", "offset", "=", "checkContains", "(", "response", ",", "offset", ",", "\"", "abcdef", "\"", ",\"", "3", ".", "_content", "-", "length", "\"", ")+", "1", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "static", "org", ".", "junit", ".", "matchers", ".", "JUnitMatchers", ".", "*;", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "eclipse", ".", "jetty", ".", "util", ".", "MultiPartInputStreamParser", ";", "/", "/", "Server", "-", "ignore", "'", "Content", "-", "Length", "'", "if", "'", "Transfer", "-", "Encoding", "'", "is", "provided", ".", "Assert", ".", "assertEquals", "(", "\"", "Response", "Count", "\"", ",", "2", ",", "responses", ".", "size", "(", "))", ";", "assertEquals", "(", "\"", "4", ".", "4", ".", "3", "Ignore", "Content", "-", "Length", "/", "Response", "Code", "\"", ",", "HttpStatus", ".", "OK_200", ",", "response", ".", "getStatus", "(", "))", ";", "assertTrue", "(", "\"", "4", ".", "4", ".", "3", "Ignore", "Content", "-", "Length", "/", "Body", "\"", ",", "response", ".", "getContent", "(", ").", "contains", "(", "\"", "123456", "\\", "n", "\"", "))", ";", "response", "=", "responses", ".", "get", "(", "1", ")", ";", "/", "/", "response", "2", "assertEquals", "(", "\"", "4", ".", "4", ".", "3", "Ignore", "Content", "-", "Length", "/", "Response", "Code", "\"", ",", "HttpStatus", ".", "OK_200", ",", "response", ".", "getStatus", "(", "))", ";", "assertTrue", "(", "\"", "4", ".", "4", ".", "3", "Ignore", "Content", "-", "Length", "/", "Body", "\"", ",", "response", ".", "getContent", "(", ").", "contains", "(", "\"", "7890AB", "\\", "n", "\"", "))", ";"], "docstring_tokens": ["http", "request", "smuggling"]}
{"contents": ["empty"], "code_tokens": ["import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "/", "/", "BUG", "-", "61295", "-", "-", "avoid", "OOM", "on", "corrupt", "file", ".", "Build", "list", "instead", "/", "/", "of", "allocating", "array", "of", "length", "\"", "length", "\"", ".", "/", "/", "If", "the", "length", "is", "corrupted", "and", "crazily", "big", "but", "<", "Integer", ".", "MAX_VALUE", ",", "/", "/", "this", "will", "trigger", "a", "RuntimeException", "\"", "Buffer", "overrun", "\"", "in", "lei", ".", "checkPosition", "List", "<", "TypedPropertyValue", ">", "values", "=", "new", "ArrayList", "<", "TypedPropertyValue", ">", "()", ";", "values", ".", "add", "(", "value", ")", ";", "_values", "=", "values", ".", "toArray", "(", "new", "TypedPropertyValue", "[", "values", ".", "size", "(", ")]", ");</s>_values", "=", "new", "TypedPropertyValue", "[", "length", "]", ";", "_values", "[", "i", "]", "=", "value", ";"], "docstring_tokens": ["of", "service"]}
{"contents": ["empty"], "code_tokens": ["import", "flex", ".", "messaging", ".", "validators", ".", "ClassDeserializationValidator", ";", "import", "flex", ".", "messaging", ".", "validators", ".", "ClassDeserializationValidator", ";", "if", "(", "validatorsNode", "=", "=", "null", ")", "{", "/", "/", "Default", "to", "the", "ClassDeserializationValidator", "defaultValidator", "(", ");", "}", "if", "(", "validators", ".", "getLength", "(", ")", ">", "0", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "validators", ".", "getLength", "(", ");", "i", "+", "+)", "{", "Node", "validator", "=", "validators", ".", "item", "(", "i", ")", ";", "validator", "(", "validator", ")", ";", "}", "}", "else", "{", "/", "/", "Default", "to", "the", "ClassDeserializationValidator", "defaultValidator", "(", ");", "/", "**", "*", "Initialize", "a", "efault", "validator", "that", "protects", "BlazeDS", "against", "the", "most", "obvious", "attacks", ".", "*", "/", "private", "void", "defaultValidator", "(", ")", "{", "ValidatorSettings", "validatorSettings", "=", "new", "ValidatorSettings", "(", ");", "validatorSettings", ".", "setClassName", "(", "ClassDeserializationValidator", ".", "class", ".", "getName", "(", "))", ";", "(", "(", "MessagingConfiguration", ")", "config", ")", ".", "addValidatorSettings", "(", "validatorSettings", ")", ";", "}", "import", "flex", ".", "messaging", ".", "validators", ".", "ClassDeserializationValidator", ";", "import", "java", ".", "util", ".", "*;", "import", "java", ".", "util", ".", "regex", ".", "Pattern", ";", "public", "class", "ClassDeserializationValidator", "implements", "DeserializationValidator", "{", "private", "static", "final", "String", "[", "]", "DEFAULT_ALLOW_CLASSES", "=", "{", "\"", "flex", ".", "messaging", ".", "io", ".", "amf", ".", "SerializedObject", "\"", ",", "\"", "flex", ".", "messaging", ".", "io", ".", "ArrayCollection", "\"", ",", "\"", "flex", ".", "messaging", ".", "io", ".", "ObjectProxy", "\"", ",", "\"", "flex", ".", "messaging", ".", "io", ".", "SerializationProxy", "\"", ",", "\"", "flex", ".", "messaging", ".", "messages", ".", "AcknowledgeMessageExt", "\"", ",", "\"", "flex", ".", "messaging", ".", "messages", ".", "AsyncMessageExt", "\"", ",", "\"", "flex", ".", "messaging", ".", "messages", ".", "CommandMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "messages", ".", "DataMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "messages", ".", "ManagedRemotingMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "messages", ".", "PagedMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "messages", ".", "SequencedMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "messages", ".", "UpdateCollectionMessageExt", "\"", ",", "\"", "flex", ".", "data", ".", "ChangedItems", "\"", ",", "\"", "java", ".", "lang", ".", "Boolean", "\"", ",", "\"", "java", ".", "lang", ".", "Byte", "\"", ",", "\"", "java", ".", "lang", ".", "Character", "\"", ",", "\"", "java", ".", "lang", ".", "Double", "\"", ",", "\"", "java", ".", "lang", ".", "Float", "\"", ",", "\"", "java", ".", "lang", ".", "Integer", "\"", ",", "\"", "java", ".", "lang", ".", "Long", "\"", ",", "\"", "java", ".", "lang", ".", "Object", "\"", ",", "\"", "java", ".", "lang", ".", "Short", "\"", ",", "\"", "java", ".", "lang", ".", "String", "\"", ",", "\"", "java", ".", "io", ".", "Externalizable", "\"", ",", "\"", "java", ".", "util", ".", "Date", "\"", ",", "\"", "org", ".", "w3c", ".", "dom", ".", "Document", "\"", ",", "\"", "\\\\", "[", "B", "\"", ",", "\"", "\\\\", "[", "Ljava", ".", "lang", ".", "Object", ";", "\"", "public", "ClassDeserializationValidator", "(", ")", "{", "}", "public", "void", "addAllowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "removeAllowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "addDisallowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "removeDisallowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "*", "@", "param", "index", "The", "index", "at", "which", "the", "value", "is", "being", "assigned", ".", "*", "@", "param", "value", "The", "value", "that", "is", "assigned", "to", "the", "index", ".", "public", "boolean", "validateAssignment", "(", "Object", "instance", ",", "int", "index", ",", "Object", "value", ")", "{", "*", "@", "param", "instance", "The", "instance", "with", "the", "property", "that", "is", "being", "assigned", "a", "new", "value", ".", "*", "@", "param", "value", "The", "value", "that", "the", "property", "is", "being", "assigned", "to", ".", "public", "boolean", "validateAssignment", "(", "Object", "instance", ",", "String", "propertyName", ",", "Object", "value", ")", "{", "public", "boolean", "validateCreation", "(", "Class", "<", "?>", "c", ")", "{", "String", "className", "=", "c", "=", "=", "null", "?", "null", ":", "c", ".", "getName", "(", ");", "if", "(", "disallowClassPatterns", "!", "=", "null", "&", "&", "!", "disallowClassPatterns", ".", "isEmpty", "(", "))", "{", "for", "(", "Pattern", "pattern", ":", "disallowClassPatterns", ".", "values", "(", "))", "{", "if", "(", "pattern", ".", "matcher", "(", "className", ")", ".", "matches", "(", "))", "{", "if", "(", "allowClassPatterns", "!", "=", "null", "&", "&", "!", "allowClassPatterns", ".", "isEmpty", "(", "))", "{", "for", "(", "Pattern", "pattern", ":", "allowClassPatterns", ".", "values", "(", "))", "{", "if", "(", "pattern", ".", "matcher", "(", "className", ")", ".", "matches", "(", "))", "{", "/", "**", "*", "{", "@", "inheritDoc", "}", "*", "/", "public", "void", "initialize", "(", "String", "id", ",", "ConfigMap", "properties", ")", "{", "for", "(", "String", "defaultAllowClassPattern", ":", "DEFAULT_ALLOW_CLASSES", ")", "{", "if", "(", "allowedClassesMap", "!", "=", "null", "&", "&", "!", "allowedClassesMap", ".", "isEmpty", "(", "))", "{", "if", "(", "names", "!", "=", "null", "&", "&", "!", "names", ".", "isEmpty", "(", "))", "{", "for", "(", "Object", "element", ":", "names", ")", "{", "String", "name", "=", "(", "(", "ConfigMap", ")", "element", ")", ".", "getProperty", "(", "PROPERTY_NAME_ATTR", ")", ";", "if", "(", "disallowedClassesMap", "!", "=", "null", "&", "&", "!", "disallowedClassesMap", ".", "isEmpty", "(", "))", "{", "if", "(", "names", "!", "=", "null", "&", "&", "!", "names", ".", "isEmpty", "(", "))", "{", "for", "(", "Object", "element", ":", "names", ")", "{", "String", "name", "=", "(", "(", "ConfigMap", ")", "element", ")", ".", "getProperty", "(", "PROPERTY_NAME_ATTR", ")", ";", "protected", "void", "addAllowClass", "(", "String", "className", ")", "{", "synchronized", "(", "lock", ")", "{", "protected", "void", "addDisallowClass", "(", "String", "className", ")", "{", "synchronized", "(", "lock", ")", "{", "protected", "void", "clearClassCache", "(", ")", "{", "if", "(", "allowClasses", "!", "=", "null", ")", "{", "if", "(", "disallowClasses", "!", "=", "null", ")", "{", "import", "remoting", ".", "amfclient", ".", "ClientCustomType", ";", "\"", "remoting", ".", "amfclient", ".", "ClientCustomType", "\"", "/", "*", "client", "type", "*", "/)", ";", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "\"", "Wombat", "\"", ",", "new", "CallResultHandler", "(", "){", "import", "remoting", ".", "amfclient", ".", "ClientCustomType", ";", "private", "static", "final", "String", "UNEXPECTED_SUCCESS_STRING", "=", "\"", "Unexpected", "success", "of", "previous", "operation", "\"", ";", "private", "static", "TestServerWrapper", "standardValidationServerWrapper", ";", "private", "static", "int", "standardValidationServerPort", ";", "private", "static", "TestServerWrapper", "customValidationServerWrapper", ";", "private", "static", "int", "customValidationServerPort", ";", "protected", "String", "getStandardValidationConnectionUrl", "(", ")", "{", "return", "String", ".", "format", "(", "DEFAULT_URL", ",", "standardValidationServerPort", ")", ";", "protected", "String", "getCustomValidationConnectionUrl", "(", ")", "{", "return", "String", ".", "format", "(", "DEFAULT_URL", ",", "customValidationServerPort", ")", ";", "}", "suite", ".", "addTest", "(", "new", "AMFDataTypeIT", "(", "\"", "testCallObjectArgObjectReturnCustomizedValidation", "\"", "))", ";", "suite", ".", "addTest", "(", "new", "AMFDataTypeIT", "(", "\"", "testCallCustomArgObjectReturnCustomizedValidation", "\"", "))", ";", "suite", ".", "addTest", "(", "new", "AMFDataTypeIT", "(", "\"", "testCallObjectArgCustomReturnCustomizedValidation", "\"", "))", ";", "suite", ".", "addTest", "(", "new", "AMFDataTypeIT", "(", "\"", "testCallCustomArgCustomReturnCustomizedValidation", "\"", "))", ";", "suite", ".", "addTest", "(", "new", "AMFDataTypeIT", "(", "\"", "testCallObjectArrayArgObjectArrayReturnCustomizedValidation", "\"", "))", ";", "standardValidationServerWrapper", "=", "new", "TestServerWrapper", "(", ");", "standardValidationServerPort", "=", "standardValidationServerWrapper", ".", "startServer", "(", "\"", "classpath", ":", "/", "WEB", "-", "INF", "/", "flex", "/", "services", "-", "config", ".", "xml", "\"", ");", "if", "(", "standardValidationServerPort", "=", "=", "-", "1", ")", "{", "Assert", ".", "fail", "(", "\"", "Couldn", "'", "t", "start", "server", "(", "standard", "validation", ")", "process", "\"", ");", "}", "customValidationServerWrapper", "=", "new", "TestServerWrapper", "(", ");", "customValidationServerPort", "=", "customValidationServerWrapper", ".", "startServer", "(", "\"", "classpath", ":", "/", "WEB", "-", "INF", "/", "flex", "/", "services", "-", "config", "-", "customized", "-", "validation", ".", "xml", "\"", ");", "if", "(", "customValidationServerPort", "=", "=", "-", "1", ")", "{", "Assert", ".", "fail", "(", "\"", "Couldn", "'", "t", "start", "server", "(", "custom", "validation", ")", "process", "\"", ");", "\"", "remoting", ".", "amfclient", ".", "ClientCustomType", "\"", "/", "*", "client", "type", "*", "/)", ";", "standardValidationServerWrapper", ".", "stopServer", "(", ");", "standardValidationServerWrapper", "=", "null", ";", "customValidationServerWrapper", ".", "stopServer", "(", ");", "customValidationServerWrapper", "=", "null", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "fail", "(", "UNEXPECTED_SUCCESS_STRING", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "An", "exception", "is", "what", "we", "expect", "here", ".", "}", "}", "public", "void", "testCallObjectArgObjectReturnCustomizedValidation", "(", ")", "{", "String", "method", "=", "\"", "echoObject1", "\"", ";", "ClientCustomType", "temp", "=", "new", "ClientCustomType", "(", ");", "temp", ".", "setId", "(", "1", ")", ";", "final", "Object", "methodArg", "=", "temp", ";", "try", "{", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "public", "void", "onResult", "(", "Object", "result", ")", "{", "ClientCustomType", "temp2", "=", "(", "ClientCustomType", ")", "result", ";", "Assert", ".", "assertEquals", "(", "1", ",", "temp2", ".", "getId", "(", "))", ";", "}", "}", ",", "true", ")", ";", "}", ",", "false", ")", ";", "fail", "(", "UNEXPECTED_SUCCESS_STRING", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "An", "exception", "is", "what", "we", "expect", "here", ".", "}", "}", "public", "void", "testCallObjectArgCustomReturnCustomizedValidation", "(", ")", "{", "String", "method", "=", "\"", "echoObject2", "\"", ";", "ClientCustomType", "temp", "=", "new", "ClientCustomType", "(", ");", "temp", ".", "setId", "(", "1", ")", ";", "final", "Object", "methodArg", "=", "temp", ";", "try", "{", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "public", "void", "onResult", "(", "Object", "result", ")", "{", "ClientCustomType", "temp2", "=", "(", "ClientCustomType", ")", "result", ";", "Assert", ".", "assertEquals", "(", "1", ",", "temp2", ".", "getId", "(", "))", ";", "}", "}", ",", "true", ")", ";", "}", ",", "false", ")", ";", "fail", "(", "UNEXPECTED_SUCCESS_STRING", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "An", "exception", "is", "what", "we", "expect", "here", ".", "}", "}", "public", "void", "testCallCustomArgObjectReturnCustomizedValidation", "(", ")", "{", "String", "method", "=", "\"", "echoObject3", "\"", ";", "final", "ClientCustomType", "methodArg", "=", "new", "ClientCustomType", "(", ");", "methodArg", ".", "setId", "(", "1", ")", ";", "try", "{", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "public", "void", "onResult", "(", "Object", "result", ")", "{", "ClientCustomType", "temp2", "=", "(", "ClientCustomType", ")", "result", ";", "Assert", ".", "assertEquals", "(", "1", ",", "temp2", ".", "getId", "(", "))", ";", "}", "}", ",", "true", ")", ";", "}", ",", "false", ")", ";", "fail", "(", "UNEXPECTED_SUCCESS_STRING", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "An", "exception", "is", "what", "we", "expect", "here", ".", "}", "}", "public", "void", "testCallCustomArgCustomReturnCustomizedValidation", "(", ")", "{", "String", "method", "=", "\"", "echoObject4", "\"", ";", "final", "ClientCustomType", "methodArg", "=", "new", "ClientCustomType", "(", ");", "methodArg", ".", "setId", "(", "1", ")", ";", "try", "{", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "public", "void", "onResult", "(", "Object", "result", ")", "{", "ClientCustomType", "temp2", "=", "(", "ClientCustomType", ")", "result", ";", "Assert", ".", "assertEquals", "(", "1", ",", "temp2", ".", "getId", "(", "))", ";", "}", "}", ",", "true", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "fail", "(", "UNEXPECTED_SUCCESS_STRING", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "An", "exception", "is", "what", "we", "expect", "here", ".", "}", "}", "public", "void", "testCallObjectArrayArgObjectArrayReturnCustomizedValidation", "(", ")", "{", "String", "method", "=", "\"", "echoObject1", "\"", ";", "Object", "[", "]", "temp", "=", "new", "Object", "[", "3", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "temp", ".", "length", ";", "i", "+", "+)", "{", "ClientCustomType", "cct", "=", "new", "ClientCustomType", "(", ");", "cct", ".", "setId", "(", "i", ")", ";", "temp", "[", "i", "]", "=", "cct", ";", "}", "final", "Object", "[", "]", "methodArg", "=", "temp", ";", "try", "{", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "public", "void", "onResult", "(", "Object", "result", ")", "{", "List", "temp", "=", "(", "List", ")", "result", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "temp", ".", "size", "(", ");", "i", "+", "+)", "{", "ClientCustomType", "temp2", "=", "(", "ClientCustomType", ")", "temp", ".", "get", "(", "i", ")", ";", "Assert", ".", "assertEquals", "(", "i", ",", "temp2", ".", "getId", "(", "))", ";", "}", "}", "}", ",", "true", ")", ";", "}", ",", "false", ")", ";", "}", ",", "false", ")", ";", "private", "void", "internalTestCall", "(", "String", "operation", ",", "Object", "methodArg", ",", "CallResultHandler", "resultHandler", ",", "boolean", "customizedValidation", ")", "throws", "ClientStatusException", ",", "ServerStatusException", "if", "(", "customizedValidation", ")", "{", "amfConnection", ".", "connect", "(", "getCustomValidationConnectionUrl", "(", "),", "serializationContext", ")", ";", "}", "else", "{", "amfConnection", ".", "connect", "(", "getStandardValidationConnectionUrl", "(", "),", "serializationContext", ")", ";", "}", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "LinkedList", ";", "import", "java", ".", "util", ".", "List", ";", "List", "<", "String", ">", "args", "=", "new", "LinkedList", "<", "String", ">", "()", ";", "args", ".", "add", "(", "path", ")", ";", "/", "*", "if", "(", "configPath", ".", "contains", "(", "\"", "customized", "-", "validation", "\"", "))", "{", "args", ".", "add", "(", "\"-", "agentlib", ":", "jdwp", "=", "transport", "=", "dt_socket", ",", "server", "=", "y", ",", "suspend", "=", "y", ",", "address", "=", "5005", "\"", ");", "}", "*/", "args", ".", "add", "(", "\"-", "cp", "\"", ");", "args", ".", "add", "(", "classpath", ")", ";", "args", ".", "add", "(", "TestServer", ".", "class", ".", "getCanonicalName", "(", "))", ";", "args", ".", "add", "(", "configPath", ")", ";", "final", "ProcessBuilder", "processBuilder", "=", "new", "ProcessBuilder", "(", "args", ".", "toArray", "(", "new", "String", "[", "0", "]", "))", ";", "package", "remoting", ".", "amfclient", ";", "<", "?", "xml", "version", "=", "\"", "1", ".", "0", "\"", "encoding", "=", "\"", "UTF", "-", "8", "\"", "?>", "<", "!-", "-", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "under", "the", "License", ".", "-", "->", "<", "services", "-", "config", ">", "<", "validators", ">", "<", "validator", "class", "=", "\"", "flex", ".", "messaging", ".", "validators", ".", "ClassDeserializationValidator", "\"", ">", "<", "properties", ">", "<", "allow", "-", "classes", ">", "<", "class", "name", "=", "\"", "remoting", ".", "amfclient", ".", "ClientCustomType", "\"", "/>", "<", "class", "name", "=", "\"", "remoting", ".", "amfclient", ".", "ServerCustomType", "\"", "/>", "<", "/", "allow", "-", "classes", ">", "<", "/", "properties", ">", "<", "/", "validator", ">", "<", "/", "validators", ">", "<", "services", ">", "<", "service", "-", "include", "file", "-", "path", "=", "\"", "remoting", "-", "config", ".", "xml", "\"", "/", ">", "<", "/", "services", ">", "<", "channels", ">", "<", "channel", "-", "definition", "id", "=", "\"", "amf", "\"", "class", "=", "\"", "mx", ".", "messaging", ".", "channels", ".", "AMFChannel", "\"", ">", "<", "endpoint", "url", "=", "\"", "http", ":", "//", "{", "server", ".", "name", "}", ":{", "server", ".", "port", "}", "/{", "context", ".", "root", "}", "/", "messagebroker", "/", "amf", "\"", "class", "=", "\"", "flex", ".", "messaging", ".", "endpoints", ".", "AMFEndpoint", "\"", "/>", "<", "properties", ">", "<", "serialization", ">", "<", "allow", "-", "xml", ">", "true", "<", "/", "allow", "-", "xml", ">", "<", "/", "serialization", ">", "<", "/", "properties", ">", "<", "/", "channel", "-", "definition", ">", "<", "/", "channels", ">", "<", "logging", ">", "<", "target", "class", "=", "\"", "flex", ".", "messaging", ".", "log", ".", "ConsoleTarget", "\"", "level", "=", "\"", "Error", "\"", ">", "<", "properties", ">", "<", "prefix", ">", "[", "BlazeDS", "]", "<", "/", "prefix", ">", "<", "includeDate", ">", "false", "<", "/", "includeDate", ">", "<", "includeTime", ">", "false", "<", "/", "includeTime", ">", "<", "includeLevel", ">", "false", "<", "/", "includeLevel", ">", "<", "includeCategory", ">", "false", "<", "/", "includeCategory", ">", "<", "/", "properties", ">", "<", "filters", ">", "<", "pattern", ">", "Endpoint", ".", "*<", "/", "pattern", ">", "<", "pattern", ">", "Service", ".", "*<", "/", "pattern", ">", "<", "pattern", ">", "Configuration", "<", "/", "pattern", ">", "<", "/", "filters", ">", "<", "/", "target", ">", "<", "/", "logging", ">", "<", "/", "services", "-", "config", "></s>if", "(", "validatorsNode", "=", "=", "null", ")", "for", "(", "int", "i", "=", "0", ";", "i", "<", "validators", ".", "getLength", "(", ");", "i", "+", "+)", "{", "Node", "validator", "=", "validators", ".", "item", "(", "i", ")", ";", "validator", "(", "validator", ")", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "regex", ".", "Pattern", ";", "public", "class", "ClassDeserializationValidator", "implements", "DeserializationValidator", "{", "private", "static", "final", "String", "[", "]", "DEFAULT_ALLOW_CLASSES", "=", "{", "\"", "flex", ".", "messaging", ".", "*\"", ",", "\"", "flex", ".", "data", ".", "*\"", ",", "\"", "java", ".", "lang", ".", "Boolean", "\"", ",", "\"", "java", ".", "lang", ".", "Byte", "\"", ",", "\"", "java", ".", "lang", ".", "Character", "\"", ",", "\"", "java", ".", "lang", ".", "Double", "\"", ",", "\"", "java", ".", "lang", ".", "Float", "\"", ",", "\"", "java", ".", "lang", ".", "Integer", "\"", ",", "\"", "java", ".", "lang", ".", "Long", "\"", ",", "\"", "java", ".", "lang", ".", "Object", "\"", ",", "\"", "java", ".", "lang", ".", "Short", "\"", ",", "\"", "java", ".", "lang", ".", "String", "\"", ",", "\"", "java", ".", "io", ".", "Externalizable", "\"", ",", "\"", "java", ".", "util", ".", "*\"", ",", "\"", "org", ".", "w3c", ".", "dom", ".", "Document", "\"", ",", "\"", "\\\\", "[", "B", "\"", ",", "\"", "\\\\", "[", "Ljava", ".", "lang", ".", "Object", ";", "\"", "public", "void", "addAllowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "removeAllowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "addDisallowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "public", "void", "removeDisallowClassPattern", "(", "String", "classNamePattern", ")", "{", "synchronized", "(", "lock", ")", "{", "*", "@", "param", "index", "The", "index", "at", "which", "the", "value", "is", "being", "assigned", ".", "*", "@", "param", "value", "The", "value", "that", "is", "assigned", "to", "the", "index", ".", "public", "boolean", "validateAssignment", "(", "Object", "instance", ",", "int", "index", ",", "Object", "value", ")", "{", "*", "@", "param", "instance", "The", "instance", "with", "the", "property", "that", "is", "being", "assigned", "a", "new", "value", ".", "*", "@", "param", "value", "The", "value", "that", "the", "property", "is", "being", "assigned", "to", ".", "public", "boolean", "validateAssignment", "(", "Object", "instance", ",", "String", "propertyName", ",", "Object", "value", ")", "{", "public", "boolean", "validateCreation", "(", "Class", "<", "?>", "c", ")", "{", "String", "className", "=", "c", "=", "=", "null", "?", "null", ":", "c", ".", "getName", "(", ");", "if", "(", "disallowClassPatterns", "!", "=", "null", "&", "&", "!", "disallowClassPatterns", ".", "isEmpty", "(", "))", "{", "for", "(", "Pattern", "pattern", ":", "disallowClassPatterns", ".", "values", "(", "))", "{", "if", "(", "pattern", ".", "matcher", "(", "className", ")", ".", "matches", "(", "))", "{", "if", "(", "allowClassPatterns", "!", "=", "null", "&", "&", "!", "allowClassPatterns", ".", "isEmpty", "(", "))", "{", "for", "(", "Pattern", "pattern", ":", "allowClassPatterns", ".", "values", "(", "))", "{", "if", "(", "pattern", ".", "matcher", "(", "className", ")", ".", "matches", "(", "))", "{", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "public", "void", "initialize", "(", "String", "id", ",", "ConfigMap", "properties", ")", "{", "for", "(", "String", "defaultAllowClassPattern", ":", "DEFAULT_ALLOW_CLASSES", ")", "{", "if", "(", "allowedClassesMap", "!", "=", "null", "&", "&", "!", "allowedClassesMap", ".", "isEmpty", "(", "))", "{", "if", "(", "names", "!", "=", "null", "&", "&", "!", "names", ".", "isEmpty", "(", "))", "{", "for", "(", "Object", "element", ":", "names", ")", "{", "String", "name", "=", "(", "(", "ConfigMap", ")", "element", ")", ".", "getProperty", "(", "PROPERTY_NAME_ATTR", ")", ";", "if", "(", "disallowedClassesMap", "!", "=", "null", "&", "&", "!", "disallowedClassesMap", ".", "isEmpty", "(", "))", "{", "if", "(", "names", "!", "=", "null", "&", "&", "!", "names", ".", "isEmpty", "(", "))", "{", "for", "(", "Object", "element", ":", "names", ")", "{", "String", "name", "=", "(", "(", "ConfigMap", ")", "element", ")", ".", "getProperty", "(", "PROPERTY_NAME_ATTR", ")", ";", "protected", "void", "addAllowClass", "(", "String", "className", ")", "{", "synchronized", "(", "lock", ")", "{", "protected", "void", "addDisallowClass", "(", "String", "className", ")", "{", "synchronized", "(", "lock", ")", "{", "protected", "void", "clearClassCache", "(", ")", "{", "if", "(", "allowClasses", "!", "=", "null", ")", "{", "if", "(", "disallowClasses", "!", "=", "null", ")", "{", "import", "amfclient", ".", "ClientCustomType", ";", "\"", "amfclient", ".", "ClientCustomType", "\"", "/", "*", "client", "type", "*", "/)", ";", "final", "ClientCustomType", "methodArg", "=", "new", "ClientCustomType", "(", ");", "methodArg", ".", "setId", "(", "1", ")", ";", "internalTestCall", "(", "getOperationCall", "(", "method", ")", ",", "methodArg", ",", "new", "CallResultHandler", "(", "){", "import", "amfclient", ".", "ClientCustomType", ";", "private", "static", "TestServerWrapper", "serverWrapper", ";", "private", "static", "int", "serverPort", ";", "protected", "String", "getConnectionUrl", "(", ")", "{", "return", "String", ".", "format", "(", "DEFAULT_URL", ",", "serverPort", ")", ";", "serverWrapper", "=", "new", "TestServerWrapper", "(", ");", "serverPort", "=", "serverWrapper", ".", "startServer", "(", "\"", "classpath", ":", "/", "WEB", "-", "INF", "/", "flex", "/", "services", "-", "config", ".", "xml", "\"", ");", "if", "(", "serverPort", "=", "=", "-", "1", ")", "{", "Assert", ".", "fail", "(", "\"", "Couldn", "'", "t", "start", "server", "process", "\"", ");", "\"", "amfclient", ".", "ClientCustomType", "\"", "/", "*", "client", "type", "*", "/)", ";", "serverWrapper", ".", "stopServer", "(", ");", "serverWrapper", "=", "null", ";", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "}", ");", "private", "void", "internalTestCall", "(", "String", "operation", ",", "Object", "methodArg", ",", "CallResultHandler", "resultHandler", ")", "throws", "ClientStatusException", ",", "ServerStatusException", "amfConnection", ".", "connect", "(", "getConnectionUrl", "(", "),", "serializationContext", ")", ";", "final", "ProcessBuilder", "processBuilder", "=", "new", "ProcessBuilder", "(", "path", ",", "/", "/\"", "-", "agentlib", ":", "jdwp", "=", "transport", "=", "dt_socket", ",", "server", "=", "y", ",", "suspend", "=", "y", ",", "address", "=", "5005", "\"", ",", "\"", "-", "cp", "\"", ",", "/", "*\"", "\\\"", "\"", "+", "*/", "classpath", "/", "*+", "\"", "\\\"", "\"*", "/,", "TestServer", ".", "class", ".", "getCanonicalName", "(", "),", "/", "*\"", "\\\"", "\"", "+", "*/", "configPath", "/", "*+", "\"", "\\\"", "\"*", "/)", ";", "package", "amfclient", ";"], "docstring_tokens": ["object", "deserialization"]}
{"contents": ["empty"], "code_tokens": ["apr_brigade_cleanup", "(", "brigade", ")", ";</s>"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["{", "EVP_CIPHER_CTX_cleanup", "(", "&", "ctx", ")", ";", "}</s>"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "*", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "*", "distributed", "with", "this", "work", "for", "additional", "information", "*", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "*", "to", "you", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "*", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "*", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "*", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "struts2", ".", "rest", ".", "handler", ";", "import", "java", ".", "util", ".", "Set", ";", "public", "interface", "AllowedClassNames", "{", "Set", "<", "String", ">", "allowedClassNames", "(", ");", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "26", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "*", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "*", "distributed", "with", "this", "work", "for", "additional", "information", "*", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "*", "to", "you", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "*", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "*", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "*", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "struts2", ".", "rest", ".", "handler", ";", "import", "java", ".", "util", ".", "Set", ";", "public", "interface", "AllowedClasses", "{", "Set", "<", "Class", "<", "?>", ">", "allowedClasses", "(", ");", "}", "@", "@", "-", "22", ",", "39", "+", "22", ",", "114", "@", "@", "import", "com", ".", "opensymphony", ".", "xwork2", ".", "ModelDriven", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "ArrayTypePermission", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "ExplicitTypePermission", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "NoTypePermission", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "NullPermission", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "PrimitiveTypePermission", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "TypePermission", ";", "import", "org", ".", "apache", ".", "logging", ".", "log4j", ".", "LogManager", ";", "import", "org", ".", "apache", ".", "logging", ".", "log4j", ".", "Logger", ";", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Set", ";", "private", "static", "final", "Logger", "LOG", "=", "LogManager", ".", "getLogger", "(", "XStreamHandler", ".", "class", ")", ";", "XStream", "xstream", "=", "createXStream", "(", "invocation", ")", ";", "XStream", "xstream", "=", "createXStream", "(", "invocation", ")", ";", "/", "**", "*", "@", "deprecated", "use", "version", "with", "{", "@", "link", "ActionInvocation", "}", "*", "/", "@", "Deprecated", "LOG", ".", "warn", "(", "\"", "You", "are", "using", "a", "deprecated", "API", "!", "\")", ";", "protected", "XStream", "createXStream", "(", "ActionInvocation", "invocation", ")", "{", "XStream", "stream", "=", "new", "XStream", "(", ");", "LOG", ".", "debug", "(", "\"", "Clears", "existing", "permissions", "\"", ");", "stream", ".", "addPermission", "(", "NoTypePermission", ".", "NONE", ")", ";", "LOG", ".", "debug", "(", "\"", "Adds", "per", "action", "permissions", "\"", ");", "addPerActionPermission", "(", "invocation", ",", "stream", ")", ";", "LOG", ".", "debug", "(", "\"", "Adds", "default", "permissions", "\"", ");", "addDefaultPermissions", "(", "invocation", ",", "stream", ")", ";", "return", "stream", ";", "}", "private", "void", "addPerActionPermission", "(", "ActionInvocation", "invocation", ",", "XStream", "stream", ")", "{", "Object", "action", "=", "invocation", ".", "getAction", "(", ");", "if", "(", "action", "instanceof", "AllowedClasses", ")", "{", "Set", "<", "Class", "<", "?>", ">", "allowedClasses", "=", "(", "(", "AllowedClasses", ")", "action", ")", ".", "allowedClasses", "(", ");", "stream", ".", "addPermission", "(", "new", "ExplicitTypePermission", "(", "allowedClasses", ".", "toArray", "(", "new", "Class", "[", "allowedClasses", ".", "size", "(", ")]", "))", ");", "}", "if", "(", "action", "instanceof", "AllowedClassNames", ")", "{", "Set", "<", "String", ">", "allowedClassNames", "=", "(", "(", "AllowedClassNames", ")", "action", ")", ".", "allowedClassNames", "(", ");", "stream", ".", "addPermission", "(", "new", "ExplicitTypePermission", "(", "allowedClassNames", ".", "toArray", "(", "new", "String", "[", "allowedClassNames", ".", "size", "(", ")]", "))", ");", "}", "if", "(", "action", "instanceof", "XStreamPermissionProvider", ")", "{", "Collection", "<", "TypePermission", ">", "permissions", "=", "(", "(", "XStreamPermissionProvider", ")", "action", ")", ".", "getTypePermissions", "(", ");", "for", "(", "TypePermission", "permission", ":", "permissions", ")", "{", "stream", ".", "addPermission", "(", "permission", ")", ";", "}", "}", "}", "protected", "void", "addDefaultPermissions", "(", "ActionInvocation", "invocation", ",", "XStream", "stream", ")", "{", "stream", ".", "addPermission", "(", "new", "ExplicitTypePermission", "(", "new", "Class", "[", "]{", "invocation", ".", "getAction", "(", ").", "getClass", "(", ")}", "))", ";", "if", "(", "invocation", ".", "getAction", "(", ")", "instanceof", "ModelDriven", ")", "{", "stream", ".", "addPermission", "(", "new", "ExplicitTypePermission", "(", "new", "Class", "[", "]{", "((", "ModelDriven", ")", "invocation", ".", "getAction", "(", "))", ".", "getModel", "(", ").", "getClass", "(", ")}", "))", ";", "}", "stream", ".", "addPermission", "(", "NullPermission", ".", "NULL", ")", ";", "stream", ".", "addPermission", "(", "PrimitiveTypePermission", ".", "PRIMITIVES", ")", ";", "stream", ".", "addPermission", "(", "ArrayTypePermission", ".", "ARRAYS", ")", ";", "stream", ".", "addPermission", "(", "CollectionTypePermission", ".", "COLLECTIONS", ")", ";", "stream", ".", "addPermission", "(", "new", "ExplicitTypePermission", "(", "new", "Class", "[", "]{", "Date", ".", "class", "}", "))", ";", "}", "private", "static", "class", "CollectionTypePermission", "implements", "TypePermission", "{", "private", "static", "final", "TypePermission", "COLLECTIONS", "=", "new", "CollectionTypePermission", "(", ");", "@", "Override", "public", "boolean", "allows", "(", "Class", "type", ")", "{", "return", "type", "!", "=", "null", "&", "&", "type", ".", "isInterface", "(", ")", "&", "&", "(", "Collection", ".", "class", ".", "isAssignableFrom", "(", "type", ")", "|", "|", "Map", ".", "class", ".", "isAssignableFrom", "(", "type", ")", ");", "}", "}", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "*", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "*", "distributed", "with", "this", "work", "for", "additional", "information", "*", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "*", "to", "you", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "*", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "*", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "*", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "struts2", ".", "rest", ".", "handler", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "security", ".", "TypePermission", ";", "import", "java", ".", "util", ".", "Collection", ";", "public", "interface", "XStreamPermissionProvider", "{", "Collection", "<", "TypePermission", ">", "getTypePermissions", "(", ");", "}</s>XStream", "xstream", "=", "createXStream", "(", ");", "XStream", "xstream", "=", "createXStream", "(", ");"], "docstring_tokens": ["rest", "plugin", "xstream", "remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "sax", "-", ">", "fsa_digipeater", ",", "0", ",", "sizeof", "(", "sax", "-", ">", "fsa_digipeater", ")", ");</s>"], "docstring_tokens": ["8-bytes", "kernel", "stack", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "apache", ".", "commons", ".", "lang", ".", "StringUtils", ";", "public", "static", "Date", "stringToDate", "(", "String", "dateString", ",", "String", "dateFromat", ")", "{", "SimpleDateFormat", "simpleDateFormat", "=", "null", ";", "Date", "date", "=", "null", ";", "if", "(", "!", "StringUtils", ".", "isEmpty", "(", "dateString", ")", "&", "&", "!", "StringUtils", ".", "isEmpty", "(", "dateFromat", ")", "){", "try", "{", "simpleDateFormat", "=", "new", "SimpleDateFormat", "(", "dateFromat", ")", ";", "date", "=", "simpleDateFormat", ".", "parse", "(", "dateString", ")", ";", "}", "catch", "(", "Exception", "ex", ")", "{", "return", "null", ";", "}", "}", "return", "date", ";", "}", "import", "java", ".", "util", ".", "Date", ";", "import", "org", ".", "apache", ".", "ranger", ".", "common", ".", "DateUtil", ";", "Date", "date", "=", "DateUtil", ".", "stringToDate", "(", "eventTime", ",", "\"", "yyyy", "-", "MM", "-", "dd", "'", "T", "'", "HH", ":", "mm", ":", "ss", "'", "Z", "'", "\")", ";", "if", "(", "date", "=", "=", "null", ")", "{", "return", "null", ";", "}", "return", "getEntityManager", "(", ")", ".", "createNamedQuery", "(", "\"", "XXDataHist", ".", "findLatestByObjectClassTypeAndObjectIdAndEventTime", "\"", ",", "tClass", ")", ".", "setParameter", "(", "\"", "classType", "\"", ",", "classType", ")", ".", "setParameter", "(", "\"", "objectId", "\"", ",", "objId", ")", ".", "setParameter", "(", "\"", "createTime", "\"", ",", "date", ")", ".", "setMaxResults", "(", "1", ")", ".", "getSingleResult", "(", ");", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "public", "List", "<", "String", ">", "findXPortalUserRolebyXPortalUserId", "(", "Long", "userId", ")", "{", "if", "(", "userId", "=", "=", "null", ")", "{", "return", "new", "ArrayList", "<", "String", ">", "()", ";", "}", "try", "{", "List", "<", "String", ">", "returnList", "=", "getEntityManager", "(", ")", ".", "createNamedQuery", "(", "\"", "XXPortalUserRole", ".", "findXPortalUserRolebyXPortalUserId", "\"", ")", ".", "setParameter", "(", "\"", "userId", "\"", ",", "userId", ")", ".", "getResultList", "(", ");", "return", "returnList", ";", "}", "catch", "(", "NoResultException", "e", ")", "{", "return", "new", "ArrayList", "<", "String", ">", "()", ";", "}", "}", "vPortalUser", ".", "setUserRoleList", "(", "daoManager", ".", "getXXPortalUserRole", "(", ").", "findXPortalUserRolebyXPortalUserId", "(", "vPortalUser", ".", "getId", "(", "))", ");", "<", "named", "-", "query", "name", "=", "\"", "XXDataHist", ".", "findLatestByObjectClassTypeAndObjectIdAndEventTime", "\"", ">", "<", "query", ">", "select", "obj", "from", "XXDataHist", "obj", "where", "obj", ".", "objectId", "=", ":", "objectId", "and", "obj", ".", "objectClassType", "=", ":", "classType", "and", "obj", ".", "createTime", "&", "lt", ";", "=", ":", "createTime", "ORDER", "BY", "obj", ".", "id", "DESC", "<", "/", "query", ">", "<", "/", "named", "-", "query", ">", "<", "named", "-", "query", "name", "=", "\"", "XXPortalUserRole", ".", "findXPortalUserRolebyXPortalUserId", "\"", ">", "<", "query", ">", "select", "obj", ".", "userRole", "from", "XXPortalUserRole", "obj", "where", "obj", ".", "userId", "=", ":", "userId", "<", "/", "query", ">", "<", "/", "named", "-", "query", "></s>import", "javax", ".", "persistence", ".", "Query", ";", "import", "org", ".", "apache", ".", "ranger", ".", "biz", ".", "RangerBizUtil", ";", "import", "org", ".", "apache", ".", "ranger", ".", "common", ".", "AppConstants", ";", "int", "dbFlavor", "=", "RangerBizUtil", ".", "getDBFlavor", "(", ");", "String", "queryStr", "=", "\"", "\";", "if", "(", "dbFlavor", "=", "=", "AppConstants", ".", "DB_FLAVOR_ORACLE", ")", "{", "queryStr", "=", "\"", "select", "obj", ".", "*", "from", "x_data_hist", "obj", "where", "obj", ".", "obj_class_type", "=", "\"", "+", "classType", "+", "\"", "and", "obj", ".", "obj_id", "=", "\"", "+", "objId", "+", "\"", "and", "to_date", "(", "obj", ".", "create_time", ",", "'", "YYYY", "-", "MM", "-", "DD", "\\", "\"", "T", "\\", "\"", "HH24", ":", "MI", ":", "SS", "\\", "\"", "Z", "\\", "\"'", ")", "<", "=", "to_date", "(", "'\"", "+", "eventTime", "+", "\"", "',", "'", "YYYY", "-", "MM", "-", "DD", "\\", "\"", "T", "\\", "\"", "HH24", ":", "MI", ":", "SS", "\\", "\"", "Z", "\\", "\"'", ")", "ORDER", "BY", "obj", ".", "id", "DESC", "\"", ";", "}", "else", "{", "queryStr", "=", "\"", "select", "obj", ".", "*", "from", "x_data_hist", "obj", "where", "obj", ".", "obj_class_type", "=", "\"", "+", "classType", "+", "\"", "and", "obj", ".", "obj_id", "=", "\"", "+", "objId", "+", "\"", "and", "obj", ".", "create_time", "<", "=", "'", "\"", "+", "eventTime", "+", "\"", "'", "ORDER", "BY", "obj", ".", "id", "DESC", "\"", ";", "}", "Query", "jpaQuery", "=", "getEntityManager", "(", ").", "createNativeQuery", "(", "queryStr", ",", "tClass", ")", ".", "setMaxResults", "(", "1", ")", ";", "return", "(", "XXDataHist", ")", "jpaQuery", ".", "getSingleResult", "(", ");", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "public", "List", "<", "String", ">", "findXPortalUserRolebyXPortalUserId", "(", "Long", "userId", ")", "{", "try", "{", "return", "getEntityManager", "(", ")", ".", "createNativeQuery", "(", "\"", "select", "user_role", "from", "x_portal_user_role", "where", "user_id", "=", "\"+", "userId", "+", "\"\"", ")", ".", "getResultList", "(", ");", "}", "catch", "(", "Exception", "e", ")", "{", "return", "null", ";", "}", "}", "vPortalUser", ".", "setUserRoleList", "(", "daoManager", ".", "getXXPortalUser", "(", ").", "findXPortalUserRolebyXPortalUserId", "(", "vPortalUser", ".", "getId", "(", "))", ");"], "docstring_tokens": ["sql", "injection"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "nlh", "-", ">", "nlmsg_len", "<", "NLMSG_HDRLEN", "|", "|", "skb", "-", ">", "len", "<", "nlh", "-", ">", "nlmsg_len", "|", "|", "nlmsg_len", "(", "nlh", ")", "<", "sizeof", "(", "struct", "nfgenmsg", ")", ")", "{", "nfnl_err_reset", "(", "&", "err_list", ")", ";", "status", "|", "=", "NFNL_BATCH_FAILURE", ";", "goto", "done", ";</s>if", "(", "nlmsg_len", "(", "nlh", ")", "<", "sizeof", "(", "struct", "nfgenmsg", ")", "|", "|", "skb", "-", ">", "len", "<", "nlh", "-", ">", "nlmsg_len", ")", "{", "err", "=", "-", "EINVAL", ";", "goto", "ack", ";"], "docstring_tokens": ["out-of-bounds", "read"]}
{"contents": ["empty"], "code_tokens": ["libxml_globals", "-", ">", "entity_loader_disabled", "=", "0", ";", "TSRMLS_FETCH", "(", ");", "if", "(", "LIBXML", "(", "entity_loader_disabled", ")", ")", "{", "return", "NULL", ";", "}", "PHP_LIBXML_API", "zend_bool", "php_libxml_disable_entity_loader", "(", "zend_bool", "disable", "TSRMLS_DC", ")", "{", "zend_bool", "old", "=", "LIBXML", "(", "entity_loader_disabled", ")", ";", "LIBXML", "(", "entity_loader_disabled", ")", "=", "disable", ";", "return", "old", ";", "}", "RETURN_BOOL", "(", "php_libxml_disable_entity_loader", "(", "disable", "TSRMLS_CC", ")", ");", "zend_bool", "entity_loader_disabled", ";", "PHP_LIBXML_API", "zend_bool", "php_libxml_disable_entity_loader", "(", "zend_bool", "disable", "TSRMLS_DC", ")", ";", "#", "include", "\"", "ext", "/", "libxml", "/", "php_libxml", ".", "h", "\"", "zend_bool", "old", ";", "old", "=", "php_libxml_disable_entity_loader", "(", "1", ")", ";", "php_libxml_disable_entity_loader", "(", "old", ")", ";", "zend_bool", "old", ";", "old", "=", "php_libxml_disable_entity_loader", "(", "1", ")", ";", "php_libxml_disable_entity_loader", "(", "old", ")", ";</s>static", "xmlParserInputBufferPtr", "php_libxml_input_buffer_noload", "(", "const", "char", "*", "URI", ",", "xmlCharEncoding", "enc", ")", "{", "return", "NULL", ";", "}", "xmlParserInputBufferCreateFilenameFunc", "old", ";", "if", "(", "disable", "=", "=", "0", ")", "{", "old", "=", "xmlParserInputBufferCreateFilenameDefault", "(", "php_libxml_input_buffer_create_filename", ")", ";", "}", "else", "{", "old", "=", "xmlParserInputBufferCreateFilenameDefault", "(", "php_libxml_input_buffer_noload", ")", ";", "}", "if", "(", "old", "=", "=", "php_libxml_input_buffer_noload", ")", "{", "RETURN_TRUE", ";", "}", "RETURN_FALSE", ";", "ctxt", "-", ">", "options", "&", "=", "~", "XML_PARSE_DTDLOAD", ";", "ctxt", "-", ">", "options", "&", "=", "~", "XML_PARSE_DTDLOAD", ";"], "docstring_tokens": ["xml", "external", "entity"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "((", "pg_start", "+", "mem", "-", ">", "page_count", ")", ">", "num_entries", ")", "|", "|", "(", "(", "pg_start", "+", "mem", "-", ">", "page_count", ")", "<", "pg_start", ")", ")", "int", "mask_type", ",", "num_entries", ";", "num_entries", "=", "agp_num_entries", "(", ");", "if", "(", "((", "pg_start", "+", "mem", "-", ">", "page_count", ")", ">", "num_entries", ")", "|", "|", "(", "(", "pg_start", "+", "mem", "-", ">", "page_count", ")", "<", "pg_start", ")", ")", "return", "-", "EINVAL", ";</s>/", "*", "AK", ":", "could", "wrap", "*", "/", "if", "(", "(", "pg_start", "+", "mem", "-", ">", "page_count", ")", ">", "num_entries", ")", "int", "mask_type", ";"], "docstring_tokens": ["integer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["struct", "bcm_sock", "*", "bo", ";", "if", "(", "sk", "=", "=", "NULL", ")", "return", "0", ";", "bo", "=", "bcm_sk", "(", "sk", ")", ";</s>struct", "bcm_sock", "*", "bo", "=", "bcm_sk", "(", "sk", ")", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "IF_G", "(", "default_filter", ")", "!", "=", "FILTER_UNSAFE_RAW", "|", "|", "IF_G", "(", "default_filter_flags", ")", "!", "=", "0", ")", "{", "-", "-", "TEST", "-", "-", "Bug", "#", "42718", "-", "2", "(", "unsafe_raw", "filter", "not", "applied", "when", "configured", "as", "default", "filter", ")", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "filter", "\"", "))", "die", "(", "\"", "skip", "\"", ");", "?", ">", "-", "-", "INI", "-", "-", "magic_quotes_gpc", "=", "1", "filter", ".", "default", "=", "unsafe_raw", "filter", ".", "default_flags", "=", "-", "-", "GET", "-", "-", "a", "=", "1", "%", "00", "-", "-", "FILE", "-", "-", "<", "?", "php", "echo", "ini_get", "(", "'", "filter", ".", "default", "'", ")", ".", "\"", "\\", "n", "\"", ";", "echo", "ini_get", "(", "'", "filter", ".", "default_flags", "'", ")", ".", "\"", "\\", "n", "\"", ";", "echo", "addcslashes", "(", "$", "_GET", "[", "'", "a", "'", "],", "\"\\", "0", "\"", ")", ".", "\"", "\\", "n", "\"", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "unsafe_raw", "1", "\\", "0", "@", "@", "-", "0", ",", "0", "+", "1", ",", "22", "@", "@", "-", "-", "TEST", "-", "-", "Bug", "#", "42718", "(", "unsafe_raw", "filter", "not", "applied", "when", "configured", "as", "default", "filter", ")", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "filter", "\"", "))", "die", "(", "\"", "skip", "\"", ");", "?", ">", "-", "-", "INI", "-", "-", "magic_quotes_gpc", "=", "0", "filter", ".", "default", "=", "unsafe_raw", "filter", ".", "default_flags", "=", "4", "-", "-", "GET", "-", "-", "a", "=", "1", "%", "00", "-", "-", "FILE", "-", "-", "<", "?", "php", "echo", "ini_get", "(", "'", "filter", ".", "default", "'", ")", ".", "\"", "\\", "n", "\"", ";", "echo", "ini_get", "(", "'", "filter", ".", "default_flags", "'", ")", ".", "\"", "\\", "n", "\"", ";", "var_dump", "(", "FILTER_FLAG_STRIP_LOW", "=", "=", "4", ")", ";", "echo", "addcslashes", "(", "$", "_GET", "[", "'", "a", "'", "],", "\"\\", "0", "\"", ")", ".", "\"", "\\", "n", "\"", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "unsafe_raw", "4", "bool", "(", "true", ")", "1</s>if", "(", "!(", "IF_G", "(", "default_filter", ")", "=", "=", "FILTER_UNSAFE_RAW", ")", ")", "{"], "docstring_tokens": ["sql", "injection"]}
{"contents": ["empty"], "code_tokens": ["\"", "version", "\"", ":", "\"", "5", ".", "17", ".", "3", "\"", ",", "\"", "vega", "\"", ":", "\"", "5", ".", "17", ".", "3", "\"", ",", "\"", "version", "\"", ":", "\"", "4", ".", "0", ".", "1", "\"", ",", "replace", ",", "\"", "version", "\"", ":", "\"", "5", ".", "10", ".", "0", "\"", ",", "\"", "vega", "-", "expression", "\"", ":", "\"", "^", "4", ".", "0", ".", "1", "\"", ",", "replace", ",", "replace", ",", "import", "{", "error", ",", "isArray", ",", "isFunction", ",", "isString", "}", "from", "'", "vega", "-", "util", "'", ";", "export", "function", "replace", "(", "str", ",", "pattern", ",", "repl", ")", "{", "if", "(", "isFunction", "(", "repl", ")", ")", "error", "(", "'", "Function", "argument", "passed", "to", "replace", ".", "')", ";", "return", "String", "(", "str", ")", ".", "replace", "(", "pattern", ",", "repl", ")", ";", "}", "{", "indexof", ",", "join", ",", "lastindexof", ",", "replace", ",", "reverse", ",", "slice", "}", "=", "require", "(", "'.", "./", "')", ";", "tape", "(", "'", "replace", "replaces", "substrings", "'", ",", "t", "=", ">", "{", "t", ".", "equal", "(", "replace", "(", "'", "hello", "world", "'", ",", "/", "hello", "/", ",", "'", "goodbye", "'", "),", "'", "goodbye", "world", "'", ");", "t", ".", "throws", "(", "()", "=", ">", "replace", "(", "'", "evil", "'", ",", "/", ".*", "/,", "d", "=", ">", "d", ")", ");", "t", ".", "end", "(", ");", "}", ");", "\"", "version", "\"", ":", "\"", "6", ".", "1", ".", "2", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "^", "5", ".", "10", ".", "0", "\"", ",", "\"", "version", "\"", ":", "\"", "5", ".", "9", ".", "2", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "^", "5", ".", "10", ".", "0", "\"", ",", "\"", "version", "\"", ":", "\"", "5", ".", "17", ".", "3", "\"", ",", "\"", "vega", "-", "expression", "\"", ":", "\"", "~", "4", ".", "0", ".", "1", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "~", "5", ".", "10", ".", "0", "\"", ",", "\"", "vega", "-", "parser", "\"", ":", "\"", "~", "6", ".", "1", ".", "2", "\"", ",", "\"", "vega", "-", "view", "\"", ":", "\"", "~", "5", ".", "9", ".", "2", "\"", ",</s>\"", "version", "\"", ":", "\"", "5", ".", "17", ".", "2", "\"", ",", "\"", "vega", "\"", ":", "\"", "5", ".", "17", ".", "2", "\"", ",", "\"", "version", "\"", ":", "\"", "4", ".", "0", ".", "0", "\"", ",", "replace", ":", "fn", "(", "'", "replace", "'", ",", "STRING", ")", ",", "t", ".", "equal", "(", "evaluate", "(", "'", "replace", "(", "\"", "hello", "world", "\"", ",", "/", "hello", "/", ",", "\"", "goodbye", "\"", ")'", "),", "'", "goodbye", "world", "'", ");", "\"", "version", "\"", ":", "\"", "5", ".", "9", ".", "0", "\"", ",", "\"", "vega", "-", "expression", "\"", ":", "\"", "^", "4", ".", "0", ".", "0", "\"", ",", "import", "{", "isArray", ",", "isString", "}", "from", "'", "vega", "-", "util", "'", ";", "{", "indexof", ",", "join", ",", "lastindexof", ",", "reverse", ",", "slice", "}", "=", "require", "(", "'.", "./", "')", ";", "\"", "version", "\"", ":", "\"", "6", ".", "1", ".", "1", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "^", "5", ".", "9", ".", "0", "\"", ",", "\"", "version", "\"", ":", "\"", "5", ".", "9", ".", "1", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "^", "5", ".", "9", ".", "0", "\"", ",", "\"", "version", "\"", ":", "\"", "5", ".", "17", ".", "2", "\"", ",", "\"", "vega", "-", "expression", "\"", ":", "\"", "~", "4", ".", "0", ".", "0", "\"", ",", "\"", "vega", "-", "functions", "\"", ":", "\"", "~", "5", ".", "9", ".", "0", "\"", ",", "\"", "vega", "-", "parser", "\"", ":", "\"", "~", "6", ".", "1", ".", "1", "\"", ",", "\"", "vega", "-", "view", "\"", ":", "\"", "~", "5", ".", "9", ".", "1", "\"", ","], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["cn_nonce", "(", "1", ")", ",", "cn_peer_nonce", "(", "1", ")", ",", "put_uint64", "(", "message_nonce", "+", "16", ",", "cn_nonce", ")", ";", "memcpy", "(", "message", "+", "8", ",", "message_nonce", "+", "16", ",", "8", ")", ";", "uint64_t", "nonce", "=", "get_uint64", "(", "message", "+", "8", ")", ";", "if", "(", "nonce", "<", "=", "cn_peer_nonce", ")", "{", "errno", "=", "EPROTO", ";", "return", "-", "1", ";", "}", "cn_peer_nonce", "=", "nonce", ";", "put_uint64", "(", "hello_nonce", "+", "16", ",", "cn_nonce", ")", ";", "put_uint64", "(", "initiate_nonce", "+", "16", ",", "cn_nonce", ")", ";", "memcpy", "(", "initiate", "+", "105", ",", "initiate_nonce", "+", "16", ",", "8", ")", ";", "cn_peer_nonce", "=", "get_uint64", "(", "msg_data", "+", "6", ")", ";", "uint64_t", "cn_peer_nonce", ";", "cn_peer_nonce", "(", "1", ")", ",", "put_uint64", "(", "message_nonce", "+", "16", ",", "cn_nonce", ")", ";", "memcpy", "(", "message", "+", "8", ",", "message_nonce", "+", "16", ",", "8", ")", ";", "uint64_t", "nonce", "=", "get_uint64", "(", "message", "+", "8", ")", ";", "if", "(", "nonce", "<", "=", "cn_peer_nonce", ")", "{", "errno", "=", "EPROTO", ";", "return", "-", "1", ";", "}", "cn_peer_nonce", "=", "nonce", ";", "cn_peer_nonce", "=", "get_uint64", "(", "hello", "+", "112", ")", ";", "cn_peer_nonce", "=", "get_uint64", "(", "initiate", "+", "105", ")", ";", "put_uint64", "(", "ready_nonce", "+", "16", ",", "cn_nonce", ")", ";", "memcpy", "(", "ready", "+", "6", ",", "ready_nonce", "+", "16", ",", "8", ")", ";", "uint64_t", "cn_peer_nonce", ";</s>memcpy", "(", "message_nonce", "+", "16", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "message", "+", "8", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "hello_nonce", "+", "16", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "initiate_nonce", "+", "16", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "initiate", "+", "105", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "message_nonce", "+", "16", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "message", "+", "8", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "ready_nonce", "+", "16", ",", "&", "cn_nonce", ",", "8", ")", ";", "memcpy", "(", "ready", "+", "6", ",", "&", "cn_nonce", ",", "8", ")", ";"], "docstring_tokens": ["unauthorized", "access"]}
{"contents": ["empty"], "code_tokens": ["return", "0", ";", "return", "0", ";", "return", "err", "=", "=", "0", "?", "NF_ACCEPT", ":", "NF_DROP", ";</s>return", "-", "EINVAL", ";", "return", "-", "EINVAL", ";", "return", "NF_ACCEPT", ";"], "docstring_tokens": ["out-of-bounds", "write"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "pte", ")", "else", "if", "(", "walk", "-", ">", "pte_hole", ")", "err", "=", "walk", "-", ">", "pte_hole", "(", "addr", ",", "next", ",", "walk", ")", ";</s>if", "(", "pte", "&", "&", "walk", "-", ">", "hugetlb_entry", ")"], "docstring_tokens": ["uninitialized", "kernel", "heap", "page", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["static", "int", "read_entry", "(", "size_t", "*", "out_size", ",", "return", "-", "1", ";", "return", "-", "1", ";", "if", "(", "entry_size", "=", "=", "0", ")", "return", "-", "1", ";", "return", "-", "1", ";", "return", "-", "1", ";", "*", "out_size", "=", "entry_size", ";", "return", "0", ";", "size_t", "entry_size", ";", "if", "(", "(", "error", "=", "read_entry", "(", "&", "entry", ",", "&", "entry_size", ",", "index", ",", "buffer", ",", "buffer_size", ",", "last", ")", ")", "<", "0", ")", "{</s>static", "size_t", "read_entry", "(", "return", "0", ";", "return", "0", ";", "return", "0", ";", "return", "0", ";", "return", "entry_size", ";", "size_t", "entry_size", "=", "read_entry", "(", "&", "entry", ",", "index", ",", "buffer", ",", "buffer_size", ",", "last", ")", ";", "/", "*", "0", "bytes", "read", "means", "an", "object", "corruption", "*", "/", "if", "(", "entry_size", "=", "=", "0", ")", "{"], "docstring_tokens": ["double", "free"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "prot", ".", "indexOf", "(", "'", "javascript", ":", "')", "=", "==", "0", "|", "|", "prot", ".", "indexOf", "(", "'", "vbscript", ":", "')", "=", "==", "0", "|", "|", "prot", ".", "indexOf", "(", "'", "data", ":", "')", "=", "==", "0", ")", "{", "<", "p", ">", "</", "p", ">", "[", "URL", "]", "(", "javascript", "&", "#", "58document", ";", "alert", "&", "#", "40", ";", "1", "&", "#", "41", ";", ")", "[", "URL", "]", "(", "data", ":", "text", "/", "html", ";", "base64", ",", "PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K", ")</s>if", "(", "prot", ".", "indexOf", "(", "'", "javascript", ":", "')", "=", "==", "0", "|", "|", "prot", ".", "indexOf", "(", "'", "vbscript", ":", "')", "=", "==", "0", ")", "{", "[", "URL", "]", "(", "javascript", "&", "#", "58document", ";", "alert", "&", "#", "40", ";", "1", "&", "#", "41", ";", ")"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["static", "unsigned", "long", "stack_maxrandom_size", "(", "void", ")", "unsigned", "long", "max", "=", "0", ";", "max", "=", "(", "(-", "1UL", ")", "&", "STACK_RND_MASK", ")", "<", "<", "PAGE_SHIFT", ";", "unsigned", "long", "random_variable", "=", "0", ";", "random_variable", "=", "(", "unsigned", "long", ")", "get_random_int", "(", ");", "random_variable", "&", "=", "STACK_RND_MASK", ";</s>static", "unsigned", "int", "stack_maxrandom_size", "(", "void", ")", "unsigned", "int", "max", "=", "0", ";", "max", "=", "(", "(-", "1U", ")", "&", "STACK_RND_MASK", ")", "<", "<", "PAGE_SHIFT", ";", "unsigned", "int", "random_variable", "=", "0", ";", "random_variable", "=", "get_random_int", "(", ")", "&", "STACK_RND_MASK", ";"], "docstring_tokens": ["integer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["void", "take_dentry_name_snapshot", "(", "struct", "name_snapshot", "*", "name", ",", "struct", "dentry", "*", "dentry", ")", "{", "spin_lock", "(", "&", "dentry", "-", ">", "d_lock", ")", ";", "if", "(", "unlikely", "(", "dname_external", "(", "dentry", ")", "))", "{", "struct", "external_name", "*", "p", "=", "external_name", "(", "dentry", ")", ";", "atomic_inc", "(", "&", "p", "-", ">", "u", ".", "count", ")", ";", "spin_unlock", "(", "&", "dentry", "-", ">", "d_lock", ")", ";", "name", "-", ">", "name", "=", "p", "-", ">", "name", ";", "}", "else", "{", "memcpy", "(", "name", "-", ">", "inline_name", ",", "dentry", "-", ">", "d_iname", ",", "DNAME_INLINE_LEN", ")", ";", "spin_unlock", "(", "&", "dentry", "-", ">", "d_lock", ")", ";", "name", "-", ">", "name", "=", "name", "-", ">", "inline_name", ";", "}", "}", "EXPORT_SYMBOL", "(", "take_dentry_name_snapshot", ")", ";", "void", "release_dentry_name_snapshot", "(", "struct", "name_snapshot", "*", "name", ")", "{", "if", "(", "unlikely", "(", "name", "-", ">", "name", "!", "=", "name", "-", ">", "inline_name", ")", ")", "{", "struct", "external_name", "*", "p", ";", "p", "=", "container_of", "(", "name", "-", ">", "name", ",", "struct", "external_name", ",", "name", "[", "0", "]", ");", "if", "(", "unlikely", "(", "atomic_dec_and_test", "(", "&", "p", "-", ">", "u", ".", "count", ")", "))", "kfree_rcu", "(", "p", ",", "u", ".", "head", ")", ";", "}", "}", "EXPORT_SYMBOL", "(", "release_dentry_name_snapshot", ")", ";", "struct", "name_snapshot", "old_name", ";", "take_dentry_name_snapshot", "(", "&", "old_name", ",", "old_dentry", ")", ";", "release_dentry_name_snapshot", "(", "&", "old_name", ")", ";", "fsnotify_move", "(", "d_inode", "(", "old_dir", ")", ",", "d_inode", "(", "new_dir", ")", ",", "old_name", ".", "name", ",", "release_dentry_name_snapshot", "(", "&", "old_name", ")", ";", "struct", "name_snapshot", "old_name", ";", "take_dentry_name_snapshot", "(", "&", "old_name", ",", "old_dentry", ")", ";", "fsnotify_move", "(", "old_dir", ",", "new_dir", ",", "old_name", ".", "name", ",", "is_dir", ",", "release_dentry_name_snapshot", "(", "&", "old_name", ")", ";", "struct", "name_snapshot", "name", ";", "take_dentry_name_snapshot", "(", "&", "name", ",", "dentry", ")", ";", "name", ".", "name", ",", "0", ")", ";", "name", ".", "name", ",", "0", ")", ";", "release_dentry_name_snapshot", "(", "&", "name", ")", ";", "struct", "name_snapshot", "{", "const", "char", "*", "name", ";", "char", "inline_name", "[", "DNAME_INLINE_LEN", "]", ";", "}", ";", "void", "take_dentry_name_snapshot", "(", "struct", "name_snapshot", "*", ",", "struct", "dentry", "*", ");", "void", "release_dentry_name_snapshot", "(", "struct", "name_snapshot", "*", ");</s>const", "char", "*", "old_name", ";", "old_name", "=", "fsnotify_oldname_init", "(", "old_dentry", "-", ">", "d_name", ".", "name", ")", ";", "fsnotify_oldname_free", "(", "old_name", ")", ";", "fsnotify_move", "(", "d_inode", "(", "old_dir", ")", ",", "d_inode", "(", "new_dir", ")", ",", "old_name", ",", "fsnotify_oldname_free", "(", "old_name", ")", ";", "const", "unsigned", "char", "*", "old_name", ";", "old_name", "=", "fsnotify_oldname_init", "(", "old_dentry", "-", ">", "d_name", ".", "name", ")", ";", "fsnotify_move", "(", "old_dir", ",", "new_dir", ",", "old_name", ",", "is_dir", ",", "fsnotify_oldname_free", "(", "old_name", ")", ";", "dentry", "-", ">", "d_name", ".", "name", ",", "0", ")", ";", "dentry", "-", ">", "d_name", ".", "name", ",", "0", ")", ";", "#", "if", "defined", "(", "CONFIG_FSNOTIFY", ")", "/", "*", "notify", "helpers", "*", "/", "/", "*", "*", "fsnotify_oldname_init", "-", "save", "off", "the", "old", "filename", "before", "we", "change", "it", "*", "/", "static", "inline", "const", "unsigned", "char", "*", "fsnotify_oldname_init", "(", "const", "unsigned", "char", "*", "name", ")", "{", "return", "kstrdup", "(", "name", ",", "GFP_KERNEL", ")", ";", "}", "/", "*", "*", "fsnotify_oldname_free", "-", "free", "the", "name", "we", "got", "from", "fsnotify_oldname_init", "*", "/", "static", "inline", "void", "fsnotify_oldname_free", "(", "const", "unsigned", "char", "*", "old_name", ")", "{", "kfree", "(", "old_name", ")", ";", "}", "#", "else", "/", "*", "CONFIG_FSNOTIFY", "*", "/", "static", "inline", "const", "char", "*", "fsnotify_oldname_init", "(", "const", "unsigned", "char", "*", "name", ")", "{", "return", "NULL", ";", "}", "static", "inline", "void", "fsnotify_oldname_free", "(", "const", "unsigned", "char", "*", "old_name", ")", "{", "}", "#", "endif", "/", "*", "CONFIG_FSNOTIFY", "*", "/"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["String", "variableValue", "=", "ssiMediator", ".", "getVariableValue", "(", "variableName", ",", "\"", "entity", "\"", ");", "<", "fix", ">", "Encode", "the", "output", "of", "the", "SSI", "<", "code", ">", "printenv", "<", "/", "code", ">", "command", ".", "(", "markt", ")", "<", "/", "fix", "></s>String", "variableValue", "=", "ssiMediator", ".", "getVariableValue", "(", "variableName", ")", ";"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["@", "Deprecated", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ".", "LAX", ".", "encode", "(", "name", ",", "value", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ".", "LAX", ".", "encode", "(", "cookie", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ".", "LAX", ".", "encode", "(", "cookies", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ".", "LAX", ".", "encode", "(", "cookies", ")", ";", "*", "@", "deprecated", "Use", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", "}", "instead", ".", "@", "Deprecated", "public", "interface", "Cookie", "extends", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", "{", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "void", "setVersion", "(", "int", "version", ")", ";", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "*", "*", "@", "deprecated", "Not", "part", "of", "RFC6265", "@", "Deprecated", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieUtil", ".", "firstInvalidCookieNameOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieUtil", ".", "firstInvalidCookieValueOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieUtil", ".", "unwrapValue", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieHeaderNames", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "logging", ".", "InternalLogger", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "logging", ".", "InternalLoggerFactory", ";", "*", "@", "deprecated", "Use", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "}", "*", "or", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "}", "instead", ".", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "private", "final", "InternalLogger", "logger", "=", "InternalLoggerFactory", ".", "getInstance", "(", "getClass", "(", "))", ";", "private", "static", "final", "CookieDecoder", "STRICT", "=", "new", "CookieDecoder", "(", "true", ")", ";", "private", "static", "final", "CookieDecoder", "LAX", "=", "new", "CookieDecoder", "(", "false", ")", ";", "private", "static", "final", "String", "COMMENT", "=", "\"", "Comment", "\"", ";", "private", "static", "final", "String", "COMMENTURL", "=", "\"", "CommentURL", "\"", ";", "private", "static", "final", "String", "DISCARD", "=", "\"", "Discard", "\"", ";", "private", "static", "final", "String", "PORT", "=", "\"", "Port", "\"", ";", "private", "static", "final", "String", "VERSION", "=", "\"", "Version", "\"", ";", "private", "final", "boolean", "strict", ";", "public", "static", "Set", "<", "Cookie", ">", "decode", "(", "String", "header", ")", "{", "return", "decode", "(", "header", ",", "true", ")", ";", "}", "public", "static", "Set", "<", "Cookie", ">", "decode", "(", "String", "header", ",", "boolean", "strict", ")", "{", "return", "(", "strict", "?", "STRICT", ":", "LAX", ")", ".", "doDecode", "(", "header", ")", ";", "}", "private", "Set", "<", "Cookie", ">", "doDecode", "(", "String", "header", ")", "{", "if", "(", "names", ".", "get", "(", "0", ")", ".", "equalsIgnoreCase", "(", "VERSION", ")", ")", "{", "Cookie", "c", "=", "initCookie", "(", "name", ",", "value", ")", ";", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "if", "(", "DISCARD", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "COMMENT", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "COMMENTURL", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "VERSION", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "PORT", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "private", "CookieDecoder", "(", "boolean", "strict", ")", "{", "this", ".", "strict", "=", "strict", ";", "}", "private", "DefaultCookie", "initCookie", "(", "String", "name", ",", "String", "value", ")", "{", "if", "(", "name", "=", "=", "null", "|", "|", "name", ".", "length", "(", ")", "=", "=", "0", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "with", "null", "name", "\"", ");", "return", "null", ";", "}", "if", "(", "value", "=", "=", "null", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "with", "null", "value", "\"", ");", "return", "null", ";", "}", "CharSequence", "unwrappedValue", "=", "unwrapValue", "(", "value", ")", ";", "if", "(", "unwrappedValue", "=", "=", "null", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "starting", "quotes", "are", "not", "properly", "balanced", "in", "'", "{}", "'\"", ",", "unwrappedValue", ")", ";", "return", "null", ";", "}", "int", "invalidOctetPos", ";", "if", "(", "strict", "&", "&", "(", "invalidOctetPos", "=", "firstInvalidCookieNameOctet", "(", "name", ")", ")", ">", "=", "0", ")", "{", "if", "(", "logger", ".", "isDebugEnabled", "(", "))", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "name", "'", "{}", "'", "contains", "invalid", "char", "'", "{}", "'\"", ",", "name", ",", "name", ".", "charAt", "(", "invalidOctetPos", ")", ");", "}", "return", "null", ";", "}", "final", "boolean", "wrap", "=", "unwrappedValue", ".", "length", "(", ")", "!", "=", "value", ".", "length", "(", ");", "if", "(", "strict", "&", "&", "(", "invalidOctetPos", "=", "firstInvalidCookieValueOctet", "(", "unwrappedValue", ")", ")", ">", "=", "0", ")", "{", "if", "(", "logger", ".", "isDebugEnabled", "(", "))", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "value", "'", "{}", "'", "contains", "invalid", "char", "'", "{}", "'\"", ",", "unwrappedValue", ",", "unwrappedValue", ".", "charAt", "(", "invalidOctetPos", ")", ");", "}", "return", "null", ";", "}", "DefaultCookie", "cookie", "=", "new", "DefaultCookie", "(", "name", ",", "unwrappedValue", ".", "toString", "(", "))", ";", "cookie", ".", "setWrap", "(", "wrap", ")", ";", "return", "cookie", ";", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "java", ".", "util", ".", "BitSet", ";", "/", "**", "*", "@", "deprecated", "Duplicate", "of", "package", "private", "$", "{@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", "}", "*", "/", "@", "Deprecated", "final", "class", "CookieUtil", "{", "private", "static", "final", "BitSet", "VALID_COOKIE_VALUE_OCTETS", "=", "validCookieValueOctets", "(", ");", "private", "static", "final", "BitSet", "VALID_COOKIE_NAME_OCTETS", "=", "validCookieNameOctets", "(", "VALID_COOKIE_VALUE_OCTETS", ")", ";", "/", "/", "US", "-", "ASCII", "characters", "excluding", "CTLs", ",", "whitespace", ",", "DQUOTE", ",", "comma", ",", "semicolon", ",", "and", "backslash", "private", "static", "BitSet", "validCookieValueOctets", "(", ")", "{", "BitSet", "bits", "=", "new", "BitSet", "(", "8", ")", ";", "for", "(", "int", "i", "=", "35", ";", "i", "<", "127", ";", "i", "+", "+)", "{", "/", "/", "US", "-", "ASCII", "characters", "excluding", "CTLs", "(", "%", "x00", "-", "1F", "/", "%", "x7F", ")", "bits", ".", "set", "(", "i", ")", ";", "}", "bits", ".", "set", "(", "'\"", "',", "false", ")", ";", "/", "/", "exclude", "DQUOTE", "=", "%", "x22", "bits", ".", "set", "(", "',", "',", "false", ")", ";", "/", "/", "exclude", "comma", "=", "%", "x2C", "bits", ".", "set", "(", "';", "',", "false", ")", ";", "/", "/", "exclude", "semicolon", "=", "%", "x3B", "bits", ".", "set", "(", "'\\", "\\'", ",", "false", ")", ";", "/", "/", "exclude", "backslash", "=", "%", "x5C", "return", "bits", ";", "}", "/", "/", "token", "=", "1", "*", "<", "any", "CHAR", "except", "CTLs", "or", "separators", ">", "/", "/", "separators", "=", "\"", "(\"", "|", "\"", ")\"", "|", "\"", "<\"", "|", "\"", ">\"", "|", "\"", "@\"", "/", "/", "|", "\"", ",\"", "|", "\"", ";\"", "|", "\"", ":\"", "|", "\"", "\\\"", "|", "<", "\">", "/", "/", "|", "\"", "/\"", "|", "\"", "[\"", "|", "\"", "]\"", "|", "\"", "?\"", "|", "\"", "=\"", "/", "/", "|", "\"", "{\"", "|", "\"", "}\"", "|", "SP", "|", "HT", "private", "static", "BitSet", "validCookieNameOctets", "(", "BitSet", "validCookieValueOctets", ")", "{", "BitSet", "bits", "=", "new", "BitSet", "(", "8", ")", ";", "bits", ".", "or", "(", "validCookieValueOctets", ")", ";", "bits", ".", "set", "(", "'(", "',", "false", ")", ";", "bits", ".", "set", "(", "')", "',", "false", ")", ";", "bits", ".", "set", "(", "'<", "',", "false", ")", ";", "bits", ".", "set", "(", "'>", "',", "false", ")", ";", "bits", ".", "set", "(", "'@", "',", "false", ")", ";", "bits", ".", "set", "(", "':", "',", "false", ")", ";", "bits", ".", "set", "(", "'/", "',", "false", ")", ";", "bits", ".", "set", "(", "'[", "',", "false", ")", ";", "bits", ".", "set", "(", "']", "',", "false", ")", ";", "bits", ".", "set", "(", "'?", "',", "false", ")", ";", "bits", ".", "set", "(", "'=", "',", "false", ")", ";", "bits", ".", "set", "(", "'{", "',", "false", ")", ";", "bits", ".", "set", "(", "'}", "',", "false", ")", ";", "bits", ".", "set", "(", "'", "'", ",", "false", ")", ";", "bits", ".", "set", "(", "'\\", "t", "'", ",", "false", ")", ";", "return", "bits", ";", "}", "static", "int", "firstInvalidCookieNameOctet", "(", "CharSequence", "cs", ")", "{", "return", "firstInvalidOctet", "(", "cs", ",", "VALID_COOKIE_NAME_OCTETS", ")", ";", "}", "static", "int", "firstInvalidCookieValueOctet", "(", "CharSequence", "cs", ")", "{", "return", "firstInvalidOctet", "(", "cs", ",", "VALID_COOKIE_VALUE_OCTETS", ")", ";", "}", "static", "int", "firstInvalidOctet", "(", "CharSequence", "cs", ",", "BitSet", "bits", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "cs", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "cs", ".", "charAt", "(", "i", ")", ";", "if", "(", "!", "bits", ".", "get", "(", "c", ")", ")", "{", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", "static", "CharSequence", "unwrapValue", "(", "CharSequence", "cs", ")", "{", "final", "int", "len", "=", "cs", ".", "length", "(", ");", "if", "(", "len", ">", "0", "&", "&", "cs", ".", "charAt", "(", "0", ")", "=", "=", "'", "\"'", ")", "{", "if", "(", "len", ">", "=", "2", "&", "&", "cs", ".", "charAt", "(", "len", "-", "1", ")", "=", "=", "'", "\"'", ")", "{", "/", "/", "properly", "balanced", "return", "len", "=", "=", "2", "?", "\"", "\"", ":", "cs", ".", "subSequence", "(", "1", ",", "len", "-", "1", ")", ";", "}", "else", "{", "return", "null", ";", "}", "}", "return", "cs", ";", "}", "private", "CookieUtil", "(", ")", "{", "/", "/", "Unused", "}", "}", "@", "@", "-", "19", ",", "63", "+", "19", ",", "26", "@", "@", "*", "*", "@", "deprecated", "Use", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "DefaultCookie", "}", "instead", ".", "@", "Deprecated", "public", "class", "DefaultCookie", "extends", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "DefaultCookie", "implements", "Cookie", "{", "super", "(", "name", ",", "value", ")", ";", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "@", "Deprecated", "public", "final", "class", "HttpHeaderDateFormat", "extends", "SimpleDateFormat", "{", "public", "static", "HttpHeaderDateFormat", "get", "(", ")", "{", "*", "{", "@", "link", "QueryStringEncoder", "}", "and", "{", "@", "link", "QueryStringDecoder", "}", ".", "*", "*", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", "}", "support", "is", "also", "provided", "*", "separately", "via", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "}", ",", "*", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "}", ",", "*", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", "}", ",", "*", "and", "{", "@", "link", "@", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", "}", ".", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", "*", "Unlike", "the", "Servlet", "API", ",", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", "}", "support", "is", "provided", "*", "separately", "via", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "}", ",", "*", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "}", ",", "*", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", "}", ",", "*", "and", "{", "@", "link", "@", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", "}", ".", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieDecoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", "*", "@", "see", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", "*", "*", "@", "deprecated", "Use", "{", "@", "link", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", "}", "instead", "@", "Deprecated", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ".", "LAX", ".", "encode", "(", "name", ",", "value", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ".", "LAX", ".", "encode", "(", "cookie", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ".", "LAX", ".", "encode", "(", "cookies", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ".", "LAX", ".", "encode", "(", "cookies", ")", ";", "@", "Deprecated", "return", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ".", "LAX", ".", "encode", "(", "cookies", ")", ";", "*", "Copyright", "2015", "The", "Netty", "Project", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "util", ".", "internal", ".", "ObjectUtil", ".", "checkNotNull", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpHeaderDateFormat", ";", "*", "It", "will", "store", "the", "way", "the", "raw", "value", "was", "wrapped", "in", "{", "@", "link", "Cookie", "#", "setWrap", "(", "boolean", ")", "}", "so", "it", "can", "be", "public", "final", "class", "ClientCookieDecoder", "extends", "CookieDecoder", "{", "/", "**", "*", "Strict", "encoder", "that", "validates", "that", "name", "and", "value", "chars", "are", "in", "the", "valid", "scope", "*", "defined", "in", "RFC6265", "*", "/", "public", "static", "final", "ClientCookieDecoder", "STRICT", "=", "new", "ClientCookieDecoder", "(", "true", ")", ";", "/", "**", "*", "Lax", "instance", "that", "doesn", "'", "t", "validate", "name", "and", "value", "*", "/", "public", "static", "final", "ClientCookieDecoder", "LAX", "=", "new", "ClientCookieDecoder", "(", "false", ")", ";", "private", "ClientCookieDecoder", "(", "boolean", "strict", ")", "{", "super", "(", "strict", ")", ";", "}", "public", "Cookie", "decode", "(", "String", "header", ")", "{", "final", "int", "headerLen", "=", "checkNotNull", "(", "header", ",", "\"", "header", "\"", ").", "length", "(", ");", "int", "nameBegin", "=", "i", ";", "int", "nameEnd", "=", "i", ";", "int", "valueBegin", "=", "-", "1", ";", "int", "valueEnd", "=", "-", "1", ";", "if", "(", "i", "!", "=", "headerLen", ")", "{", "nameEnd", "=", "i", ";", "valueBegin", "=", "valueEnd", "=", "-", "1", ";", "nameEnd", "=", "i", ";", "valueBegin", "=", "valueEnd", "=", "0", ";", "valueBegin", "=", "i", ";", "/", "/", "NAME", "=", "VALUE", ";", "int", "semiPos", "=", "header", ".", "indexOf", "(", "';", "',", "i", ")", ";", "valueEnd", "=", "i", "=", "semiPos", ">", "0", "?", "semiPos", ":", "headerLen", ";", "nameEnd", "=", "headerLen", ";", "valueBegin", "=", "valueEnd", "=", "-", "1", ";", "if", "(", "valueEnd", ">", "0", "&", "&", "header", ".", "charAt", "(", "valueEnd", "-", "1", ")", "=", "=", "'", ",'", ")", "{", "/", "/", "old", "multiple", "cookies", "separator", ",", "skipping", "it", "valueEnd", "-", "-;", "}", "/", "/", "cookie", "name", "-", "value", "pair", "DefaultCookie", "cookie", "=", "initCookie", "(", "header", ",", "nameBegin", ",", "nameEnd", ",", "valueBegin", ",", "valueEnd", ")", ";", "if", "(", "cookie", "=", "=", "null", ")", "{", "return", "null", ";", "}", "cookieBuilder", "=", "new", "CookieBuilder", "(", "cookie", ")", ";", "/", "/", "cookie", "attribute", "String", "attrValue", "=", "valueBegin", "=", "=", "-", "1", "?", "null", ":", "header", ".", "substring", "(", "valueBegin", ",", "valueEnd", ")", ";", "cookieBuilder", ".", "appendAttribute", "(", "header", ",", "nameBegin", ",", "nameEnd", ",", "attrValue", ")", ";", "private", "final", "DefaultCookie", "cookie", ";", "public", "CookieBuilder", "(", "DefaultCookie", "cookie", ")", "{", "this", ".", "cookie", "=", "cookie", ";", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "PATH", ",", "0", ",", "4", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "DOMAIN", ",", "0", ",", "5", ")", ")", "{", "domain", "=", "value", ".", "length", "(", ")", ">", "0", "?", "value", ".", "toString", "(", ")", ":", "null", ";", "}", "else", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "SECURE", ",", "0", ",", "5", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "EXPIRES", ",", "0", ",", "7", ")", ")", "{", "}", "else", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "MAX_AGE", ",", "0", ",", "7", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "CookieHeaderNames", ".", "HTTPONLY", ",", "0", ",", "8", ")", ")", "{", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "*;", "import", "static", "io", ".", "netty", ".", "util", ".", "internal", ".", "ObjectUtil", ".", "checkNotNull", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpRequest", ";", "/", "**", "*", "A", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc6265", "\"", ">", "RFC6265", "<", "/", "a", ">", "compliant", "cookie", "encoder", "to", "be", "used", "client", "side", ",", "*", "so", "only", "name", "=", "value", "pairs", "are", "sent", ".", "*", "*", "User", "-", "Agents", "are", "not", "supposed", "to", "interpret", "cookies", ",", "so", ",", "if", "present", ",", "{", "@", "link", "Cookie", "#", "rawValue", "(", ")}", "will", "be", "used", ".", "*", "Otherwise", ",", "{", "@", "link", "Cookie", "#", "value", "(", ")}", "will", "be", "used", "unquoted", ".", "*", "*", "Note", "that", "multiple", "cookies", "are", "supposed", "to", "be", "sent", "at", "once", "in", "a", "single", "\"", "Cookie", "\"", "header", ".", "*", "*", "<", "pre", ">", "*", "/", "/", "Example", "*", "{", "@", "link", "HttpRequest", "}", "req", "=", ".", "..", ";", "*", "res", ".", "setHeader", "(", "\"", "Cookie", "\"", ",", "{", "@", "link", "ClientCookieEncoder", "}", ".", "encode", "(", "\"", "JSESSIONID", "\"", ",", "\"", "1234", "\"", "))", ";", "*", "<", "/", "pre", ">", "*", "*", "@", "see", "ClientCookieDecoder", "*", "/", "public", "final", "class", "ClientCookieEncoder", "extends", "CookieEncoder", "{", "/", "**", "*", "Strict", "encoder", "that", "validates", "that", "name", "and", "value", "chars", "are", "in", "the", "valid", "scope", "*", "defined", "in", "RFC6265", "*", "/", "public", "static", "final", "ClientCookieEncoder", "STRICT", "=", "new", "ClientCookieEncoder", "(", "true", ")", ";", "/", "**", "*", "Lax", "instance", "that", "doesn", "'", "t", "validate", "name", "and", "value", "*", "/", "public", "static", "final", "ClientCookieEncoder", "LAX", "=", "new", "ClientCookieEncoder", "(", "false", ")", ";", "private", "ClientCookieEncoder", "(", "boolean", "strict", ")", "{", "super", "(", "strict", ")", ";", "}", "/", "**", "*", "Encodes", "the", "specified", "cookie", "into", "a", "Cookie", "header", "value", ".", "*", "*", "@", "param", "name", "the", "cookie", "name", "*", "@", "param", "value", "the", "cookie", "value", "*", "@", "return", "a", "Rfc6265", "style", "Cookie", "header", "value", "*", "/", "public", "String", "encode", "(", "String", "name", ",", "String", "value", ")", "{", "return", "encode", "(", "new", "DefaultCookie", "(", "name", ",", "value", ")", ");", "}", "/", "**", "*", "Encodes", "the", "specified", "cookie", "into", "a", "Cookie", "header", "value", ".", "*", "*", "@", "param", "specified", "the", "cookie", "*", "@", "return", "a", "Rfc6265", "style", "Cookie", "header", "value", "*", "/", "public", "String", "encode", "(", "Cookie", "cookie", ")", "{", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "encode", "(", "buf", ",", "checkNotNull", "(", "cookie", ",", "\"", "cookie", "\"", "))", ";", "return", "stripTrailingSeparator", "(", "buf", ")", ";", "}", "/", "**", "*", "Encodes", "the", "specified", "cookies", "into", "a", "single", "Cookie", "header", "value", ".", "*", "*", "@", "param", "cookies", "some", "cookies", "*", "@", "return", "a", "Rfc6265", "style", "Cookie", "header", "value", ",", "null", "if", "no", "cookies", "are", "passed", ".", "*", "/", "public", "String", "encode", "(", "Cookie", ".", "..", "cookies", ")", "{", "if", "(", "checkNotNull", "(", "cookies", ",", "\"", "cookies", "\"", ").", "length", "=", "=", "0", ")", "{", "return", "null", ";", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encode", "(", "buf", ",", "c", ")", ";", "}", "return", "stripTrailingSeparatorOrNull", "(", "buf", ")", ";", "}", "/", "**", "*", "Encodes", "the", "specified", "cookies", "into", "a", "single", "Cookie", "header", "value", ".", "*", "*", "@", "param", "cookies", "some", "cookies", "*", "@", "return", "a", "Rfc6265", "style", "Cookie", "header", "value", ",", "null", "if", "no", "cookies", "are", "passed", ".", "*", "/", "public", "String", "encode", "(", "Iterable", "<", "?", "extends", "Cookie", ">", "cookies", ")", "{", "Iterator", "<", "?", "extends", "Cookie", ">", "cookiesIt", "=", "checkNotNull", "(", "cookies", ",", "\"", "cookies", "\"", ").", "iterator", "(", ");", "if", "(", "!", "cookiesIt", ".", "hasNext", "(", "))", "{", "return", "null", ";", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "while", "(", "cookiesIt", ".", "hasNext", "(", "))", "{", "Cookie", "c", "=", "cookiesIt", ".", "next", "(", ");", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encode", "(", "buf", ",", "c", ")", ";", "}", "return", "stripTrailingSeparatorOrNull", "(", "buf", ")", ";", "}", "private", "void", "encode", "(", "StringBuilder", "buf", ",", "Cookie", "c", ")", "{", "final", "String", "name", "=", "c", ".", "name", "(", ");", "final", "String", "value", "=", "c", ".", "value", "(", ")", "!", "=", "null", "?", "c", ".", "value", "(", ")", ":", "\"", "\";", "validateCookie", "(", "name", ",", "value", ")", ";", "if", "(", "c", ".", "wrap", "(", "))", "{", "addQuoted", "(", "buf", ",", "name", ",", "value", ")", ";", "}", "else", "{", "add", "(", "buf", ",", "name", ",", "value", ")", ";", "}", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "141", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "/", "**", "*", "An", "interface", "defining", "an", "*", "<", "a", "href", "=", "\"", "http", ":", "//", "en", ".", "wikipedia", ".", "org", "/", "wiki", "/", "HTTP_cookie", "\"", ">", "HTTP", "cookie", "<", "/", "a", ">", ".", "*", "/", "public", "interface", "Cookie", "extends", "Comparable", "<", "Cookie", ">", "{", "/", "**", "*", "Returns", "the", "name", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "name", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "name", "(", ");", "/", "**", "*", "Returns", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "value", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "value", "(", ");", "/", "**", "*", "Sets", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "value", "The", "value", "to", "set", "*", "/", "void", "setValue", "(", "String", "value", ")", ";", "/", "**", "*", "Returns", "true", "if", "the", "raw", "value", "of", "this", "{", "@", "link", "Cookie", "}", ",", "*", "was", "wrapped", "with", "double", "quotes", "in", "original", "Set", "-", "Cookie", "header", ".", "*", "*", "@", "return", "If", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", "is", "to", "be", "wrapped", "*", "/", "boolean", "wrap", "(", ");", "/", "**", "*", "Sets", "true", "if", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", "*", "is", "to", "be", "wrapped", "with", "double", "quotes", ".", "*", "*", "@", "param", "wrap", "true", "if", "wrap", "*", "/", "void", "setWrap", "(", "boolean", "wrap", ")", ";", "/", "**", "*", "Returns", "the", "domain", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "domain", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "domain", "(", ");", "/", "**", "*", "Sets", "the", "domain", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "domain", "The", "domain", "to", "use", "*", "/", "void", "setDomain", "(", "String", "domain", ")", ";", "/", "**", "*", "Returns", "the", "path", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "{", "@", "link", "Cookie", "}", "'", "s", "path", "*", "/", "String", "path", "(", ");", "/", "**", "*", "Sets", "the", "path", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "path", "The", "path", "to", "use", "for", "this", "{", "@", "link", "Cookie", "}", "*", "/", "void", "setPath", "(", "String", "path", ")", ";", "/", "**", "*", "Returns", "the", "maximum", "age", "of", "this", "{", "@", "link", "Cookie", "}", "in", "seconds", "or", "{", "@", "link", "Long", "#", "MIN_VALUE", "}", "if", "unspecified", "*", "*", "@", "return", "The", "maximum", "age", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "long", "maxAge", "(", ");", "/", "**", "*", "Sets", "the", "maximum", "age", "of", "this", "{", "@", "link", "Cookie", "}", "in", "seconds", ".", "*", "If", "an", "age", "of", "{", "@", "code", "0", "}", "is", "specified", ",", "this", "{", "@", "link", "Cookie", "}", "will", "be", "*", "automatically", "removed", "by", "browser", "because", "it", "will", "expire", "immediately", ".", "*", "If", "{", "@", "link", "Long", "#", "MIN_VALUE", "}", "is", "specified", ",", "this", "{", "@", "link", "Cookie", "}", "will", "be", "removed", "when", "the", "*", "browser", "is", "closed", ".", "*", "*", "@", "param", "maxAge", "The", "maximum", "age", "of", "this", "{", "@", "link", "Cookie", "}", "in", "seconds", "*", "/", "void", "setMaxAge", "(", "long", "maxAge", ")", ";", "/", "**", "*", "Checks", "to", "see", "if", "this", "{", "@", "link", "Cookie", "}", "is", "secure", "*", "*", "@", "return", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "secure", ",", "otherwise", "false", "*", "/", "boolean", "isSecure", "(", ");", "/", "**", "*", "Sets", "the", "security", "getStatus", "of", "this", "{", "@", "link", "Cookie", "}", "*", "*", "@", "param", "secure", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "to", "be", "secure", ",", "otherwise", "false", "*", "/", "void", "setSecure", "(", "boolean", "secure", ")", ";", "/", "**", "*", "Checks", "to", "see", "if", "this", "{", "@", "link", "Cookie", "}", "can", "only", "be", "accessed", "via", "HTTP", ".", "*", "If", "this", "returns", "true", ",", "the", "{", "@", "link", "Cookie", "}", "cannot", "be", "accessed", "through", "*", "client", "side", "script", "-", "But", "only", "if", "the", "browser", "supports", "it", ".", "*", "For", "more", "information", ",", "please", "look", "<", "a", "href", "=", "\"", "http", ":", "//", "www", ".", "owasp", ".", "org", "/", "index", ".", "php", "/", "HTTPOnly", "\"", ">", "here", "<", "/", "a", ">", "*", "*", "@", "return", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "HTTP", "-", "only", "or", "false", "if", "it", "isn", "'", "t", "*", "/", "boolean", "isHttpOnly", "(", ");", "/", "**", "*", "Determines", "if", "this", "{", "@", "link", "Cookie", "}", "is", "HTTP", "only", ".", "*", "If", "set", "to", "true", ",", "this", "{", "@", "link", "Cookie", "}", "cannot", "be", "accessed", "by", "a", "client", "*", "side", "script", ".", "However", ",", "this", "works", "only", "if", "the", "browser", "supports", "it", ".", "*", "For", "for", "information", ",", "please", "look", "*", "<", "a", "href", "=", "\"", "http", ":", "//", "www", ".", "owasp", ".", "org", "/", "index", ".", "php", "/", "HTTPOnly", "\"", ">", "here", "<", "/", "a", ">", ".", "*", "*", "@", "param", "httpOnly", "True", "if", "the", "{", "@", "link", "Cookie", "}", "is", "HTTP", "only", ",", "otherwise", "false", ".", "*", "/", "void", "setHttpOnly", "(", "boolean", "httpOnly", ")", ";", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "84", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "firstInvalidCookieNameOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "firstInvalidCookieValueOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "unwrapValue", ";", "import", "java", ".", "nio", ".", "CharBuffer", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "logging", ".", "InternalLogger", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "logging", ".", "InternalLoggerFactory", ";", "/", "**", "*", "Parent", "of", "Client", "and", "Server", "side", "cookie", "decoders", "*", "/", "public", "abstract", "class", "CookieDecoder", "{", "private", "final", "InternalLogger", "logger", "=", "InternalLoggerFactory", ".", "getInstance", "(", "getClass", "(", "))", ";", "private", "final", "boolean", "strict", ";", "protected", "CookieDecoder", "(", "boolean", "strict", ")", "{", "this", ".", "strict", "=", "strict", ";", "}", "protected", "DefaultCookie", "initCookie", "(", "String", "header", ",", "int", "nameBegin", ",", "int", "nameEnd", ",", "int", "valueBegin", ",", "int", "valueEnd", ")", "{", "if", "(", "nameBegin", "=", "=", "-", "1", "|", "|", "nameBegin", "=", "=", "nameEnd", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "with", "null", "name", "\"", ");", "return", "null", ";", "}", "if", "(", "valueBegin", "=", "=", "-", "1", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "with", "null", "value", "\"", ");", "return", "null", ";", "}", "CharSequence", "wrappedValue", "=", "CharBuffer", ".", "wrap", "(", "header", ",", "valueBegin", ",", "valueEnd", ")", ";", "CharSequence", "unwrappedValue", "=", "unwrapValue", "(", "wrappedValue", ")", ";", "if", "(", "unwrappedValue", "=", "=", "null", ")", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "starting", "quotes", "are", "not", "properly", "balanced", "in", "'", "{}", "'\"", ",", "wrappedValue", ")", ";", "return", "null", ";", "}", "final", "String", "name", "=", "header", ".", "substring", "(", "nameBegin", ",", "nameEnd", ")", ";", "int", "invalidOctetPos", ";", "if", "(", "strict", "&", "&", "(", "invalidOctetPos", "=", "firstInvalidCookieNameOctet", "(", "name", ")", ")", ">", "=", "0", ")", "{", "if", "(", "logger", ".", "isDebugEnabled", "(", "))", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "name", "'", "{}", "'", "contains", "invalid", "char", "'", "{}", "'\"", ",", "name", ",", "name", ".", "charAt", "(", "invalidOctetPos", ")", ");", "}", "return", "null", ";", "}", "final", "boolean", "wrap", "=", "unwrappedValue", ".", "length", "(", ")", "!", "=", "valueEnd", "-", "valueBegin", ";", "if", "(", "strict", "&", "&", "(", "invalidOctetPos", "=", "firstInvalidCookieValueOctet", "(", "unwrappedValue", ")", ")", ">", "=", "0", ")", "{", "if", "(", "logger", ".", "isDebugEnabled", "(", "))", "{", "logger", ".", "debug", "(", "\"", "Skipping", "cookie", "because", "value", "'", "{}", "'", "contains", "invalid", "char", "'", "{}", "'\"", ",", "unwrappedValue", ",", "unwrappedValue", ".", "charAt", "(", "invalidOctetPos", ")", ");", "}", "return", "null", ";", "}", "DefaultCookie", "cookie", "=", "new", "DefaultCookie", "(", "name", ",", "unwrappedValue", ".", "toString", "(", "))", ";", "cookie", ".", "setWrap", "(", "wrap", ")", ";", "return", "cookie", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "51", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "firstInvalidCookieNameOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "firstInvalidCookieValueOctet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "unwrapValue", ";", "/", "**", "*", "Parent", "of", "Client", "and", "Server", "side", "cookie", "encoders", "*", "/", "public", "abstract", "class", "CookieEncoder", "{", "private", "final", "boolean", "strict", ";", "protected", "CookieEncoder", "(", "boolean", "strict", ")", "{", "this", ".", "strict", "=", "strict", ";", "}", "protected", "void", "validateCookie", "(", "String", "name", ",", "String", "value", ")", "{", "if", "(", "strict", ")", "{", "int", "pos", ";", "if", "(", "(", "pos", "=", "firstInvalidCookieNameOctet", "(", "name", ")", ")", ">", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Cookie", "name", "contains", "an", "invalid", "char", ":", "\"", "+", "name", ".", "charAt", "(", "pos", ")", ");", "}", "CharSequence", "unwrappedValue", "=", "unwrapValue", "(", "value", ")", ";", "if", "(", "unwrappedValue", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Cookie", "value", "wrapping", "quotes", "are", "not", "balanced", ":", "\"", "+", "value", ")", ";", "}", "if", "(", "(", "pos", "=", "firstInvalidCookieValueOctet", "(", "unwrappedValue", ")", ")", ">", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Cookie", "value", "contains", "an", "invalid", "char", ":", "\"", "+", "value", ".", "charAt", "(", "pos", ")", ");", "}", "}", "}", "}", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "*", "Copyright", "2015", "The", "Netty", "Project", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "public", "final", "class", "CookieHeaderNames", "{", "public", "static", "final", "String", "PATH", "=", "\"", "Path", "\"", ";", "public", "static", "final", "String", "EXPIRES", "=", "\"", "Expires", "\"", ";", "public", "static", "final", "String", "MAX_AGE", "=", "\"", "Max", "-", "Age", "\"", ";", "public", "static", "final", "String", "DOMAIN", "=", "\"", "Domain", "\"", ";", "public", "static", "final", "String", "SECURE", "=", "\"", "Secure", "\"", ";", "public", "static", "final", "String", "HTTPONLY", "=", "\"", "HTTPOnly", "\"", ";", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpConstants", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "InternalThreadLocalMap", ";", "import", "java", ".", "util", ".", "BitSet", ";", "final", "class", "CookieUtil", "{", "private", "static", "final", "BitSet", "VALID_COOKIE_VALUE_OCTETS", "=", "validCookieValueOctets", "(", ");", "private", "static", "final", "BitSet", "VALID_COOKIE_NAME_OCTETS", "=", "validCookieNameOctets", "(", "VALID_COOKIE_VALUE_OCTETS", ")", ";", "/", "/", "US", "-", "ASCII", "characters", "excluding", "CTLs", ",", "whitespace", ",", "DQUOTE", ",", "comma", ",", "semicolon", ",", "and", "backslash", "private", "static", "BitSet", "validCookieValueOctets", "(", ")", "{", "BitSet", "bits", "=", "new", "BitSet", "(", "8", ")", ";", "for", "(", "int", "i", "=", "35", ";", "i", "<", "127", ";", "i", "+", "+)", "{", "/", "/", "US", "-", "ASCII", "characters", "excluding", "CTLs", "(", "%", "x00", "-", "1F", "/", "%", "x7F", ")", "bits", ".", "set", "(", "i", ")", ";", "}", "bits", ".", "set", "(", "'\"", "',", "false", ")", ";", "/", "/", "exclude", "DQUOTE", "=", "%", "x22", "bits", ".", "set", "(", "',", "',", "false", ")", ";", "/", "/", "exclude", "comma", "=", "%", "x2C", "bits", ".", "set", "(", "';", "',", "false", ")", ";", "/", "/", "exclude", "semicolon", "=", "%", "x3B", "bits", ".", "set", "(", "'\\", "\\'", ",", "false", ")", ";", "/", "/", "exclude", "backslash", "=", "%", "x5C", "return", "bits", ";", "}", "/", "/", "token", "=", "1", "*", "<", "any", "CHAR", "except", "CTLs", "or", "separators", ">", "/", "/", "separators", "=", "\"", "(\"", "|", "\"", ")\"", "|", "\"", "<\"", "|", "\"", ">\"", "|", "\"", "@\"", "/", "/", "|", "\"", ",\"", "|", "\"", ";\"", "|", "\"", ":\"", "|", "\"", "\\\"", "|", "<", "\">", "/", "/", "|", "\"", "/\"", "|", "\"", "[\"", "|", "\"", "]\"", "|", "\"", "?\"", "|", "\"", "=\"", "/", "/", "|", "\"", "{\"", "|", "\"", "}\"", "|", "SP", "|", "HT", "private", "static", "BitSet", "validCookieNameOctets", "(", "BitSet", "validCookieValueOctets", ")", "{", "BitSet", "bits", "=", "new", "BitSet", "(", "8", ")", ";", "bits", ".", "or", "(", "validCookieValueOctets", ")", ";", "bits", ".", "set", "(", "'(", "',", "false", ")", ";", "bits", ".", "set", "(", "')", "',", "false", ")", ";", "bits", ".", "set", "(", "'<", "',", "false", ")", ";", "bits", ".", "set", "(", "'>", "',", "false", ")", ";", "bits", ".", "set", "(", "'@", "',", "false", ")", ";", "bits", ".", "set", "(", "':", "',", "false", ")", ";", "bits", ".", "set", "(", "'/", "',", "false", ")", ";", "bits", ".", "set", "(", "'[", "',", "false", ")", ";", "bits", ".", "set", "(", "']", "',", "false", ")", ";", "bits", ".", "set", "(", "'?", "',", "false", ")", ";", "bits", ".", "set", "(", "'=", "',", "false", ")", ";", "bits", ".", "set", "(", "'{", "',", "false", ")", ";", "bits", ".", "set", "(", "'}", "',", "false", ")", ";", "bits", ".", "set", "(", "'", "'", ",", "false", ")", ";", "bits", ".", "set", "(", "'\\", "t", "'", ",", "false", ")", ";", "return", "bits", ";", "}", "static", "StringBuilder", "stringBuilder", "(", ")", "{", "return", "InternalThreadLocalMap", ".", "get", "(", ").", "stringBuilder", "(", ");", "}", "/", "**", "*", "@", "param", "buf", "a", "buffer", "where", "some", "cookies", "were", "maybe", "encoded", "*", "@", "return", "the", "buffer", "String", "without", "the", "trailing", "separator", ",", "or", "null", "if", "no", "cookie", "was", "appended", ".", "*", "/", "static", "String", "stripTrailingSeparatorOrNull", "(", "StringBuilder", "buf", ")", "{", "return", "buf", ".", "length", "(", ")", "=", "=", "0", "?", "null", ":", "stripTrailingSeparator", "(", "buf", ")", ";", "}", "static", "String", "stripTrailingSeparator", "(", "StringBuilder", "buf", ")", "{", "if", "(", "buf", ".", "length", "(", ")", ">", "0", ")", "{", "buf", ".", "setLength", "(", "buf", ".", "length", "(", ")", "-", "2", ")", ";", "}", "return", "buf", ".", "toString", "(", ");", "}", "static", "void", "add", "(", "StringBuilder", "sb", ",", "String", "name", ",", "long", "val", ")", "{", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "val", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "void", "add", "(", "StringBuilder", "sb", ",", "String", "name", ",", "String", "val", ")", "{", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "val", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "void", "add", "(", "StringBuilder", "sb", ",", "String", "name", ")", "{", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "void", "addQuoted", "(", "StringBuilder", "sb", ",", "String", "name", ",", "String", "val", ")", "{", "if", "(", "val", "=", "=", "null", ")", "{", "val", "=", "\"", "\";", "}", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "DOUBLE_QUOTE", ")", ";", "sb", ".", "append", "(", "val", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "DOUBLE_QUOTE", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "int", "firstInvalidCookieNameOctet", "(", "CharSequence", "cs", ")", "{", "return", "firstInvalidOctet", "(", "cs", ",", "VALID_COOKIE_NAME_OCTETS", ")", ";", "}", "static", "int", "firstInvalidCookieValueOctet", "(", "CharSequence", "cs", ")", "{", "return", "firstInvalidOctet", "(", "cs", ",", "VALID_COOKIE_VALUE_OCTETS", ")", ";", "}", "static", "int", "firstInvalidOctet", "(", "CharSequence", "cs", ",", "BitSet", "bits", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "cs", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "cs", ".", "charAt", "(", "i", ")", ";", "if", "(", "!", "bits", ".", "get", "(", "c", ")", ")", "{", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", "static", "CharSequence", "unwrapValue", "(", "CharSequence", "cs", ")", "{", "final", "int", "len", "=", "cs", ".", "length", "(", ");", "if", "(", "len", ">", "0", "&", "&", "cs", ".", "charAt", "(", "0", ")", "=", "=", "'", "\"'", ")", "{", "if", "(", "len", ">", "=", "2", "&", "&", "cs", ".", "charAt", "(", "len", "-", "1", ")", "=", "=", "'", "\"'", ")", "{", "/", "/", "properly", "balanced", "return", "len", "=", "=", "2", "?", "\"", "\"", ":", "cs", ".", "subSequence", "(", "1", ",", "len", "-", "1", ")", ";", "}", "else", "{", "return", "null", ";", "}", "}", "return", "cs", ";", "}", "private", "CookieUtil", "(", ")", "{", "/", "/", "Unused", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "268", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "stringBuilder", ";", "import", "static", "io", ".", "netty", ".", "util", ".", "internal", ".", "ObjectUtil", ".", "checkNotNull", ";", "/", "**", "*", "The", "default", "{", "@", "link", "Cookie", "}", "implementation", ".", "*", "/", "public", "class", "DefaultCookie", "implements", "Cookie", "{", "private", "final", "String", "name", ";", "private", "String", "value", ";", "private", "boolean", "wrap", ";", "private", "String", "domain", ";", "private", "String", "path", ";", "private", "long", "maxAge", "=", "Long", ".", "MIN_VALUE", ";", "private", "boolean", "secure", ";", "private", "boolean", "httpOnly", ";", "/", "**", "*", "Creates", "a", "new", "cookie", "with", "the", "specified", "name", "and", "value", ".", "*", "/", "public", "DefaultCookie", "(", "String", "name", ",", "String", "value", ")", "{", "name", "=", "checkNotNull", "(", "name", ",", "\"", "name", "\"", ").", "trim", "(", ");", "if", "(", "name", ".", "isEmpty", "(", "))", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "empty", "name", "\"", ");", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "name", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "name", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", ">", "127", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "contains", "non", "-", "ascii", "character", ":", "\"", "+", "name", ")", ";", "}", "/", "/", "Check", "prohibited", "characters", ".", "switch", "(", "c", ")", "{", "case", "'", "\\", "t", "'", ":", "case", "'", "\\", "n", "'", ":", "case", "0x0b", ":", "case", "'", "\\", "f", "'", ":", "case", "'", "\\", "r", "'", ":", "case", "'", "'", ":", "case", "'", ",'", ":", "case", "'", ";'", ":", "case", "'", "='", ":", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "contains", "one", "of", "the", "following", "prohibited", "characters", ":", "\"", "\"", "=,", ";", "\\", "\\", "t", "\\", "\\", "r", "\\", "\\", "n", "\\", "\\", "v", "\\", "\\", "f", ":", "\"", "+", "name", ")", ";", "}", "}", "if", "(", "name", ".", "charAt", "(", "0", ")", "=", "=", "'", "$'", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "starting", "with", "'", "$'", "not", "allowed", ":", "\"", "+", "name", ")", ";", "}", "this", ".", "name", "=", "name", ";", "setValue", "(", "value", ")", ";", "}", "@", "Override", "public", "String", "name", "(", ")", "{", "return", "name", ";", "}", "@", "Override", "public", "String", "value", "(", ")", "{", "return", "value", ";", "}", "@", "Override", "public", "void", "setValue", "(", "String", "value", ")", "{", "this", ".", "value", "=", "checkNotNull", "(", "value", ",", "\"", "value", "\"", ");", "}", "@", "Override", "public", "boolean", "wrap", "(", ")", "{", "return", "wrap", ";", "}", "@", "Override", "public", "void", "setWrap", "(", "boolean", "wrap", ")", "{", "this", ".", "wrap", "=", "wrap", ";", "}", "@", "Override", "public", "String", "domain", "(", ")", "{", "return", "domain", ";", "}", "@", "Override", "public", "void", "setDomain", "(", "String", "domain", ")", "{", "this", ".", "domain", "=", "validateValue", "(", "\"", "domain", "\"", ",", "domain", ")", ";", "}", "@", "Override", "public", "String", "path", "(", ")", "{", "return", "path", ";", "}", "@", "Override", "public", "void", "setPath", "(", "String", "path", ")", "{", "this", ".", "path", "=", "validateValue", "(", "\"", "path", "\"", ",", "path", ")", ";", "}", "@", "Override", "public", "long", "maxAge", "(", ")", "{", "return", "maxAge", ";", "}", "@", "Override", "public", "void", "setMaxAge", "(", "long", "maxAge", ")", "{", "this", ".", "maxAge", "=", "maxAge", ";", "}", "@", "Override", "public", "boolean", "isSecure", "(", ")", "{", "return", "secure", ";", "}", "@", "Override", "public", "void", "setSecure", "(", "boolean", "secure", ")", "{", "this", ".", "secure", "=", "secure", ";", "}", "@", "Override", "public", "boolean", "isHttpOnly", "(", ")", "{", "return", "httpOnly", ";", "}", "@", "Override", "public", "void", "setHttpOnly", "(", "boolean", "httpOnly", ")", "{", "this", ".", "httpOnly", "=", "httpOnly", ";", "}", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "return", "name", "(", ").", "hashCode", "(", ");", "}", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "this", "=", "=", "o", ")", "{", "return", "true", ";", "}", "if", "(", "!(", "o", "instanceof", "Cookie", ")", ")", "{", "return", "false", ";", "}", "Cookie", "that", "=", "(", "Cookie", ")", "o", ";", "if", "(", "!", "name", "(", ").", "equalsIgnoreCase", "(", "that", ".", "name", "(", "))", ")", "{", "return", "false", ";", "}", "if", "(", "path", "(", ")", "=", "=", "null", ")", "{", "if", "(", "that", ".", "path", "(", ")", "!", "=", "null", ")", "{", "return", "false", ";", "}", "}", "else", "if", "(", "that", ".", "path", "(", ")", "=", "=", "null", ")", "{", "return", "false", ";", "}", "else", "if", "(", "!", "path", "(", ").", "equals", "(", "that", ".", "path", "(", "))", ")", "{", "return", "false", ";", "}", "if", "(", "domain", "(", ")", "=", "=", "null", ")", "{", "if", "(", "that", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "return", "false", ";", "}", "}", "else", "if", "(", "that", ".", "domain", "(", ")", "=", "=", "null", ")", "{", "return", "false", ";", "}", "else", "{", "return", "domain", "(", ").", "equalsIgnoreCase", "(", "that", ".", "domain", "(", "))", ";", "}", "return", "true", ";", "}", "@", "Override", "public", "int", "compareTo", "(", "Cookie", "c", ")", "{", "int", "v", "=", "name", "(", ").", "compareToIgnoreCase", "(", "c", ".", "name", "(", "))", ";", "if", "(", "v", "!", "=", "0", ")", "{", "return", "v", ";", "}", "if", "(", "path", "(", ")", "=", "=", "null", ")", "{", "if", "(", "c", ".", "path", "(", ")", "!", "=", "null", ")", "{", "return", "-", "1", ";", "}", "}", "else", "if", "(", "c", ".", "path", "(", ")", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "v", "=", "path", "(", ").", "compareTo", "(", "c", ".", "path", "(", "))", ";", "if", "(", "v", "!", "=", "0", ")", "{", "return", "v", ";", "}", "}", "if", "(", "domain", "(", ")", "=", "=", "null", ")", "{", "if", "(", "c", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "return", "-", "1", ";", "}", "}", "else", "if", "(", "c", ".", "domain", "(", ")", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "v", "=", "domain", "(", ").", "compareToIgnoreCase", "(", "c", ".", "domain", "(", "))", ";", "return", "v", ";", "}", "return", "0", ";", "}", "@", "Override", "public", "String", "toString", "(", ")", "{", "StringBuilder", "buf", "=", "stringBuilder", "(", ")", ".", "append", "(", "name", "(", "))", ".", "append", "(", "'=", "')", ".", "append", "(", "value", "(", "))", ";", "if", "(", "domain", "(", ")", "!", "=", "null", ")", "{", "buf", ".", "append", "(", "\",", "domain", "=", "\")", ".", "append", "(", "domain", "(", "))", ";", "}", "if", "(", "path", "(", ")", "!", "=", "null", ")", "{", "buf", ".", "append", "(", "\",", "path", "=", "\")", ".", "append", "(", "path", "(", "))", ";", "}", "if", "(", "maxAge", "(", ")", ">", "=", "0", ")", "{", "buf", ".", "append", "(", "\",", "maxAge", "=", "\")", ".", "append", "(", "maxAge", "(", "))", ".", "append", "(", "'", "s", "'", ");", "}", "if", "(", "isSecure", "(", "))", "{", "buf", ".", "append", "(", "\",", "secure", "\"", ");", "}", "if", "(", "isHttpOnly", "(", "))", "{", "buf", ".", "append", "(", "\",", "HTTPOnly", "\"", ");", "}", "return", "buf", ".", "toString", "(", ");", "}", "protected", "String", "validateValue", "(", "String", "name", ",", "String", "value", ")", "{", "if", "(", "value", "=", "=", "null", ")", "{", "return", "null", ";", "}", "value", "=", "value", ".", "trim", "(", ");", "if", "(", "value", ".", "isEmpty", "(", "))", "{", "return", "null", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "value", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "value", ".", "charAt", "(", "i", ")", ";", "switch", "(", "c", ")", "{", "case", "'", "\\", "r", "'", ":", "case", "'", "\\", "n", "'", ":", "case", "'", "\\", "f", "'", ":", "case", "0x0b", ":", "case", "'", ";'", ":", "throw", "new", "IllegalArgumentException", "(", "name", "+", "\"", "contains", "one", "of", "the", "following", "prohibited", "characters", ":", "\"", "\"", ";\\", "\\", "r", "\\", "\\", "n", "\\", "\\", "f", "\\", "\\", "v", "(", "\"", "+", "value", "+", "'", ")'", ");", "}", "}", "return", "value", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "157", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "util", ".", "internal", ".", "ObjectUtil", ".", "checkNotNull", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "TreeSet", ";", "/", "**", "*", "A", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc6265", "\"", ">", "RFC6265", "<", "/", "a", ">", "compliant", "cookie", "decoder", "to", "be", "used", "server", "side", ".", "*", "*", "Only", "name", "and", "value", "fields", "are", "expected", ",", "so", "old", "fields", "are", "not", "populated", "(", "path", ",", "domain", ",", "etc", ")", ".", "*", "*", "Old", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc2965", "\"", ">", "RFC2965", "<", "/", "a", ">", "cookies", "are", "still", "supported", ",", "*", "old", "fields", "will", "simply", "be", "ignored", ".", "*", "*", "@", "see", "ServerCookieEncoder", "*", "/", "public", "final", "class", "ServerCookieDecoder", "extends", "CookieDecoder", "{", "private", "static", "final", "String", "RFC2965_VERSION", "=", "\"", "$", "Version", "\"", ";", "private", "static", "final", "String", "RFC2965_PATH", "=", "\"", "$\"", "+", "CookieHeaderNames", ".", "PATH", ";", "private", "static", "final", "String", "RFC2965_DOMAIN", "=", "\"", "$\"", "+", "CookieHeaderNames", ".", "DOMAIN", ";", "private", "static", "final", "String", "RFC2965_PORT", "=", "\"", "$", "Port", "\"", ";", "/", "**", "*", "Strict", "encoder", "that", "validates", "that", "name", "and", "value", "chars", "are", "in", "the", "valid", "scope", "*", "defined", "in", "RFC6265", "*", "/", "public", "static", "final", "ServerCookieDecoder", "STRICT", "=", "new", "ServerCookieDecoder", "(", "true", ")", ";", "/", "**", "*", "Lax", "instance", "that", "doesn", "'", "t", "validate", "name", "and", "value", "*", "/", "public", "static", "final", "ServerCookieDecoder", "LAX", "=", "new", "ServerCookieDecoder", "(", "false", ")", ";", "private", "ServerCookieDecoder", "(", "boolean", "strict", ")", "{", "super", "(", "strict", ")", ";", "}", "/", "**", "*", "Decodes", "the", "specified", "Set", "-", "Cookie", "HTTP", "header", "value", "into", "a", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "the", "decoded", "{", "@", "link", "Cookie", "}", "*", "/", "public", "Set", "<", "Cookie", ">", "decode", "(", "String", "header", ")", "{", "final", "int", "headerLen", "=", "checkNotNull", "(", "header", ",", "\"", "header", "\"", ").", "length", "(", ");", "if", "(", "headerLen", "=", "=", "0", ")", "{", "return", "Collections", ".", "emptySet", "(", ");", "}", "Set", "<", "Cookie", ">", "cookies", "=", "new", "TreeSet", "<", "Cookie", ">", "()", ";", "int", "i", "=", "0", ";", "boolean", "rfc2965Style", "=", "false", ";", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "0", ",", "RFC2965_VERSION", ",", "0", ",", "RFC2965_VERSION", ".", "length", "(", "))", ")", "{", "/", "/", "RFC", "2965", "style", "cookie", ",", "move", "to", "after", "version", "value", "i", "=", "header", ".", "indexOf", "(", "';", "')", "+", "1", ";", "rfc2965Style", "=", "true", ";", "}", "loop", ":", "for", "(", ";;", ")", "{", "/", "/", "Skip", "spaces", "and", "separators", ".", "for", "(", ";;", ")", "{", "if", "(", "i", "=", "=", "headerLen", ")", "{", "break", "loop", ";", "}", "char", "c", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", "=", "=", "'", "\\", "t", "'", "|", "|", "c", "=", "=", "'", "\\", "n", "'", "|", "|", "c", "=", "=", "0x0b", "|", "|", "c", "=", "=", "'", "\\", "f", "'", "|", "|", "c", "=", "=", "'", "\\", "r", "'", "|", "|", "c", "=", "=", "'", "'", "|", "|", "c", "=", "=", "'", ",'", "|", "|", "c", "=", "=", "'", ";'", ")", "{", "i", "+", "+;", "continue", ";", "}", "break", ";", "}", "int", "nameBegin", "=", "i", ";", "int", "nameEnd", "=", "i", ";", "int", "valueBegin", "=", "-", "1", ";", "int", "valueEnd", "=", "-", "1", ";", "if", "(", "i", "!", "=", "headerLen", ")", "{", "keyValLoop", ":", "for", "(", ";;", ")", "{", "char", "curChar", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "curChar", "=", "=", "'", ";'", ")", "{", "/", "/", "NAME", ";", "(", "no", "value", "till", "'", ";'", ")", "nameEnd", "=", "i", ";", "valueBegin", "=", "valueEnd", "=", "-", "1", ";", "break", "keyValLoop", ";", "}", "else", "if", "(", "curChar", "=", "=", "'", "='", ")", "{", "/", "/", "NAME", "=", "VALUE", "nameEnd", "=", "i", ";", "i", "+", "+;", "if", "(", "i", "=", "=", "headerLen", ")", "{", "/", "/", "NAME", "=", "(", "empty", "value", ",", "i", ".", "e", ".", "nothing", "after", "'", "='", ")", "valueBegin", "=", "valueEnd", "=", "0", ";", "break", "keyValLoop", ";", "}", "valueBegin", "=", "i", ";", "/", "/", "NAME", "=", "VALUE", ";", "int", "semiPos", "=", "header", ".", "indexOf", "(", "';", "',", "i", ")", ";", "valueEnd", "=", "i", "=", "semiPos", ">", "0", "?", "semiPos", ":", "headerLen", ";", "break", "keyValLoop", ";", "}", "else", "{", "i", "+", "+;", "}", "if", "(", "i", "=", "=", "headerLen", ")", "{", "/", "/", "NAME", "(", "no", "value", "till", "the", "end", "of", "string", ")", "nameEnd", "=", "headerLen", ";", "valueBegin", "=", "valueEnd", "=", "-", "1", ";", "break", ";", "}", "}", "}", "if", "(", "rfc2965Style", "&", "&", "(", "header", ".", "regionMatches", "(", "nameBegin", ",", "RFC2965_PATH", ",", "0", ",", "RFC2965_PATH", ".", "length", "(", "))", "|", "|", "header", ".", "regionMatches", "(", "nameBegin", ",", "RFC2965_DOMAIN", ",", "0", ",", "RFC2965_DOMAIN", ".", "length", "(", "))", "|", "|", "header", ".", "regionMatches", "(", "nameBegin", ",", "RFC2965_PORT", ",", "0", ",", "RFC2965_PORT", ".", "length", "(", "))", "))", "{", "/", "/", "skip", "obsolete", "RFC2965", "fields", "continue", ";", "}", "DefaultCookie", "cookie", "=", "initCookie", "(", "header", ",", "nameBegin", ",", "nameEnd", ",", "valueBegin", ",", "valueEnd", ")", ";", "if", "(", "cookie", "!", "=", "null", ")", "{", "cookies", ".", "add", "(", "cookie", ")", ";", "}", "}", "return", "cookies", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "179", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "CookieUtil", ".", "*;", "import", "static", "io", ".", "netty", ".", "util", ".", "internal", ".", "ObjectUtil", ".", "checkNotNull", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpHeaderDateFormat", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpRequest", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "List", ";", "/", "**", "*", "A", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc6265", "\"", ">", "RFC6265", "<", "/", "a", ">", "compliant", "cookie", "encoder", "to", "be", "used", "server", "side", ",", "*", "so", "some", "fields", "are", "sent", "(", "Version", "is", "typically", "ignored", ")", ".", "*", "*", "As", "Netty", "'", "s", "Cookie", "merges", "Expires", "and", "MaxAge", "into", "one", "single", "field", ",", "only", "Max", "-", "Age", "field", "is", "sent", ".", "*", "*", "Note", "that", "multiple", "cookies", "are", "supposed", "to", "be", "sent", "at", "once", "in", "a", "single", "\"", "Set", "-", "Cookie", "\"", "header", ".", "*", "*", "<", "pre", ">", "*", "/", "/", "Example", "*", "{", "@", "link", "HttpRequest", "}", "req", "=", ".", "..", ";", "*", "res", ".", "setHeader", "(", "\"", "Cookie", "\"", ",", "{", "@", "link", "ServerCookieEncoder", "}", ".", "encode", "(", "\"", "JSESSIONID", "\"", ",", "\"", "1234", "\"", "))", ";", "*", "<", "/", "pre", ">", "*", "*", "@", "see", "ServerCookieDecoder", "*", "/", "public", "final", "class", "ServerCookieEncoder", "extends", "CookieEncoder", "{", "/", "**", "*", "Strict", "encoder", "that", "validates", "that", "name", "and", "value", "chars", "are", "in", "the", "valid", "scope", "*", "defined", "in", "RFC6265", "*", "/", "public", "static", "final", "ServerCookieEncoder", "STRICT", "=", "new", "ServerCookieEncoder", "(", "true", ")", ";", "/", "**", "*", "Lax", "instance", "that", "doesn", "'", "t", "validate", "name", "and", "value", "*", "/", "public", "static", "final", "ServerCookieEncoder", "LAX", "=", "new", "ServerCookieEncoder", "(", "false", ")", ";", "private", "ServerCookieEncoder", "(", "boolean", "strict", ")", "{", "super", "(", "strict", ")", ";", "}", "/", "**", "*", "Encodes", "the", "specified", "cookie", "name", "-", "value", "pair", "into", "a", "Set", "-", "Cookie", "header", "value", ".", "*", "*", "@", "param", "name", "the", "cookie", "name", "*", "@", "param", "value", "the", "cookie", "value", "*", "@", "return", "a", "single", "Set", "-", "Cookie", "header", "value", "*", "/", "public", "String", "encode", "(", "String", "name", ",", "String", "value", ")", "{", "return", "encode", "(", "new", "DefaultCookie", "(", "name", ",", "value", ")", ");", "}", "/", "**", "*", "Encodes", "the", "specified", "cookie", "into", "a", "Set", "-", "Cookie", "header", "value", ".", "*", "*", "@", "param", "cookie", "the", "cookie", "*", "@", "return", "a", "single", "Set", "-", "Cookie", "header", "value", "*", "/", "public", "String", "encode", "(", "Cookie", "cookie", ")", "{", "final", "String", "name", "=", "checkNotNull", "(", "cookie", ",", "\"", "cookie", "\"", ").", "name", "(", ");", "final", "String", "value", "=", "cookie", ".", "value", "(", ")", "!", "=", "null", "?", "cookie", ".", "value", "(", ")", ":", "\"", "\";", "validateCookie", "(", "name", ",", "value", ")", ";", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "if", "(", "cookie", ".", "wrap", "(", "))", "{", "addQuoted", "(", "buf", ",", "name", ",", "value", ")", ";", "}", "else", "{", "add", "(", "buf", ",", "name", ",", "value", ")", ";", "}", "if", "(", "cookie", ".", "maxAge", "(", ")", "!", "=", "Long", ".", "MIN_VALUE", ")", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "MAX_AGE", ",", "cookie", ".", "maxAge", "(", "))", ";", "Date", "expires", "=", "new", "Date", "(", "cookie", ".", "maxAge", "(", ")", "*", "1000", "+", "System", ".", "currentTimeMillis", "(", "))", ";", "add", "(", "buf", ",", "CookieHeaderNames", ".", "EXPIRES", ",", "HttpHeaderDateFormat", ".", "get", "(", ").", "format", "(", "expires", ")", ");", "}", "if", "(", "cookie", ".", "path", "(", ")", "!", "=", "null", ")", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "PATH", ",", "cookie", ".", "path", "(", "))", ";", "}", "if", "(", "cookie", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "DOMAIN", ",", "cookie", ".", "domain", "(", "))", ";", "}", "if", "(", "cookie", ".", "isSecure", "(", "))", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "SECURE", ")", ";", "}", "if", "(", "cookie", ".", "isHttpOnly", "(", "))", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "HTTPONLY", ")", ";", "}", "return", "stripTrailingSeparator", "(", "buf", ")", ";", "}", "/", "**", "*", "Batch", "encodes", "cookies", "into", "Set", "-", "Cookie", "header", "values", ".", "*", "*", "@", "param", "cookies", "a", "bunch", "of", "cookies", "*", "@", "return", "the", "corresponding", "bunch", "of", "Set", "-", "Cookie", "headers", "*", "/", "public", "List", "<", "String", ">", "encode", "(", "Cookie", ".", "..", "cookies", ")", "{", "if", "(", "checkNotNull", "(", "cookies", ",", "\"", "cookies", "\"", ").", "length", "=", "=", "0", ")", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "(", "cookies", ".", "length", ")", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "}", "/", "**", "*", "Batch", "encodes", "cookies", "into", "Set", "-", "Cookie", "header", "values", ".", "*", "*", "@", "param", "cookies", "a", "bunch", "of", "cookies", "*", "@", "return", "the", "corresponding", "bunch", "of", "Set", "-", "Cookie", "headers", "*", "/", "public", "List", "<", "String", ">", "encode", "(", "Collection", "<", "?", "extends", "Cookie", ">", "cookies", ")", "{", "if", "(", "checkNotNull", "(", "cookies", ",", "\"", "cookies", "\"", ").", "isEmpty", "(", "))", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "(", "cookies", ".", "size", "(", "))", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "}", "/", "**", "*", "Batch", "encodes", "cookies", "into", "Set", "-", "Cookie", "header", "values", ".", "*", "*", "@", "param", "cookies", "a", "bunch", "of", "cookies", "*", "@", "return", "the", "corresponding", "bunch", "of", "Set", "-", "Cookie", "headers", "*", "/", "public", "List", "<", "String", ">", "encode", "(", "Iterable", "<", "?", "extends", "Cookie", ">", "cookies", ")", "{", "if", "(", "!", "checkNotNull", "(", "cookies", ",", "\"", "cookies", "\"", ").", "iterator", "(", ").", "hasNext", "(", "))", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "20", "@", "@", "/", "*", "*", "Copyright", "2015", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "/", "**", "*", "This", "package", "contains", "Cookie", "related", "classes", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "@", "@", "-", "1", ",", "228", "+", "0", ",", "0", "@", "@", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpHeaderDateFormat", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "+", "\"", ";", "secure", ";", "comment", "=", "this", "is", "a", "comment", ";", "version", "=", "1", ";", "\";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "+", "\"", "domain", "=", ".", "adomainsomewhere", ";", "secure", ";", "comment", "=", "this", "is", "a", "comment", ";", "version", "=", "1", ";", "\"", "+", "\"", "commentURL", "=", "http", ":", "//", "aurl", ".", "com", ";", "port", "=", "'", "80", ",", "8080", "'", ";", "discard", ";", "\";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "+", "\"", "domain", "=", ".", "adomainsomewhere", ";", "secure", ";", "comment", "=", "this", "is", "a", "comment", ";", "version", "=", "2", ";", "\"", "+", "\"", "commentURL", "=", "http", ":", "//", "aurl", ".", "com", ";", "port", "=", "\\\"", "80", ",", "8080", "\\", "\";", "discard", ";", "\";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "+", "\"", "domain", "=", ".", "adomainsomewhere", ";", "secure", ";", "comment", "=", "this", "is", "a", "comment", ";", "version", "=", "2", ";", "\"", "+", "\"", "commentURL", "=", "\\\"", "http", ":", "//", "aurl", ".", "com", "\\", "\";", "port", "=", "'", "80", ",", "8080", "'", ";", "discard", ";", "\";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "c1", ")", ";", "cookies", ".", "add", "(", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ");", "+", "\"", "__utmb", "=", "48461872", ".", "13", ".", "10", ".", "1258140131", ";", "__utmc", "=", "48461872", ";", "\"", "+", "\"", "__utmz", "=", "48461872", ".", "1258140131", ".", "1", ".", "1", ".", "utmcsr", "=", "overstock", ".", "com", "|", "utmccn", "=", "(", "referral", ")", "|\"", "+", "\"", "utmcmd", "=", "referral", "|", "utmcct", "=", "/", "Home", "-", "Garden", "/", "Furniture", "/", "Clearance", ",", "/", "clearance", ",", "/", "32", "/", "dept", ".", "html", "\"", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ";", "public", "void", "testDecodingValueWithCommaFails", "(", ")", "{", "+", "\"", "expires", "=", "Sat", ",", "01", "-", "Dec", "-", "2012", "10", ":", "53", ":", "31", "GMT", ";", "path", "=", "/\"", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ";", "assertNull", "(", "cookie", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "src", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "src", ")", ";", "public", "void", "testDecodingValuesWithCommasAndEqualsFails", "(", ")", "{", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "src", ")", ";", "assertNull", "(", "cookie", ")", ";", "String", "longValue", "=", "\"", "b___", "$", "Q__", "$", "ha__", "<", "NC", "=", "MN", "(", "F__", "%", "#", "4__", "<", "NC", "=", "MN", "(", "F__2_d____", "#", "=", "IvZB__2_F____", "'", "=", "KqtH__2", "-", "9____", "\"", "\"", "'=", "IvZM__3f", ":", "____", "$", "=", "HbQW__3g", "'", "____", "%", "=", "J", "^", "wI__3g", "-", "____", "%", "=", "J", "^", "wI__3g1____", "$", "=", "HbQW__3g2____", "\"", "\"", "$=", "HbQW__3g5____", "%", "=", "J", "^", "wI__3g9____", "$", "=", "HbQW__3gT____", "$", "=", "HbQW__3gX____", "#", "=", "J", "^", "wI__3gY____", "\"", "\"", "#=", "J", "^", "wI__3gh____", "$", "=", "HbQW__3gj____", "$", "=", "HbQW__3gr____", "$", "=", "HbQW__3gx____", "#", "=", "J", "^", "wI__3h_____", "\"", "\"", "$=", "HbQW__3h", "$", "____", "#", "=", "J", "^", "wI__3h", "'", "____", "$", "=", "HbQW__3h_____", "$", "=", "HbQW__3h0____", "%", "=", "J", "^", "wI__3h1____", "\"", "\"", "#=", "J", "^", "wI__3h2____", "$", "=", "HbQW__3h4____", "$", "=", "HbQW__3h7____", "$", "=", "HbQW__3h8____", "%", "=", "J", "^", "wI__3h", ":", "____", "\"", "\"", "#=", "J", "^", "wI__3h", "@", "____", "%", "=", "J", "^", "wI__3hB____", "$", "=", "HbQW__3hC____", "$", "=", "HbQW__3hL____", "$", "=", "HbQW__3hQ____", "\"", "\"", "$=", "HbQW__3hS____", "%", "=", "J", "^", "wI__3hU____", "$", "=", "HbQW__3h", "[", "____", "$", "=", "HbQW__3h", "^", "____", "$", "=", "HbQW__3hd____", "\"", "\"", "%=", "J", "^", "wI__3he____", "%", "=", "J", "^", "wI__3hf____", "%", "=", "J", "^", "wI__3hg____", "$", "=", "HbQW__3hh____", "%", "=", "J", "^", "wI__3hi____", "\"", "\"", "%=", "J", "^", "wI__3hv____", "$", "=", "HbQW__3i", "/", "____", "#", "=", "J", "^", "wI__3i2____", "#", "=", "J", "^", "wI__3i3____", "%", "=", "J", "^", "wI__3i4____", "\"", "\"", "$=", "HbQW__3i7____", "$", "=", "HbQW__3i8____", "$", "=", "HbQW__3i9____", "%", "=", "J", "^", "wI__3i", "=", "____", "#", "=", "J", "^", "wI__3i", ">", "____", "\"", "\"", "%=", "J", "^", "wI__3iD____", "$", "=", "HbQW__3iF____", "#", "=", "J", "^", "wI__3iH____", "%", "=", "J", "^", "wI__3iM____", "%", "=", "J", "^", "wI__3iS____", "\"", "\"", "#=", "J", "^", "wI__3iU____", "%", "=", "J", "^", "wI__3iZ____", "#", "=", "J", "^", "wI__3i", "]", "____", "%", "=", "J", "^", "wI__3ig____", "%", "=", "J", "^", "wI__3ij____", "\"", "\"", "%=", "J", "^", "wI__3ik____", "#", "=", "J", "^", "wI__3il____", "$", "=", "HbQW__3in____", "%", "=", "J", "^", "wI__3ip____", "$", "=", "HbQW__3iq____", "\"", "\"", "$=", "HbQW__3it____", "%", "=", "J", "^", "wI__3ix____", "#", "=", "J", "^", "wI__3j_____", "$", "=", "HbQW__3j", "%", "____", "$", "=", "HbQW__3j", "'", "____", "\"", "\"", "%=", "J", "^", "wI__3j", "(", "____", "%", "=", "J", "^", "wI__9mJ____", "'", "=", "KqtH__", "=", "SE__", "<", "NC", "=", "MN", "(", "F__", "?", "VS__", "<", "NC", "=", "MN", "(", "F__Zw", "`", "____", "\"", "\"", "%=", "KqtH__j", "+", "C__", "<", "NC", "=", "MN", "(", "F__j", "+", "M__", "<", "NC", "=", "MN", "(", "F__j", "+", "a__", "<", "NC", "=", "MN", "(", "F__j_", ".", "__", "<", "NC", "=", "MN", "(", "F__n", ">", "M____", "\"", "\"", "'=", "KqtH__s1X____", "$", "=", "MMyc__s1_____", "#", "=", "MN", "#", "O__ypn____", "'", "=", "KqtH__ypr____", "'", "=", "KqtH_", "#", "%", "h_____", "\"", "\"", "%=", "KqtH_", "#", "%", "o_____", "'", "=", "KqtH_", "#", ")", "H6__", "<", "NC", "=", "MN", "(", "F_", "#", "*%", "'", "____", "%", "=", "KqtH_", "#", "+", "k", "(", "____", "'", "=", "KqtH_", "#", "-", "E_____", "\"", "\"", "'=", "KqtH_", "#", "1", ")", "w____", "'", "=", "KqtH_", "#", "1", ")", "y____", "'", "=", "KqtH_", "#", "1", "*", "M____", "#", "=", "KqtH_", "#", "1", "*", "p____", "'", "=", "KqtH_", "#", "14Q__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "14S__", "<", "NC", "=", "MN", "(", "F_", "#", "16I__", "<", "NC", "=", "MN", "(", "F_", "#", "16N__", "<", "NC", "=", "MN", "(", "F_", "#", "16X__", "<", "NC", "=", "MN", "(", "F_", "#", "16k__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "17", "@", "__", "<", "NC", "=", "MN", "(", "F_", "#", "17A__", "<", "NC", "=", "MN", "(", "F_", "#", "1Cq____", "'", "=", "KqtH_", "#", "7", ")", "_____", "#", "=", "KqtH_", "#", "7", ")", "b____", "\"", "\"", "#=", "KqtH_", "#", "7Ww____", "'", "=", "KqtH_", "#", "?", "cQ____", "'", "=", "KqtH_", "#", "His____", "'", "=", "KqtH_", "#", "Jrh____", "'", "=", "KqtH_", "#", "O", "@", "M__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "O", "@", "O__", "<", "NC", "=", "MN", "(", "F_", "#", "OC6__", "<", "NC", "=", "MN", "(", "F_", "#", "Os", ".", "____", "#", "=", "KqtH_", "#", "YOW____", "#", "=", "H", "/", "Li_", "#", "Zat____", "\"", "\"", "'=", "KqtH_", "#", "ZbI____", "%", "=", "KqtH_", "#", "Zbc____", "'", "=", "KqtH_", "#", "Zbs____", "%", "=", "KqtH_", "#", "Zby____", "'", "=", "KqtH_", "#", "Zce____", "\"", "\"", "'=", "KqtH_", "#", "Zdc____", "%", "=", "KqtH_", "#", "Zea____", "'", "=", "KqtH_", "#", "ZhI____", "#", "=", "KqtH_", "#", "ZiD____", "'", "=", "KqtH_", "#", "Zis____", "\"", "\"", "'=", "KqtH_", "#", "Zj0____", "#", "=", "KqtH_", "#", "Zj1____", "'", "=", "KqtH_", "#", "Zj", "[", "____", "'", "=", "KqtH_", "#", "Zj", "]", "____", "'", "=", "KqtH_", "#", "Zj", "^", "____", "\"", "\"", "'=", "KqtH_", "#", "Zjb____", "'", "=", "KqtH_", "#", "Zk_____", "'", "=", "KqtH_", "#", "Zk6____", "#", "=", "KqtH_", "#", "Zk9____", "%", "=", "KqtH_", "#", "Zk", "<", "____", "\"", "\"", "'=", "KqtH_", "#", "Zl", ">", "____", "'", "=", "KqtH_", "#", "]", "9R____", "$", "=", "H", "/", "Lt_", "#", "]", "I6____", "#", "=", "KqtH_", "#", "]", "Z", "#", "____", "%", "=", "KqtH_", "#", "^*", "N____", "\"", "\"", "#=", "KqtH_", "#", "^:", "m____", "#", "=", "KqtH_", "#", "_", "*", "_____", "%", "=", "J", "^", "wI_", "#", "`-", "7____", "#", "=", "KqtH_", "#", "`", "T", ">", "____", "'", "=", "KqtH_", "#", "`", "T", "?", "____", "\"", "\"", "'=", "KqtH_", "#", "`", "TA____", "'", "=", "KqtH_", "#", "`", "TB____", "'", "=", "KqtH_", "#", "`", "TG____", "'", "=", "KqtH_", "#", "`", "TP____", "#", "=", "KqtH_", "#", "`", "U_____", "\"", "\"", "'=", "KqtH_", "#", "`", "U", "/", "____", "'", "=", "KqtH_", "#", "`", "U0____", "#", "=", "KqtH_", "#", "`", "U9____", "'", "=", "KqtH_", "#", "aEQ____", "%", "=", "KqtH_", "#", "b", "<", ")", "____", "\"", "\"", "'=", "KqtH_", "#", "c9", "-", "____", "%", "=", "KqtH_", "#", "dxC____", "%", "=", "KqtH_", "#", "dxE____", "%", "=", "KqtH_", "#", "ev", "$", "____", "'", "=", "KqtH_", "#", "fBi____", "\"", "\"", "#=", "KqtH_", "#", "fBj____", "'", "=", "KqtH_", "#", "fG", ")", "____", "'", "=", "KqtH_", "#", "fG", "+", "____", "'", "=", "KqtH_", "#", "g", "<", "d____", "'", "=", "KqtH_", "#", "g", "<", "e____", "\"", "\"", "'=", "KqtH_", "#", "g", "=", "J____", "'", "=", "KqtH_", "#", "gat____", "#", "=", "KqtH_", "#", "s", "`", "D____", "#", "=", "J_", "#", "p_", "#", "sg", "?", "____", "#", "=", "J_", "#", "p_", "#", "t", "<", "a____", "\"", "\"", "#=", "KqtH_", "#", "t", "<", "c____", "#", "=", "KqtH_", "#", "trY____", "$", "=", "JiYj_", "#", "vA", "$", "____", "'", "=", "KqtH_", "#", "xs_____", "'", "=", "KqtH_", "$", "$", "rO____", "\"", "\"", "#=", "KqtH_", "$", "$", "rP____", "#", "=", "KqtH_", "$", "(", "_", "%", "____", "'", "=", "KqtH_", "$", ")]", "o____", "%", "=", "KqtH_", "$", "_", "@", ")", "____", "'", "=", "KqtH_", "$", "_k", "]", "____", "\"", "\"", "'=", "KqtH_", "$", "1", "]", "+", "____", "%", "=", "KqtH_", "$", "3IO____", "%", "=", "KqtH_", "$", "3J", "#", "____", "'", "=", "KqtH_", "$", "3J", ".", "____", "'", "=", "KqtH_", "$", "3J", ":", "____", "\"", "\"", "#=", "KqtH_", "$", "3JH____", "#", "=", "KqtH_", "$", "3JI____", "#", "=", "KqtH_", "$", "3JK____", "%", "=", "KqtH_", "$", "3JL____", "'", "=", "KqtH_", "$", "3JS____", "\"", "\"", "'=", "KqtH_", "$", "8", "+", "M____", "#", "=", "KqtH_", "$", "99d____", "%", "=", "KqtH_", "$", ":", "Lw____", "#", "=", "LK", "+", "x_", "$", ":", "N", "@", "____", "#", "=", "KqtG_", "$", ":", "NC____", "\"", "\"", "#=", "KqtG_", "$", ":", "hW____", "'", "=", "KqtH_", "$", ":", "i", "[", "____", "'", "=", "KqtH_", "$", ":", "ih____", "'", "=", "KqtH_", "$", ":", "it____", "'", "=", "KqtH_", "$", ":", "kO____", "\"", "\"", "'=", "KqtH_", "$", ">*", "B____", "'", "=", "KqtH_", "$", ">", "hD____", "+", "=", "J", "^", "x0_", "$", "?", "lW____", "'", "=", "KqtH_", "$", "?", "ll____", "'", "=", "KqtH_", "$", "?", "lm____", "\"", "\"", "%=", "KqtH_", "$", "?", "mi____", "'", "=", "KqtH_", "$", "?", "mx____", "'", "=", "KqtH_", "$", "D7", "]", "____", "#", "=", "J_", "#", "p_", "$", "D", "@", "T____", "#", "=", "J_", "#", "p_", "$", "V", "<", "g____", "\"", "\"", "'=", "KqtH", "\"", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "\"", "bh", "=", "\\\"", "\"", "+", "longValue", "+", "\"", "\\\"", ";\"", ");", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "STRICT", ".", "decode", "(", "emptyDomain", ")", ";", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "String", "encodedCookie", "=", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", "cookie", ",", "cookie2", ",", "cookie3", ")", ";", "@", "Test", "public", "void", "testWrappedCookieValue", "(", ")", "{", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", "new", "DefaultCookie", "(", "\"", "myCookie", "\"", ",", "\"", "\\\"", "foo", "\\", "\"\"", "))", ";", "}", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "testRejectCookieValueWithSemicolon", "(", ")", "{", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", "new", "DefaultCookie", "(", "\"", "myCookie", "\"", ",", "\"", "foo", ";", "bar", "\"", "))", ";", "}", "/", "*", "*", "Copyright", "2014", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpHeaderDateFormat", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "public", "class", "ServerCookieDecoderTest", "{", "@", "Test", "public", "void", "testDecodingSingleCookie", "(", ")", "{", "String", "cookieString", "=", "\"", "myCookie", "=", "myValue", "\"", ";", "cookieString", "=", "cookieString", ".", "replace", "(", "\"", "XXX", "\"", ",", "HttpHeaderDateFormat", ".", "get", "(", ").", "format", "(", "new", "Date", "(", "System", ".", "currentTimeMillis", "(", ")", "+", "50000", ")", "))", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "assertEquals", "(", "1", ",", "cookies", ".", "size", "(", "))", ";", "Cookie", "cookie", "=", "cookies", ".", "iterator", "(", ").", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue", "\"", ",", "cookie", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingMultipleCookies", "(", ")", "{", "String", "c1", "=", "\"", "myCookie", "=", "myValue", ";", "\";", "String", "c2", "=", "\"", "myCookie2", "=", "myValue2", ";", "\";", "String", "c3", "=", "\"", "myCookie3", "=", "myValue3", ";", "\";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "c1", "+", "c2", "+", "c3", ")", ";", "assertEquals", "(", "3", ",", "cookies", ".", "size", "(", "))", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue", "\"", ",", "cookie", ".", "value", "(", "))", ";", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue2", "\"", ",", "cookie", ".", "value", "(", "))", ";", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue3", "\"", ",", "cookie", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingGoogleAnalyticsCookie", "(", ")", "{", "String", "source", "=", "\"", "ARPT", "=", "LWUKQPSWRTUN04CKKJI", ";", "\"", "\"", "kw", "-", "2E343B92", "-", "B097", "-", "442c", "-", "BFA5", "-", "BE371E0325A2", "=", "unfinished_furniture", ";", "\"", "\"", "__utma", "=", "48461872", ".", "1094088325", ".", "1258140131", ".", "1258140131", ".", "1258140131", ".", "1", ";", "\"", "\"", "__utmb", "=", "48461872", ".", "13", ".", "10", ".", "1258140131", ";", "__utmc", "=", "48461872", ";", "\"", "\"", "__utmz", "=", "48461872", ".", "1258140131", ".", "1", ".", "1", ".", "utmcsr", "=", "overstock", ".", "com", "|", "utmccn", "=", "(", "referral", ")", "|\"", "\"", "utmcmd", "=", "referral", "|", "utmcct", "=", "/", "Home", "-", "Garden", "/", "Furniture", "/", "Clearance", "/", "clearance", "/", "32", "/", "dept", ".", "html", "\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "c", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utma", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "1094088325", ".", "1258140131", ".", "1258140131", ".", "1258140131", ".", "1", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmb", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "13", ".", "10", ".", "1258140131", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmc", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmz", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "1258140131", ".", "1", ".", "1", ".", "utmcsr", "=", "overstock", ".", "com", "|", "\"", "\"", "utmccn", "=", "(", "referral", ")", "|", "utmcmd", "=", "referral", "|", "utmcct", "=", "/", "Home", "-", "Garden", "/", "Furniture", "/", "Clearance", "/", "clearance", "/", "32", "/", "dept", ".", "html", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "ARPT", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "LWUKQPSWRTUN04CKKJI", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "kw", "-", "2E343B92", "-", "B097", "-", "442c", "-", "BFA5", "-", "BE371E0325A2", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "unfinished_furniture", "\"", ",", "c", ".", "value", "(", "))", ";", "assertFalse", "(", "it", ".", "hasNext", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingLongValue", "(", ")", "{", "String", "longValue", "=", "\"", "b___", "$", "Q__", "$", "ha__", "<", "NC", "=", "MN", "(", "F__", "%", "#", "4__", "<", "NC", "=", "MN", "(", "F__2_d____", "#", "=", "IvZB__2_F____", "'", "=", "KqtH__2", "-", "9____", "\"", "\"", "'=", "IvZM__3f", ":", "____", "$", "=", "HbQW__3g", "'", "____", "%", "=", "J", "^", "wI__3g", "-", "____", "%", "=", "J", "^", "wI__3g1____", "$", "=", "HbQW__3g2____", "\"", "\"", "$=", "HbQW__3g5____", "%", "=", "J", "^", "wI__3g9____", "$", "=", "HbQW__3gT____", "$", "=", "HbQW__3gX____", "#", "=", "J", "^", "wI__3gY____", "\"", "\"", "#=", "J", "^", "wI__3gh____", "$", "=", "HbQW__3gj____", "$", "=", "HbQW__3gr____", "$", "=", "HbQW__3gx____", "#", "=", "J", "^", "wI__3h_____", "\"", "\"", "$=", "HbQW__3h", "$", "____", "#", "=", "J", "^", "wI__3h", "'", "____", "$", "=", "HbQW__3h_____", "$", "=", "HbQW__3h0____", "%", "=", "J", "^", "wI__3h1____", "\"", "\"", "#=", "J", "^", "wI__3h2____", "$", "=", "HbQW__3h4____", "$", "=", "HbQW__3h7____", "$", "=", "HbQW__3h8____", "%", "=", "J", "^", "wI__3h", ":", "____", "\"", "\"", "#=", "J", "^", "wI__3h", "@", "____", "%", "=", "J", "^", "wI__3hB____", "$", "=", "HbQW__3hC____", "$", "=", "HbQW__3hL____", "$", "=", "HbQW__3hQ____", "\"", "\"", "$=", "HbQW__3hS____", "%", "=", "J", "^", "wI__3hU____", "$", "=", "HbQW__3h", "[", "____", "$", "=", "HbQW__3h", "^", "____", "$", "=", "HbQW__3hd____", "\"", "\"", "%=", "J", "^", "wI__3he____", "%", "=", "J", "^", "wI__3hf____", "%", "=", "J", "^", "wI__3hg____", "$", "=", "HbQW__3hh____", "%", "=", "J", "^", "wI__3hi____", "\"", "\"", "%=", "J", "^", "wI__3hv____", "$", "=", "HbQW__3i", "/", "____", "#", "=", "J", "^", "wI__3i2____", "#", "=", "J", "^", "wI__3i3____", "%", "=", "J", "^", "wI__3i4____", "\"", "\"", "$=", "HbQW__3i7____", "$", "=", "HbQW__3i8____", "$", "=", "HbQW__3i9____", "%", "=", "J", "^", "wI__3i", "=", "____", "#", "=", "J", "^", "wI__3i", ">", "____", "\"", "\"", "%=", "J", "^", "wI__3iD____", "$", "=", "HbQW__3iF____", "#", "=", "J", "^", "wI__3iH____", "%", "=", "J", "^", "wI__3iM____", "%", "=", "J", "^", "wI__3iS____", "\"", "\"", "#=", "J", "^", "wI__3iU____", "%", "=", "J", "^", "wI__3iZ____", "#", "=", "J", "^", "wI__3i", "]", "____", "%", "=", "J", "^", "wI__3ig____", "%", "=", "J", "^", "wI__3ij____", "\"", "\"", "%=", "J", "^", "wI__3ik____", "#", "=", "J", "^", "wI__3il____", "$", "=", "HbQW__3in____", "%", "=", "J", "^", "wI__3ip____", "$", "=", "HbQW__3iq____", "\"", "\"", "$=", "HbQW__3it____", "%", "=", "J", "^", "wI__3ix____", "#", "=", "J", "^", "wI__3j_____", "$", "=", "HbQW__3j", "%", "____", "$", "=", "HbQW__3j", "'", "____", "\"", "\"", "%=", "J", "^", "wI__3j", "(", "____", "%", "=", "J", "^", "wI__9mJ____", "'", "=", "KqtH__", "=", "SE__", "<", "NC", "=", "MN", "(", "F__", "?", "VS__", "<", "NC", "=", "MN", "(", "F__Zw", "`", "____", "\"", "\"", "%=", "KqtH__j", "+", "C__", "<", "NC", "=", "MN", "(", "F__j", "+", "M__", "<", "NC", "=", "MN", "(", "F__j", "+", "a__", "<", "NC", "=", "MN", "(", "F__j_", ".", "__", "<", "NC", "=", "MN", "(", "F__n", ">", "M____", "\"", "\"", "'=", "KqtH__s1X____", "$", "=", "MMyc__s1_____", "#", "=", "MN", "#", "O__ypn____", "'", "=", "KqtH__ypr____", "'", "=", "KqtH_", "#", "%", "h_____", "\"", "\"", "%=", "KqtH_", "#", "%", "o_____", "'", "=", "KqtH_", "#", ")", "H6__", "<", "NC", "=", "MN", "(", "F_", "#", "*%", "'", "____", "%", "=", "KqtH_", "#", "+", "k", "(", "____", "'", "=", "KqtH_", "#", "-", "E_____", "\"", "\"", "'=", "KqtH_", "#", "1", ")", "w____", "'", "=", "KqtH_", "#", "1", ")", "y____", "'", "=", "KqtH_", "#", "1", "*", "M____", "#", "=", "KqtH_", "#", "1", "*", "p____", "'", "=", "KqtH_", "#", "14Q__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "14S__", "<", "NC", "=", "MN", "(", "F_", "#", "16I__", "<", "NC", "=", "MN", "(", "F_", "#", "16N__", "<", "NC", "=", "MN", "(", "F_", "#", "16X__", "<", "NC", "=", "MN", "(", "F_", "#", "16k__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "17", "@", "__", "<", "NC", "=", "MN", "(", "F_", "#", "17A__", "<", "NC", "=", "MN", "(", "F_", "#", "1Cq____", "'", "=", "KqtH_", "#", "7", ")", "_____", "#", "=", "KqtH_", "#", "7", ")", "b____", "\"", "\"", "#=", "KqtH_", "#", "7Ww____", "'", "=", "KqtH_", "#", "?", "cQ____", "'", "=", "KqtH_", "#", "His____", "'", "=", "KqtH_", "#", "Jrh____", "'", "=", "KqtH_", "#", "O", "@", "M__", "<", "N", "\"", "\"", "C", "=", "MN", "(", "F_", "#", "O", "@", "O__", "<", "NC", "=", "MN", "(", "F_", "#", "OC6__", "<", "NC", "=", "MN", "(", "F_", "#", "Os", ".", "____", "#", "=", "KqtH_", "#", "YOW____", "#", "=", "H", "/", "Li_", "#", "Zat____", "\"", "\"", "'=", "KqtH_", "#", "ZbI____", "%", "=", "KqtH_", "#", "Zbc____", "'", "=", "KqtH_", "#", "Zbs____", "%", "=", "KqtH_", "#", "Zby____", "'", "=", "KqtH_", "#", "Zce____", "\"", "\"", "'=", "KqtH_", "#", "Zdc____", "%", "=", "KqtH_", "#", "Zea____", "'", "=", "KqtH_", "#", "ZhI____", "#", "=", "KqtH_", "#", "ZiD____", "'", "=", "KqtH_", "#", "Zis____", "\"", "\"", "'=", "KqtH_", "#", "Zj0____", "#", "=", "KqtH_", "#", "Zj1____", "'", "=", "KqtH_", "#", "Zj", "[", "____", "'", "=", "KqtH_", "#", "Zj", "]", "____", "'", "=", "KqtH_", "#", "Zj", "^", "____", "\"", "\"", "'=", "KqtH_", "#", "Zjb____", "'", "=", "KqtH_", "#", "Zk_____", "'", "=", "KqtH_", "#", "Zk6____", "#", "=", "KqtH_", "#", "Zk9____", "%", "=", "KqtH_", "#", "Zk", "<", "____", "\"", "\"", "'=", "KqtH_", "#", "Zl", ">", "____", "'", "=", "KqtH_", "#", "]", "9R____", "$", "=", "H", "/", "Lt_", "#", "]", "I6____", "#", "=", "KqtH_", "#", "]", "Z", "#", "____", "%", "=", "KqtH_", "#", "^*", "N____", "\"", "\"", "#=", "KqtH_", "#", "^:", "m____", "#", "=", "KqtH_", "#", "_", "*", "_____", "%", "=", "J", "^", "wI_", "#", "`-", "7____", "#", "=", "KqtH_", "#", "`", "T", ">", "____", "'", "=", "KqtH_", "#", "`", "T", "?", "____", "\"", "\"", "'=", "KqtH_", "#", "`", "TA____", "'", "=", "KqtH_", "#", "`", "TB____", "'", "=", "KqtH_", "#", "`", "TG____", "'", "=", "KqtH_", "#", "`", "TP____", "#", "=", "KqtH_", "#", "`", "U_____", "\"", "\"", "'=", "KqtH_", "#", "`", "U", "/", "____", "'", "=", "KqtH_", "#", "`", "U0____", "#", "=", "KqtH_", "#", "`", "U9____", "'", "=", "KqtH_", "#", "aEQ____", "%", "=", "KqtH_", "#", "b", "<", ")", "____", "\"", "\"", "'=", "KqtH_", "#", "c9", "-", "____", "%", "=", "KqtH_", "#", "dxC____", "%", "=", "KqtH_", "#", "dxE____", "%", "=", "KqtH_", "#", "ev", "$", "____", "'", "=", "KqtH_", "#", "fBi____", "\"", "\"", "#=", "KqtH_", "#", "fBj____", "'", "=", "KqtH_", "#", "fG", ")", "____", "'", "=", "KqtH_", "#", "fG", "+", "____", "'", "=", "KqtH_", "#", "g", "<", "d____", "'", "=", "KqtH_", "#", "g", "<", "e____", "\"", "\"", "'=", "KqtH_", "#", "g", "=", "J____", "'", "=", "KqtH_", "#", "gat____", "#", "=", "KqtH_", "#", "s", "`", "D____", "#", "=", "J_", "#", "p_", "#", "sg", "?", "____", "#", "=", "J_", "#", "p_", "#", "t", "<", "a____", "\"", "\"", "#=", "KqtH_", "#", "t", "<", "c____", "#", "=", "KqtH_", "#", "trY____", "$", "=", "JiYj_", "#", "vA", "$", "____", "'", "=", "KqtH_", "#", "xs_____", "'", "=", "KqtH_", "$", "$", "rO____", "\"", "\"", "#=", "KqtH_", "$", "$", "rP____", "#", "=", "KqtH_", "$", "(", "_", "%", "____", "'", "=", "KqtH_", "$", ")]", "o____", "%", "=", "KqtH_", "$", "_", "@", ")", "____", "'", "=", "KqtH_", "$", "_k", "]", "____", "\"", "\"", "'=", "KqtH_", "$", "1", "]", "+", "____", "%", "=", "KqtH_", "$", "3IO____", "%", "=", "KqtH_", "$", "3J", "#", "____", "'", "=", "KqtH_", "$", "3J", ".", "____", "'", "=", "KqtH_", "$", "3J", ":", "____", "\"", "\"", "#=", "KqtH_", "$", "3JH____", "#", "=", "KqtH_", "$", "3JI____", "#", "=", "KqtH_", "$", "3JK____", "%", "=", "KqtH_", "$", "3JL____", "'", "=", "KqtH_", "$", "3JS____", "\"", "\"", "'=", "KqtH_", "$", "8", "+", "M____", "#", "=", "KqtH_", "$", "99d____", "%", "=", "KqtH_", "$", ":", "Lw____", "#", "=", "LK", "+", "x_", "$", ":", "N", "@", "____", "#", "=", "KqtG_", "$", ":", "NC____", "\"", "\"", "#=", "KqtG_", "$", ":", "hW____", "'", "=", "KqtH_", "$", ":", "i", "[", "____", "'", "=", "KqtH_", "$", ":", "ih____", "'", "=", "KqtH_", "$", ":", "it____", "'", "=", "KqtH_", "$", ":", "kO____", "\"", "\"", "'=", "KqtH_", "$", ">*", "B____", "'", "=", "KqtH_", "$", ">", "hD____", "+", "=", "J", "^", "x0_", "$", "?", "lW____", "'", "=", "KqtH_", "$", "?", "ll____", "'", "=", "KqtH_", "$", "?", "lm____", "\"", "\"", "%=", "KqtH_", "$", "?", "mi____", "'", "=", "KqtH_", "$", "?", "mx____", "'", "=", "KqtH_", "$", "D7", "]", "____", "#", "=", "J_", "#", "p_", "$", "D", "@", "T____", "#", "=", "J_", "#", "p_", "$", "V", "<", "g____", "\"", "\"", "'=", "KqtH", "\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "\"", "bh", "=", "\\\"", "\"", "+", "longValue", "+", "\"", "\\\"", ";\"", ");", "assertEquals", "(", "1", ",", "cookies", ".", "size", "(", "))", ";", "Cookie", "c", "=", "cookies", ".", "iterator", "(", ").", "next", "(", ");", "assertEquals", "(", "\"", "bh", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "longValue", ",", "c", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingOldRFC2965Cookies", "(", ")", "{", "String", "source", "=", "\"", "$", "Version", "=", "\\\"", "1", "\\", "\";", "\"", "\"", "Part_Number1", "=", "\\\"", "Riding_Rocket_0023", "\\", "\";", "$", "Path", "=", "\\\"", "/", "acme", "/", "ammo", "\\", "\";", "\"", "\"", "Part_Number2", "=", "\\\"", "Rocket_Launcher_0001", "\\", "\";", "$", "Path", "=", "\\\"", "/", "acme", "\\", "\"\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "source", ")", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "c", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "Part_Number1", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "Riding_Rocket_0023", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "Part_Number2", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "Rocket_Launcher_0001", "\"", ",", "c", ".", "value", "(", "))", ";", "assertFalse", "(", "it", ".", "hasNext", "(", "))", ";", "}", "@", "Test", "public", "void", "testRejectCookieValueWithSemicolon", "(", ")", "{", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "\"", "name", "=", "\\\"", "foo", ";", "bar", "\\", "\";", "\")", ";", "assertTrue", "(", "cookies", ".", "isEmpty", "(", "))", ";", "}", "}", "@", "@", "-", "13", ",", "10", "+", "13", ",", "12", "@", "@", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpHeaderDateFormat", ";", "String", "encodedCookie", "=", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", "cookie", ")", ";", "String", "encodedCookie1", "=", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", ");", "List", "<", "String", ">", "encodedCookie2", "=", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", ");", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "DefaultCookie", ";", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "cookieString", ")", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", "cookie", ")", ");", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", "\"", "key1", "\"", ",", "\"", "value1", "\"", "))", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", "\"", "key2", "\"", ",", "\"", "value2", "\"", "))", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ClientCookieEncoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "DefaultCookie", ";", "HttpHeaderNames", ".", "COOKIE", ",", "ClientCookieEncoder", ".", "STRICT", ".", "encode", "(", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "Cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieDecoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "cookie", ".", "ServerCookieEncoder", ";", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "value", ")", ";", "cookies", "=", "ServerCookieDecoder", ".", "STRICT", ".", "decode", "(", "value", ")", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "STRICT", ".", "encode", "(", "cookie", ")", ");</s>import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieEncoderUtil", ".", "*;", "return", "encode", "(", "new", "DefaultCookie", "(", "name", ",", "value", ")", ");", "if", "(", "cookie", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookie", "\"", ");", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "encode", "(", "buf", ",", "cookie", ")", ";", "return", "stripTrailingSeparator", "(", "buf", ")", ";", "if", "(", "cookies", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookies", "\"", ");", "}", "if", "(", "cookies", ".", "length", "=", "=", "0", ")", "{", "return", "null", ";", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encode", "(", "buf", ",", "c", ")", ";", "}", "return", "stripTrailingSeparatorOrNull", "(", "buf", ")", ";", "if", "(", "cookies", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookies", "\"", ");", "}", "if", "(", "!", "cookies", ".", "iterator", "(", ").", "hasNext", "(", "))", "{", "return", "null", ";", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encode", "(", "buf", ",", "c", ")", ";", "}", "return", "stripTrailingSeparatorOrNull", "(", "buf", ")", ";", "}", "private", "static", "void", "encode", "(", "StringBuilder", "buf", ",", "Cookie", "c", ")", "{", "/", "/", "rawValue", ">", "value", ">", "\"", "\"", "String", "value", "=", "c", ".", "rawValue", "(", ")", "!", "=", "null", "?", "c", ".", "rawValue", "(", ")", ":", "c", ".", "value", "(", ")", "!", "=", "null", "?", "c", ".", "value", "(", ")", ":", "\"", "\";", "addUnquoted", "(", "buf", ",", "c", ".", "name", "(", "),", "value", ")", ";", "public", "interface", "Cookie", "extends", "Comparable", "<", "Cookie", ">", "{", "/", "**", "*", "Returns", "the", "name", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "name", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "name", "(", ");", "/", "**", "*", "Returns", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "value", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "value", "(", ");", "/", "**", "*", "Sets", "the", "value", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "value", "The", "value", "to", "set", "*", "/", "void", "setValue", "(", "String", "value", ")", ";", "/", "**", "*", "Returns", "the", "raw", "value", "of", "this", "{", "@", "link", "Cookie", "}", ",", "*", "as", "it", "was", "set", "in", "original", "Set", "-", "Cookie", "header", ".", "*", "*", "@", "return", "The", "raw", "value", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "rawValue", "(", ");", "/", "**", "*", "Sets", "the", "raw", "value", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "rawValue", "The", "raw", "value", "to", "set", "*", "/", "void", "setRawValue", "(", "String", "rawValue", ")", ";", "/", "**", "*", "Returns", "the", "domain", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "domain", "of", "this", "{", "@", "link", "Cookie", "}", "*", "/", "String", "domain", "(", ");", "/", "**", "*", "Sets", "the", "domain", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "domain", "The", "domain", "to", "use", "*", "/", "void", "setDomain", "(", "String", "domain", ")", ";", "/", "**", "*", "Returns", "the", "path", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "The", "{", "@", "link", "Cookie", "}", "'", "s", "path", "*", "/", "String", "path", "(", ");", "/", "**", "*", "Sets", "the", "path", "of", "this", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "param", "path", "The", "path", "to", "use", "for", "this", "{", "@", "link", "Cookie", "}", "*", "/", "void", "setPath", "(", "String", "path", ")", ";", "*", "/", "void", "setVersion", "(", "int", "version", ")", ";", "/", "**", "*", "Checks", "to", "see", "if", "this", "{", "@", "link", "Cookie", "}", "is", "secure", "*", "*", "@", "return", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "secure", ",", "otherwise", "false", "*", "/", "boolean", "isSecure", "(", ");", "/", "**", "*", "Sets", "the", "security", "getStatus", "of", "this", "{", "@", "link", "Cookie", "}", "*", "@", "param", "secure", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "to", "be", "secure", ",", "otherwise", "false", "void", "setSecure", "(", "boolean", "secure", ")", ";", "/", "**", "*", "Checks", "to", "see", "if", "this", "{", "@", "link", "Cookie", "}", "can", "only", "be", "accessed", "via", "HTTP", ".", "*", "If", "this", "returns", "true", ",", "the", "{", "@", "link", "Cookie", "}", "cannot", "be", "accessed", "through", "*", "client", "side", "script", "-", "But", "only", "if", "the", "browser", "supports", "it", ".", "*", "For", "more", "information", ",", "please", "look", "<", "a", "href", "=", "\"", "http", ":", "//", "www", ".", "owasp", ".", "org", "/", "index", ".", "php", "/", "HTTPOnly", "\"", ">", "here", "<", "/", "a", ">", "*", "*", "@", "return", "True", "if", "this", "{", "@", "link", "Cookie", "}", "is", "HTTP", "-", "only", "or", "false", "if", "it", "isn", "'", "t", "*", "/", "boolean", "isHttpOnly", "(", ");", "/", "**", "*", "Determines", "if", "this", "{", "@", "link", "Cookie", "}", "is", "HTTP", "only", ".", "*", "If", "set", "to", "true", ",", "this", "{", "@", "link", "Cookie", "}", "cannot", "be", "accessed", "by", "a", "client", "*", "side", "script", ".", "However", ",", "this", "works", "only", "if", "the", "browser", "supports", "it", ".", "*", "For", "for", "information", ",", "please", "look", "*", "<", "a", "href", "=", "\"", "http", ":", "//", "www", ".", "owasp", ".", "org", "/", "index", ".", "php", "/", "HTTPOnly", "\"", ">", "here", "<", "/", "a", ">", ".", "*", "*", "@", "param", "httpOnly", "True", "if", "the", "{", "@", "link", "Cookie", "}", "is", "HTTP", "only", ",", "otherwise", "false", ".", "*", "/", "void", "setHttpOnly", "(", "boolean", "httpOnly", ")", ";", "*", "@", "deprecated", "Use", "{", "@", "link", "ClientCookieDecoder", "}", "or", "{", "@", "link", "ServerCookieDecoder", "}", "instead", ".", "*", "@", "see", "ClientCookieEncoder", "*", "@", "see", "ServerCookieEncoder", "public", "static", "Set", "<", "Cookie", ">", "decode", "(", "String", "header", ")", "{", "if", "(", "names", ".", "get", "(", "0", ")", ".", "equalsIgnoreCase", "(", "CookieHeaderNames", ".", "VERSION", ")", ")", "{", "Cookie", "c", "=", "new", "DefaultCookie", "(", "name", ",", "value", ")", ";", "if", "(", "CookieHeaderNames", ".", "DISCARD", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "CookieHeaderNames", ".", "COMMENT", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "CookieHeaderNames", ".", "COMMENTURL", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "CookieHeaderNames", ".", "VERSION", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "}", "else", "if", "(", "CookieHeaderNames", ".", "PORT", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "private", "CookieDecoder", "(", ")", "{", "/", "/", "Unused", "/", "*", "*", "Copyright", "2012", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "io", ".", "netty", ".", "util", ".", "internal", ".", "InternalThreadLocalMap", ";", "final", "class", "CookieEncoderUtil", "{", "static", "StringBuilder", "stringBuilder", "(", ")", "{", "return", "InternalThreadLocalMap", ".", "get", "(", ").", "stringBuilder", "(", ");", "}", "/", "**", "*", "@", "param", "buf", "a", "buffer", "where", "some", "cookies", "were", "maybe", "encoded", "*", "@", "return", "the", "buffer", "String", "without", "the", "trailing", "separator", ",", "or", "null", "if", "no", "cookie", "was", "appended", ".", "*", "/", "static", "String", "stripTrailingSeparatorOrNull", "(", "StringBuilder", "buf", ")", "{", "return", "buf", ".", "length", "(", ")", "=", "=", "0", "?", "null", ":", "stripTrailingSeparator", "(", "buf", ")", ";", "}", "static", "String", "stripTrailingSeparator", "(", "StringBuilder", "buf", ")", "{", "if", "(", "buf", ".", "length", "(", ")", ">", "0", ")", "{", "buf", ".", "setLength", "(", "buf", ".", "length", "(", ")", "-", "2", ")", ";", "}", "return", "buf", ".", "toString", "(", ");", "}", "static", "void", "add", "(", "StringBuilder", "sb", ",", "String", "name", ",", "String", "val", ")", "{", "if", "(", "val", "=", "=", "null", ")", "{", "addQuoted", "(", "sb", ",", "name", ",", "\"", "\")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "val", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "val", ".", "charAt", "(", "i", ")", ";", "switch", "(", "c", ")", "{", "case", "'", "\\", "t", "'", ":", "case", "'", "'", ":", "case", "'", "\"'", ":", "case", "'", "('", ":", "case", "'", ")'", ":", "case", "'", ",'", ":", "case", "'", "/'", ":", "case", "'", ":'", ":", "case", "'", ";'", ":", "case", "'", "<'", ":", "case", "'", "='", ":", "case", "'", ">'", ":", "case", "'", "?'", ":", "case", "'", "@'", ":", "case", "'", "['", ":", "case", "'", "\\\\", "':", "case", "'", "]'", ":", "case", "'", "{'", ":", "case", "'", "}'", ":", "addQuoted", "(", "sb", ",", "name", ",", "val", ")", ";", "return", ";", "}", "}", "addUnquoted", "(", "sb", ",", "name", ",", "val", ")", ";", "}", "static", "void", "addUnquoted", "(", "StringBuilder", "sb", ",", "String", "name", ",", "String", "val", ")", "{", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "val", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "void", "addQuoted", "(", "StringBuilder", "sb", ",", "String", "name", ",", "String", "val", ")", "{", "if", "(", "val", "=", "=", "null", ")", "{", "val", "=", "\"", "\";", "}", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "DOUBLE_QUOTE", ")", ";", "sb", ".", "append", "(", "val", ".", "replace", "(", "\"\\", "\\\"", ",", "\"", "\\\\", "\\\\", "\")", ".", "replace", "(", "\"\\", "\"\"", ",", "\"", "\\\\", "\\\"", "\")", ");", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "DOUBLE_QUOTE", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "static", "void", "add", "(", "StringBuilder", "sb", ",", "String", "name", ",", "long", "val", ")", "{", "sb", ".", "append", "(", "name", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "EQUALS", ")", ";", "sb", ".", "append", "(", "val", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "sb", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "private", "CookieEncoderUtil", "(", ")", "{", "/", "/", "Unused", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "104", "@", "@", "public", "class", "DefaultCookie", "implements", "Cookie", "{", "private", "final", "String", "name", ";", "private", "String", "value", ";", "private", "String", "rawValue", ";", "private", "String", "domain", ";", "private", "String", "path", ";", "private", "long", "maxAge", "=", "Long", ".", "MIN_VALUE", ";", "private", "boolean", "secure", ";", "private", "boolean", "httpOnly", ";", "if", "(", "name", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "name", "\"", ");", "}", "name", "=", "name", ".", "trim", "(", ");", "if", "(", "name", ".", "isEmpty", "(", "))", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "empty", "name", "\"", ");", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "name", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "name", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", ">", "127", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "contains", "non", "-", "ascii", "character", ":", "\"", "+", "name", ")", ";", "}", "/", "/", "Check", "prohibited", "characters", ".", "switch", "(", "c", ")", "{", "case", "'", "\\", "t", "'", ":", "case", "'", "\\", "n", "'", ":", "case", "0x0b", ":", "case", "'", "\\", "f", "'", ":", "case", "'", "\\", "r", "'", ":", "case", "'", "'", ":", "case", "'", ",'", ":", "case", "'", ";'", ":", "case", "'", "='", ":", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "contains", "one", "of", "the", "following", "prohibited", "characters", ":", "\"", "+", "\"", "=,", ";", "\\", "\\", "t", "\\", "\\", "r", "\\", "\\", "n", "\\", "\\", "v", "\\", "\\", "f", ":", "\"", "+", "name", ")", ";", "}", "}", "if", "(", "name", ".", "charAt", "(", "0", ")", "=", "=", "'", "$'", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "name", "starting", "with", "'", "$'", "not", "allowed", ":", "\"", "+", "name", ")", ";", "}", "this", ".", "name", "=", "name", ";", "setValue", "(", "value", ")", ";", "@", "Override", "public", "String", "name", "(", ")", "{", "return", "name", ";", "}", "@", "Override", "public", "String", "value", "(", ")", "{", "return", "value", ";", "}", "@", "Override", "public", "void", "setValue", "(", "String", "value", ")", "{", "if", "(", "value", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "value", "\"", ");", "}", "this", ".", "value", "=", "value", ";", "}", "@", "Override", "public", "String", "rawValue", "(", ")", "{", "return", "rawValue", ";", "}", "@", "Override", "public", "void", "setRawValue", "(", "String", "rawValue", ")", "{", "if", "(", "value", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "rawValue", "\"", ");", "}", "this", ".", "rawValue", "=", "rawValue", ";", "}", "@", "Override", "public", "String", "domain", "(", ")", "{", "return", "domain", ";", "}", "@", "Override", "public", "void", "setDomain", "(", "String", "domain", ")", "{", "this", ".", "domain", "=", "validateValue", "(", "\"", "domain", "\"", ",", "domain", ")", ";", "}", "@", "Override", "public", "String", "path", "(", ")", "{", "return", "path", ";", "}", "@", "Override", "public", "void", "setPath", "(", "String", "path", ")", "{", "this", ".", "path", "=", "validateValue", "(", "\"", "path", "\"", ",", "path", ")", ";", "}", "@", "Override", "public", "long", "maxAge", "(", ")", "{", "return", "maxAge", ";", "}", "@", "Override", "public", "void", "setMaxAge", "(", "long", "maxAge", ")", "{", "this", ".", "maxAge", "=", "maxAge", ";", "}", "@", "Override", "public", "boolean", "isSecure", "(", ")", "{", "return", "secure", ";", "}", "@", "Override", "public", "void", "setSecure", "(", "boolean", "secure", ")", "{", "this", ".", "secure", "=", "secure", ";", "}", "@", "Override", "public", "boolean", "isHttpOnly", "(", ")", "{", "return", "httpOnly", ";", "}", "@", "Override", "public", "void", "setHttpOnly", "(", "boolean", "httpOnly", ")", "{", "this", ".", "httpOnly", "=", "httpOnly", ";", "}", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "return", "name", "(", ").", "hashCode", "(", ");", "}", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "!(", "o", "instanceof", "Cookie", ")", ")", "{", "return", "false", ";", "}", "Cookie", "that", "=", "(", "Cookie", ")", "o", ";", "if", "(", "!", "name", "(", ").", "equalsIgnoreCase", "(", "that", ".", "name", "(", "))", ")", "{", "return", "false", ";", "}", "if", "(", "path", "(", ")", "=", "=", "null", ")", "{", "if", "(", "that", ".", "path", "(", ")", "!", "=", "null", ")", "{", "return", "false", ";", "}", "}", "else", "if", "(", "that", ".", "path", "(", ")", "=", "=", "null", ")", "{", "return", "false", ";", "}", "else", "if", "(", "!", "path", "(", ").", "equals", "(", "that", ".", "path", "(", "))", ")", "{", "return", "false", ";", "}", "if", "(", "domain", "(", ")", "=", "=", "null", ")", "{", "if", "(", "that", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "return", "false", ";", "}", "}", "else", "if", "(", "that", ".", "domain", "(", ")", "=", "=", "null", ")", "{", "return", "false", ";", "}", "else", "{", "return", "domain", "(", ").", "equalsIgnoreCase", "(", "that", ".", "domain", "(", "))", ";", "}", "return", "true", ";", "}", "@", "Override", "public", "int", "compareTo", "(", "Cookie", "c", ")", "{", "int", "v", ";", "v", "=", "name", "(", ").", "compareToIgnoreCase", "(", "c", ".", "name", "(", "))", ";", "if", "(", "v", "!", "=", "0", ")", "{", "return", "v", ";", "}", "if", "(", "path", "(", ")", "=", "=", "null", ")", "{", "if", "(", "c", ".", "path", "(", ")", "!", "=", "null", ")", "{", "return", "-", "1", ";", "}", "}", "else", "if", "(", "c", ".", "path", "(", ")", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "v", "=", "path", "(", ").", "compareTo", "(", "c", ".", "path", "(", "))", ";", "if", "(", "v", "!", "=", "0", ")", "{", "return", "v", ";", "}", "}", "if", "(", "domain", "(", ")", "=", "=", "null", ")", "{", "if", "(", "c", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "return", "-", "1", ";", "}", "}", "else", "if", "(", "c", ".", "domain", "(", ")", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "v", "=", "domain", "(", ").", "compareToIgnoreCase", "(", "c", ".", "domain", "(", "))", ";", "return", "v", ";", "}", "return", "0", ";", "}", "@", "Override", "public", "String", "toString", "(", ")", "{", "StringBuilder", "buf", "=", "new", "StringBuilder", "(", ")", ".", "append", "(", "name", "(", "))", ".", "append", "(", "'=", "')", ".", "append", "(", "value", "(", "))", ";", "if", "(", "domain", "(", ")", "!", "=", "null", ")", "{", "buf", ".", "append", "(", "\",", "domain", "=", "\")", ".", "append", "(", "domain", "(", "))", ";", "}", "if", "(", "path", "(", ")", "!", "=", "null", ")", "{", "buf", ".", "append", "(", "\",", "path", "=", "\")", ".", "append", "(", "path", "(", "))", ";", "}", "if", "(", "comment", "(", ")", "!", "=", "null", ")", "{", "buf", ".", "append", "(", "\",", "comment", "=", "\")", ".", "append", "(", "comment", "(", "))", ";", "}", "if", "(", "maxAge", "(", ")", ">", "=", "0", ")", "{", "buf", ".", "append", "(", "\",", "maxAge", "=", "\")", ".", "append", "(", "maxAge", "(", "))", ".", "append", "(", "'", "s", "'", ");", "}", "if", "(", "isSecure", "(", "))", "{", "buf", ".", "append", "(", "\",", "secure", "\"", ");", "}", "if", "(", "isHttpOnly", "(", "))", "{", "buf", ".", "append", "(", "\",", "HTTPOnly", "\"", ");", "}", "return", "buf", ".", "toString", "(", ");", "}", "private", "static", "String", "validateValue", "(", "String", "name", ",", "String", "value", ")", "{", "if", "(", "value", "=", "=", "null", ")", "{", "return", "null", ";", "}", "value", "=", "value", ".", "trim", "(", ");", "if", "(", "value", ".", "isEmpty", "(", "))", "{", "return", "null", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "value", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "value", ".", "charAt", "(", "i", ")", ";", "switch", "(", "c", ")", "{", "case", "'", "\\", "r", "'", ":", "case", "'", "\\", "n", "'", ":", "case", "'", "\\", "f", "'", ":", "case", "0x0b", ":", "case", "'", ";'", ":", "throw", "new", "IllegalArgumentException", "(", "name", "+", "\"", "contains", "one", "of", "the", "following", "prohibited", "characters", ":", "\"", "+", "\"", ";\\", "\\", "r", "\\", "\\", "n", "\\", "\\", "f", "\\", "\\", "v", "(", "\"", "+", "value", "+", "'", ")'", ");", "}", "}", "return", "value", ";", "}", "final", "class", "HttpHeaderDateFormat", "extends", "SimpleDateFormat", "{", "static", "HttpHeaderDateFormat", "get", "(", ")", "{", "*", "{", "@", "link", "QueryStringEncoder", "}", "and", "{", "@", "link", "QueryStringDecoder", "}", ".", "{", "@", "link", "Cookie", "}", "*", "support", "is", "also", "provided", "separately", "via", "{", "@", "link", "ClientCookieDecoder", "}", ",", "{", "@", "link", "ServerCookieDecoder", "}", ",", "*", "{", "@", "link", "ClientCookieEncoder", "}", ",", "and", "{", "@", "link", "@", "ServerCookieEncoder", "}", ".", "*", "@", "see", "ClientCookieEncoder", "*", "@", "see", "ServerCookieEncoder", "*", "@", "see", "ClientCookieDecoder", "*", "@", "see", "ServerCookieDecoder", "*", "Unlike", "the", "Servlet", "API", ",", "{", "@", "link", "Cookie", "}", "support", "is", "provided", "separately", "via", "{", "@", "link", "ClientCookieDecoder", "}", ",", "*", "{", "@", "link", "ServerCookieDecoder", "}", ",", "{", "@", "link", "ClientCookieEncoder", "}", ",", "and", "{", "@", "link", "@", "ServerCookieEncoder", "}", ".", "*", "@", "see", "ClientCookieEncoder", "*", "@", "see", "ServerCookieEncoder", "*", "@", "see", "ClientCookieDecoder", "*", "@", "see", "ServerCookieDecoder", "/", "*", "*", "Copyright", "2014", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "TreeSet", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieEncoderUtil", ".", "*;", "/", "**", "*", "A", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc6265", "\"", ">", "RFC6265", "<", "/", "a", ">", "compliant", "cookie", "decoder", "to", "be", "used", "server", "side", ".", "*", "*", "Only", "name", "and", "value", "fields", "are", "expected", ",", "so", "old", "fields", "are", "not", "populated", "(", "path", ",", "domain", ",", "etc", ")", ".", "*", "*", "Old", "<", "a", "href", "=", "\"", "http", ":", "//", "tools", ".", "ietf", ".", "org", "/", "html", "/", "rfc2965", "\"", ">", "RFC2965", "<", "/", "a", ">", "cookies", "are", "still", "supported", ",", "*", "old", "fields", "will", "simply", "be", "ignored", ".", "*", "*", "@", "see", "ServerCookieEncoder", "*", "/", "public", "final", "class", "ServerCookieDecoder", "{", "/", "**", "*", "Decodes", "the", "specified", "Set", "-", "Cookie", "HTTP", "header", "value", "into", "a", "{", "@", "link", "Cookie", "}", ".", "*", "*", "@", "return", "the", "decoded", "{", "@", "link", "Cookie", "}", "*", "/", "public", "static", "Set", "<", "Cookie", ">", "decode", "(", "String", "header", ")", "{", "if", "(", "header", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "header", "\"", ");", "}", "final", "int", "headerLen", "=", "header", ".", "length", "(", ");", "if", "(", "headerLen", "=", "=", "0", ")", "{", "return", "Collections", ".", "emptySet", "(", ");", "}", "Set", "<", "Cookie", ">", "cookies", "=", "new", "TreeSet", "<", "Cookie", ">", "()", ";", "int", "i", "=", "0", ";", "boolean", "rfc2965Style", "=", "false", ";", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "0", ",", "\"", "$", "Version", "\"", ",", "0", ",", "8", ")", ")", "{", "/", "/", "RFC", "2965", "style", "cookie", ",", "move", "to", "after", "version", "value", "i", "=", "header", ".", "indexOf", "(", "';", "')", "+", "1", ";", "rfc2965Style", "=", "true", ";", "}", "loop", ":", "for", "(", ";;", ")", "{", "/", "/", "Skip", "spaces", "and", "separators", ".", "for", "(", ";;", ")", "{", "if", "(", "i", "=", "=", "headerLen", ")", "{", "break", "loop", ";", "}", "char", "c", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", "=", "=", "'", "\\", "t", "'", "|", "|", "c", "=", "=", "'", "\\", "n", "'", "|", "|", "c", "=", "=", "0x0b", "|", "|", "c", "=", "=", "'", "\\", "f", "'", "|", "|", "c", "=", "=", "'", "\\", "r", "'", "|", "|", "c", "=", "=", "'", "'", "|", "|", "c", "=", "=", "'", ",'", "|", "|", "c", "=", "=", "'", ";'", ")", "{", "i", "+", "+;", "continue", ";", "}", "break", ";", "}", "int", "newNameStart", "=", "i", ";", "int", "newNameEnd", "=", "i", ";", "String", "value", ";", "if", "(", "i", "=", "=", "headerLen", ")", "{", "value", "=", "null", ";", "}", "else", "{", "keyValLoop", ":", "for", "(", ";;", ")", "{", "char", "curChar", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "curChar", "=", "=", "'", ";'", ")", "{", "/", "/", "NAME", ";", "(", "no", "value", "till", "'", ";'", ")", "newNameEnd", "=", "i", ";", "value", "=", "null", ";", "break", "keyValLoop", ";", "}", "else", "if", "(", "curChar", "=", "=", "'", "='", ")", "{", "/", "/", "NAME", "=", "VALUE", "newNameEnd", "=", "i", ";", "i", "+", "+;", "if", "(", "i", "=", "=", "headerLen", ")", "{", "/", "/", "NAME", "=", "(", "empty", "value", ",", "i", ".", "e", ".", "nothing", "after", "'", "='", ")", "value", "=", "\"", "\";", "break", "keyValLoop", ";", "}", "int", "newValueStart", "=", "i", ";", "char", "c", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", "=", "=", "'", "\"'", ")", "{", "/", "/", "NAME", "=", "\"", "VALUE", "\"", "StringBuilder", "newValueBuf", "=", "stringBuilder", "(", ");", "final", "char", "q", "=", "c", ";", "boolean", "hadBackslash", "=", "false", ";", "i", "+", "+;", "for", "(", ";;", ")", "{", "if", "(", "i", "=", "=", "headerLen", ")", "{", "value", "=", "newValueBuf", ".", "toString", "(", ");", "break", "keyValLoop", ";", "}", "if", "(", "hadBackslash", ")", "{", "hadBackslash", "=", "false", ";", "c", "=", "header", ".", "charAt", "(", "i", "+", "+)", ";", "if", "(", "c", "=", "=", "'", "\\\\", "'", "|", "|", "c", "=", "=", "'", "\"'", ")", "{", "/", "/", "Escape", "last", "backslash", ".", "newValueBuf", ".", "setCharAt", "(", "newValueBuf", ".", "length", "(", ")", "-", "1", ",", "c", ")", ";", "}", "else", "{", "/", "/", "Do", "not", "escape", "last", "backslash", ".", "newValueBuf", ".", "append", "(", "c", ")", ";", "}", "}", "else", "{", "c", "=", "header", ".", "charAt", "(", "i", "+", "+)", ";", "if", "(", "c", "=", "=", "q", ")", "{", "value", "=", "newValueBuf", ".", "toString", "(", ");", "break", "keyValLoop", ";", "}", "newValueBuf", ".", "append", "(", "c", ")", ";", "if", "(", "c", "=", "=", "'", "\\\\", "')", "{", "hadBackslash", "=", "true", ";", "}", "}", "}", "}", "else", "{", "/", "/", "NAME", "=", "VALUE", ";", "int", "semiPos", "=", "header", ".", "indexOf", "(", "';", "',", "i", ")", ";", "if", "(", "semiPos", ">", "0", ")", "{", "value", "=", "header", ".", "substring", "(", "newValueStart", ",", "semiPos", ")", ";", "i", "=", "semiPos", ";", "}", "else", "{", "value", "=", "header", ".", "substring", "(", "newValueStart", ")", ";", "i", "=", "headerLen", ";", "}", "}", "break", "keyValLoop", ";", "}", "else", "{", "i", "+", "+;", "}", "if", "(", "i", "=", "=", "headerLen", ")", "{", "/", "/", "NAME", "(", "no", "value", "till", "the", "end", "of", "string", ")", "newNameEnd", "=", "headerLen", ";", "value", "=", "null", ";", "break", ";", "}", "}", "}", "if", "(", "!", "rfc2965Style", "|", "|", "(", "!", "header", ".", "regionMatches", "(", "newNameStart", ",", "\"", "$", "Path", "\"", ",", "0", ",", "\"", "$", "Path", "\"", ".", "length", "(", "))", "&", "&", "!", "header", ".", "regionMatches", "(", "newNameStart", ",", "\"", "$", "Domain", "\"", ",", "0", ",", "\"", "$", "Domain", "\"", ".", "length", "(", "))", "&", "&", "!", "header", ".", "regionMatches", "(", "newNameStart", ",", "\"", "$", "Port", "\"", ",", "0", ",", "\"", "$", "Port", "\"", ".", "length", "(", "))", "))", "{", "/", "/", "skip", "obsolete", "RFC2965", "fields", "String", "name", "=", "header", ".", "substring", "(", "newNameStart", ",", "newNameEnd", ")", ";", "cookies", ".", "add", "(", "new", "DefaultCookie", "(", "name", ",", "value", ")", ");", "}", "}", "return", "cookies", ";", "}", "private", "ServerCookieDecoder", "(", ")", "{", "/", "/", "unused", "}", "}", "@", "@", "-", "15", ",", "12", "+", "15", ",", "7", "@", "@", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieEncoderUtil", ".", "*;", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Date", ";", "return", "encode", "(", "new", "DefaultCookie", "(", "name", ",", "value", ")", ");", "if", "(", "cookie", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookie", "\"", ");", "}", "StringBuilder", "buf", "=", "stringBuilder", "(", ");", "addUnquoted", "(", "buf", ",", "cookie", ".", "name", "(", "),", "cookie", ".", "value", "(", "))", ";", "if", "(", "cookie", ".", "maxAge", "(", ")", "!", "=", "Long", ".", "MIN_VALUE", ")", "{", "add", "(", "buf", ",", "CookieHeaderNames", ".", "MAX_AGE", ",", "cookie", ".", "maxAge", "(", "))", ";", "Date", "expires", "=", "new", "Date", "(", "cookie", ".", "maxAge", "(", ")", "*", "1000", "+", "System", ".", "currentTimeMillis", "(", "))", ";", "addUnquoted", "(", "buf", ",", "CookieHeaderNames", ".", "EXPIRES", ",", "HttpHeaderDateFormat", ".", "get", "(", ").", "format", "(", "expires", ")", ");", "}", "if", "(", "cookie", ".", "path", "(", ")", "!", "=", "null", ")", "{", "addUnquoted", "(", "buf", ",", "CookieHeaderNames", ".", "PATH", ",", "cookie", ".", "path", "(", "))", ";", "}", "if", "(", "cookie", ".", "domain", "(", ")", "!", "=", "null", ")", "{", "addUnquoted", "(", "buf", ",", "CookieHeaderNames", ".", "DOMAIN", ",", "cookie", ".", "domain", "(", "))", ";", "}", "if", "(", "cookie", ".", "isSecure", "(", "))", "{", "buf", ".", "append", "(", "CookieHeaderNames", ".", "SECURE", ")", ";", "buf", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "buf", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "if", "(", "cookie", ".", "isHttpOnly", "(", "))", "{", "buf", ".", "append", "(", "CookieHeaderNames", ".", "HTTPONLY", ")", ";", "buf", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SEMICOLON", ")", ";", "buf", ".", "append", "(", "(", "char", ")", "HttpConstants", ".", "SP", ")", ";", "}", "return", "stripTrailingSeparator", "(", "buf", ")", ";", "if", "(", "cookies", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookies", "\"", ");", "}", "if", "(", "cookies", ".", "length", "=", "=", "0", ")", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "(", "cookies", ".", "length", ")", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "if", "(", "cookies", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookies", "\"", ");", "}", "if", "(", "cookies", ".", "isEmpty", "(", "))", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "(", "cookies", ".", "size", "(", "))", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "if", "(", "cookies", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "cookies", "\"", ");", "}", "if", "(", "!", "cookies", ".", "iterator", "(", ").", "hasNext", "(", "))", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "List", "<", "String", ">", "encoded", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "for", "(", "Cookie", "c", ":", "cookies", ")", "{", "if", "(", "c", "=", "=", "null", ")", "{", "break", ";", "}", "encoded", ".", "add", "(", "encode", "(", "c", ")", ");", "}", "return", "encoded", ";", "*", "Copyright", "2014", "The", "Netty", "Project", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "static", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "CookieEncoderUtil", ".", "*;", "*", "It", "will", "store", "the", "raw", "value", "in", "{", "@", "link", "Cookie", "#", "setRawValue", "(", "String", ")", "}", "so", "it", "can", "be", "public", "final", "class", "ClientCookieDecoder", "{", "public", "static", "Cookie", "decode", "(", "String", "header", ")", "{", "if", "(", "header", "=", "=", "null", ")", "{", "throw", "new", "NullPointerException", "(", "\"", "header", "\"", ");", "}", "final", "int", "headerLen", "=", "header", ".", "length", "(", ");", "int", "newNameStart", "=", "i", ";", "int", "newNameEnd", "=", "i", ";", "String", "value", ",", "rawValue", ";", "if", "(", "i", "=", "=", "headerLen", ")", "{", "value", "=", "rawValue", "=", "null", ";", "}", "else", "{", "newNameEnd", "=", "i", ";", "value", "=", "rawValue", "=", "null", ";", "newNameEnd", "=", "i", ";", "value", "=", "rawValue", "=", "\"", "\";", "int", "newValueStart", "=", "i", ";", "char", "c", "=", "header", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", "=", "=", "'", "\"'", ")", "{", "/", "/", "NAME", "=", "\"", "VALUE", "\"", "StringBuilder", "newValueBuf", "=", "stringBuilder", "(", ");", "int", "rawValueStart", "=", "i", ";", "int", "rawValueEnd", "=", "i", ";", "final", "char", "q", "=", "c", ";", "boolean", "hadBackslash", "=", "false", ";", "i", "+", "+;", "for", "(", ";;", ")", "{", "if", "(", "i", "=", "=", "headerLen", ")", "{", "value", "=", "newValueBuf", ".", "toString", "(", ");", "/", "/", "only", "need", "to", "compute", "raw", "value", "for", "cookie", "/", "/", "value", "which", "is", "in", "first", "position", "rawValue", "=", "header", ".", "substring", "(", "rawValueStart", ",", "rawValueEnd", ")", ";", "break", "keyValLoop", ";", "}", "if", "(", "hadBackslash", ")", "{", "hadBackslash", "=", "false", ";", "c", "=", "header", ".", "charAt", "(", "i", "+", "+)", ";", "rawValueEnd", "=", "i", ";", "if", "(", "c", "=", "=", "'", "\\\\", "'", "|", "|", "c", "=", "=", "'", "\"'", ")", "{", "newValueBuf", ".", "setCharAt", "(", "newValueBuf", ".", "length", "(", ")", "-", "1", ",", "c", ")", ";", "}", "else", "{", "/", "/", "Do", "not", "escape", "last", "backslash", ".", "newValueBuf", ".", "append", "(", "c", ")", ";", "}", "}", "else", "{", "c", "=", "header", ".", "charAt", "(", "i", "+", "+)", ";", "rawValueEnd", "=", "i", ";", "if", "(", "c", "=", "=", "q", ")", "{", "value", "=", "newValueBuf", ".", "toString", "(", ");", "/", "/", "only", "need", "to", "compute", "raw", "value", "for", "/", "/", "cookie", "value", "which", "is", "in", "first", "/", "/", "position", "rawValue", "=", "header", ".", "substring", "(", "rawValueStart", ",", "rawValueEnd", ")", ";", "break", "keyValLoop", ";", "}", "newValueBuf", ".", "append", "(", "c", ")", ";", "if", "(", "c", "=", "=", "'", "\\\\", "')", "{", "hadBackslash", "=", "true", ";", "}", "}", "}", "}", "else", "{", "/", "/", "NAME", "=", "VALUE", ";", "int", "semiPos", "=", "header", ".", "indexOf", "(", "';", "',", "i", ")", ";", "if", "(", "semiPos", ">", "0", ")", "{", "value", "=", "rawValue", "=", "header", ".", "substring", "(", "newValueStart", ",", "semiPos", ")", ";", "i", "=", "semiPos", ";", "}", "else", "{", "value", "=", "rawValue", "=", "header", ".", "substring", "(", "newValueStart", ")", ";", "i", "=", "headerLen", ";", "}", "}", "newNameEnd", "=", "i", ";", "value", "=", "rawValue", "=", "null", ";", "cookieBuilder", "=", "new", "CookieBuilder", "(", "header", ",", "newNameStart", ",", "newNameEnd", ",", "value", ",", "rawValue", ")", ";", "cookieBuilder", ".", "appendAttribute", "(", "header", ",", "newNameStart", ",", "newNameEnd", ",", "value", ")", ";", "private", "final", "String", "name", ";", "private", "final", "String", "value", ";", "private", "final", "String", "rawValue", ";", "public", "CookieBuilder", "(", "String", "header", ",", "int", "keyStart", ",", "int", "keyEnd", ",", "String", "value", ",", "String", "rawValue", ")", "{", "name", "=", "header", ".", "substring", "(", "keyStart", ",", "keyEnd", ")", ";", "this", ".", "value", "=", "value", ";", "this", ".", "rawValue", "=", "rawValue", ";", "if", "(", "name", "=", "=", "null", ")", "{", "return", "null", ";", "}", "DefaultCookie", "cookie", "=", "new", "DefaultCookie", "(", "name", ",", "value", ")", ";", "cookie", ".", "setValue", "(", "value", ")", ";", "cookie", ".", "setRawValue", "(", "rawValue", ")", ";", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "Path", "\"", ",", "0", ",", "4", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "Domain", "\"", ",", "0", ",", "5", ")", ")", "{", "domain", "=", "value", ".", "isEmpty", "(", ")", "?", "null", ":", "value", ";", "}", "else", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "Secure", "\"", ",", "0", ",", "5", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "Expires", "\"", ",", "0", ",", "7", ")", ")", "{", "}", "else", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "Max", "-", "Age", "\"", ",", "0", ",", "7", ")", ")", "{", "if", "(", "header", ".", "regionMatches", "(", "true", ",", "nameStart", ",", "\"", "HttpOnly", "\"", ",", "0", ",", "8", ")", ")", "{", "private", "ClientCookieDecoder", "(", ")", "{", "/", "/", "unused", "}", "*", "Copyright", "2012", "The", "Netty", "Project", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "final", "class", "CookieHeaderNames", "{", "static", "final", "String", "PATH", "=", "\"", "Path", "\"", ";", "static", "final", "String", "EXPIRES", "=", "\"", "Expires", "\"", ";", "static", "final", "String", "MAX_AGE", "=", "\"", "Max", "-", "Age", "\"", ";", "static", "final", "String", "DOMAIN", "=", "\"", "Domain", "\"", ";", "static", "final", "String", "SECURE", "=", "\"", "Secure", "\"", ";", "static", "final", "String", "HTTPONLY", "=", "\"", "HTTPOnly", "\"", ";", "static", "final", "String", "COMMENT", "=", "\"", "Comment", "\"", ";", "static", "final", "String", "COMMENTURL", "=", "\"", "CommentURL", "\"", ";", "static", "final", "String", "DISCARD", "=", "\"", "Discard", "\"", ";", "static", "final", "String", "PORT", "=", "\"", "Port", "\"", ";", "static", "final", "String", "VERSION", "=", "\"", "Version", "\"", ";", "/", "*", "*", "Copyright", "2014", "The", "Netty", "Project", "*", "*", "The", "Netty", "Project", "licenses", "this", "file", "to", "you", "under", "the", "Apache", "License", ",", "*", "version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", ":", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "*", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "*", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "public", "class", "ServerCookieDecoderTest", "{", "@", "Test", "public", "void", "testDecodingSingleCookie", "(", ")", "{", "String", "cookieString", "=", "\"", "myCookie", "=", "myValue", "\"", ";", "cookieString", "=", "cookieString", ".", "replace", "(", "\"", "XXX", "\"", ",", "HttpHeaderDateFormat", ".", "get", "(", ").", "format", "(", "new", "Date", "(", "System", ".", "currentTimeMillis", "(", ")", "+", "50000", ")", "))", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "assertEquals", "(", "1", ",", "cookies", ".", "size", "(", "))", ";", "Cookie", "cookie", "=", "cookies", ".", "iterator", "(", ").", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue", "\"", ",", "cookie", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingMultipleCookies", "(", ")", "{", "String", "c1", "=", "\"", "myCookie", "=", "myValue", ";", "\";", "String", "c2", "=", "\"", "myCookie2", "=", "myValue2", ";", "\";", "String", "c3", "=", "\"", "myCookie3", "=", "myValue3", ";", "\";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "c1", "+", "c2", "+", "c3", ")", ";", "assertEquals", "(", "3", ",", "cookies", ".", "size", "(", "))", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue", "\"", ",", "cookie", ".", "value", "(", "))", ";", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue2", "\"", ",", "cookie", ".", "value", "(", "))", ";", "cookie", "=", "it", ".", "next", "(", ");", "assertNotNull", "(", "cookie", ")", ";", "assertEquals", "(", "\"", "myValue3", "\"", ",", "cookie", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingQuotedCookie", "(", ")", "{", "String", "source", "=", "\"", "a", "=", "\\\"", "\\\"", ";\"", "+", "\"", "b", "=", "\\\"", "1", "\\", "\";", "\"", "+", "\"", "c", "=", "\\\"", "\\\\", "\\\"", "1", "\\", "\\\\", "\"", "2", "\\", "\\\\", "\"\\", "\";", "\"", "+", "\"", "d", "=", "\\\"", "1", "\\", "\\\\", "\"", "2", "\\", "\\\\", "\"", "3", "\\", "\";", "\"", "+", "\"", "e", "=", "\\\"", "\\\\", "\\\"", "\\\\", "\\\"", "\\\"", ";\"", "+", "\"", "f", "=", "\\\"", "1", "\\", "\\\\", "\"\\", "\\\\", "\"", "2", "\\", "\";", "\"", "+", "\"", "g", "=", "\\\"", "\\\\", "\\\\", "\\\"", ";\"", "+", "\"", "h", "=", "\\\"", "';", ",\\", "\\", "x", "\\", "\"\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "source", ")", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "c", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "a", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "b", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "1", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "c", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\"", "1", "\\", "\"", "2", "\\", "\"\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "d", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "1", "\\", "\"", "2", "\\", "\"", "3", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "e", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\"\\", "\"\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "f", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "1", "\\", "\"\\", "\"", "2", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "g", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\\\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "h", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"'", ";,", "\\\\", "x", "\"", ",", "c", ".", "value", "(", "))", ";", "assertFalse", "(", "it", ".", "hasNext", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingGoogleAnalyticsCookie", "(", ")", "{", "String", "source", "=", "\"", "ARPT", "=", "LWUKQPSWRTUN04CKKJI", ";", "\"", "+", "\"", "kw", "-", "2E343B92", "-", "B097", "-", "442c", "-", "BFA5", "-", "BE371E0325A2", "=", "unfinished", "furniture", ";", "\"", "+", "\"", "__utma", "=", "48461872", ".", "1094088325", ".", "1258140131", ".", "1258140131", ".", "1258140131", ".", "1", ";", "\"", "+", "\"", "__utmb", "=", "48461872", ".", "13", ".", "10", ".", "1258140131", ";", "__utmc", "=", "48461872", ";", "\"", "+", "\"", "__utmz", "=", "48461872", ".", "1258140131", ".", "1", ".", "1", ".", "utmcsr", "=", "overstock", ".", "com", "|", "utmccn", "=", "(", "referral", ")", "|\"", "+", "\"", "utmcmd", "=", "referral", "|", "utmcct", "=", "/", "Home", "-", "Garden", "/", "Furniture", "/", "Clearance", ",", "/", "clearance", ",", "/", "32", "/", "dept", ".", "html", "\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "source", ")", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "c", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utma", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "1094088325", ".", "1258140131", ".", "1258140131", ".", "1258140131", ".", "1", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmb", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "13", ".", "10", ".", "1258140131", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmc", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "__utmz", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "48461872", ".", "1258140131", ".", "1", ".", "1", ".", "utmcsr", "=", "overstock", ".", "com", "|", "\"", "+", "\"", "utmccn", "=", "(", "referral", ")", "|", "utmcmd", "=", "referral", "|", "utmcct", "=", "/", "Home", "-", "Garden", "/", "Furniture", "/", "Clearance", ",", "/", "clearance", ",", "/", "32", "/", "dept", ".", "html", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "ARPT", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "LWUKQPSWRTUN04CKKJI", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "kw", "-", "2E343B92", "-", "B097", "-", "442c", "-", "BFA5", "-", "BE371E0325A2", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "unfinished", "furniture", "\"", ",", "c", ".", "value", "(", "))", ";", "assertFalse", "(", "it", ".", "hasNext", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingLongValue", "(", ")", "{", "String", "longValue", "=", "\"", "b", "!", "!!", "$", "Q", "!", "!$", "ha", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!%", "#", "4", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "2", "!", "d", "!", "!!", "!#", "=", "IvZB", "!", "!", "2", ",", "F", "!", "!!", "!'", "=", "KqtH", "!", "!", "2", "-", "9", "!", "!!", "!\"", "+", "\"", "'=", "IvZM", "!", "!", "3f", ":", "!!", "!!", "$=", "HbQW", "!", "!", "3g", "'", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3g", "-", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3g1", "!", "!!", "!$", "=", "HbQW", "!", "!", "3g2", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3g5", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3g9", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gT", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gX", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3gY", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3gh", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gj", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gr", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gx", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3h", "!", "!!", "!!", "\"", "+", "\"", "$=", "HbQW", "!", "!", "3h", "$", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3h", "'", "!!", "!!", "$=", "HbQW", "!", "!", "3h", ",", "!!", "!!", "$=", "HbQW", "!", "!", "3h0", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3h1", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3h2", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h4", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h7", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h8", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3h", ":", "!!", "!!", "\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3h", "@", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3hB", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hC", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hL", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hQ", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3hS", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hU", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h", "[", "!!", "!!", "$=", "HbQW", "!", "!", "3h", "^", "!!", "!!", "$=", "HbQW", "!", "!", "3hd", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3he", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hf", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hg", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hh", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hi", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3hv", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i", "/", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3i2", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3i3", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3i4", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3i7", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i8", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i9", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3i", "=", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3i", ">", "!!", "!!", "\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3iD", "!", "!!", "!$", "=", "HbQW", "!", "!", "3iF", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3iH", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iM", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iS", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3iU", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iZ", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3i", "]", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3ig", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ij", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3ik", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3il", "!", "!!", "!$", "=", "HbQW", "!", "!", "3in", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ip", "!", "!!", "!$", "=", "HbQW", "!", "!", "3iq", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3it", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ix", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3j", "!", "!!", "!!", "$=", "HbQW", "!", "!", "3j", "%", "!!", "!!", "$=", "HbQW", "!", "!", "3j", "'", "!!", "!!", "\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3j", "(", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "9mJ", "!", "!!", "!'", "=", "KqtH", "!", "!=", "SE", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!?", "VS", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "Zw", "`", "!!", "!!", "\"", "+", "\"", "%=", "KqtH", "!", "!", "j", "+", "C", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", "+", "M", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", "+", "a", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", ",", ".!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "n", ">", "M", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "!", "s1X", "!", "!!", "!$", "=", "MMyc", "!", "!", "s1_", "!", "!!", "!#", "=", "MN", "#", "O", "!", "!", "ypn", "!", "!!", "!'", "=", "KqtH", "!", "!", "ypr", "!", "!!", "!'", "=", "KqtH", "!", "#%", "h", "!", "!!", "!!", "\"", "+", "\"", "%=", "KqtH", "!", "#%", "o", "!", "!!", "!!", "'=", "KqtH", "!", "#)", "H6", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#*", "%'", "!!", "!!", "%=", "KqtH", "!", "#+", "k", "(", "!!", "!!", "'=", "KqtH", "!", "#-", "E", "!", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "1", ")", "w", "!", "!!", "!'", "=", "KqtH", "!", "#", "1", ")", "y", "!", "!!", "!'", "=", "KqtH", "!", "#", "1", "*", "M", "!", "!!", "!#", "=", "KqtH", "!", "#", "1", "*", "p", "!", "!!", "!'", "=", "KqtH", "!", "#", "14Q", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "14S", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16I", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16N", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16X", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16k", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "17", "@", "!!", "<", "NC", "=", "MN", "(", "F", "!", "#", "17A", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "1Cq", "!", "!!", "!'", "=", "KqtH", "!", "#", "7", ")", ",!", "!!", "!#", "=", "KqtH", "!", "#", "7", ")", "b", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "7Ww", "!", "!!", "!'", "=", "KqtH", "!", "#?", "cQ", "!", "!!", "!'", "=", "KqtH", "!", "#", "His", "!", "!!", "!'", "=", "KqtH", "!", "#", "Jrh", "!", "!!", "!'", "=", "KqtH", "!", "#", "O", "@", "M", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "O", "@", "O", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "OC6", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "Os", ".", "!!", "!!", "#=", "KqtH", "!", "#", "YOW", "!", "!!", "!#", "=", "H", "/", "Li", "!", "#", "Zat", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "ZbI", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zbc", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zbs", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zby", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zce", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "Zdc", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zea", "!", "!!", "!'", "=", "KqtH", "!", "#", "ZhI", "!", "!!", "!#", "=", "KqtH", "!", "#", "ZiD", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zis", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "Zj0", "!", "!!", "!#", "=", "KqtH", "!", "#", "Zj1", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zj", "[", "!!", "!!", "'=", "KqtH", "!", "#", "Zj", "]", "!!", "!!", "'=", "KqtH", "!", "#", "Zj", "^", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "Zjb", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zk", "!", "!!", "!!", "'=", "KqtH", "!", "#", "Zk6", "!", "!!", "!#", "=", "KqtH", "!", "#", "Zk9", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zk", "<", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "Zl", ">", "!!", "!!", "'=", "KqtH", "!", "#]", "9R", "!", "!!", "!$", "=", "H", "/", "Lt", "!", "#]", "I6", "!", "!!", "!#", "=", "KqtH", "!", "#]", "Z", "#", "!!", "!!", "%=", "KqtH", "!", "#^", "*", "N", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#^", ":", "m", "!", "!!", "!#", "=", "KqtH", "!", "#", "_", "*", "_", "!", "!!", "!%", "=", "J", "^", "wI", "!", "#`", "-", "7", "!", "!!", "!#", "=", "KqtH", "!", "#`", "T", ">", "!!", "!!", "'=", "KqtH", "!", "#`", "T", "?", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#`", "TA", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TB", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TG", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TP", "!", "!!", "!#", "=", "KqtH", "!", "#`", "U", ",", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#`", "U", "/", "!!", "!!", "'=", "KqtH", "!", "#`", "U0", "!", "!!", "!#", "=", "KqtH", "!", "#`", "U9", "!", "!!", "!'", "=", "KqtH", "!", "#", "aEQ", "!", "!!", "!%", "=", "KqtH", "!", "#", "b", "<", ")!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "c9", "-", "!!", "!!", "%=", "KqtH", "!", "#", "dxC", "!", "!!", "!%", "=", "KqtH", "!", "#", "dxE", "!", "!!", "!%", "=", "KqtH", "!", "#", "ev", "$", "!!", "!!", "'=", "KqtH", "!", "#", "fBi", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "fBj", "!", "!!", "!'", "=", "KqtH", "!", "#", "fG", ")", "!!", "!!", "'=", "KqtH", "!", "#", "fG", "+", "!!", "!!", "'=", "KqtH", "!", "#", "g", "<", "d", "!", "!!", "!'", "=", "KqtH", "!", "#", "g", "<", "e", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "g", "=", "J", "!", "!!", "!'", "=", "KqtH", "!", "#", "gat", "!", "!!", "!#", "=", "KqtH", "!", "#", "s", "`", "D", "!", "!!", "!#", "=", "J_", "#", "p", "!", "#", "sg", "?", "!!", "!!", "#=", "J_", "#", "p", "!", "#", "t", "<", "a", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "t", "<", "c", "!", "!!", "!#", "=", "KqtH", "!", "#", "trY", "!", "!!", "!$", "=", "JiYj", "!", "#", "vA", "$", "!!", "!!", "'=", "KqtH", "!", "#", "xs_", "!", "!!", "!'", "=", "KqtH", "!", "$$", "rO", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "$$", "rP", "!", "!!", "!#", "=", "KqtH", "!", "$(", "!%", "!!", "!!", "'=", "KqtH", "!", "$)", "]", "o", "!", "!!", "!%", "=", "KqtH", "!", "$,", "@)", "!!", "!!", "'=", "KqtH", "!", "$,", "k", "]", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "$", "1", "]", "+!", "!!", "!%", "=", "KqtH", "!", "$", "3IO", "!", "!!", "!%", "=", "KqtH", "!", "$", "3J", "#", "!!", "!!", "'=", "KqtH", "!", "$", "3J", ".", "!!", "!!", "'=", "KqtH", "!", "$", "3J", ":", "!!", "!!", "\"", "+", "\"", "#=", "KqtH", "!", "$", "3JH", "!", "!!", "!#", "=", "KqtH", "!", "$", "3JI", "!", "!!", "!#", "=", "KqtH", "!", "$", "3JK", "!", "!!", "!%", "=", "KqtH", "!", "$", "3JL", "!", "!!", "!'", "=", "KqtH", "!", "$", "3JS", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "$", "8", "+", "M", "!", "!!", "!#", "=", "KqtH", "!", "$", "99d", "!", "!!", "!%", "=", "KqtH", "!", "$:", "Lw", "!", "!!", "!#", "=", "LK", "+", "x", "!", "$:", "N", "@", "!!", "!!", "#=", "KqtG", "!", "$:", "NC", "!", "!!", "!\"", "+", "\"", "#=", "KqtG", "!", "$:", "hW", "!", "!!", "!'", "=", "KqtH", "!", "$:", "i", "[", "!!", "!!", "'=", "KqtH", "!", "$:", "ih", "!", "!!", "!'", "=", "KqtH", "!", "$:", "it", "!", "!!", "!'", "=", "KqtH", "!", "$:", "kO", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "$>", "*", "B", "!", "!!", "!'", "=", "KqtH", "!", "$>", "hD", "!", "!!", "!+", "=", "J", "^", "x0", "!", "$?", "lW", "!", "!!", "!'", "=", "KqtH", "!", "$?", "ll", "!", "!!", "!'", "=", "KqtH", "!", "$?", "lm", "!", "!!", "!\"", "+", "\"", "%=", "KqtH", "!", "$?", "mi", "!", "!!", "!'", "=", "KqtH", "!", "$?", "mx", "!", "!!", "!'", "=", "KqtH", "!", "$", "D7", "]", "!!", "!!", "#=", "J_", "#", "p", "!", "$", "D", "@", "T", "!", "!!", "!#", "=", "J_", "#", "p", "!", "$", "V", "<", "g", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "\"", "bh", "=", "\\\"", "\"", "+", "longValue", "+", "\"", "\\\"", ";\"", ");", "assertEquals", "(", "1", ",", "cookies", ".", "size", "(", "))", ";", "Cookie", "c", "=", "cookies", ".", "iterator", "(", ").", "next", "(", ");", "assertEquals", "(", "\"", "bh", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "longValue", ",", "c", ".", "value", "(", "))", ";", "}", "@", "Test", "public", "void", "testDecodingOldRFC2965Cookies", "(", ")", "{", "String", "source", "=", "\"", "$", "Version", "=", "\\\"", "1", "\\", "\";", "\"", "+", "\"", "Part_Number1", "=", "\\\"", "Riding_Rocket_0023", "\\", "\";", "$", "Path", "=", "\\\"", "/", "acme", "/", "ammo", "\\", "\";", "\"", "+", "\"", "Part_Number2", "=", "\\\"", "Rocket_Launcher_0001", "\\", "\";", "$", "Path", "=", "\\\"", "/", "acme", "\\", "\"\"", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "source", ")", ";", "Iterator", "<", "Cookie", ">", "it", "=", "cookies", ".", "iterator", "(", ");", "Cookie", "c", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "Part_Number1", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "Riding_Rocket_0023", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "Part_Number2", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "Rocket_Launcher_0001", "\"", ",", "c", ".", "value", "(", "))", ";", "assertFalse", "(", "it", ".", "hasNext", "(", "))", ";", "}", "}", "@", "@", "-", "13", ",", "7", "+", "13", ",", "7", "@", "@", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "import", "org", ".", "junit", ".", "Test", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "c1", ")", ";", "sources", ".", "add", "(", "\"", "c", "=", "\\\"", "\\\\", "\\\"", "1", "\\", "\\\\", "\"", "2", "\\", "\\\\", "\"\\", "\",", "\")", ";", "sources", ".", "add", "(", "\"", "d", "=", "\\\"", "1", "\\", "\\\\", "\"", "2", "\\", "\\\\", "\"", "3", "\\", "\",", "\")", ";", "sources", ".", "add", "(", "\"", "e", "=", "\\\"", "\\\\", "\\\"", "\\\\", "\\\"", "\\\"", ",\"", ");", "sources", ".", "add", "(", "\"", "f", "=", "\\\"", "1", "\\", "\\\\", "\"\\", "\\\\", "\"", "2", "\\", "\",", "\")", ";", "sources", ".", "add", "(", "\"", "g", "=", "\\\"", "\\\\", "\\\\", "\\\"", ",\"", ");", "sources", ".", "add", "(", "\"", "h", "=", "\\\"", "';", ",\\", "\\", "x", "\\", "\"\"", ");", "cookies", ".", "add", "(", "ClientCookieDecoder", ".", "decode", "(", "source", ")", ");", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "c", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\"", "1", "\\", "\"", "2", "\\", "\"\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "d", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "1", "\\", "\"", "2", "\\", "\"", "3", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "e", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\"\\", "\"\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "f", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "1", "\\", "\"\\", "\"", "2", "\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "g", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"\\", "\\\"", ",", "c", ".", "value", "(", "))", ";", "c", "=", "it", ".", "next", "(", ");", "assertEquals", "(", "\"", "h", "\"", ",", "c", ".", "name", "(", "))", ";", "assertEquals", "(", "\"'", ";,", "\\\\", "x", "\"", ",", "c", ".", "value", "(", "))", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "source", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "source", ")", ";", "public", "void", "testDecodingValueWithComma", "(", ")", "{", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "source", ")", ";", "assertEquals", "(", "\"", "timeZoneName", "=", "(", "GMT", "+", "04", ":", "00", ")", "Moscow", ",", "St", ".", "Petersburg", ",", "Volgograd", "&", "promocode", "=", "&", "region", "=", "BE", "\"", ",", "cookie", ".", "value", "(", "))", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "src", ")", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "src", ")", ";", "public", "void", "testDecodingValuesWithCommasAndEquals", "(", ")", "{", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "src", ")", ";", "assertEquals", "(", "\"", "A", "\"", ",", "cookie", ".", "name", "(", "))", ";", "assertEquals", "(", "\"", "v", "=", "1", "&", "lg", "=", "en", "-", "US", ",", "it", "-", "IT", ",", "it", "&", "intl", "=", "it", "&", "np", "=", "1", "\"", ",", "cookie", ".", "value", "(", "))", ";", "String", "longValue", "=", "\"", "b", "!", "!!", "$", "Q", "!", "!$", "ha", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!%", "#", "4", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "2", "!", "d", "!", "!!", "!#", "=", "IvZB", "!", "!", "2", ",", "F", "!", "!!", "!'", "=", "KqtH", "!", "!", "2", "-", "9", "!", "!!", "!\"", "+", "\"", "'=", "IvZM", "!", "!", "3f", ":", "!!", "!!", "$=", "HbQW", "!", "!", "3g", "'", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3g", "-", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3g1", "!", "!!", "!$", "=", "HbQW", "!", "!", "3g2", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3g5", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3g9", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gT", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gX", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3gY", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3gh", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gj", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gr", "!", "!!", "!$", "=", "HbQW", "!", "!", "3gx", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3h", "!", "!!", "!!", "\"", "+", "\"", "$=", "HbQW", "!", "!", "3h", "$", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3h", "'", "!!", "!!", "$=", "HbQW", "!", "!", "3h", ",", "!!", "!!", "$=", "HbQW", "!", "!", "3h0", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3h1", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3h2", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h4", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h7", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h8", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3h", ":", "!!", "!!", "\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3h", "@", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3hB", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hC", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hL", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hQ", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3hS", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hU", "!", "!!", "!$", "=", "HbQW", "!", "!", "3h", "[", "!!", "!!", "$=", "HbQW", "!", "!", "3h", "^", "!!", "!!", "$=", "HbQW", "!", "!", "3hd", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3he", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hf", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hg", "!", "!!", "!$", "=", "HbQW", "!", "!", "3hh", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3hi", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3hv", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i", "/", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3i2", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3i3", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3i4", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3i7", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i8", "!", "!!", "!$", "=", "HbQW", "!", "!", "3i9", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3i", "=", "!!", "!!", "#=", "J", "^", "wI", "!", "!", "3i", ">", "!!", "!!", "\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3iD", "!", "!!", "!$", "=", "HbQW", "!", "!", "3iF", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3iH", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iM", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iS", "!", "!!", "!\"", "+", "\"", "#=", "J", "^", "wI", "!", "!", "3iU", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3iZ", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3i", "]", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "3ig", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ij", "!", "!!", "!\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3ik", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3il", "!", "!!", "!$", "=", "HbQW", "!", "!", "3in", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ip", "!", "!!", "!$", "=", "HbQW", "!", "!", "3iq", "!", "!!", "!\"", "+", "\"", "$=", "HbQW", "!", "!", "3it", "!", "!!", "!%", "=", "J", "^", "wI", "!", "!", "3ix", "!", "!!", "!#", "=", "J", "^", "wI", "!", "!", "3j", "!", "!!", "!!", "$=", "HbQW", "!", "!", "3j", "%", "!!", "!!", "$=", "HbQW", "!", "!", "3j", "'", "!!", "!!", "\"", "+", "\"", "%=", "J", "^", "wI", "!", "!", "3j", "(", "!!", "!!", "%=", "J", "^", "wI", "!", "!", "9mJ", "!", "!!", "!'", "=", "KqtH", "!", "!=", "SE", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!?", "VS", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "Zw", "`", "!!", "!!", "\"", "+", "\"", "%=", "KqtH", "!", "!", "j", "+", "C", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", "+", "M", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", "+", "a", "!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "j", ",", ".!", "!<", "NC", "=", "MN", "(", "F", "!", "!", "n", ">", "M", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "!", "s1X", "!", "!!", "!$", "=", "MMyc", "!", "!", "s1_", "!", "!!", "!#", "=", "MN", "#", "O", "!", "!", "ypn", "!", "!!", "!'", "=", "KqtH", "!", "!", "ypr", "!", "!!", "!'", "=", "KqtH", "!", "#%", "h", "!", "!!", "!!", "\"", "+", "\"", "%=", "KqtH", "!", "#%", "o", "!", "!!", "!!", "'=", "KqtH", "!", "#)", "H6", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#*", "%'", "!!", "!!", "%=", "KqtH", "!", "#+", "k", "(", "!!", "!!", "'=", "KqtH", "!", "#-", "E", "!", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "1", ")", "w", "!", "!!", "!'", "=", "KqtH", "!", "#", "1", ")", "y", "!", "!!", "!'", "=", "KqtH", "!", "#", "1", "*", "M", "!", "!!", "!#", "=", "KqtH", "!", "#", "1", "*", "p", "!", "!!", "!'", "=", "KqtH", "!", "#", "14Q", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "14S", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16I", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16N", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16X", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "16k", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "17", "@", "!!", "<", "NC", "=", "MN", "(", "F", "!", "#", "17A", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "1Cq", "!", "!!", "!'", "=", "KqtH", "!", "#", "7", ")", ",!", "!!", "!#", "=", "KqtH", "!", "#", "7", ")", "b", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "7Ww", "!", "!!", "!'", "=", "KqtH", "!", "#?", "cQ", "!", "!!", "!'", "=", "KqtH", "!", "#", "His", "!", "!!", "!'", "=", "KqtH", "!", "#", "Jrh", "!", "!!", "!'", "=", "KqtH", "!", "#", "O", "@", "M", "!", "!<", "N", "\"", "+", "\"", "C", "=", "MN", "(", "F", "!", "#", "O", "@", "O", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "OC6", "!", "!<", "NC", "=", "MN", "(", "F", "!", "#", "Os", ".", "!!", "!!", "#=", "KqtH", "!", "#", "YOW", "!", "!!", "!#", "=", "H", "/", "Li", "!", "#", "Zat", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "ZbI", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zbc", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zbs", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zby", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zce", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "Zdc", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zea", "!", "!!", "!'", "=", "KqtH", "!", "#", "ZhI", "!", "!!", "!#", "=", "KqtH", "!", "#", "ZiD", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zis", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "Zj0", "!", "!!", "!#", "=", "KqtH", "!", "#", "Zj1", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zj", "[", "!!", "!!", "'=", "KqtH", "!", "#", "Zj", "]", "!!", "!!", "'=", "KqtH", "!", "#", "Zj", "^", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "Zjb", "!", "!!", "!'", "=", "KqtH", "!", "#", "Zk", "!", "!!", "!!", "'=", "KqtH", "!", "#", "Zk6", "!", "!!", "!#", "=", "KqtH", "!", "#", "Zk9", "!", "!!", "!%", "=", "KqtH", "!", "#", "Zk", "<", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#", "Zl", ">", "!!", "!!", "'=", "KqtH", "!", "#]", "9R", "!", "!!", "!$", "=", "H", "/", "Lt", "!", "#]", "I6", "!", "!!", "!#", "=", "KqtH", "!", "#]", "Z", "#", "!!", "!!", "%=", "KqtH", "!", "#^", "*", "N", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#^", ":", "m", "!", "!!", "!#", "=", "KqtH", "!", "#", "_", "*", "_", "!", "!!", "!%", "=", "J", "^", "wI", "!", "#`", "-", "7", "!", "!!", "!#", "=", "KqtH", "!", "#`", "T", ">", "!!", "!!", "'=", "KqtH", "!", "#`", "T", "?", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#`", "TA", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TB", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TG", "!", "!!", "!'", "=", "KqtH", "!", "#`", "TP", "!", "!!", "!#", "=", "KqtH", "!", "#`", "U", ",", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "#`", "U", "/", "!!", "!!", "'=", "KqtH", "!", "#`", "U0", "!", "!!", "!#", "=", "KqtH", "!", "#`", "U9", "!", "!!", "!'", "=", "KqtH", "!", "#", "aEQ", "!", "!!", "!%", "=", "KqtH", "!", "#", "b", "<", ")!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "c9", "-", "!!", "!!", "%=", "KqtH", "!", "#", "dxC", "!", "!!", "!%", "=", "KqtH", "!", "#", "dxE", "!", "!!", "!%", "=", "KqtH", "!", "#", "ev", "$", "!!", "!!", "'=", "KqtH", "!", "#", "fBi", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "fBj", "!", "!!", "!'", "=", "KqtH", "!", "#", "fG", ")", "!!", "!!", "'=", "KqtH", "!", "#", "fG", "+", "!!", "!!", "'=", "KqtH", "!", "#", "g", "<", "d", "!", "!!", "!'", "=", "KqtH", "!", "#", "g", "<", "e", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "#", "g", "=", "J", "!", "!!", "!'", "=", "KqtH", "!", "#", "gat", "!", "!!", "!#", "=", "KqtH", "!", "#", "s", "`", "D", "!", "!!", "!#", "=", "J_", "#", "p", "!", "#", "sg", "?", "!!", "!!", "#=", "J_", "#", "p", "!", "#", "t", "<", "a", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "#", "t", "<", "c", "!", "!!", "!#", "=", "KqtH", "!", "#", "trY", "!", "!!", "!$", "=", "JiYj", "!", "#", "vA", "$", "!!", "!!", "'=", "KqtH", "!", "#", "xs_", "!", "!!", "!'", "=", "KqtH", "!", "$$", "rO", "!", "!!", "!\"", "+", "\"", "#=", "KqtH", "!", "$$", "rP", "!", "!!", "!#", "=", "KqtH", "!", "$(", "!%", "!!", "!!", "'=", "KqtH", "!", "$)", "]", "o", "!", "!!", "!%", "=", "KqtH", "!", "$,", "@)", "!!", "!!", "'=", "KqtH", "!", "$,", "k", "]", "!!", "!!", "\"", "+", "\"", "'=", "KqtH", "!", "$", "1", "]", "+!", "!!", "!%", "=", "KqtH", "!", "$", "3IO", "!", "!!", "!%", "=", "KqtH", "!", "$", "3J", "#", "!!", "!!", "'=", "KqtH", "!", "$", "3J", ".", "!!", "!!", "'=", "KqtH", "!", "$", "3J", ":", "!!", "!!", "\"", "+", "\"", "#=", "KqtH", "!", "$", "3JH", "!", "!!", "!#", "=", "KqtH", "!", "$", "3JI", "!", "!!", "!#", "=", "KqtH", "!", "$", "3JK", "!", "!!", "!%", "=", "KqtH", "!", "$", "3JL", "!", "!!", "!'", "=", "KqtH", "!", "$", "3JS", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "$", "8", "+", "M", "!", "!!", "!#", "=", "KqtH", "!", "$", "99d", "!", "!!", "!%", "=", "KqtH", "!", "$:", "Lw", "!", "!!", "!#", "=", "LK", "+", "x", "!", "$:", "N", "@", "!!", "!!", "#=", "KqtG", "!", "$:", "NC", "!", "!!", "!\"", "+", "\"", "#=", "KqtG", "!", "$:", "hW", "!", "!!", "!'", "=", "KqtH", "!", "$:", "i", "[", "!!", "!!", "'=", "KqtH", "!", "$:", "ih", "!", "!!", "!'", "=", "KqtH", "!", "$:", "it", "!", "!!", "!'", "=", "KqtH", "!", "$:", "kO", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "!", "$>", "*", "B", "!", "!!", "!'", "=", "KqtH", "!", "$>", "hD", "!", "!!", "!+", "=", "J", "^", "x0", "!", "$?", "lW", "!", "!!", "!'", "=", "KqtH", "!", "$?", "ll", "!", "!!", "!'", "=", "KqtH", "!", "$?", "lm", "!", "!!", "!\"", "+", "\"", "%=", "KqtH", "!", "$?", "mi", "!", "!!", "!'", "=", "KqtH", "!", "$?", "mx", "!", "!!", "!'", "=", "KqtH", "!", "$", "D7", "]", "!!", "!!", "#=", "J_", "#", "p", "!", "$", "D", "@", "T", "!", "!!", "!#", "=", "J_", "#", "p", "!", "$", "V", "<", "g", "!", "!!", "!\"", "+", "\"", "'=", "KqtH", "\"", ";", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "\"", "bh", "=", "\\\"", "\"", "+", "longValue", "Cookie", "cookie", "=", "ClientCookieDecoder", ".", "decode", "(", "emptyDomain", ")", ";", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "cookie", ".", "setVersion", "(", "1", ")", ";", "cookie", ".", "setComment", "(", "\"", "this", "is", "a", "Comment", "\"", ");", "cookie", ".", "setCommentUrl", "(", "\"", "http", ":", "//", "aurl", ".", "com", "\"", ");", "cookie", ".", "setDiscard", "(", "true", ")", ";", "cookie", ".", "setPorts", "(", "80", ",", "8080", ")", ";", "cookie2", ".", "setVersion", "(", "1", ")", ";", "cookie2", ".", "setComment", "(", "\"", "this", "is", "another", "Comment", "\"", ");", "cookie2", ".", "setCommentUrl", "(", "\"", "http", ":", "//", "anotherurl", ".", "com", "\"", ");", "cookie2", ".", "setDiscard", "(", "false", ")", ";", "cookie3", ".", "setVersion", "(", "1", ")", ";", "String", "encodedCookie", "=", "ClientCookieEncoder", ".", "encode", "(", "cookie", ",", "cookie2", ",", "cookie3", ")", ";", "package", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ";", "String", "encodedCookie", "=", "ServerCookieEncoder", ".", "encode", "(", "cookie", ")", ";", "String", "encodedCookie1", "=", "ClientCookieEncoder", ".", "encode", "(", ");", "List", "<", "String", ">", "encodedCookie2", "=", "ServerCookieEncoder", ".", "encode", "(", ");", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ClientCookieEncoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "DefaultCookie", ";", "ClientCookieEncoder", ".", "encode", "(", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "Cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ServerCookieDecoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ServerCookieEncoder", ";", "Set", "<", "Cookie", ">", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "cookieString", ")", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "encode", "(", "cookie", ")", ");", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "encode", "(", "\"", "key1", "\"", ",", "\"", "value1", "\"", "))", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "encode", "(", "\"", "key2", "\"", ",", "\"", "value2", "\"", "))", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ClientCookieEncoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "DefaultCookie", ";", "HttpHeaderNames", ".", "COOKIE", ",", "ClientCookieEncoder", ".", "encode", "(", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "Cookie", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ServerCookieDecoder", ";", "import", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "ServerCookieEncoder", ";", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "value", ")", ";", "cookies", "=", "ServerCookieDecoder", ".", "decode", "(", "value", ")", ";", "response", ".", "headers", "(", ").", "add", "(", "HttpHeaderNames", ".", "SET_COOKIE", ",", "ServerCookieEncoder", ".", "encode", "(", "cookie", ")", ");"], "docstring_tokens": ["httponly", "bypass"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "len", "=", "=", "0", ")", "goto", "out_invalid_option", ";</s>"], "docstring_tokens": ["integer", "underflow"]}
{"contents": ["empty"], "code_tokens": ["uint64_t", "pobject", "=", "0", ";", "uint64_t", "poffset_table", "=", "(", "uint64_t", ")", "bplist", "-", ">", "offset_table", ";", "pobject", "=", "(", "uint64_t", ")", "*", "object", ";", "if", "(", "pobject", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "<", "pobject", "|", "|", "pobject", "+", "size", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "<", "pobject", "|", "|", "pobject", "+", "size", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "*", "2", "<", "pobject", "|", "|", "pobject", "+", "size", "*", "2", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "<", "pobject", "|", "|", "pobject", "+", "size", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "+", "1", ">", "poffset_table", ")", "{", "if", "(", "pobject", "+", "size", "<", "pobject", "|", "|", "pobject", "+", "size", ">", "poffset_table", ")", "{", "if", "(", "(", "uint64_t", ")", "offset_table", "+", "num_objects", "*", "offset_size", ">", "(", "uint64_t", ")", "end_data", ")", "{</s>if", "(", "*", "object", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "(", "uint64_t", ")", "(", "1", "<", "<", "size", ")", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "<", "*", "object", "|", "|", "*", "object", "+", "size", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "<", "*", "object", "|", "|", "*", "object", "+", "size", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "*", "2", "<", "*", "object", "|", "|", "*", "object", "+", "size", "*", "2", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "<", "*", "object", "|", "|", "*", "object", "+", "size", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "+", "1", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "*", "object", "+", "size", "<", "*", "object", "|", "|", "*", "object", "+", "size", ">", "bplist", "-", ">", "offset_table", ")", "{", "if", "(", "offset_table", "+", "num_objects", "*", "offset_size", ">", "end_data", ")", "{"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["2017", "-", "07", "-", "01", "7", ".", "0", ".", "6", "-", "5", "Cristy", "<", "quetzlzacatenango", "@", "image", ".", "..", ">", "*", "Fixed", "numerous", "memory", "leaks", "(", "reference", "https", ":", "//", "github", ".", "com", "/", "ImageMagick", "/", "ImageMagick", "/", "issues", ")", ".", "/", "*", "Free", "resources", ".", "*", "/", "*", "msl_info", ".", "image_info", "=", "DestroyImageInfo", "(", "*", "msl_info", ".", "image_info", ")", ";", "msl_info", ".", "image_info", "=", "(", "ImageInfo", "*", "*)", "RelinquishMagickMemory", "(", "msl_info", ".", "image_info", ")", ";", "*", "msl_info", ".", "draw_info", "=", "DestroyDrawInfo", "(", "*", "msl_info", ".", "draw_info", ")", ";", "msl_info", ".", "draw_info", "=", "(", "DrawInfo", "*", "*)", "RelinquishMagickMemory", "(", "msl_info", ".", "draw_info", ")", ";", "msl_info", ".", "image", "=", "(", "Image", "*", "*)", "RelinquishMagickMemory", "(", "msl_info", ".", "image", ")", ";", "*", "msl_info", ".", "attributes", "=", "DestroyImage", "(", "*", "msl_info", ".", "attributes", ")", ";", "msl_info", ".", "attributes", "=", "(", "Image", "*", "*)", "RelinquishMagickMemory", "(", "msl_info", ".", "attributes", ")", ";", "msl_info", ".", "group_info", "=", "(", "MSLGroupInfo", "*", ")", "RelinquishMagickMemory", "(", "msl_info", ".", "group_info", ")", ";</s>"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["import", "javax", ".", "xml", ".", "stream", ".", "XMLStreamReader", ";", "import", "org", ".", "apache", ".", "cxf", ".", "staxutils", ".", "StaxUtils", ";", "XMLStreamReader", "reader", "=", "StaxUtils", ".", "createXMLStreamReader", "(", "is", ")", ";", "Document", "<", "T", ">", "doc", "=", "parser", ".", "parse", "(", "reader", ")", ";", "@", "Test", "public", "void", "testReadEntryNoBuilders2", "(", ")", "throws", "Exception", "{", "final", "String", "entry", "=", "\"", "<!", "DOCTYPE", "entry", "SYSTEM", "\\", "\"", "entry", ":", "//", "entry", "\\", "\">", "<", "entry", "xmlns", "=", "\\\"", "http", ":", "//", "www", ".", "w3", ".", "org", "/", "2005", "/", "Atom", "\\", "\">", "\"", "+", "\"", "<", "title", "type", "=", "\\\"", "text", "\\", "\">", "a", "<", "/", "title", ">", "\"", "+", "\"", "<", "content", "type", "=", "\\\"", "application", "/", "xml", "\\", "\">", "\"", "+", "\"", "<", "book", "xmlns", "=", "\\\"", "\\\"", ">\"", "+", "\"", "<", "name", ">", "a", "<", "/", "name", ">", "\"", "+", "\"", "</", "book", ">", "\"", "+", "\"", "</", "content", ">", "\"", "+", "\"", "</", "entry", ">", "\";", "AtomPojoProvider", "provider", "=", "new", "AtomPojoProvider", "(", ");", "ByteArrayInputStream", "bis", "=", "new", "ByteArrayInputStream", "(", "entry", ".", "getBytes", "(", "))", ";", "MediaType", "mt", "=", "MediaType", ".", "valueOf", "(", "\"", "application", "/", "atom", "+", "xml", ";", "type", "=", "entry", "\"", ");", "@", "SuppressWarnings", "(", "{\"", "unchecked", "\"", ",", "\"", "rawtypes", "\"", "}", ")", "Book", "book", "=", "(", "Book", ")", "provider", ".", "readFrom", "(", "(", "Class", ")", "Book", ".", "class", ",", "Book", ".", "class", ",", "new", "Annotation", "[", "]{", "},", "mt", ",", "null", ",", "bis", ")", ";", "assertEquals", "(", "\"", "a", "\"", ",", "book", ".", "getName", "(", "))", ";", "}", "@", "Test", "public", "void", "testReadFeedWithoutBuilders2", "(", ")", "throws", "Exception", "{", "AtomPojoProvider", "provider", "=", "new", "AtomPojoProvider", "(", ");", "final", "String", "feed", "=", "\"", "<!", "DOCTYPE", "feed", "SYSTEM", "\\", "\"", "feed", ":", "//", "feed", "\\", "\">", "<", "feed", "xmlns", "=", "\\\"", "http", ":", "//", "www", ".", "w3", ".", "org", "/", "2005", "/", "Atom", "\\", "\">", "\"", "+", "\"", "<", "entry", ">", "<", "content", "type", "=", "\\\"", "application", "/", "xml", "\\", "\">", "<", "book", "xmlns", "=", "\\\"", "\\\"", "><", "name", ">", "a", "<", "/", "name", ">", "</", "book", ">", "</", "content", ">", "</", "entry", ">", "\"", "+", "\"", "<", "entry", ">", "<", "content", "type", "=", "\\\"", "application", "/", "xml", "\\", "\">", "<", "book", "xmlns", "=", "\\\"", "\\\"", "><", "name", ">", "b", "<", "/", "name", ">", "</", "book", ">", "</", "content", ">", "</", "entry", ">", "\"", "+", "\"", "</", "feed", ">", "\";", "MediaType", "mt", "=", "MediaType", ".", "valueOf", "(", "\"", "application", "/", "atom", "+", "xml", ";", "type", "=", "feed", "\"", ");", "ByteArrayInputStream", "bis", "=", "new", "ByteArrayInputStream", "(", "feed", ".", "getBytes", "(", "))", ";", "@", "SuppressWarnings", "(", "{\"", "unchecked", "\"", ",", "\"", "rawtypes", "\"", "}", ")", "Books", "books2", "=", "(", "Books", ")", "provider", ".", "readFrom", "(", "(", "Class", ")", "Books", ".", "class", ",", "Books", ".", "class", ",", "new", "Annotation", "[", "]{", "},", "mt", ",", "null", ",", "bis", ")", ";", "List", "<", "Book", ">", "list", "=", "books2", ".", "getBooks", "(", ");", "assertEquals", "(", "2", ",", "list", ".", "size", "(", "))", ";", "assertTrue", "(", "\"", "a", "\"", ".", "equals", "(", "list", ".", "get", "(", "0", ")", ".", "getName", "(", "))", "|", "|", "\"", "a", "\"", ".", "equals", "(", "list", ".", "get", "(", "1", ")", ".", "getName", "(", "))", ");", "assertTrue", "(", "\"", "b", "\"", ".", "equals", "(", "list", ".", "get", "(", "0", ")", ".", "getName", "(", "))", "|", "|", "\"", "b", "\"", ".", "equals", "(", "list", ".", "get", "(", "1", ")", ".", "getName", "(", "))", ");", "}</s>options", ".", "setResolveEntities", "(", "false", ")", ";", "Document", "<", "T", ">", "doc", "=", "parser", ".", "parse", "(", "is", ")", ";"], "docstring_tokens": ["xml", "external", "entity", "(xxe", ")"]}
{"contents": ["empty"], "code_tokens": ["-", "-", "TEST", "-", "-", "Bug", "#", "70172", "-", "Use", "After", "Free", "Vulnerability", "in", "unserialize", "(", ")", "-", "-", "FILE", "-", "-", "<", "?", "php", "class", "obj", "implements", "Serializable", "{", "var", "$", "data", ";", "function", "serialize", "(", ")", "{", "return", "serialize", "(", "$", "this", "-", ">", "data", ")", ";", "}", "function", "unserialize", "(", "$", "data", ")", "{", "$", "this", "-", ">", "data", "=", "unserialize", "(", "$", "data", ")", ";", "}", "}", "$", "fakezval", "=", "ptr2str", "(", "1122334455", ")", ";", "$", "fakezval", ".", "=", "ptr2str", "(", "0", ")", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\\", "x00", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x01", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\"", ";", "$", "inner", "=", "'", "r", ":", "2", ";", "';", "$", "exploit", "=", "'", "a", ":", "2", ":", "{", "i", ":", "0", ";", "i", ":", "1", ";", "i", ":", "1", ";", "C", ":", "3", ":", "\"", "obj", "\"", ":'", ".", "strlen", "(", "$", "inner", ")", ".'", ":{", "'.", "$", "inner", ".", "'}", "}'", ";", "$", "data", "=", "unserialize", "(", "$", "exploit", ")", ";", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "5", ";", "$", "i", "+", "+)", "{", "$", "v", "[", "$", "i", "]", "=", "$", "fakezval", ".", "$", "i", ";", "}", "var_dump", "(", "$", "data", ")", ";", "function", "ptr2str", "(", "$", "ptr", ")", "{", "$", "out", "=", "'", "';", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "8", ";", "$", "i", "+", "+)", "{", "$", "out", ".", "=", "chr", "(", "$", "ptr", "&", "0xff", ")", ";", "$", "ptr", ">", ">=", "8", ";", "}", "return", "$", "out", ";", "}", "?", ">", "-", "-", "EXPECTF", "-", "-", "array", "(", "2", ")", "{", "[", "0", "]", "=>", "int", "(", "1", ")", "[", "1", "]", "=>", "object", "(", "obj", ")", "#%", "d", "(", "1", ")", "{", "[", "\"", "data", "\"", "]=", ">", "int", "(", "1", ")", "}", "}", "int", "oldlevel", ";", "zval", "*", "old_rval", "=", "return_value", ";", "if", "(", "return_value", "!", "=", "old_rval", ")", "{", "/", "*", "*", "Terrible", "hack", "due", "to", "the", "fact", "that", "executor", "passes", "us", "zval", "*", ",", "*", "but", "unserialize", "with", "r", "/", "R", "wants", "to", "replace", "it", "with", "another", "zval", "*", "*", "/", "zval_dtor", "(", "old_rval", ")", ";", "*", "old_rval", "=", "*", "return_value", ";", "zval_copy_ctor", "(", "old_rval", ")", ";", "var_push_dtor_no_addref", "(", "&", "var_hash", ",", "&", "return_value", ")", ";", "var_push_dtor_no_addref", "(", "&", "var_hash", ",", "&", "old_rval", ")", ";", "}", "else", "{", "var_push_dtor", "(", "&", "var_hash", ",", "&", "return_value", ")", ";", "}", "/", "*", "Generated", "by", "re2c", "0", ".", "13", ".", "7", ".", "5", "on", "Mon", "Aug", "31", "23", ":", "15", ":", "46", "2015", "*", "/", "+", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor", "(", "%", "p", ",", "%", "ld", ")", ":", "%", "d", "\\", "n", "\"", ",", "*", "rval", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ");", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor_no_addref", "(", "%", "p", ",", "%", "ld", ")", ":", "%", "d", "(", "%", "d", ")", "\\", "n", "\"", ",", "*", "rval", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ",", "Z_REFCOUNT_PP", "(", "rval", ")", ");", "#", "if", "VAR_ENTRIES_DBG", "fprintf", "(", "stderr", ",", "\"", "var_destroy", "dtor", "(", "%", "p", ",", "%", "ld", ")", "\\", "n", "\"", ",", "var_hash", "-", ">", "data", "[", "i", "]", ",", "Z_REFCOUNT_P", "(", "var_hash", "-", ">", "data", "[", "i", "]", "))", ";", "#", "endif", "#", "line", "250", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "491", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "845", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "553", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "839", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "602", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "692", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "if", "(", "!", "var_hash", ")", "return", "0", ";", "#", "line", "780", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "683", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "if", "(", "!", "var_hash", ")", "return", "0", ";", "#", "line", "814", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "662", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "if", "(", "!", "var_hash", ")", "return", "0", ";", "#", "line", "856", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "633", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "906", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "605", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "955", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "595", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1053", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "580", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1127", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "553", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1181", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "546", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1196", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "539", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1206", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "516", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1252", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "+", "+", "YYCURSOR", ";", "#", "line", "495", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "var_push_dtor_no_addref", "(", "var_hash", ",", "rval", ")", ";", "#", "line", "1296", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "847", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor", "(", "%", "p", ",", "%", "ld", ")", ":", "%", "d", "\\", "n", "\"", ",", "*", "rval", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ");", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor_no_addref", "(", "%", "p", ",", "%", "ld", ")", ":", "%", "d", "(", "%", "d", ")", "\\", "n", "\"", ",", "*", "rval", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ",", "Z_REFCOUNT_PP", "(", "rval", ")", ");", "#", "if", "VAR_ENTRIES_DBG", "fprintf", "(", "stderr", ",", "\"", "var_destroy", "dtor", "(", "%", "p", ",", "%", "ld", ")", "\\", "n", "\"", ",", "var_hash", "-", ">", "data", "[", "i", "]", ",", "Z_REFCOUNT_P", "(", "var_hash", "-", ">", "data", "[", "i", "]", "))", ";", "#", "endif", "var_push_dtor_no_addref", "(", "var_hash", ",", "rval", ")", ";", "if", "(", "!", "var_hash", ")", "return", "0", ";", "if", "(", "!", "var_hash", ")", "return", "0", ";", "if", "(", "!", "var_hash", ")", "return", "0", ";</s>/", "*", "Generated", "by", "re2c", "0", ".", "13", ".", "7", ".", "5", "on", "Sun", "Aug", "23", "19", ":", "50", ":", "03", "2015", "*", "/", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor", "(", "%", "ld", ")", ":", "%", "d", "\\", "n", "\"", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ");", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor_no_addref", "(", "%", "ld", ")", ":", "%", "d", "(", "%", "d", ")", "\\", "n", "\"", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ",", "Z_REFCOUNT_PP", "(", "rval", ")", ");", "#", "line", "247", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "488", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "839", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "550", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "833", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "599", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "687", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "776", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "679", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "809", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "659", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "850", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "630", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "900", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "602", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "949", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "592", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1047", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "577", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1121", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "550", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1175", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "543", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1190", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "536", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1200", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "513", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "#", "line", "1246", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "492", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "zval_ptr_dtor", "(", "rval", ")", ";", "#", "line", "1290", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "c", "\"", "#", "line", "841", "\"", "ext", "/", "standard", "/", "var_unserializer", ".", "re", "\"", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor", "(", "%", "ld", ")", ":", "%", "d", "\\", "n", "\"", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ");", "fprintf", "(", "stderr", ",", "\"", "var_push_dtor_no_addref", "(", "%", "ld", ")", ":", "%", "d", "(", "%", "d", ")", "\\", "n", "\"", ",", "var_hash", "?", "var_hash", "-", ">", "used_slots", ":", "-", "1L", ",", "Z_TYPE_PP", "(", "rval", ")", ",", "Z_REFCOUNT_PP", "(", "rval", ")", ");", "zval_ptr_dtor", "(", "rval", ")", ";"], "docstring_tokens": ["use-after-free", "error"]}
{"contents": ["empty"], "code_tokens": ["kfree", "(", "name", ")", ";</s>"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "WARN_ON_ONCE", "(", "!", "head", ")", ")</s>/", "*", "Keeps", "track", "of", "cpu", "being", "initialized", "/", "exited", "*", "/", "bool", "online", ";", "if", "(", "!", "head", ")", "{", "/", "*", "*", "We", "can", "race", "with", "cpu", "hotplug", "code", ".", "Do", "not", "*", "WARN", "if", "the", "cpu", "just", "got", "unplugged", ".", "*", "/", "WARN_ON_ONCE", "(", "swhash", "-", ">", "online", ")", ";", "}", "swhash", "-", ">", "online", "=", "true", ";", "struct", "swevent_htable", "*", "swhash", "=", "&", "per_cpu", "(", "swevent_htable", ",", "cpu", ")", ";", "mutex_lock", "(", "&", "swhash", "-", ">", "hlist_mutex", ")", ";", "swhash", "-", ">", "online", "=", "false", ";", "swevent_hlist_release", "(", "swhash", ")", ";", "mutex_unlock", "(", "&", "swhash", "-", ">", "hlist_mutex", ")", ";"], "docstring_tokens": ["data", "structure"]}
{"contents": ["empty"], "code_tokens": ["rc", "=", "cifs_init_dns_resolver", "(", ");", "cifs_exit_dns_resolver", "(", ");", "cifs_exit_dns_resolver", "(", ");", "#", "include", "<", "linux", "/", "keyctl", ".", "h", ">", "#", "include", "<", "linux", "/", "key", "-", "type", ".", "h", ">", "static", "const", "struct", "cred", "*", "dns_resolver_cache", ";", "const", "struct", "cred", "*", "saved_cred", ";", "saved_cred", "=", "override_creds", "(", "dns_resolver_cache", ")", ";", "revert_creds", "(", "saved_cred", ")", ";", "if", "(", "!(", "rkey", "-", ">", "perm", "&", "KEY_USR_VIEW", ")", ")", "{", "down_read", "(", "&", "rkey", "-", ">", "sem", ")", ";", "rkey", "-", ">", "perm", "|", "=", "KEY_USR_VIEW", ";", "up_read", "(", "&", "rkey", "-", ">", "sem", ")", ";", "}", "int", "__init", "cifs_init_dns_resolver", "(", "void", ")", "{", "struct", "cred", "*", "cred", ";", "struct", "key", "*", "keyring", ";", "int", "ret", ";", "printk", "(", "KERN_NOTICE", "\"", "Registering", "the", "%", "s", "key", "type", "\\", "n", "\"", ",", "key_type_dns_resolver", ".", "name", ")", ";", "/", "*", "create", "an", "override", "credential", "set", "with", "a", "special", "thread", "keyring", "in", "*", "which", "DNS", "requests", "are", "cached", "*", "*", "this", "is", "used", "to", "prevent", "malicious", "redirections", "from", "being", "installed", "*", "with", "add_key", "(", ").", "*", "/", "cred", "=", "prepare_kernel_cred", "(", "NULL", ")", ";", "if", "(", "!", "cred", ")", "return", "-", "ENOMEM", ";", "keyring", "=", "key_alloc", "(", "&", "key_type_keyring", ",", "\"", ".", "dns_resolver", "\"", ",", "0", ",", "0", ",", "cred", ",", "(", "KEY_POS_ALL", "&", "~", "KEY_POS_SETATTR", ")", "|", "KEY_USR_VIEW", "|", "KEY_USR_READ", ",", "KEY_ALLOC_NOT_IN_QUOTA", ")", ";", "if", "(", "IS_ERR", "(", "keyring", ")", ")", "{", "ret", "=", "PTR_ERR", "(", "keyring", ")", ";", "goto", "failed_put_cred", ";", "}", "ret", "=", "key_instantiate_and_link", "(", "keyring", ",", "NULL", ",", "0", ",", "NULL", ",", "NULL", ")", ";", "if", "(", "ret", "<", "0", ")", "goto", "failed_put_key", ";", "ret", "=", "register_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "if", "(", "ret", "<", "0", ")", "goto", "failed_put_key", ";", "/", "*", "instruct", "request_key", "(", ")", "to", "use", "this", "special", "keyring", "as", "a", "cache", "for", "*", "the", "results", "it", "looks", "up", "*", "/", "cred", "-", ">", "thread_keyring", "=", "keyring", ";", "cred", "-", ">", "jit_keyring", "=", "KEY_REQKEY_DEFL_THREAD_KEYRING", ";", "dns_resolver_cache", "=", "cred", ";", "return", "0", ";", "failed_put_key", ":", "key_put", "(", "keyring", ")", ";", "failed_put_cred", ":", "put_cred", "(", "cred", ")", ";", "return", "ret", ";", "}", "void", "__exit", "cifs_exit_dns_resolver", "(", "void", ")", "{", "key_revoke", "(", "dns_resolver_cache", "-", ">", "thread_keyring", ")", ";", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "put_cred", "(", "dns_resolver_cache", ")", ";", "printk", "(", "KERN_NOTICE", "\"", "Unregistered", "%", "s", "key", "type", "\\", "n", "\"", ",", "key_type_dns_resolver", ".", "name", ")", ";", "}", "@", "@", "-", "24", ",", "8", "+", "24", ",", "8", "@", "@", "extern", "int", "__init", "cifs_init_dns_resolver", "(", "void", ")", ";", "extern", "void", "__exit", "cifs_exit_dns_resolver", "(", "void", ")", ";</s>rc", "=", "register_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "#", "include", "<", "linux", "/", "key", "-", "type", ".", "h", ">", "extern", "struct", "key_type", "key_type_dns_resolver", ";"], "docstring_tokens": ["cache", "stuffing"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "num_clips", "<", "0", "|", "|", "num_clips", ">", "DRM_MODE_FB_DIRTY_MAX_CLIPS", ")", "{", "ret", "=", "-", "EINVAL", ";", "goto", "out_err1", ";", "}", "#", "define", "DRM_MODE_FB_DIRTY_MAX_CLIPS", "256</s>"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["while", "(", "result", ".", "indexOf", "(", "\"<", "script", ">", "\")", ">", "0", ")", "{", "}</s>if", "(", "result", ".", "indexOf", "(", "\"<", "script", ">", "\")", ">", "=", "0", ")", "{", "}"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["<", "groupId", ">", "org", ".", "tallison", "<", "/", "groupId", ">", "<", "version", ">", "1", ".", "9", ".", "41", ".", "2", "<", "/", "version", ">", "import", "org", ".", "apache", ".", "tika", ".", "config", ".", "Field", ";", "import", "org", ".", "mp4parser", ".", "Box", ";", "import", "org", ".", "mp4parser", ".", "Container", ";", "import", "org", ".", "mp4parser", ".", "IsoFile", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleAlbumBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleArtist2Box", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleArtistBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleCommentBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleCompilationBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleDiskNumberBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleEncoderBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleGPSCoordinatesBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleGenreBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleItemListBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleNameBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleRecordingYear2Box", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleTrackAuthorBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleTrackNumberBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "Utf8AppleDataBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "FileTypeBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "MetaBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "MovieBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "MovieHeaderBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "SampleDescriptionBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "SampleTableBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "TrackBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "TrackHeaderBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "iso14496", ".", "part12", ".", "UserDataBox", ";", "import", "org", ".", "mp4parser", ".", "boxes", ".", "sampleentry", ".", "AudioSampleEntry", ";", "try", "(", "IsoFile", "isoFile", "=", "new", "IsoFile", "(", "tstream", ".", "getFile", "(", "))", ")", "{", "tmp", ".", "addResource", "(", "isoFile", ")", ";", "/", "/", "Grab", "the", "file", "type", "box", "FileTypeBox", "fileType", "=", "getOrNull", "(", "isoFile", ",", "FileTypeBox", ".", "class", ")", ";", "if", "(", "fileType", "!", "=", "null", ")", "{", "/", "/", "Identify", "the", "type", "MediaType", "type", "=", "MediaType", ".", "application", "(", "\"", "mp4", "\"", ");", "for", "(", "Map", ".", "Entry", "<", "MediaType", ",", "List", "<", "String", ">", ">", "e", ":", "typesMap", ".", "entrySet", "(", "))", "{", "if", "(", "e", ".", "getValue", "(", ").", "contains", "(", "fileType", ".", "getMajorBrand", "(", "))", ")", "{", "type", "=", "e", ".", "getKey", "(", ");", "break", ";", "}", "metadata", ".", "set", "(", "Metadata", ".", "CONTENT_TYPE", ",", "type", ".", "toString", "(", "))", ";", "if", "(", "type", ".", "getType", "(", ").", "equals", "(", "\"", "audio", "\"", "))", "{", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_COMPRESSOR", ",", "fileType", ".", "getMajorBrand", "(", ").", "trim", "(", "))", ";", "}", "else", "{", "/", "/", "Some", "older", "QuickTime", "files", "lack", "the", "FileType", "metadata", ".", "set", "(", "Metadata", ".", "CONTENT_TYPE", ",", "\"", "video", "/", "quicktime", "\"", ");", "}", "/", "/", "Get", "the", "main", "MOOV", "box", "MovieBox", "moov", "=", "getOrNull", "(", "isoFile", ",", "MovieBox", ".", "class", ")", ";", "if", "(", "moov", "=", "=", "null", ")", "{", "/", "/", "Bail", "out", "return", ";", "}", "XHTMLContentHandler", "xhtml", "=", "new", "XHTMLContentHandler", "(", "handler", ",", "metadata", ")", ";", "xhtml", ".", "startDocument", "(", ");", "handleMovieHeaderBox", "(", "moov", ",", "metadata", ",", "xhtml", ")", ";", "handleTrackBoxes", "(", "moov", ",", "metadata", ",", "xhtml", ")", ";", "/", "/", "Get", "metadata", "from", "the", "User", "Data", "Box", "UserDataBox", "userData", "=", "getOrNull", "(", "moov", ",", "UserDataBox", ".", "class", ")", ";", "if", "(", "userData", "!", "=", "null", ")", "{", "extractGPS", "(", "userData", ",", "metadata", ")", ";", "MetaBox", "metaBox", "=", "getOrNull", "(", "userData", ",", "MetaBox", ".", "class", ")", ";", "/", "/", "Check", "for", "iTunes", "Metadata", "/", "/", "See", "http", ":", "//", "atomicparsley", ".", "sourceforge", ".", "net", "/", "mpeg", "-", "4files", ".", "html", "and", "/", "/", "http", ":", "//", "code", ".", "google", ".", "com", "/", "p", "/", "mp4v2", "/", "wiki", "/", "iTunesMetadata", "for", "more", "on", "these", "handleApple", "(", "metaBox", ",", "metadata", ",", "xhtml", ")", ";", "/", "/", "TODO", "Check", "for", "other", "kinds", "too", "}", "/", "/", "All", "done", "xhtml", ".", "endDocument", "(", ");", "}", "finally", "{", "tmp", ".", "dispose", "(", ");", "}", "}", "private", "void", "handleTrackBoxes", "(", "MovieBox", "moov", ",", "Metadata", "metadata", ",", "XHTMLContentHandler", "xhtml", ")", "{", "/", "/", "Get", "some", "more", "information", "from", "the", "track", "header", "/", "/", "TODO", "Decide", "how", "to", "handle", "multiple", "tracks", "List", "<", "TrackBox", ">", "tb", "=", "moov", ".", "getBoxes", "(", "TrackBox", ".", "class", ")", ";", "if", "(", "tb", "=", "=", "null", "|", "|", "tb", ".", "size", "(", ")", "=", "=", "0", ")", "{", "return", ";", "}", "TrackBox", "track", "=", "tb", ".", "get", "(", "0", ")", ";", "TrackHeaderBox", "header", "=", "track", ".", "getTrackHeaderBox", "(", ");", "/", "/", "Get", "the", "creation", "and", "modification", "dates", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "CREATED", ",", "header", ".", "getCreationTime", "(", "))", ";", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "MODIFIED", ",", "header", ".", "getModificationTime", "(", "))", ";", "/", "/", "Get", "the", "video", "with", "and", "height", "metadata", ".", "set", "(", "Metadata", ".", "IMAGE_WIDTH", ",", "(", "int", ")", "header", ".", "getWidth", "(", "))", ";", "metadata", ".", "set", "(", "Metadata", ".", "IMAGE_LENGTH", ",", "(", "int", ")", "header", ".", "getHeight", "(", "))", ";", "/", "/", "Get", "the", "sample", "information", "SampleTableBox", "samples", "=", "track", ".", "getSampleTableBox", "(", ");", "if", "(", "samples", "!", "=", "null", ")", "{", "SampleDescriptionBox", "sampleDesc", "=", "samples", ".", "getSampleDescriptionBox", "(", ");", "if", "(", "sampleDesc", "!", "=", "null", ")", "{", "/", "/", "Look", "for", "the", "first", "Audio", "Sample", ",", "if", "present", "AudioSampleEntry", "sample", "=", "getOrNull", "(", "sampleDesc", ",", "AudioSampleEntry", ".", "class", ")", ";", "if", "(", "sample", "!", "=", "null", ")", "{", "XMPDM", ".", "ChannelTypePropertyConverter", ".", "convertAndSet", "(", "metadata", ",", "sample", ".", "getChannelCount", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_TYPE", ",", "sample", ".", "getSampleSize", "(", "))", ";", "/", "/", "TODO", "Num", "-", ">", "Type", "mapping", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_RATE", ",", "(", "int", ")", "sample", ".", "getSampleRate", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_", ",", "sample", ".", "getSamplesPerPacket", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_", ",", "sample", ".", "getBytesPerSample", "(", "))", ";", "}", "}", "}", "private", "void", "handleMovieHeaderBox", "(", "MovieBox", "moov", ",", "Metadata", "metadata", ",", "XHTMLContentHandler", "xhtml", ")", "{", "/", "/", "Pull", "out", "some", "information", "from", "the", "header", "box", "MovieHeaderBox", "mHeader", "=", "getOrNull", "(", "moov", ",", "MovieHeaderBox", ".", "class", ")", ";", "if", "(", "mHeader", "=", "=", "null", ")", "{", "return", ";", "}", "/", "/", "Get", "the", "creation", "and", "modification", "dates", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "CREATED", ",", "mHeader", ".", "getCreationTime", "(", "))", ";", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "MODIFIED", ",", "mHeader", ".", "getModificationTime", "(", "))", ";", "/", "/", "Get", "the", "duration", "double", "durationSeconds", "=", "(", "(", "double", ")", "mHeader", ".", "getDuration", "(", "))", "/", "mHeader", ".", "getTimescale", "(", ");", "metadata", ".", "set", "(", "XMPDM", ".", "DURATION", ",", "DURATION_FORMAT", ".", "format", "(", "durationSeconds", ")", ");", "/", "/", "The", "timescale", "is", "normally", "the", "sampling", "rate", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_RATE", ",", "(", "int", ")", "mHeader", ".", "getTimescale", "(", "))", ";", "}", "private", "void", "handleApple", "(", "MetaBox", "metaBox", ",", "Metadata", "metadata", ",", "XHTMLContentHandler", "xhtml", ")", "throws", "SAXException", "{", "AppleItemListBox", "apple", "=", "getOrNull", "(", "metaBox", ",", "AppleItemListBox", ".", "class", ")", ";", "if", "(", "apple", "=", "=", "null", ")", "{", "return", ";", "}", "/", "/", "Title", "AppleNameBox", "title", "=", "getOrNull", "(", "apple", ",", "AppleNameBox", ".", "class", ")", ";", "addMetadata", "(", "TikaCoreProperties", ".", "TITLE", ",", "metadata", ",", "title", ")", ";", "/", "/", "Artist", "AppleArtistBox", "artist", "=", "getOrNull", "(", "apple", ",", "AppleArtistBox", ".", "class", ")", ";", "addMetadata", "(", "TikaCoreProperties", ".", "CREATOR", ",", "metadata", ",", "artist", ")", ";", "addMetadata", "(", "XMPDM", ".", "ARTIST", ",", "metadata", ",", "artist", ")", ";", "/", "/", "Album", "Artist", "AppleArtist2Box", "artist2", "=", "getOrNull", "(", "apple", ",", "AppleArtist2Box", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "ALBUM_ARTIST", ",", "metadata", ",", "artist2", ")", ";", "/", "/", "Album", "AppleAlbumBox", "album", "=", "getOrNull", "(", "apple", ",", "AppleAlbumBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "ALBUM", ",", "metadata", ",", "album", ")", ";", "/", "/", "Composer", "AppleTrackAuthorBox", "composer", "=", "getOrNull", "(", "apple", ",", "AppleTrackAuthorBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "COMPOSER", ",", "metadata", ",", "composer", ")", ";", "/", "/", "Genre", "AppleGenreBox", "genre", "=", "getOrNull", "(", "apple", ",", "AppleGenreBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "GENRE", ",", "metadata", ",", "genre", ")", ";", "/", "/", "Year", "AppleRecordingYear2Box", "year", "=", "getOrNull", "(", "apple", ",", "AppleRecordingYear2Box", ".", "class", ")", ";", "if", "(", "year", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "RELEASE_DATE", ",", "year", ".", "getValue", "(", "))", ";", "}", "/", "/", "Track", "number", "AppleTrackNumberBox", "trackNum", "=", "getOrNull", "(", "apple", ",", "AppleTrackNumberBox", ".", "class", ")", ";", "if", "(", "trackNum", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "TRACK_NUMBER", ",", "trackNum", ".", "getA", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "NUMBER_OF_TRACKS", ",", "trackNum", ".", "getB", "(", "))", ";", "/", "/", "TODO", "}", "/", "/", "Disc", "number", "AppleDiskNumberBox", "discNum", "=", "getOrNull", "(", "apple", ",", "AppleDiskNumberBox", ".", "class", ")", ";", "if", "(", "discNum", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "DISC_NUMBER", ",", "discNum", ".", "getA", "(", "))", ";", "}", "/", "/", "Compilation", "AppleCompilationBox", "compilation", "=", "getOrNull", "(", "apple", ",", "AppleCompilationBox", ".", "class", ")", ";", "if", "(", "compilation", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "COMPILATION", ",", "(", "int", ")", "compilation", ".", "getValue", "(", "))", ";", "}", "/", "/", "Comment", "AppleCommentBox", "comment", "=", "getOrNull", "(", "apple", ",", "AppleCommentBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "LOG_COMMENT", ",", "metadata", ",", "comment", ")", ";", "/", "/", "Encoder", "AppleEncoderBox", "encoder", "=", "getOrNull", "(", "apple", ",", "AppleEncoderBox", ".", "class", ")", ";", "if", "(", "encoder", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMP", ".", "CREATOR_TOOL", ",", "encoder", ".", "getValue", "(", "))", ";", "}", "/", "/", "As", "text", "for", "(", "Box", "box", ":", "apple", ".", "getBoxes", "(", "))", "{", "if", "(", "box", "instanceof", "Utf8AppleDataBox", ")", "{", "xhtml", ".", "element", "(", "\"", "p", "\"", ",", "(", "(", "Utf8AppleDataBox", ")", "box", ")", ".", "getValue", "(", "))", ";", "/", "**", "*", "Override", "the", "maximum", "record", "size", "limit", ".", "NOTE", ":", "this", "*", "sets", "a", "static", "variable", "on", "the", "IsoFile", "and", "affects", "all", "files", "*", "parsed", "in", "this", "JVM", "!", "!!", "*", "*", "@", "param", "maxRecordSize", "*", "/", "@", "Field", "public", "void", "setMaxRecordSize", "(", "long", "maxRecordSize", ")", "{", "IsoFile", ".", "MAX_RECORD_SIZE_OVERRIDE", "=", "maxRecordSize", ";", "}", "import", "java", ".", "nio", ".", "file", ".", "Paths", ";</s><", "groupId", ">", "com", ".", "googlecode", ".", "mp4parser", "<", "/", "groupId", ">", "<", "version", ">", "1", ".", "1", ".", "22", "<", "/", "version", ">", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "tika", ".", "parser", ".", "mp4", ";", "import", "static", "com", ".", "googlecode", ".", "mp4parser", ".", "util", ".", "CastUtils", ".", "l2i", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "RandomAccessFile", ";", "import", "java", ".", "math", ".", "BigInteger", ";", "import", "java", ".", "nio", ".", "ByteBuffer", ";", "import", "java", ".", "nio", ".", "channels", ".", "WritableByteChannel", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "DataSource", ";", "/", "**", "*", "A", "{", "@", "link", "DataSource", "}", "implementation", "that", "relies", "on", "direct", "reads", "from", "a", "{", "@", "link", "RandomAccessFile", "}", ".", "*", "It", "should", "be", "slower", "than", "{", "@", "link", "com", ".", "googlecode", ".", "mp4parser", ".", "FileDataSourceImpl", "}", "but", "does", "not", "incur", "the", "implicit", "file", "locks", "of", "*", "memory", "mapped", "I", "/", "O", "on", "some", "JVMs", ".", "This", "implementation", "allows", "for", "a", "more", "controlled", "deletion", "of", "files", "*", "and", "might", "be", "preferred", "when", "working", "with", "temporary", "files", ".", "*", "@", "see", "<", "a", "href", "=", "\"", "http", ":", "//", "bugs", ".", "java", ".", "com", "/", "view_bug", ".", "do", "?", "bug_id", "=", "4724038", "\"", ">", "JDK", "-", "4724038", ":", "(", "fs", ")", "Add", "unmap", "method", "to", "MappedByteBuffer", "<", "/", "a", ">", "*", "@", "see", "<", "a", "href", "=", "\"", "http", ":", "//", "bugs", ".", "java", ".", "com", "/", "view_bug", ".", "do", "?", "bug_id", "=", "6359560", "\"", ">", "JDK", "-", "6359560", ":", "(", "fs", ")", "File", ".", "deleteOnExit", "(", ")", "doesn", "'", "t", "work", "when", "MappedByteBuffer", "exists", "(", "win", ")", "</", "a", ">", "*", "/", "public", "class", "DirectFileReadDataSource", "implements", "DataSource", "{", "private", "static", "final", "int", "TRANSFER_SIZE", "=", "8192", ";", "private", "RandomAccessFile", "raf", ";", "public", "DirectFileReadDataSource", "(", "File", "f", ")", "throws", "IOException", "{", "this", ".", "raf", "=", "new", "RandomAccessFile", "(", "f", ",", "\"", "r", "\"", ");", "}", "public", "int", "read", "(", "ByteBuffer", "byteBuffer", ")", "throws", "IOException", "{", "int", "len", "=", "byteBuffer", ".", "remaining", "(", ");", "int", "totalRead", "=", "0", ";", "int", "bytesRead", "=", "0", ";", "byte", "[", "]", "buf", "=", "new", "byte", "[", "TRANSFER_SIZE", "]", ";", "while", "(", "totalRead", "<", "len", ")", "{", "int", "bytesToRead", "=", "Math", ".", "min", "(", "(", "len", "-", "totalRead", ")", ",", "TRANSFER_SIZE", ")", ";", "bytesRead", "=", "raf", ".", "read", "(", "buf", ",", "0", ",", "bytesToRead", ")", ";", "if", "(", "bytesRead", "<", "0", ")", "{", "break", ";", "}", "else", "{", "totalRead", "+", "=", "bytesRead", ";", "}", "byteBuffer", ".", "put", "(", "buf", ",", "0", ",", "bytesRead", ")", ";", "}", "if", "(", "bytesRead", "<", "0", "&", "&", "position", "(", ")", "=", "=", "size", "(", ")", "&", "&", "byteBuffer", ".", "hasRemaining", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "End", "of", "stream", "reached", "earlier", "than", "expected", "\"", ");", "}", "return", "(", "(", "bytesRead", "<", "0", ")", "&", "&", "(", "totalRead", "=", "=", "0", ")", ")", "?", "-", "1", ":", "totalRead", ";", "}", "public", "int", "readAllInOnce", "(", "ByteBuffer", "byteBuffer", ")", "throws", "IOException", "{", "if", "(", "byteBuffer", ".", "remaining", "(", ")", ">", "raf", ".", "length", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "trying", "to", "readAllInOnce", "past", "end", "of", "stream", "\"", ");", "}", "byte", "[", "]", "buf", "=", "new", "byte", "[", "byteBuffer", ".", "remaining", "(", ")]", ";", "int", "read", "=", "raf", ".", "read", "(", "buf", ")", ";", "byteBuffer", ".", "put", "(", "buf", ",", "0", ",", "read", ")", ";", "return", "read", ";", "}", "public", "long", "size", "(", ")", "throws", "IOException", "{", "return", "raf", ".", "length", "(", ");", "}", "public", "long", "position", "(", ")", "throws", "IOException", "{", "return", "raf", ".", "getFilePointer", "(", ");", "}", "public", "void", "position", "(", "long", "nuPos", ")", "throws", "IOException", "{", "if", "(", "nuPos", ">", "raf", ".", "length", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "requesting", "seek", "past", "end", "of", "stream", "\"", ");", "}", "raf", ".", "seek", "(", "nuPos", ")", ";", "}", "public", "long", "transferTo", "(", "long", "position", ",", "long", "count", ",", "WritableByteChannel", "target", ")", "throws", "IOException", "{", "return", "target", ".", "write", "(", "map", "(", "position", ",", "count", ")", ");", "}", "public", "ByteBuffer", "map", "(", "long", "startPosition", ",", "long", "size", ")", "throws", "IOException", "{", "if", "(", "startPosition", "<", "0", "|", "|", "size", "<", "0", ")", "{", "throw", "new", "IOException", "(", "\"", "startPosition", "and", "size", "must", "both", "be", ">", "=", "0", "\"", ");", "}", "/", "/", "make", "sure", "that", "start", "+", "size", "aren", "'", "t", "greater", "than", "avail", "size", "/", "/", "in", "raf", ".", "BigInteger", "end", "=", "BigInteger", ".", "valueOf", "(", "startPosition", ")", ";", "end", "=", "end", ".", "add", "(", "BigInteger", ".", "valueOf", "(", "size", ")", ");", "if", "(", "end", ".", "compareTo", "(", "BigInteger", ".", "valueOf", "(", "raf", ".", "length", "(", "))", ")", ">", "0", ")", "{", "throw", "new", "IOException", "(", "\"", "requesting", "read", "past", "end", "of", "stream", "\"", ");", "}", "raf", ".", "seek", "(", "startPosition", ")", ";", "int", "payLoadSize", "=", "l2i", "(", "size", ")", ";", "/", "/", "hack", "to", "check", "for", "potential", "overflow", "if", "(", "Long", ".", "MAX_VALUE", "-", "payLoadSize", "<", "startPosition", "|", "|", "Long", ".", "MAX_VALUE", "-", "payLoadSize", ">", "raf", ".", "length", "(", "))", "{", "throw", "new", "IOException", "(", "\"", "requesting", "read", "past", "end", "of", "stream", "\"", ");", "}", "byte", "[", "]", "payload", "=", "new", "byte", "[", "payLoadSize", "]", ";", "raf", ".", "readFully", "(", "payload", ")", ";", "return", "ByteBuffer", ".", "wrap", "(", "payload", ")", ";", "}", "@", "Override", "public", "void", "close", "(", ")", "throws", "IOException", "{", "raf", ".", "close", "(", ");", "}", "}", "import", "com", ".", "coremedia", ".", "iso", ".", "IsoFile", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "Box", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "Container", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "FileTypeBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "MetaBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "MovieBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "MovieHeaderBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "SampleDescriptionBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "SampleTableBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "TrackBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "TrackHeaderBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "UserDataBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "apple", ".", "AppleItemListBox", ";", "import", "com", ".", "coremedia", ".", "iso", ".", "boxes", ".", "sampleentry", ".", "AudioSampleEntry", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "DataSource", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleAlbumBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleArtist2Box", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleArtistBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleCommentBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleCompilationBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleDiskNumberBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleEncoderBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleGPSCoordinatesBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleGenreBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleNameBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleRecordingYear2Box", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleTrackAuthorBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "AppleTrackNumberBox", ";", "import", "com", ".", "googlecode", ".", "mp4parser", ".", "boxes", ".", "apple", ".", "Utf8AppleDataBox", ";", "try", "(", "DataSource", "dataSource", "=", "new", "DirectFileReadDataSource", "(", "tstream", ".", "getFile", "(", "))", ")", "{", "try", "(", "IsoFile", "isoFile", "=", "new", "IsoFile", "(", "dataSource", ")", ")", "{", "tmp", ".", "addResource", "(", "isoFile", ")", ";", "/", "/", "Grab", "the", "file", "type", "box", "FileTypeBox", "fileType", "=", "getOrNull", "(", "isoFile", ",", "FileTypeBox", ".", "class", ")", ";", "if", "(", "fileType", "!", "=", "null", ")", "{", "/", "/", "Identify", "the", "type", "MediaType", "type", "=", "MediaType", ".", "application", "(", "\"", "mp4", "\"", ");", "for", "(", "Map", ".", "Entry", "<", "MediaType", ",", "List", "<", "String", ">", ">", "e", ":", "typesMap", ".", "entrySet", "(", "))", "{", "if", "(", "e", ".", "getValue", "(", ").", "contains", "(", "fileType", ".", "getMajorBrand", "(", "))", ")", "{", "type", "=", "e", ".", "getKey", "(", ");", "break", ";", "}", "metadata", ".", "set", "(", "Metadata", ".", "CONTENT_TYPE", ",", "type", ".", "toString", "(", "))", ";", "if", "(", "type", ".", "getType", "(", ").", "equals", "(", "\"", "audio", "\"", "))", "{", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_COMPRESSOR", ",", "fileType", ".", "getMajorBrand", "(", ").", "trim", "(", "))", ";", "}", "}", "else", "{", "/", "/", "Some", "older", "QuickTime", "files", "lack", "the", "FileType", "metadata", ".", "set", "(", "Metadata", ".", "CONTENT_TYPE", ",", "\"", "video", "/", "quicktime", "\"", ");", "/", "/", "Get", "the", "main", "MOOV", "box", "MovieBox", "moov", "=", "getOrNull", "(", "isoFile", ",", "MovieBox", ".", "class", ")", ";", "if", "(", "moov", "=", "=", "null", ")", "{", "/", "/", "Bail", "out", "return", ";", "}", "XHTMLContentHandler", "xhtml", "=", "new", "XHTMLContentHandler", "(", "handler", ",", "metadata", ")", ";", "xhtml", ".", "startDocument", "(", ");", "/", "/", "Pull", "out", "some", "information", "from", "the", "header", "box", "MovieHeaderBox", "mHeader", "=", "getOrNull", "(", "moov", ",", "MovieHeaderBox", ".", "class", ")", ";", "if", "(", "mHeader", "!", "=", "null", ")", "{", "/", "/", "Get", "the", "creation", "and", "modification", "dates", "metadata", ".", "set", "(", "Metadata", ".", "CREATION_DATE", ",", "mHeader", ".", "getCreationTime", "(", "))", ";", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "MODIFIED", ",", "mHeader", ".", "getModificationTime", "(", "))", ";", "/", "/", "Get", "the", "duration", "double", "durationSeconds", "=", "(", "(", "double", ")", "mHeader", ".", "getDuration", "(", "))", "/", "mHeader", ".", "getTimescale", "(", ");", "metadata", ".", "set", "(", "XMPDM", ".", "DURATION", ",", "DURATION_FORMAT", ".", "format", "(", "durationSeconds", ")", ");", "/", "/", "The", "timescale", "is", "normally", "the", "sampling", "rate", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_RATE", ",", "(", "int", ")", "mHeader", ".", "getTimescale", "(", "))", ";", "}", "/", "/", "Get", "some", "more", "information", "from", "the", "track", "header", "/", "/", "TODO", "Decide", "how", "to", "handle", "multiple", "tracks", "List", "<", "TrackBox", ">", "tb", "=", "moov", ".", "getBoxes", "(", "TrackBox", ".", "class", ")", ";", "if", "(", "tb", ".", "size", "(", ")", ">", "0", ")", "{", "TrackBox", "track", "=", "tb", ".", "get", "(", "0", ")", ";", "TrackHeaderBox", "header", "=", "track", ".", "getTrackHeaderBox", "(", ");", "/", "/", "Get", "the", "creation", "and", "modification", "dates", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "CREATED", ",", "header", ".", "getCreationTime", "(", "))", ";", "metadata", ".", "set", "(", "TikaCoreProperties", ".", "MODIFIED", ",", "header", ".", "getModificationTime", "(", "))", ";", "/", "/", "Get", "the", "video", "with", "and", "height", "metadata", ".", "set", "(", "Metadata", ".", "IMAGE_WIDTH", ",", "(", "int", ")", "header", ".", "getWidth", "(", "))", ";", "metadata", ".", "set", "(", "Metadata", ".", "IMAGE_LENGTH", ",", "(", "int", ")", "header", ".", "getHeight", "(", "))", ";", "/", "/", "Get", "the", "sample", "information", "SampleTableBox", "samples", "=", "track", ".", "getSampleTableBox", "(", ");", "if", "(", "samples", "!", "=", "null", ")", "{", "SampleDescriptionBox", "sampleDesc", "=", "samples", ".", "getSampleDescriptionBox", "(", ");", "if", "(", "sampleDesc", "!", "=", "null", ")", "{", "/", "/", "Look", "for", "the", "first", "Audio", "Sample", ",", "if", "present", "AudioSampleEntry", "sample", "=", "getOrNull", "(", "sampleDesc", ",", "AudioSampleEntry", ".", "class", ")", ";", "if", "(", "sample", "!", "=", "null", ")", "{", "XMPDM", ".", "ChannelTypePropertyConverter", ".", "convertAndSet", "(", "metadata", ",", "sample", ".", "getChannelCount", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_TYPE", ",", "sample", ".", "getSampleSize", "(", "))", ";", "/", "/", "TODO", "Num", "-", ">", "Type", "mapping", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_SAMPLE_RATE", ",", "(", "int", ")", "sample", ".", "getSampleRate", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_", ",", "sample", ".", "getSamplesPerPacket", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "AUDIO_", ",", "sample", ".", "getBytesPerSample", "(", "))", ";", "}", "}", "}", "}", "/", "/", "Get", "metadata", "from", "the", "User", "Data", "Box", "UserDataBox", "userData", "=", "getOrNull", "(", "moov", ",", "UserDataBox", ".", "class", ")", ";", "if", "(", "userData", "!", "=", "null", ")", "{", "extractGPS", "(", "userData", ",", "metadata", ")", ";", "MetaBox", "meta", "=", "getOrNull", "(", "userData", ",", "MetaBox", ".", "class", ")", ";", "/", "/", "Check", "for", "iTunes", "Metadata", "/", "/", "See", "http", ":", "//", "atomicparsley", ".", "sourceforge", ".", "net", "/", "mpeg", "-", "4files", ".", "html", "and", "/", "/", "http", ":", "//", "code", ".", "google", ".", "com", "/", "p", "/", "mp4v2", "/", "wiki", "/", "iTunesMetadata", "for", "more", "on", "these", "AppleItemListBox", "apple", "=", "getOrNull", "(", "meta", ",", "AppleItemListBox", ".", "class", ")", ";", "if", "(", "apple", "!", "=", "null", ")", "{", "/", "/", "Title", "AppleNameBox", "title", "=", "getOrNull", "(", "apple", ",", "AppleNameBox", ".", "class", ")", ";", "addMetadata", "(", "TikaCoreProperties", ".", "TITLE", ",", "metadata", ",", "title", ")", ";", "/", "/", "Artist", "AppleArtistBox", "artist", "=", "getOrNull", "(", "apple", ",", "AppleArtistBox", ".", "class", ")", ";", "addMetadata", "(", "TikaCoreProperties", ".", "CREATOR", ",", "metadata", ",", "artist", ")", ";", "addMetadata", "(", "XMPDM", ".", "ARTIST", ",", "metadata", ",", "artist", ")", ";", "/", "/", "Album", "Artist", "AppleArtist2Box", "artist2", "=", "getOrNull", "(", "apple", ",", "AppleArtist2Box", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "ALBUM_ARTIST", ",", "metadata", ",", "artist2", ")", ";", "/", "/", "Album", "AppleAlbumBox", "album", "=", "getOrNull", "(", "apple", ",", "AppleAlbumBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "ALBUM", ",", "metadata", ",", "album", ")", ";", "/", "/", "Composer", "AppleTrackAuthorBox", "composer", "=", "getOrNull", "(", "apple", ",", "AppleTrackAuthorBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "COMPOSER", ",", "metadata", ",", "composer", ")", ";", "/", "/", "Genre", "AppleGenreBox", "genre", "=", "getOrNull", "(", "apple", ",", "AppleGenreBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "GENRE", ",", "metadata", ",", "genre", ")", ";", "/", "/", "Year", "AppleRecordingYear2Box", "year", "=", "getOrNull", "(", "apple", ",", "AppleRecordingYear2Box", ".", "class", ")", ";", "if", "(", "year", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "RELEASE_DATE", ",", "year", ".", "getValue", "(", "))", ";", "}", "/", "/", "Track", "number", "AppleTrackNumberBox", "trackNum", "=", "getOrNull", "(", "apple", ",", "AppleTrackNumberBox", ".", "class", ")", ";", "if", "(", "trackNum", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "TRACK_NUMBER", ",", "trackNum", ".", "getA", "(", "))", ";", "/", "/", "metadata", ".", "set", "(", "XMPDM", ".", "NUMBER_OF_TRACKS", ",", "trackNum", ".", "getB", "(", "))", ";", "/", "/", "TODO", "}", "/", "/", "Disc", "number", "AppleDiskNumberBox", "discNum", "=", "getOrNull", "(", "apple", ",", "AppleDiskNumberBox", ".", "class", ")", ";", "if", "(", "discNum", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "DISC_NUMBER", ",", "discNum", ".", "getA", "(", "))", ";", "}", "/", "/", "Compilation", "AppleCompilationBox", "compilation", "=", "getOrNull", "(", "apple", ",", "AppleCompilationBox", ".", "class", ")", ";", "if", "(", "compilation", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMPDM", ".", "COMPILATION", ",", "(", "int", ")", "compilation", ".", "getValue", "(", "))", ";", "}", "/", "/", "Comment", "AppleCommentBox", "comment", "=", "getOrNull", "(", "apple", ",", "AppleCommentBox", ".", "class", ")", ";", "addMetadata", "(", "XMPDM", ".", "LOG_COMMENT", ",", "metadata", ",", "comment", ")", ";", "/", "/", "Encoder", "AppleEncoderBox", "encoder", "=", "getOrNull", "(", "apple", ",", "AppleEncoderBox", ".", "class", ")", ";", "if", "(", "encoder", "!", "=", "null", ")", "{", "metadata", ".", "set", "(", "XMP", ".", "CREATOR_TOOL", ",", "encoder", ".", "getValue", "(", "))", ";", "}", "/", "/", "As", "text", "for", "(", "Box", "box", ":", "apple", ".", "getBoxes", "(", "))", "{", "if", "(", "box", "instanceof", "Utf8AppleDataBox", ")", "{", "xhtml", ".", "element", "(", "\"", "p", "\"", ",", "(", "(", "Utf8AppleDataBox", ")", "box", ")", ".", "getValue", "(", "))", ";", "}", "}", "}", "/", "/", "TODO", "Check", "for", "other", "kinds", "too", "/", "/", "All", "done", "xhtml", ".", "endDocument", "(", ");", "}", "finally", "{", "tmp", ".", "dispose", "(", ");"], "docstring_tokens": ["out", "of", "memory", "error"]}
{"contents": ["empty"], "code_tokens": ["config", "HID_USB_WACOM", "tristate", "\"", "Wacom", "Intuos", "/", "Graphire", "tablet", "support", "(", "USB", ")", "\"", "depends", "on", "HID", "select", "POWER_SUPPLY", "select", "NEW_LEDS", "select", "LEDS_CLASS", "help", "Say", "Y", "here", "if", "you", "want", "to", "use", "the", "USB", "version", "of", "the", "Wacom", "Intuos", "or", "Graphire", "tablet", ".", "To", "compile", "this", "driver", "as", "a", "module", ",", "choose", "M", "here", ":", "the", "module", "will", "be", "called", "wacom", ".", "wacom", "-", "objs", ":", "=", "wacom_wac", ".", "o", "wacom_sys", ".", "o", "obj", "-", "$(", "CONFIG_HID_USB_WACOM", ")", "+", "=", "wacom", ".", "o</s>-", "--", "help", "config", "TABLET_USB_WACOM", "tristate", "\"", "Wacom", "Intuos", "/", "Graphire", "tablet", "support", "(", "USB", ")", "\"", "depends", "on", "USB_ARCH_HAS_HCD", "select", "POWER_SUPPLY", "select", "USB", "select", "NEW_LEDS", "select", "LEDS_CLASS", "help", "Say", "Y", "here", "if", "you", "want", "to", "use", "the", "USB", "version", "of", "the", "Wacom", "Intuos", "or", "Graphire", "tablet", ".", "Make", "sure", "to", "say", "Y", "to", "\"", "Mouse", "support", "\"", "(", "CONFIG_INPUT_MOUSEDEV", ")", "and", "/", "or", "\"", "Event", "interface", "support", "\"", "(", "CONFIG_INPUT_EVDEV", ")", "as", "well", ".", "To", "compile", "this", "driver", "as", "a", "module", ",", "choose", "M", "here", ":", "the", "module", "will", "be", "called", "wacom", ".", "#", "Multipart", "objects", ".", "wacom", "-", "objs", ":", "=", "wacom_wac", ".", "o", "wacom_sys", ".", "o", "obj", "-", "$(", "CONFIG_TABLET_USB_WACOM", ")", "+", "=", "wacom", ".", "o"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["(", "loff_t", ")", "page_index", "<", "<", "PAGE_CACHE_SHIFT", ",", "(", "loff_t", ")", "(", "end", "-", "page_index", "+", "1", ")", "(", "loff_t", ")", "page_index", "<", "<", "PAGE_CACHE_SHIFT", ",</s>page_index", "<", "<", "PAGE_CACHE_SHIFT", ",", "(", "end", "-", "page_index", "+", "1", ")", "page_index", "<", "<", "PAGE_CACHE_SHIFT", ","], "docstring_tokens": ["local", "integer", "overflow"]}
{"contents": ["empty"], "code_tokens": [".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", "attrs", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", ";", ".", "addIfExists", "(", "\"", "value", "\"", ",", "itemKeyStr", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", ".", "addIfExists", "(", "\"", "value", "\"", ",", "value", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", "attrs", ".", "addIfExists", "(", "\"", "src", "\"", ",", "params", ".", "get", "(", "\"", "src", "\"", "))", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "))</s>.", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", "attrs", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", ";", ".", "addIfExists", "(", "\"", "value", "\"", ",", "itemKeyStr", ",", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "value", ",", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", "attrs", ".", "addIfExists", "(", "\"", "src", "\"", ",", "params", ".", "get", "(", "\"", "src", "\"", "),", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")", ".", "addIfExists", "(", "\"", "value", "\"", ",", "params", ".", "get", "(", "\"", "nameValue", "\"", "),", "false", ")"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "apache", ".", "juli", ".", "logging", ".", "LogFactory", ";", "import", "org", ".", "apache", ".", "tomcat", ".", "util", ".", "res", ".", "StringManager", ";", "private", "static", "final", "Log", "log", "=", "LogFactory", ".", "getLog", "(", "FileStore", ".", "class", ")", ";", "private", "static", "final", "StringManager", "sm", "=", "StringManager", ".", "getManager", "(", "FileStore", ".", "class", ")", ";", "File", "storageDir", "=", "directory", "(", ");", "if", "(", "storageDir", "=", "=", "null", ")", "{", "File", "file", "=", "new", "File", "(", "storageDir", ",", "filename", ")", ";", "/", "/", "Check", "the", "file", "is", "within", "the", "storage", "directory", "if", "(", "!", "file", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "storageDir", ".", "getCanonicalPath", "(", "))", ")", "{", "log", ".", "warn", "(", "sm", ".", "getString", "(", "\"", "fileStore", ".", "invalid", "\"", ",", "file", ".", "getPath", "(", "),", "id", ")", ");", "return", "null", ";", "}", "fileStore", ".", "invalid", "=", "Invalid", "persistence", "file", "[", "{", "0", "}", "]", "for", "session", "ID", "[", "{", "1", "}", "]", "<", "add", ">", "Improve", "validation", "of", "storage", "location", "when", "using", "FileStore", ".", "(", "markt", ")", "<", "/", "add", "></s>if", "(", "this", ".", "directory", "=", "=", "null", ")", "{", "File", "file", "=", "new", "File", "(", "directory", "(", "),", "filename", ")", ";"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["private", "ServerAccessDeniedHandler", "accessDeniedHandler", ";", "if", "(", "accessDeniedHandler", "!", "=", "null", ")", "{", "exceptionTranslationWebFilter", ".", "setAccessDeniedHandler", "(", "accessDeniedHandler", ")", ";", "}", "/", "**", "*", "Configures", "what", "to", "do", "when", "an", "authenticated", "user", "does", "not", "hold", "a", "required", "authority", "*", "@", "param", "accessDeniedHandler", "the", "access", "denied", "handler", "to", "use", "*", "@", "return", "the", "{", "@", "link", "ExceptionHandlingSpec", "}", "to", "configure", "*", "*", "@", "since", "5", ".", "0", ".", "5", "*", "/", "public", "ExceptionHandlingSpec", "accessDeniedHandler", "(", "ServerAccessDeniedHandler", "accessDeniedHandler", ")", "{", "ServerHttpSecurity", ".", "this", ".", "accessDeniedHandler", "=", "accessDeniedHandler", ";", "return", "this", ";", "}", "/", "*", "*", "Copyright", "2002", "-", "2018", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "*", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "springframework", ".", "security", ".", "config", ".", "web", ".", "server", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "springframework", ".", "http", ".", "HttpStatus", ";", "import", "org", ".", "springframework", ".", "security", ".", "config", ".", "annotation", ".", "web", ".", "reactive", ".", "ServerHttpSecurityConfigurationBuilder", ";", "import", "org", ".", "springframework", ".", "security", ".", "test", ".", "web", ".", "reactive", ".", "server", ".", "WebTestClientBuilder", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "server", ".", "SecurityWebFilterChain", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "server", ".", "ServerAuthenticationEntryPoint", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "server", ".", "authentication", ".", "RedirectServerAuthenticationEntryPoint", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "server", ".", "authorization", ".", "HttpStatusServerAccessDeniedHandler", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "server", ".", "authorization", ".", "ServerAccessDeniedHandler", ";", "import", "org", ".", "springframework", ".", "test", ".", "web", ".", "reactive", ".", "server", ".", "WebTestClient", ";", "import", "static", "org", ".", "springframework", ".", "web", ".", "reactive", ".", "function", ".", "client", ".", "ExchangeFilterFunctions", ".", "Credentials", ".", "basicAuthenticationCredentials", ";", "import", "static", "org", ".", "springframework", ".", "web", ".", "reactive", ".", "function", ".", "client", ".", "ExchangeFilterFunctions", ".", "basicAuthentication", ";", "/", "**", "*", "@", "author", "Denys", "Ivano", "*", "@", "since", "5", ".", "0", ".", "5", "*", "/", "public", "class", "ExceptionHandlingSpecTests", "{", "private", "ServerHttpSecurity", "http", "=", "ServerHttpSecurityConfigurationBuilder", ".", "httpWithDefaultAuthentication", "(", ");", "@", "Test", "public", "void", "defaultAuthenticationEntryPoint", "(", ")", "{", "SecurityWebFilterChain", "securityWebFilter", "=", "this", ".", "http", ".", "csrf", "(", ").", "disable", "(", ")", ".", "authorizeExchange", "(", ")", ".", "anyExchange", "(", ").", "authenticated", "(", ")", ".", "and", "(", ")", ".", "exceptionHandling", "(", ")", ".", "and", "(", ")", ".", "build", "(", ");", "WebTestClient", "client", "=", "WebTestClientBuilder", ".", "bindToWebFilters", "(", "securityWebFilter", ")", ".", "build", "(", ");", "client", ".", "get", "(", ")", ".", "uri", "(", "\"/", "test", "\"", ")", ".", "exchange", "(", ")", ".", "expectStatus", "(", ").", "isUnauthorized", "(", ")", ".", "expectHeader", "(", ").", "valueMatches", "(", "\"", "WWW", "-", "Authenticate", "\"", ",", "\"", "Basic", ".", "*\"", ");", "}", "@", "Test", "public", "void", "customAuthenticationEntryPoint", "(", ")", "{", "SecurityWebFilterChain", "securityWebFilter", "=", "this", ".", "http", ".", "csrf", "(", ").", "disable", "(", ")", ".", "authorizeExchange", "(", ")", ".", "anyExchange", "(", ").", "authenticated", "(", ")", ".", "and", "(", ")", ".", "exceptionHandling", "(", ")", ".", "authenticationEntryPoint", "(", "redirectServerAuthenticationEntryPoint", "(", "\"/", "auth", "\"", "))", ".", "and", "(", ")", ".", "build", "(", ");", "WebTestClient", "client", "=", "WebTestClientBuilder", ".", "bindToWebFilters", "(", "securityWebFilter", ")", ".", "build", "(", ");", "client", ".", "get", "(", ")", ".", "uri", "(", "\"/", "test", "\"", ")", ".", "exchange", "(", ")", ".", "expectStatus", "(", ").", "isFound", "(", ")", ".", "expectHeader", "(", ").", "valueMatches", "(", "\"", "Location", "\"", ",", "\"", ".*", "\")", ";", "}", "@", "Test", "public", "void", "defaultAccessDeniedHandler", "(", ")", "{", "SecurityWebFilterChain", "securityWebFilter", "=", "this", ".", "http", ".", "csrf", "(", ").", "disable", "(", ")", ".", "httpBasic", "(", ").", "and", "(", ")", ".", "authorizeExchange", "(", ")", ".", "anyExchange", "(", ").", "hasRole", "(", "\"", "ADMIN", "\"", ")", ".", "and", "(", ")", ".", "exceptionHandling", "(", ")", ".", "and", "(", ")", ".", "build", "(", ");", "WebTestClient", "client", "=", "WebTestClientBuilder", ".", "bindToWebFilters", "(", "securityWebFilter", ")", ".", "filter", "(", "basicAuthentication", "(", "))", ".", "build", "(", ");", "client", ".", "get", "(", ")", ".", "uri", "(", "\"/", "admin", "\"", ")", ".", "attributes", "(", "basicAuthenticationCredentials", "(", "\"", "user", "\"", ",", "\"", "password", "\"", "))", ".", "exchange", "(", ")", ".", "expectStatus", "(", ").", "isForbidden", "(", ");", "}", "@", "Test", "public", "void", "customAccessDeniedHandler", "(", ")", "{", "SecurityWebFilterChain", "securityWebFilter", "=", "this", ".", "http", ".", "csrf", "(", ").", "disable", "(", ")", ".", "httpBasic", "(", ").", "and", "(", ")", ".", "authorizeExchange", "(", ")", ".", "anyExchange", "(", ").", "hasRole", "(", "\"", "ADMIN", "\"", ")", ".", "and", "(", ")", ".", "exceptionHandling", "(", ")", ".", "accessDeniedHandler", "(", "httpStatusServerAccessDeniedHandler", "(", "HttpStatus", ".", "BAD_REQUEST", ")", ")", ".", "and", "(", ")", ".", "build", "(", ");", "WebTestClient", "client", "=", "WebTestClientBuilder", ".", "bindToWebFilters", "(", "securityWebFilter", ")", ".", "filter", "(", "basicAuthentication", "(", "))", ".", "build", "(", ");", "client", ".", "get", "(", ")", ".", "uri", "(", "\"/", "admin", "\"", ")", ".", "attributes", "(", "basicAuthenticationCredentials", "(", "\"", "user", "\"", ",", "\"", "password", "\"", "))", ".", "exchange", "(", ")", ".", "expectStatus", "(", ").", "isBadRequest", "(", ");", "}", "private", "ServerAuthenticationEntryPoint", "redirectServerAuthenticationEntryPoint", "(", "String", "location", ")", "{", "return", "new", "RedirectServerAuthenticationEntryPoint", "(", "location", ")", ";", "}", "private", "ServerAccessDeniedHandler", "httpStatusServerAccessDeniedHandler", "(", "HttpStatus", "httpStatus", ")", "{", "return", "new", "HttpStatusServerAccessDeniedHandler", "(", "httpStatus", ")", ";", "}", "}</s>"], "docstring_tokens": ["authorization", "bypass"]}
{"contents": ["empty"], "code_tokens": ["static", "int", "nfs_wait_bit_uninterruptible", "(", "void", "*", "word", ")", "{", "io_schedule", "(", ");", "return", "0", ";", "}", "return", "wait_on_bit", "(", "&", "req", "-", ">", "wb_flags", ",", "PG_BUSY", ",", "nfs_wait_bit_uninterruptible", ",", "TASK_UNINTERRUPTIBLE", ")", ";</s>int", "ret", "=", "0", ";", "if", "(", "!", "test_bit", "(", "PG_BUSY", ",", "&", "req", "-", ">", "wb_flags", ")", ")", "goto", "out", ";", "ret", "=", "out_of_line_wait_on_bit", "(", "&", "req", "-", ">", "wb_flags", ",", "PG_BUSY", ",", "nfs_wait_bit_killable", ",", "TASK_KILLABLE", ")", ";", "out", ":", "return", "ret", ";"], "docstring_tokens": ["information", "leak"]}
{"contents": ["empty"], "code_tokens": ["Expression_Obj", "value", "=", "d", "-", ">", "value", "(", ");", "if", "(", "value", ")", "value", "=", "value", "-", ">", "perform", "(", "&", "eval", ")", ";</s>Expression_Obj", "value", "=", "d", "-", ">", "value", "(", ")-", ">", "perform", "(", "&", "eval", ")", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["import", "hudson", ".", "Util", ";", "&", "&", "Util", ".", "fixNull", "(", "request", ".", "getCollaboratorNames", "(", "))", ".", "contains", "(", "head", ".", "getOriginOwner", "(", "))", ";", "@", "NonNull", "@", "Override", "public", "SCMRevision", "getTrustedRevision", "(", "@", "NonNull", "SCMRevision", "revision", ",", "@", "NonNull", "TaskListener", "listener", ")", "throws", "IOException", ",", "InterruptedException", "{", "if", "(", "revision", "instanceof", "PullRequestSCMRevision", ")", "{", "PullRequestSCMHead", "head", "=", "(", "PullRequestSCMHead", ")", "revision", ".", "getHead", "(", ");", "try", "(", "GiteaConnection", "c", "=", "gitea", "(", ").", "open", "(", "))", "{", "try", "(", "GiteaSCMSourceRequest", "request", "=", "new", "GiteaSCMSourceContext", "(", "null", ",", "SCMHeadObserver", ".", "none", "(", "))", ".", "withTraits", "(", "getTraits", "(", "))", ".", "newRequest", "(", "this", ",", "listener", ")", ")", "{", "request", ".", "setConnection", "(", "c", ")", ";", "Set", "<", "String", ">", "names", "=", "new", "HashSet", "<", ">(", ");", "for", "(", "GiteaUser", "u", ":", "c", ".", "fetchCollaborators", "(", "giteaRepository", ")", ")", "{", "names", ".", "add", "(", "u", ".", "getUsername", "(", "))", ";", "}", "request", ".", "setCollaboratorNames", "(", "names", ")", ";", "if", "(", "request", ".", "isTrusted", "(", "head", ")", ")", "{", "return", "revision", ";", "}", "}", "PullRequestSCMRevision", "rev", "=", "(", "PullRequestSCMRevision", ")", "revision", ";", "listener", ".", "getLogger", "(", ").", "format", "(", "\"", "Loading", "trusted", "files", "from", "base", "branch", "%", "s", "at", "%", "s", "rather", "than", "%", "s", "%", "n", "\"", ",", "head", ".", "getTarget", "(", ").", "getName", "(", "),", "(", "(", "SCMRevisionImpl", ")", "rev", ".", "getTarget", "(", "))", ".", "getHash", "(", "),", "rev", ".", "getOrigin", "(", ").", "getHash", "(", "))", ";", "return", "rev", ".", "getTarget", "(", ");", "}", "}", "return", "revision", ";", "}</s>&", "&", "request", ".", "getCollaboratorNames", "(", ").", "contains", "(", "head", ".", "getOriginOwner", "(", "))", ";"], "docstring_tokens": ["cross", "site", "request", "forgery"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "q", ">", "=", "end", ")", "return", "0", ";", "/", "*", "fail", "*", "/</s>"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["import", "javax", ".", "management", ".", "remote", ".", "rmi", ".", "RMIConnectorServer", ";", "import", "javax", ".", "management", ".", "remote", ".", "rmi", ".", "RMIJRMPServerImpl", ";", "import", "java", ".", "rmi", ".", "NotBoundException", ";", "import", "java", ".", "rmi", ".", "Remote", ";", "import", "java", ".", "rmi", ".", "RemoteException", ";", "import", "java", ".", "util", ".", "concurrent", ".", "atomic", ".", "AtomicReference", ";", "*", "<", "p", ">", "Originally", "based", "on", "j256", "simplejmx", "project", "private", "final", "AtomicReference", "<", "Remote", ">", "rmiServerReference", "=", "new", "AtomicReference", "<", ">(", ");", "internalStart", "(", "port", ")", ";", "private", "void", "internalStart", "(", "int", "port", ")", "throws", "IOException", "{", "rmiServerReference", ".", "set", "(", "null", ")", ";", "/", "/", "this", "allows", "clients", "to", "lookup", "the", "JMX", "service", "rmiRegistry", "=", "new", "JmxRegistry", "(", "port", ",", "\"", "jmxrmi", "\"", ",", "rmiServerReference", ")", ";", "final", "RMIJRMPServerImpl", "rmiServer", "=", "new", "RMIJRMPServerImpl", "(", "port", ",", "null", ",", "null", ",", "null", ")", ";", "connector", "=", "new", "RMIConnectorServer", "(", "url", ",", "null", ",", "rmiServer", ",", "ManagementFactory", ".", "getPlatformMBeanServer", "(", "))", ";", "/", "/", "we", "can", "'", "t", "pass", "the", "created", "stub", "directly", "to", "the", "registry", "since", "this", "would", "form", "a", "cyclic", "dependency", ":", "/", "/", "-", "you", "can", "only", "start", "the", "connector", "after", "the", "registry", "was", "started", "/", "/", "-", "you", "can", "only", "create", "the", "stub", "after", "the", "connector", "was", "started", "/", "/", "-", "you", "can", "only", "start", "the", "registry", "after", "the", "stub", "was", "created", "rmiServerReference", ".", "set", "(", "rmiServer", ".", "toStub", "(", "))", ";", "rmiServerReference", ".", "set", "(", "null", ")", ";", "/", "**", "*", "A", "registry", "that", "only", "exposes", "a", "single", "remote", "object", ".", "*", "/", "@", "SuppressWarnings", "(", "\"", "restriction", "\"", ")", "private", "static", "class", "JmxRegistry", "extends", "sun", ".", "rmi", ".", "registry", ".", "RegistryImpl", "{", "private", "final", "String", "lookupName", ";", "private", "final", "AtomicReference", "<", "Remote", ">", "remoteServerStub", ";", "JmxRegistry", "(", "final", "int", "port", ",", "final", "String", "lookupName", ",", "final", "AtomicReference", "<", "Remote", ">", "remoteServerStub", ")", "throws", "RemoteException", "{", "super", "(", "port", ")", ";", "this", ".", "lookupName", "=", "lookupName", ";", "this", ".", "remoteServerStub", "=", "remoteServerStub", ";", "}", "@", "Override", "public", "Remote", "lookup", "(", "String", "s", ")", "throws", "NotBoundException", "{", "if", "(", "lookupName", ".", "equals", "(", "s", ")", ")", "{", "final", "Remote", "remote", "=", "remoteServerStub", ".", "get", "(", ");", "if", "(", "remote", "!", "=", "null", ")", "{", "return", "remote", ";", "}", "}", "throw", "new", "NotBoundException", "(", "\"", "Not", "bound", ".", "\")", ";", "}", "@", "Override", "public", "void", "bind", "(", "String", "s", ",", "Remote", "remote", ")", "{", "/", "/", "this", "is", "called", "from", "RMIConnectorServer", "#", "start", ";", "don", "'", "t", "throw", "a", "general", "AccessException", "}", "@", "Override", "public", "void", "unbind", "(", "String", "s", ")", "{", "/", "/", "this", "is", "called", "from", "RMIConnectorServer", "#", "stop", ";", "don", "'", "t", "throw", "a", "general", "AccessException", "}", "@", "Override", "public", "void", "rebind", "(", "String", "s", ",", "Remote", "remote", ")", "{", "/", "/", "might", "as", "well", "not", "throw", "an", "exception", "here", "given", "that", "the", "others", "don", "'", "t", "}", "@", "Override", "public", "String", "[", "]", "list", "(", ")", "{", "return", "new", "String", "[", "]{", "lookupName", "}", ";", "}", "}</s>import", "javax", ".", "management", ".", "remote", ".", "JMXConnectorServerFactory", ";", "import", "java", ".", "rmi", ".", "registry", ".", "LocateRegistry", ";", "*", "<", "p", ">", "Heavily", "based", "on", "j256", "simplejmx", "project", "startRmiRegistry", "(", "port", ")", ";", "startJmxService", "(", "port", ")", ";", "/", "**", "*", "Starts", "an", "RMI", "Registry", "that", "allows", "clients", "to", "lookup", "the", "JMX", "IP", "/", "port", ".", "*", "*", "@", "param", "port", "rmi", "port", "to", "use", "*", "@", "throws", "IOException", "*", "/", "private", "void", "startRmiRegistry", "(", "int", "port", ")", "throws", "IOException", "{", "rmiRegistry", "=", "LocateRegistry", ".", "createRegistry", "(", "port", ")", ";", "}", "/", "**", "*", "Starts", "a", "JMX", "connector", "that", "allows", "(", "un", ")", "registering", "MBeans", "with", "the", "MBean", "server", "and", "RMI", "invocations", ".", "*", "*", "@", "param", "port", "jmx", "port", "to", "use", "*", "@", "throws", "IOException", "*", "/", "private", "void", "startJmxService", "(", "int", "port", ")", "throws", "IOException", "{", "connector", "=", "JMXConnectorServerFactory", ".", "newJMXConnectorServer", "(", "url", ",", "null", ",", "ManagementFactory", ".", "getPlatformMBeanServer", "(", "))", ";"], "docstring_tokens": ["information", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "check", "if", "we", "have", "a", "valid", "interface", "*", "/", "if", "(", "if_num", ">", "16", ")", "{", "kfree", "(", "config_data", ")", ";", "return", "-", "EINVAL", ";", "}", "if", "(", "id", "-", ">", "driver_info", ")", "{", "/", "*", "if_num", "is", "controlled", "by", "the", "device", ",", "driver_info", "is", "a", "0", "terminated", "*", "array", ".", "Make", "sure", ",", "the", "access", "is", "in", "bounds", "!", "*", "/", "for", "(", "i", "=", "0", ";", "i", "<", "=", "if_num", ";", "+", "+", "i", ")", "if", "(", "((", "u32", "*", ")(", "id", "-", ">", "driver_info", ")", ")[", "i", "]", "=", "=", "0", ")", "goto", "exit", ";", "}", "else", "{", "if", "(", "port_spec", "<", "0", ")", "goto", "exit", ";", "}</s>if", "(", "id", "-", ">", "driver_info", ")", "else"], "docstring_tokens": ["out-of-bounds", "read"]}
{"contents": ["empty"], "code_tokens": ["*", "Release", "ImageMagick", "version", "6", ".", "9", ".", "6", "-", "8", ",", "GIT", "revision", "11219", ":", "11d48fe", ":", "20161210", ".", "(", "void", ")", "CloneString", "(", "&", "draw_info", "-", ">", "geometry", ",", "geometry", ")", ";", "(", "void", ")", "CloneString", "(", "&", "draw_info", "-", ">", "geometry", ",", "geometry", ")", ";</s>*", "Release", "ImageMagick", "version", "6", ".", "9", ".", "6", "-", "8", ",", "GIT", "revision", "11218", ":", "2f8c6dd", ":", "20161210", ".", "draw_info", "-", ">", "geometry", "=", "AcquireString", "(", "geometry", ")", ";", "draw_info", "-", ">", "geometry", "=", "AcquireString", "(", "geometry", ")", ";"], "docstring_tokens": ["out-of-bounds", "write"]}
{"contents": ["empty"], "code_tokens": ["keylen", "=", "utf8s_to_utf16s", "(", "key_name", ",", "strlen", "(", "key_name", ")", ",", "UTF16_HOST_ENDIAN", ",", "(", "wchar_t", "*", ")", "kvp_data", "-", ">", "data", ".", "key", ",", "HV_KVP_EXCHANGE_MAX_KEY_SIZE", "/", "2", ")", ";", "valuelen", "=", "utf8s_to_utf16s", "(", "value", ",", "strlen", "(", "value", ")", ",", "UTF16_HOST_ENDIAN", ",", "(", "wchar_t", "*", ")", "kvp_data", "-", ">", "data", ".", "value", ",", "HV_KVP_EXCHANGE_MAX_VALUE_SIZE", "/", "2", ")", ";", "*", "outlen", "=", "utf8s_to_utf16s", "(", "name", ",", "len", ",", "UTF16_HOST_ENDIAN", ",", "(", "wchar_t", "*", ")", "outname", ",", "FAT_LFN_LEN", "+", "2", ")", ";", "static", "inline", "void", "put_utf16", "(", "wchar_t", "*", "s", ",", "unsigned", "c", ",", "enum", "utf16_endian", "endian", ")", "{", "switch", "(", "endian", ")", "{", "default", ":", "*", "s", "=", "(", "wchar_t", ")", "c", ";", "break", ";", "case", "UTF16_LITTLE_ENDIAN", ":", "*", "s", "=", "__cpu_to_le16", "(", "c", ")", ";", "break", ";", "case", "UTF16_BIG_ENDIAN", ":", "*", "s", "=", "__cpu_to_be16", "(", "c", ")", ";", "break", ";", "}", "}", "int", "utf8s_to_utf16s", "(", "const", "u8", "*", "s", ",", "int", "len", ",", "enum", "utf16_endian", "endian", ",", "wchar_t", "*", "pwcs", ",", "int", "maxlen", ")", "while", "(", "len", ">", "0", "&", "&", "maxlen", ">", "0", "&", "&", "*", "s", ")", "{", "s", "+", "=", "size", ";", "len", "-", "=", "size", ";", "if", "(", "maxlen", "<", "2", ")", "break", ";", "put_utf16", "(", "op", "+", "+,", "SURROGATE_PAIR", "|", "(", "(", "u", ">", ">", "10", ")", "&", "SURROGATE_BITS", ")", ",", "endian", ")", ";", "put_utf16", "(", "op", "+", "+,", "SURROGATE_PAIR", "|", "(", "u", "&", "SURROGATE_BITS", ")", ",", "endian", ")", ";", "maxlen", "-", "=", "2", ";", "put_utf16", "(", "op", "+", "+,", "u", ",", "endian", ")", ";", "maxlen", "-", "-;", "put_utf16", "(", "op", "+", "+,", "*", "s", "+", "+,", "endian", ")", ";", "maxlen", "-", "-;", "/", "*", "nls_base", ".", "c", "*", "/", "extern", "int", "utf8s_to_utf16s", "(", "const", "u8", "*", "s", ",", "int", "len", ",", "enum", "utf16_endian", "endian", ",", "wchar_t", "*", "pwcs", ",", "int", "maxlen", ")", ";</s>keylen", "=", "utf8s_to_utf16s", "(", "key_name", ",", "strlen", "(", "key_name", ")", ",", "(", "wchar_t", "*", ")", "kvp_data", "-", ">", "data", ".", "key", ")", ";", "valuelen", "=", "utf8s_to_utf16s", "(", "value", ",", "strlen", "(", "value", ")", ",", "(", "wchar_t", "*", ")", "kvp_data", "-", ">", "data", ".", "value", ")", ";", "*", "outlen", "=", "utf8s_to_utf16s", "(", "name", ",", "len", ",", "(", "wchar_t", "*", ")", "outname", ")", ";", "int", "utf8s_to_utf16s", "(", "const", "u8", "*", "s", ",", "int", "len", ",", "wchar_t", "*", "pwcs", ")", "while", "(", "*", "s", "&", "&", "len", ">", "0", ")", "{", "*", "op", "+", "+", "=", "(", "wchar_t", ")", "(", "SURROGATE_PAIR", "|", "(", "(", "u", ">", ">", "10", ")", "&", "SURROGATE_BITS", ")", ");", "*", "op", "+", "+", "=", "(", "wchar_t", ")", "(", "SURROGATE_PAIR", "|", "(", "u", "&", "SURROGATE_BITS", ")", ");", "*", "op", "+", "+", "=", "(", "wchar_t", ")", "u", ";", "s", "+", "=", "size", ";", "len", "-", "=", "size", ";", "*", "op", "+", "+", "=", "*", "s", "+", "+;", "/", "*", "nls", ".", "c", "*", "/", "extern", "int", "utf8s_to_utf16s", "(", "const", "u8", "*", "s", ",", "int", "len", ",", "wchar_t", "*", "pwcs", ")", ";"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["struct", "inet6_dev", "*", "idev", "=", "ip6_dst_idev", "(", "&", "rt", "-", ">", "u", ".", "dst", ")", ";", "if", "(", "ipv6_dev_get_saddr", "(", "idev", "?", "idev", "-", ">", "dev", ":", "NULL", ",</s>if", "(", "ipv6_dev_get_saddr", "(", "ip6_dst_idev", "(", "&", "rt", "-", ">", "u", ".", "dst", ")", "->", "dev", ","], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["/", "**", "*", "Returns", "a", "securely", "-", "derived", ",", "deterministic", "value", "from", "the", "provided", "plaintext", "property", "*", "value", ".", "This", "is", "because", "sensitive", "values", "should", "not", "be", "disclosed", "through", "the", "*", "logs", ".", "However", ",", "the", "equality", "or", "difference", "of", "the", "sensitive", "value", "can", "be", "important", ",", "so", "it", "cannot", "be", "ignored", "completely", ".", "*", "*", "The", "specific", "derivation", "process", "is", "unimportant", "as", "long", "as", "it", "is", "a", "salted", ",", "*", "cryptographically", "-", "secure", "hash", "function", "with", "an", "iteration", "cost", "sufficient", "for", "password", "*", "storage", "in", "other", "applications", ".", "*", "*", "@", "param", "sensitivePropertyValue", "the", "plaintext", "property", "value", "*", "@", "return", "a", "deterministic", "string", "value", "which", "represents", "this", "input", "but", "is", "safe", "to", "print", "in", "a", "log", "*", "/", "public", "static", "String", "getLoggableRepresentationOfSensitiveValue", "(", "String", "sensitivePropertyValue", ")", "{", "/", "/", "TODO", ":", "Use", "DI", "/", "IoC", "to", "inject", "this", "implementation", "in", "the", "constructor", "of", "the", "FingerprintFactory", "/", "/", "There", "is", "little", "initialization", "cost", ",", "so", "it", "doesn", "'", "t", "make", "sense", "to", "cache", "this", "as", "a", "field", "SecureHasher", "secureHasher", "=", "new", "Argon2SecureHasher", "(", ");", "/", "/", "TODO", ":", "Extend", "{", "@", "link", "StringEncryptor", "}", "with", "secure", "hashing", "capability", "and", "inject", "?", "return", "getLoggableRepresentationOfSensitiveValue", "(", "sensitivePropertyValue", ",", "secureHasher", ")", ";", "}", "/", "**", "*", "Returns", "a", "securely", "-", "derived", ",", "deterministic", "value", "from", "the", "provided", "plaintext", "property", "*", "value", ".", "This", "is", "because", "sensitive", "values", "should", "not", "be", "disclosed", "through", "the", "*", "logs", ".", "However", ",", "the", "equality", "or", "difference", "of", "the", "sensitive", "value", "can", "be", "important", ",", "so", "it", "cannot", "be", "ignored", "completely", ".", "*", "*", "The", "specific", "derivation", "process", "is", "determined", "by", "the", "provided", "{", "@", "link", "SecureHasher", "}", "implementation", ".", "*", "*", "@", "param", "sensitivePropertyValue", "the", "plaintext", "property", "value", "*", "@", "param", "secureHasher", "an", "instance", "of", "{", "@", "link", "SecureHasher", "}", "which", "will", "be", "used", "to", "mask", "the", "value", "*", "@", "return", "a", "deterministic", "string", "value", "which", "represents", "this", "input", "but", "is", "safe", "to", "print", "in", "a", "log", "*", "/", "public", "static", "String", "getLoggableRepresentationOfSensitiveValue", "(", "String", "sensitivePropertyValue", ",", "SecureHasher", "secureHasher", ")", "{", "return", "\"", "[", "MASKED", "]", "(", "\"", "+", "secureHasher", ".", "hashBase64", "(", "sensitivePropertyValue", ")", "+", "\"", ")\"", ";", "}", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Comparator", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "SortedMap", ";", "import", "java", ".", "util", ".", "TreeMap", ";", "import", "java", ".", "util", ".", "stream", ".", "Stream", ";", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "javax", ".", "xml", ".", "validation", ".", "Schema", ";", "import", "javax", ".", "xml", ".", "validation", ".", "SchemaFactory", ";", "import", "org", ".", "apache", ".", "nifi", ".", "security", ".", "util", ".", "crypto", ".", "CipherUtility", ";", "return", "CipherUtility", ".", "getLoggableRepresentationOfSensitiveValue", "(", "decrypt", "(", "encryptedPropertyValue", ")", ");", "def", "maskedValue", "=", "(", "fingerprint", "=", "~", "/", "\\[", "MASKED", "\\", "]", "\\", "([", "\\", "w", "\\", "/\\", "+=", "]+", "\\)", "/)", "assert", "maskedValue", "logger", ".", "info", "(", "\"", "Masked", "value", ":", "$", "{", "maskedValue", "[", "0", "]", "}\"", ")", "final", "String", "hashedProxyPassword", "=", "\"", "[", "MASKED", "]", "(", "\"", "+", "new", "Argon2SecureHasher", "(", ").", "hashBase64", "(", "proxyPassword", ")", "+", "\"", ")\"", ";", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "apache", ".", "nifi", "<", "/", "groupId", ">", "<", "artifactId", ">", "nifi", "-", "security", "-", "utils", "<", "/", "artifactId", ">", "<", "version", ">", "1", ".", "12", ".", "0", "-", "SNAPSHOT", "<", "/", "version", ">", "<", "/", "dependency", ">", "<", "version", ">", "2", ".", "8", ".", "2", "<", "/", "version", ">", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "codehaus", ".", "groovy", "<", "/", "groupId", ">", "<", "artifactId", ">", "groovy", "-", "json", "<", "/", "artifactId", ">", "<", "version", ">", "${", "nifi", ".", "groovy", ".", "version", "}", "</", "version", ">", "<", "/", "dependency", ">", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "LinkedList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Queue", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "stream", ".", "Collectors", ";", "import", "javax", ".", "net", ".", "ssl", ".", "SSLContext", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", ".", "StatelessSecurityUtility", ";", "@", "Override", "@", "Override", "/", "/", "TODO", ":", "Only", "evaluates", "to", "true", "when", "all", "properties", "are", "present", ";", "some", "flows", "can", "have", "truststore", "properties", "and", "no", "keystore", "or", "vice", "-", "versa", "public", "static", "StatelessFlow", "createAndEnqueueFromJSON", "(", "final", "JsonObject", "jsonObject", ",", "final", "ClassLoader", "systemClassLoader", ",", "final", "File", "narWorkingDir", ")", "if", "(", "jsonObject", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "Running", "flow", "from", "json", ":", "\"", "+", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "jsonObject", ")", ");", "if", "(", "!", "jsonObject", ".", "has", "(", "REGISTRY", ")", "|", "|", "!", "jsonObject", ".", "has", "(", "BUCKETID", ")", "|", "|", "!", "jsonObject", ".", "has", "(", "FLOWID", ")", ")", "{", "final", "String", "registryurl", "=", "jsonObject", ".", "getAsJsonPrimitive", "(", "REGISTRY", ")", ".", "getAsString", "(", ");", "final", "String", "bucketID", "=", "jsonObject", ".", "getAsJsonPrimitive", "(", "BUCKETID", ")", ".", "getAsString", "(", ");", "final", "String", "flowID", "=", "jsonObject", ".", "getAsJsonPrimitive", "(", "FLOWID", ")", ".", "getAsString", "(", ");", "if", "(", "jsonObject", ".", "has", "(", "FLOWVERSION", ")", ")", "{", "flowVersion", "=", "jsonObject", ".", "getAsJsonPrimitive", "(", "FLOWVERSION", ")", ".", "getAsInt", "(", ");", "if", "(", "jsonObject", ".", "has", "(", "MATERIALIZECONTENT", ")", ")", "{", "materializeContent", "=", "jsonObject", ".", "getAsJsonPrimitive", "(", "MATERIALIZECONTENT", ")", ".", "getAsBoolean", "(", ");", "if", "(", "jsonObject", ".", "has", "(", "FAILUREPORTS", ")", ")", "{", "jsonObject", ".", "getAsJsonArray", "(", "FAILUREPORTS", ")", ".", "forEach", "(", "port", "-", ">", "failurePorts", ".", "add", "(", "port", ".", "getAsString", "(", "))", ");", "final", "SSLContext", "sslContext", "=", "getSSLContext", "(", "jsonObject", ")", ";", "if", "(", "jsonObject", ".", "has", "(", "PARAMETERS", ")", ")", "{", "final", "JsonElement", "parametersElement", "=", "jsonObject", ".", "get", "(", "PARAMETERS", ")", ";", "flow", ".", "enqueueFromJSON", "(", "jsonObject", ")", ";", "import", "org", ".", "apache", ".", "nifi", ".", "controller", ".", "repository", ".", "claim", ".", "ContentClaim", ";", "import", "org", ".", "apache", ".", "nifi", ".", "flowfile", ".", "FlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "flowfile", ".", "attributes", ".", "CoreAttributes", ";", "import", "org", ".", "apache", ".", "nifi", ".", "processor", ".", "exception", ".", "FlowFileAccessException", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stream", ".", "io", ".", "StreamUtils", ";", "attributes", ".", "put", "(", "CoreAttributes", ".", "FILENAME", ".", "key", "(", "),", "System", ".", "nanoTime", "(", ")", "+", "\"", ".", "statelessFlowFile", "\"", ");", "/", "/", "TODO", ":", "Hex", "encode", "binary", "content", "if", "it", "is", "not", "plaintext", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", ";", "import", "static", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "Program", ".", "JSON_FLAG", ";", "import", "static", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "Program", ".", "YARN_JSON_FLAG", ";", "import", "com", ".", "google", ".", "gson", ".", "JsonElement", ";", "import", "com", ".", "google", ".", "gson", ".", "JsonObject", ";", "import", "com", ".", "google", ".", "gson", ".", "JsonParser", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "org", ".", "apache", ".", "nifi", ".", "security", ".", "util", ".", "crypto", ".", "CipherUtility", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "Program", ";", "public", "class", "StatelessSecurityUtility", "{", "/", "**", "*", "Returns", "a", "masked", "value", "of", "this", "input", ".", "*", "*", "@", "param", "sensitiveValue", "the", "provided", "input", "*", "@", "return", "a", "securely", "-", "hashed", ",", "deterministic", "output", "value", "*", "/", "public", "static", "String", "getLoggableRepresentationOfSensitiveValue", "(", "String", "sensitiveValue", ")", "{", "return", "CipherUtility", ".", "getLoggableRepresentationOfSensitiveValue", "(", "sensitiveValue", ")", ";", "}", "/", "**", "*", "Returns", "a", "String", "representation", "of", "this", "JSON", "object", "with", "a", "masked", "value", "for", "any", "sensitive", "parameters", ".", "*", "*", "@", "param", "json", "the", "JSON", "object", "*", "@", "return", "the", "string", "contents", "with", "sensitive", "parameters", "masked", "*", "/", "public", "static", "String", "getLoggableRepresentationOfJsonObject", "(", "final", "JsonObject", "json", ")", "{", "JsonObject", "localJson", "=", "null", ";", "boolean", "maskedParams", "=", "false", ";", "if", "(", "json", ".", "has", "(", "\"", "parameters", "\"", "))", "{", "JsonObject", "parameters", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ");", "for", "(", "Map", ".", "Entry", "<", "String", ",", "JsonElement", ">", "e", ":", "parameters", ".", "entrySet", "(", "))", "{", "if", "(", "e", ".", "getValue", "(", ").", "isJsonObject", "(", "))", "{", "JsonObject", "paramDescriptorMap", "=", "(", "JsonObject", ")", "e", ".", "getValue", "(", ");", "if", "(", "paramDescriptorMap", ".", "has", "(", "\"", "sensitive", "\"", ")", "&", "&", "paramDescriptorMap", ".", "getAsJsonPrimitive", "(", "\"", "sensitive", "\"", ").", "getAsBoolean", "(", "))", "{", "maskedParams", "=", "true", ";", "if", "(", "localJson", "=", "=", "null", ")", "{", "localJson", "=", "json", ".", "deepCopy", "(", ");", "}", "/", "/", "Point", "the", "PDM", "reference", "to", "the", "copied", "JSON", "so", "we", "don", "'", "t", "modify", "the", "parameter", "internals", "paramDescriptorMap", "=", "localJson", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "e", ".", "getKey", "(", "))", ".", "getAsJsonObject", "(", ");", "/", "/", "This", "parameter", "is", "sensitive", ";", "replace", "its", "\"", "value", "\"", "with", "the", "masked", "value", "String", "maskedValue", "=", "getLoggableRepresentationOfSensitiveValue", "(", "paramDescriptorMap", ".", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", "))", ";", "paramDescriptorMap", ".", "addProperty", "(", "\"", "value", "\"", ",", "maskedValue", ")", ";", "localJson", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "add", "(", "e", ".", "getKey", "(", "),", "paramDescriptorMap", ")", ";", "}", "}", "}", "}", "/", "/", "If", "no", "params", "were", "changed", ",", "return", "the", "original", "JSON", "if", "(", "!", "maskedParams", ")", "{", "return", "json", ".", "toString", "(", ");", "}", "else", "{", "return", "localJson", ".", "toString", "(", ");", "}", "}", "/", "**", "*", "Returns", "a", "String", "containing", "the", "provided", "arguments", ",", "with", "any", "JSON", "objects", "having", "their", "*", "sensitive", "values", "masked", ".", "Elements", "are", "joined", "with", "{", "@", "code", ",", "}.", "If", "{", "@", "code", "isVerbose", "}", "is", "*", "{", "@", "code", "false", "}", ",", "elides", "the", "JSON", "entirely", ".", "*", "*", "@", "param", "args", "the", "list", "of", "arguments", "*", "@", "param", "isVerbose", "if", "{", "@", "code", "true", "}", ",", "will", "print", "the", "complete", "JSON", "value", "*", "@", "return", "the", "masked", "string", "response", "*", "/", "public", "static", "String", "formatArgs", "(", "String", "[", "]", "args", ",", "boolean", "isVerbose", ")", "{", "List", "<", "String", ">", "argsList", "=", "new", "ArrayList", "<", ">(", "Arrays", ".", "asList", "(", "args", ")", ");", "int", "jsonIndex", "=", "determineJsonIndex", "(", "argsList", ")", ";", "if", "(", "jsonIndex", "!", "=", "-", "1", ")", "{", "if", "(", "isVerbose", ")", "{", "JsonObject", "json", "=", "new", "JsonParser", "(", ").", "parse", "(", "argsList", ".", "get", "(", "jsonIndex", ")", ").", "getAsJsonObject", "(", ");", "String", "maskedJson", "=", "getLoggableRepresentationOfJsonObject", "(", "json", ")", ";", "argsList", ".", "add", "(", "jsonIndex", ",", "maskedJson", ")", ";", "}", "else", "{", "argsList", ".", "add", "(", "jsonIndex", ",", "\"", "{.", "..", "json", ".", "..", "}\"", ");", "}", "argsList", ".", "remove", "(", "jsonIndex", "+", "1", ")", ";", "}", "return", "String", ".", "join", "(", "\",", "\",", "argsList", ")", ";", "}", "/", "**", "*", "Returns", "a", "String", "containing", "the", "JSON", "object", "with", "any", "sensitive", "values", "masked", ".", "*", "*", "@", "param", "json", "the", "JSON", "object", "*", "@", "return", "a", "masked", "string", "*", "/", "public", "static", "String", "formatJson", "(", "JsonObject", "json", ")", "{", "return", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "json", ")", ";", "}", "/", "**", "*", "Returns", "the", "index", "of", "the", "JSON", "string", "in", "this", "list", "(", "checks", "{", "@", "link", "Program", "#", "JSON_FLAG", "}", "first", ",", "then", "{", "@", "link", "Program", "#", "YARN_JSON_FLAG", "}", ").", "Returns", "-", "1", "if", "no", "JSON", "is", "present", ".", "*", "*", "@", "param", "argsList", "the", "list", "of", "arguments", "*", "@", "return", "the", "index", "of", "the", "JSON", "element", "or", "-", "1", "*", "/", "public", "static", "int", "determineJsonIndex", "(", "List", "<", "String", ">", "argsList", ")", "{", "int", "jsonIndex", "=", "-", "1", ";", "if", "(", "argsList", ".", "contains", "(", "JSON_FLAG", ")", ")", "{", "jsonIndex", "=", "determineJsonIndex", "(", "argsList", ",", "JSON_FLAG", ")", ";", "}", "else", "if", "(", "argsList", ".", "contains", "(", "YARN_JSON_FLAG", ")", ")", "{", "jsonIndex", "=", "determineJsonIndex", "(", "argsList", ",", "YARN_JSON_FLAG", ")", ";", "}", "return", "jsonIndex", ";", "}", "/", "**", "*", "Returns", "the", "index", "of", "the", "JSON", "string", "in", "this", "list", "for", "the", "given", "flag", ".", "Returns", "-", "1", "if", "no", "JSON", "is", "present", ".", "*", "*", "@", "param", "argsList", "the", "list", "of", "arguments", "*", "@", "param", "flag", "either", "{", "@", "link", "Program", "#", "JSON_FLAG", "}", "or", "{", "@", "link", "Program", "#", "YARN_JSON_FLAG", "}", "*", "@", "return", "the", "index", "of", "the", "JSON", "element", "or", "-", "1", "*", "/", "public", "static", "int", "determineJsonIndex", "(", "List", "<", "String", ">", "argsList", ",", "String", "flag", ")", "{", "/", "/", "One", "of", "the", "arguments", "is", "a", "JSON", "string", "int", "flagIndex", "=", "argsList", ".", "indexOf", "(", "flag", ")", ";", "return", "flagIndex", ">", "=", "0", "?", "flagIndex", "+", "1", ":", "-", "1", ";", "}", "/", "**", "*", "Returns", "a", "masked", "String", "result", "given", "the", "input", "if", "sensitive", ";", "the", "input", "intact", "if", "not", ".", "*", "*", "@", "param", "input", "the", "input", "string", "*", "@", "return", "masked", "result", "if", "input", "is", "sensitive", ",", "input", "otherwise", "*", "/", "public", "static", "String", "sanitizeString", "(", "String", "input", ")", "{", "if", "(", "isSensitive", "(", "input", ")", ")", "{", "return", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfSensitiveValue", "(", "input", ")", ";", "}", "else", "{", "return", "input", ";", "}", "}", "/", "**", "*", "Returns", "{", "@", "code", "true", "}", "if", "the", "provided", "{", "@", "code", "input", "}", "is", "determined", "to", "be", "a", "sensitive", "value", "that", "*", "needs", "masking", "before", "output", ".", "This", "method", "uses", "a", "series", "of", "regular", "expressions", "to", "define", "common", "*", "keywords", "like", "{", "@", "code", "secret", "}", "or", "{", "@", "code", "password", "}", "that", "indicate", "a", "sensitive", "value", ".", "*", "*", "@", "param", "input", "the", "input", "string", "*", "@", "return", "true", "if", "the", "value", "should", "be", "masked", "*", "/", "public", "static", "boolean", "isSensitive", "(", "String", "input", ")", "{", "return", "input", "!", "=", "null", "&", "&", "Program", ".", "SENSITIVE_INDICATORS", ".", "stream", "(", ").", "anyMatch", "(", "indicator", "-", ">", "input", ".", "toLowerCase", "(", ").", "matches", "(", "\".", "*\"", "+", "indicator", "+", "\"", ".*", "\")", ");", "}", "}", "@", "@", "-", "18", ",", "33", "+", "18", ",", "49", "@", "@", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "RunnableFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "StatelessFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", ".", "StatelessSecurityUtility", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "openwhisk", ".", "StatelessNiFiOpenWhiskAction", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "yarn", ".", "YARNServiceUtil", ";", "public", "static", "final", "String", "SENSITIVE_TRUE_JSON_SEGMENT", "=", "\"", "\\\"", "sensitive", "\\", "\"\\", "\\", "s", "*", ":\\", "\\", "s", "*", "\\\"", "true", "\\", "\"\"", ";", "public", "static", "final", "String", "PASSWORD_SEGMENT", "=", "\"", "password", "\"", ";", "public", "static", "final", "String", "TOKEN_SEGMENT", "=", "\"", "token", "\"", ";", "public", "static", "final", "String", "ACCESS_SEGMENT", "=", "\"", "access", "\"", ";", "public", "static", "final", "String", "SECRET_SEGMENT", "=", "\"", "secret", "\"", ";", "public", "static", "final", "String", "API_KEY_SEGMENT", "=", "\"", "api_key", "\"", ";", "public", "static", "final", "List", "<", "String", ">", "SENSITIVE_INDICATORS", "=", "Arrays", ".", "asList", "(", "SENSITIVE_TRUE_JSON_SEGMENT", ",", "PASSWORD_SEGMENT", ",", "TOKEN_SEGMENT", ",", "ACCESS_SEGMENT", ",", "SECRET_SEGMENT", ",", "API_KEY_SEGMENT", ")", ";", "public", "static", "final", "String", "JSON_FLAG", "=", "\"", "--", "json", "\"", ";", "public", "static", "final", "String", "FILE_FLAG", "=", "\"", "--", "file", "\"", ";", "public", "static", "final", "String", "YARN_JSON_FLAG", "=", "\"", "--", "yarnjson", "\"", ";", "private", "static", "boolean", "isVerbose", "=", "true", ";", "if", "(", "hadoopTokenFileLocation", "!", "=", "null", "&", "&", "!", "hadoopTokenFileLocation", ".", "equals", "(", "\"\"", "))", "{", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "formatArgs", "(", "args", ")", ");", "if", "(", "args", "[", "5", "]", ".", "equals", "(", "FILE_FLAG", ")", ")", "{", "}", "else", "if", "(", "args", "[", "5", "]", ".", "equals", "(", "JSON_FLAG", ")", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "formatArgs", "(", "args", ")", ");", "JSON_FLAG", ",", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "FILE_FLAG", ")", ")", "{", "}", "else", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "JSON_FLAG", ")", ")", "{", "}", "else", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "YARN_JSON_FLAG", ")", ")", "{", "json", "=", "args", "[", "3", "]", ".", "replace", "(", "';", "',", "'", ",'", ");", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "formatArgs", "(", "args", ")", ");", "System", ".", "out", ".", "println", "(", "\"", "Running", "from", "json", ":", "\"", "+", "StatelessSecurityUtility", ".", "formatJson", "(", "jsonObject", ")", ");", "/", "/", "TODO", ":", "Introduce", "verbose", "flag", "to", "determine", "if", "flowfiles", "should", "be", "printed", "on", "completion", "if", "(", "isVerbose", ")", "{", "outputFlowFiles", ".", "forEach", "(", "f", "-", ">", "System", ".", "out", ".", "println", "(", "f", ".", "toStringFull", "(", "))", ");", "}", "if", "(", "isVerbose", ")", "{", "outputFlowFiles", ".", "forEach", "(", "f", "-", ">", "System", ".", "out", ".", "println", "(", "f", ".", "toStringFull", "(", "))", ");", "}", "public", "static", "boolean", "isVerbose", "(", ")", "{", "return", "isVerbose", ";", "}", "/", "**", "*", "Returns", "a", "String", "containing", "the", "provided", "arguments", ",", "with", "any", "JSON", "objects", "having", "their", "*", "sensitive", "values", "masked", ".", "Elements", "are", "joined", "with", "{", "@", "code", ",", "}.", "If", "{", "@", "link", "#", "isVerbose", "(", ")}", "is", "*", "{", "@", "code", "false", "}", ",", "elides", "the", "JSON", "entirely", ".", "*", "*", "@", "param", "args", "the", "list", "of", "arguments", "*", "@", "return", "the", "masked", "string", "response", "*", "/", "static", "String", "formatArgs", "(", "String", "[", "]", "args", ")", "{", "return", "StatelessSecurityUtility", ".", "formatArgs", "(", "args", ",", "isVerbose", "(", "))", ";", "}", "+", "\"", ",", "\"", "+", "StatelessFlow", ".", "FLOWID", "+", "\"", ".\"", ");", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "RunnableFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "StatelessFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", ".", "StatelessSecurityUtility", ";", "/", "/", "TODO", ":", "This", "runs", "a", "plaintext", "HTTP", "server", "System", ".", "out", ".", "println", "(", "StatelessSecurityUtility", ".", "formatJson", "(", "inputObject", ")", ");", "System", ".", "out", ".", "println", "(", "\"", "Input", ":", "\"", "+", "StatelessSecurityUtility", ".", "formatJson", "(", "inputObject", ")", ");", ".", "collect", "(", "Collectors", ".", "toMap", "(", "Map", ".", "Entry", ":", ":", "getKey", ",", "item", "-", ">", "item", ".", "getValue", "(", ").", "getAsString", "(", "))", ");", "/", "/", "TODO", ":", "This", "leaks", "the", "stacktrace", "in", "the", "HTTP", "response", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", ".", "StatelessSecurityUtility", ";", "System", ".", "out", ".", "println", "(", "StatelessSecurityUtility", ".", "formatJson", "(", "spec", ")", ");", "System", ".", "out", ".", "println", "(", "StatelessSecurityUtility", ".", "formatArgs", "(", "updatedLaunchCommand", ",", "true", ")", ");", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "security", "import", "com", ".", "google", ".", "gson", ".", "JsonObject", "import", "com", ".", "google", ".", "gson", ".", "JsonParser", "import", "groovy", ".", "json", ".", "JsonSlurper", "import", "org", ".", "bouncycastle", ".", "jce", ".", "provider", ".", "BouncyCastleProvider", "import", "org", ".", "junit", ".", "After", "import", "org", ".", "junit", ".", "Before", "import", "org", ".", "junit", ".", "BeforeClass", "import", "org", ".", "junit", ".", "Test", "import", "org", ".", "junit", ".", "runner", ".", "RunWith", "import", "org", ".", "junit", ".", "runners", ".", "JUnit4", "import", "org", ".", "slf4j", ".", "Logger", "import", "org", ".", "slf4j", ".", "LoggerFactory", "import", "java", ".", "security", ".", "Security", "@", "RunWith", "(", "JUnit4", ".", "class", ")", "class", "StatelessSecurityUtilityTest", "extends", "GroovyTestCase", "{", "private", "static", "final", "Logger", "logger", "=", "LoggerFactory", ".", "getLogger", "(", "StatelessSecurityUtilityTest", ".", "class", ")", "private", "static", "final", "String", "JSON_ARGS", "=", "\"", "\"\"", "{", "\"", "registryUrl", "\"", ":", "\"", "http", ":", "//", "nifi", "-", "registry", "-", "service", ":", "18080", "\"", ",", "\"", "bucketId", "\"", ":", "\"", "50ca47f9", "-", "b07a", "-", "4199", "-", "97cd", "-", "e2b519d397d1", "\"", ",", "\"", "flowId", "\"", ":", "\"", "9fbe1d70", "-", "82ec", "-", "44de", "-", "b815", "-", "c7f838af181a", "\"", ",", "\"", "parameters", "\"", ":", "{", "\"", "DB_IP", "\"", ":", "\"", "127", ".", "0", ".", "0", ".", "1", "\"", ",", "\"", "DB_NAME", "\"", ":", "\"", "database", "\"", ",", "\"", "DB_PASS", "\"", ":", "{", "\"", "sensitive", "\"", ":", "\"", "true", "\"", ",", "\"", "value", "\"", ":", "\"", "password", "\"", "}", ",", "\"", "DB_USER", "\"", ":", "\"", "username", "\"", "}", "}", "\"\"", "\"", "private", "final", "String", "MASKED_REGEX", "=", "/", "\\[", "MASKED", "\\", "]", "\\", "([", "\\", "w", "\\", "/\\", "+=", "]+", "\\)", "/", "@", "BeforeClass", "static", "void", "setUpOnce", "(", ")", "{", "Security", ".", "addProvider", "(", "new", "BouncyCastleProvider", "(", "))", "logger", ".", "metaClass", ".", "methodMissing", "=", "{", "String", "name", ",", "args", "-", ">", "logger", ".", "info", "(", "\"[", "${", "name", "?", ".", "toUpperCase", "(", ")}", "]", "$", "{(", "args", "as", "List", ")", ".", "join", "(", "\"", "\"", ")}", "\")", "}", "}", "@", "Before", "void", "setUp", "(", ")", "{", "}", "@", "After", "void", "tearDown", "(", ")", "{", "}", "@", "Test", "void", "testShouldMaskSensitiveParameterInJsonObject", "(", ")", "{", "/", "/", "Arrange", "JsonObject", "json", "=", "new", "JsonParser", "(", ").", "parse", "(", "JSON_ARGS", ")", ".", "getAsJsonObject", "(", ")", "def", "dbPass", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_PASS", "\"", ")", "logger", ".", "info", "(", "\"", "DB", "password", ":", "$", "{", "dbPass", ".", "toString", "(", ")}", "\")", "def", "dbPassSensitive", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "sensitive", "\"", ").", "getAsBoolean", "(", ")", "def", "dbPassword", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "/", "/", "Act", "String", "output", "=", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "json", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "!", "(", "output", "=", "~", "dbPassword", ")", "def", "masked", "=", "output", "=", "~", "MASKED_REGEX", "assert", "masked", "}", "@", "Test", "void", "testShouldMaskMultipleSensitiveParametersInJsonObject", "(", ")", "{", "/", "/", "Arrange", "final", "String", "MULTIPLE_SENSITIVE_JSON_ARGS", "=", "\"", "\"\"", "{", "\"", "registryUrl", "\"", ":", "\"", "http", ":", "//", "nifi", "-", "registry", "-", "service", ":", "18080", "\"", ",", "\"", "bucketId", "\"", ":", "\"", "50ca47f9", "-", "b07a", "-", "4199", "-", "97cd", "-", "e2b519d397d1", "\"", ",", "\"", "flowId", "\"", ":", "\"", "9fbe1d70", "-", "82ec", "-", "44de", "-", "b815", "-", "c7f838af181a", "\"", ",", "\"", "parameters", "\"", ":", "{", "\"", "DB_IP", "\"", ":", "\"", "127", ".", "0", ".", "0", ".", "1", "\"", ",", "\"", "DB_NAME", "\"", ":", "\"", "database", "\"", ",", "\"", "DB_PASS", "\"", ":", "{", "\"", "sensitive", "\"", ":", "\"", "true", "\"", ",", "\"", "value", "\"", ":", "\"", "password", "\"", "}", ",", "\"", "DB_OTHER_PASS", "\"", ":", "{", "\"", "sensitive", "\"", ":", "\"", "true", "\"", ",", "\"", "value", "\"", ":", "\"", "otherPassword", "\"", "}", ",", "\"", "DB_USER", "\"", ":", "\"", "username", "\"", "}", "}", "\"\"", "\"", "JsonObject", "json", "=", "new", "JsonParser", "(", ").", "parse", "(", "MULTIPLE_SENSITIVE_JSON_ARGS", ")", ".", "getAsJsonObject", "(", ")", "def", "dbPass", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_PASS", "\"", ")", "logger", ".", "info", "(", "\"", "DB", "password", ":", "$", "{", "dbPass", ".", "toString", "(", ")}", "\")", "def", "dbPassword", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "def", "dbOtherPassword", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_OTHER_PASS", "\"", ").", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "/", "/", "Act", "String", "output", "=", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "json", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "!", "(", "output", "=", "~", "dbPassword", ")", "assert", "!", "(", "output", "=", "~", "dbOtherPassword", ")", "/", "/", "Use", "Groovy", "JSON", "assertions", "def", "groovyJson", "=", "new", "JsonSlurper", "(", ").", "parseText", "(", "output", ")", "assert", "groovyJson", ".", "parameters", ".", "DB_PASS", ".", "value", "=", "~", "MASKED_REGEX", "assert", "groovyJson", ".", "parameters", ".", "DB_OTHER_PASS", ".", "value", "=", "~", "MASKED_REGEX", "}", "@", "Test", "void", "testShouldNotMaskSensitiveFalseParameterInJsonObject", "(", ")", "{", "/", "/", "Arrange", "final", "String", "JSON_SENSITIVE_FALSE_ARGS", "=", "JSON_ARGS", ".", "replaceAll", "(", "'\"", "sensitive", "\"", ":", "\"", "true", "\"", "',", "'", "\"", "sensitive", "\"", ":", "\"", "false", "\"", "')", "JsonObject", "json", "=", "new", "JsonParser", "(", ").", "parse", "(", "JSON_SENSITIVE_FALSE_ARGS", ")", ".", "getAsJsonObject", "(", ")", "def", "dbPass", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_PASS", "\"", ")", "logger", ".", "info", "(", "\"", "DB", "password", ":", "$", "{", "dbPass", ".", "toString", "(", ")}", "\")", "def", "dbPassSensitive", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "sensitive", "\"", ").", "getAsBoolean", "(", ")", "assert", "!", "dbPassSensitive", "def", "dbPassword", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "/", "/", "Act", "String", "output", "=", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "json", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "output", "=", "~", "dbPassword", "assert", "output", "=", "=", "json", ".", "toString", "(", ")", "}", "@", "Test", "void", "testMaskSensitiveParameterInJsonObjectShouldNotHaveSideEffects", "(", ")", "{", "/", "/", "Arrange", "JsonObject", "json", "=", "new", "JsonParser", "(", ").", "parse", "(", "JSON_ARGS", ")", ".", "getAsJsonObject", "(", ")", "def", "dbPass", "=", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_PASS", "\"", ")", "logger", ".", "info", "(", "\"", "DB", "password", ":", "$", "{", "dbPass", ".", "toString", "(", ")}", "\")", "def", "dbPassSensitive", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "sensitive", "\"", ").", "getAsBoolean", "(", ")", "def", "dbPassword", "=", "dbPass", ".", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "/", "/", "Act", "String", "output", "=", "StatelessSecurityUtility", ".", "getLoggableRepresentationOfJsonObject", "(", "json", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "logger", ".", "info", "(", "\"", "Original", "JSON", "object", "after", "masking", ":", "$", "{", "json", ".", "toString", "(", ")}", "\")", "/", "/", "Assert", "assert", "json", ".", "getAsJsonObject", "(", "\"", "parameters", "\"", ").", "getAsJsonObject", "(", "\"", "DB_PASS", "\"", ").", "getAsJsonPrimitive", "(", "\"", "value", "\"", ").", "getAsString", "(", ")", "=", "=", "\"", "password", "\"", "}", "@", "Test", "void", "testShouldDetectSensitiveStrings", "(", ")", "{", "/", "/", "Arrange", "def", "sensitiveStrings", "=", "[", "'", "\"", "sensitive", "\"", ":", "\"", "true", "\"", "',", "'", "\"", "sensitive", "\"", ":\"", "true", "\"", "'.", "toUpperCase", "(", "),", "'", "\"", "sensitive", "\"", "\\", "t", ":", "\\", "t", "\"", "true", "\"", "',", "'", "\"", "sensitive", "\"", "\\", "n", ":", "\\", "n", "\\", "n", "\"", "true", "\"", "',", "'", "{\"", "parameter_name", "\"", ":", "{", "\"", "sensitive", "\"", ":", "\"", "true", "\"", ",", "\"", "value", "\"", ":", "\"", "password", "\"", "}", "}", "',", "'", "\"", "password", "\"", ":", "'", ",", "\"", "token", "\"", ",", "'", "\"", "access", "\"", ":", "\"", "some_key_value", "\"", "',", "'", "\"", "secret", "\"", ":", "\"", "my_secret", "\"", "'.", "toUpperCase", "(", ")", "]", "def", "safeStrings", "=", "[", "\"", "regular_json", "\"", ",", "'", "\"", "sensitive", "\"", ":", "\"", "false", "\"", "'", "]", "/", "/", "Act", "def", "sensitiveResults", "=", "sensitiveStrings", ".", "collectEntries", "{", "[", "it", ",", "StatelessSecurityUtility", ".", "isSensitive", "(", "it", ")", "]", "}", "logger", ".", "info", "(", "\"", "Sensitive", "results", ":", "$", "{", "sensitiveResults", "}", "\")", "def", "safeResults", "=", "safeStrings", ".", "collectEntries", "{", "[", "it", ",", "StatelessSecurityUtility", ".", "isSensitive", "(", "it", ")", "]", "}", "logger", ".", "info", "(", "\"", "Safe", "results", ":", "$", "{", "safeResults", "}", "\")", "/", "/", "Assert", "assert", "sensitiveResults", ".", "every", "{", "it", ".", "value", "}", "assert", "safeResults", ".", "every", "{", "!", "it", ".", "value", "}", "}", "@", "Test", "void", "testShouldFormatJson", "(", ")", "{", "/", "/", "Arrange", "final", "JsonObject", "JSON", "=", "new", "JsonParser", "(", ").", "parse", "(", "JSON_ARGS", ".", "replaceAll", "(", "\"\\", "n", "\"", ",", "\"", "\")", ").", "getAsJsonObject", "(", ")", "/", "/", "Act", "String", "output", "=", "StatelessSecurityUtility", ".", "formatJson", "(", "JSON", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "output", "=", "~", "MASKED_REGEX", "assert", "!", "(", "output", "=", "~", "\"", "password", "\"", ")", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "101", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", "import", "org", ".", "bouncycastle", ".", "jce", ".", "provider", ".", "BouncyCastleProvider", "import", "org", ".", "junit", ".", "After", "import", "org", ".", "junit", ".", "Before", "import", "org", ".", "junit", ".", "BeforeClass", "import", "org", ".", "junit", ".", "Test", "import", "org", ".", "junit", ".", "runner", ".", "RunWith", "import", "org", ".", "junit", ".", "runners", ".", "JUnit4", "import", "org", ".", "slf4j", ".", "Logger", "import", "org", ".", "slf4j", ".", "LoggerFactory", "import", "java", ".", "security", ".", "Security", "@", "RunWith", "(", "JUnit4", ".", "class", ")", "class", "ProgramTest", "extends", "GroovyTestCase", "{", "private", "static", "final", "Logger", "logger", "=", "LoggerFactory", ".", "getLogger", "(", "ProgramTest", ".", "class", ")", "private", "static", "final", "String", "JSON_ARGS", "=", "\"", "\"\"", "{", "\"", "registryUrl", "\"", ":", "\"", "http", ":", "//", "nifi", "-", "registry", "-", "service", ":", "18080", "\"", ",", "\"", "bucketId", "\"", ":", "\"", "50ca47f9", "-", "b07a", "-", "4199", "-", "97cd", "-", "e2b519d397d1", "\"", ",", "\"", "flowId", "\"", ":", "\"", "9fbe1d70", "-", "82ec", "-", "44de", "-", "b815", "-", "c7f838af181a", "\"", ",", "\"", "parameters", "\"", ":", "{", "\"", "DB_IP", "\"", ":", "\"", "127", ".", "0", ".", "0", ".", "1", "\"", ",", "\"", "DB_NAME", "\"", ":", "\"", "database", "\"", ",", "\"", "DB_PASS", "\"", ":", "{", "\"", "sensitive", "\"", ":", "\"", "true", "\"", ",", "\"", "value", "\"", ":", "\"", "password", "\"", "}", ",", "\"", "DB_USER", "\"", ":", "\"", "username", "\"", "}", "}", "\"\"", "\"", "private", "final", "String", "MASKED_REGEX", "=", "/", "\\[", "MASKED", "\\", "]", "\\", "([", "\\", "w", "\\", "/\\", "+=", "]+", "\\)", "/", "@", "BeforeClass", "static", "void", "setUpOnce", "(", ")", "{", "Security", ".", "addProvider", "(", "new", "BouncyCastleProvider", "(", "))", "logger", ".", "metaClass", ".", "methodMissing", "=", "{", "String", "name", ",", "args", "-", ">", "logger", ".", "info", "(", "\"[", "${", "name", "?", ".", "toUpperCase", "(", ")}", "]", "$", "{(", "args", "as", "List", ")", ".", "join", "(", "\"", "\"", ")}", "\")", "}", "}", "@", "Before", "void", "setUp", "(", ")", "{", "}", "@", "After", "void", "tearDown", "(", ")", "{", "}", "@", "Test", "void", "testShouldFormatArgs", "(", ")", "{", "/", "/", "Arrange", "final", "String", "[", "]", "ARGS", "=", "[", "\"", "RunFromRegistry", "\"", ",", "\"", "Once", "\"", ",", "\"", "--", "json", "\"", ",", "JSON_ARGS", "]", "as", "String", "[", "]", "/", "/", "Act", "String", "output", "=", "Program", ".", "formatArgs", "(", "ARGS", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "output", "=", "~", "MASKED_REGEX", "assert", "!", "(", "output", "=", "~", "\"", "password", "\"", ")", "}", "@", "Test", "void", "testShouldFormatArgsWhenVerbosityDisabled", "(", ")", "{", "/", "/", "Arrange", "final", "String", "[", "]", "ARGS", "=", "[", "\"", "RunFromRegistry", "\"", ",", "\"", "Once", "\"", ",", "\"", "--", "json", "\"", ",", "JSON_ARGS", "]", "as", "String", "[", "]", "Program", ".", "isVerbose", "=", "false", "/", "/", "Act", "String", "output", "=", "Program", ".", "formatArgs", "(", "ARGS", ")", "logger", ".", "info", "(", "\"", "Masked", "output", ":", "$", "{", "output", "}", "\")", "/", "/", "Assert", "assert", "output", ".", "contains", "(", "\"{", "..", ".", "json", ".", "..", "}\"", ")", "assert", "!", "(", "output", "=", "~", "\"", "password", "\"", ")", "Program", ".", "isVerbose", "=", "true", "}", "}</s>import", "org", ".", "apache", ".", "nifi", ".", "security", ".", "util", ".", "crypto", ".", "Argon2SecureHasher", ";", "import", "org", ".", "apache", ".", "nifi", ".", "security", ".", "util", ".", "crypto", ".", "SecureHasher", ";", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "javax", ".", "xml", ".", "validation", ".", "Schema", ";", "import", "javax", ".", "xml", ".", "validation", ".", "SchemaFactory", ";", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Comparator", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "SortedMap", ";", "import", "java", ".", "util", ".", "TreeMap", ";", "import", "java", ".", "util", ".", "stream", ".", "Stream", ";", "/", "/", "TODO", ":", "Use", "DI", "/", "IoC", "to", "inject", "this", "implementation", "in", "the", "constructor", "of", "the", "FingerprintFactory", "/", "/", "There", "is", "little", "initialization", "cost", ",", "so", "it", "doesn", "'", "t", "make", "sense", "to", "cache", "this", "as", "a", "field", "SecureHasher", "secureHasher", "=", "new", "Argon2SecureHasher", "(", ");", "/", "/", "TODO", ":", "Extend", "{", "@", "link", "StringEncryptor", "}", "with", "secure", "hashing", "capability", "and", "inject", "?", "return", "secureHasher", ".", "hashHex", "(", "decrypt", "(", "encryptedPropertyValue", ")", ");", "final", "String", "hashedProxyPassword", "=", "new", "Argon2SecureHasher", "(", ").", "hashHex", "(", "proxyPassword", ")", ";", "<", "version", ">", "2", ".", "7", "<", "/", "version", ">", "import", "javax", ".", "net", ".", "ssl", ".", "SSLContext", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "LinkedList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Queue", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "stream", ".", "Collectors", ";", "public", "static", "StatelessFlow", "createAndEnqueueFromJSON", "(", "final", "JsonObject", "args", ",", "final", "ClassLoader", "systemClassLoader", ",", "final", "File", "narWorkingDir", ")", "if", "(", "args", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "Running", "flow", "from", "json", ":", "\"", "+", "args", ".", "toString", "(", "))", ";", "if", "(", "!", "args", ".", "has", "(", "REGISTRY", ")", "|", "|", "!", "args", ".", "has", "(", "BUCKETID", ")", "|", "|", "!", "args", ".", "has", "(", "FLOWID", ")", ")", "{", "final", "String", "registryurl", "=", "args", ".", "getAsJsonPrimitive", "(", "REGISTRY", ")", ".", "getAsString", "(", ");", "final", "String", "bucketID", "=", "args", ".", "getAsJsonPrimitive", "(", "BUCKETID", ")", ".", "getAsString", "(", ");", "final", "String", "flowID", "=", "args", ".", "getAsJsonPrimitive", "(", "FLOWID", ")", ".", "getAsString", "(", ");", "if", "(", "args", ".", "has", "(", "FLOWVERSION", ")", ")", "{", "flowVersion", "=", "args", ".", "getAsJsonPrimitive", "(", "FLOWVERSION", ")", ".", "getAsInt", "(", ");", "if", "(", "args", ".", "has", "(", "MATERIALIZECONTENT", ")", ")", "{", "materializeContent", "=", "args", ".", "getAsJsonPrimitive", "(", "MATERIALIZECONTENT", ")", ".", "getAsBoolean", "(", ");", "if", "(", "args", ".", "has", "(", "FAILUREPORTS", ")", ")", "{", "args", ".", "getAsJsonArray", "(", "FAILUREPORTS", ")", ".", "forEach", "(", "port", "-", ">", "failurePorts", ".", "add", "(", "port", ".", "getAsString", "(", "))", ");", "final", "SSLContext", "sslContext", "=", "getSSLContext", "(", "args", ")", ";", "if", "(", "args", ".", "has", "(", "PARAMETERS", ")", ")", "{", "final", "JsonElement", "parametersElement", "=", "args", ".", "get", "(", "PARAMETERS", ")", ";", "flow", ".", "enqueueFromJSON", "(", "args", ")", ";", "import", "org", ".", "apache", ".", "nifi", ".", "controller", ".", "repository", ".", "claim", ".", "ContentClaim", ";", "import", "org", ".", "apache", ".", "nifi", ".", "flowfile", ".", "FlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "flowfile", ".", "attributes", ".", "CoreAttributes", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "processor", ".", "exception", ".", "FlowFileAccessException", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stream", ".", "io", ".", "StreamUtils", ";", "attributes", ".", "put", "(", "CoreAttributes", ".", "FILENAME", ".", "key", "(", "),", "String", ".", "valueOf", "(", "System", ".", "nanoTime", "(", "))", "+", "\"", ".", "statelessFlowFile", "\"", ");", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "RunnableFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "StatelessFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "openwhisk", ".", "StatelessNiFiOpenWhiskAction", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "runtimes", ".", "yarn", ".", "YARNServiceUtil", ";", "if", "(", "hadoopTokenFileLocation", "!", "=", "null", "&", "&", "!", "hadoopTokenFileLocation", ".", "equals", "(", "\"\"", "))", "{", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "String", ".", "join", "(", "\",", "\",", "args", ")", ");", "if", "(", "args", "[", "5", "]", ".", "equals", "(", "\"-", "-", "file", "\"", "))", "{", "}", "else", "if", "(", "args", "[", "5", "]", ".", "equals", "(", "\"-", "-", "json", "\"", "))", "{", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "String", ".", "join", "(", "\",", "\",", "args", ")", ");", "\"", "--", "json", "\"", ",", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "\"-", "-", "file", "\"", "))", "{", "}", "else", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "\"-", "-", "json", "\"", "))", "{", "}", "else", "if", "(", "args", "[", "2", "]", ".", "equals", "(", "\"-", "-", "yarnjson", "\"", "))", "{", "json", "=", "args", "[", "3", "]", ".", "replace", "(", "';", "',", "',", "')", ";", "System", ".", "out", ".", "println", "(", "\"", "Invalid", "input", ":", "\"", "+", "String", ".", "join", "(", "\",", "\",", "args", ")", ");", "System", ".", "out", ".", "println", "(", "\"", "Running", "from", "json", ":", "\")", ";", "System", ".", "out", ".", "println", "(", "jsonObject", ".", "toString", "(", "))", ";", "outputFlowFiles", ".", "forEach", "(", "f", "-", ">", "System", ".", "out", ".", "println", "(", "f", ".", "toStringFull", "(", "))", ");", "outputFlowFiles", ".", "forEach", "(", "f", "-", ">", "System", ".", "out", ".", "println", "(", "f", ".", "toStringFull", "(", "))", ");", "+", "\"", ",", "\"", "+", "StatelessFlow", ".", "FLOWID", "+", "\"", ".\"", ");", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "InMemoryFlowFile", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "bootstrap", ".", "RunnableFlow", ";", "import", "org", ".", "apache", ".", "nifi", ".", "stateless", ".", "core", ".", "StatelessFlow", ";", "System", ".", "out", ".", "println", "(", "inputObject", ".", "toString", "(", "))", ";", "System", ".", "out", ".", "println", "(", "\"", "Input", ":", "\")", ";", "inputObject", ".", "entrySet", "(", ").", "forEach", "(", "item", "-", ">", "System", ".", "out", ".", "println", "(", "item", ".", "getKey", "(", ")+", "\":", "\"+", "item", ".", "getValue", "(", ").", "getAsString", "(", "))", ");", ".", "collect", "(", "Collectors", ".", "toMap", "(", "item", "-", ">", "item", ".", "getKey", "(", "),", "item", "-", ">", "item", ".", "getValue", "(", ").", "getAsString", "(", "))", ");", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "System", ".", "out", ".", "println", "(", "spec", ")", ";", "System", ".", "out", ".", "println", "(", "String", ".", "join", "(", "\",", "\",", "updatedLaunchCommand", ")", ");"], "docstring_tokens": ["information", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "_php_imap_address_size", "(", "addr", ")", ">", "=", "MAILTMPLEN", ")", "{", "RETURN_FALSE", ";", "}", "if", "(", "env", "-", ">", "from", "&", "&", "_php_imap_address_size", "(", "env", "-", ">", "from", ")", ">", "=", "MAILTMPLEN", ")", "{", "if", "(", "env", "-", ">", "to", "&", "&", "_php_imap_address_size", "(", "env", "-", ">", "from", ")", ">", "=", "MAILTMPLEN", ")", "{</s>if", "(", "env", "-", ">", "from", ")", "{", "if", "(", "env", "-", ">", "to", ")", "{"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "info", ",", "0", ",", "sizeof", "(", "info", ")", ");</s>"], "docstring_tokens": ["data", "structure"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "fSchemaType", "=", "=", "null", "&", "&", "!", "fUseGrammarPoolOnly", ")", "{</s>if", "(", "fSchemaType", "=", "=", "null", ")", "{"], "docstring_tokens": ["xml", "validation"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "!", "err", ")", "{", "bh", "=", "head", ";", "do", "{", "if", "(", "buffer_new", "(", "bh", ")", ")", "clear_buffer_new", "(", "bh", ")", ";", "}", "while", "(", "(", "bh", "=", "bh", "-", ">", "b_this_page", ")", "!", "=", "head", ")", ";", "return", "0", ";", "}</s>clear_buffer_new", "(", "bh", ")", ";", "if", "(", "!", "err", ")", "return", "err", ";"], "docstring_tokens": ["unauthorized", "access"]}
{"contents": ["empty"], "code_tokens": ["*", "Reads", "the", "schema", "used", "in", "the", "processor", "{", "@", "link", "ValidatingProcessor", "}", ".", "*", "A", "schema", "re", "-", "reading", "could", "be", "forced", "using", "{", "@", "link", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ".", "ValidatorEndpoint", "#", "clearCachedSchema", "(", ")}", ".", "/", "**", "Key", "of", "the", "global", "option", "to", "switch", "either", "off", "or", "on", "the", "access", "to", "external", "DTDs", "in", "the", "XML", "Validator", "for", "StreamSources", ".", "*", "Only", "effective", ",", "if", "not", "a", "custom", "schema", "factory", "is", "used", ".", "*/", "public", "static", "final", "String", "ACCESS_EXTERNAL_DTD", "=", "\"", "CamelXmlValidatorAccessExternalDTD", "\"", ";", "}", "if", "(", "!", "Boolean", ".", "parseBoolean", "(", "camelContext", ".", "getProperty", "(", "ACCESS_EXTERNAL_DTD", ")", "))", "{", "try", "{", "factory", ".", "setProperty", "(", "XMLConstants", ".", "ACCESS_EXTERNAL_DTD", ",", "\"", "\")", ";", "}", "catch", "(", "SAXException", "e", ")", "{", "LOG", ".", "error", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "throw", "new", "IllegalStateException", "(", "e", ")", ";", "}", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "net", ".", "UnknownHostException", ";", "import", "org", ".", "apache", ".", "camel", ".", "ContextTestSupport", ";", "import", "org", ".", "apache", ".", "camel", ".", "ValidationException", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "apache", ".", "camel", ".", "processor", ".", "validation", ".", "SchemaReader", ";", "public", "abstract", "class", "ValidatorDtdAccessAbstractTest", "extends", "ContextTestSupport", "{", "protected", "MockEndpoint", "finallyEndpoint", ";", "protected", "MockEndpoint", "invalidEndpoint", ";", "protected", "MockEndpoint", "unknownHostExceptionEndpoint", ";", "protected", "MockEndpoint", "validEndpoint", ";", "protected", "String", "payloud", "=", "getPayloudPart", "(", "\"", "Hello", "world", "!", "\")", ";", "protected", "String", "ssrfPayloud", "=", "\"", "<!", "DOCTYPE", "roottag", "PUBLIC", "\\", "\"-", "//", "VSR", "/", "/", "PENTEST", "/", "/", "EN", "\\", "\"", "\\", "\"", "http", ":", "//", "notexisting", "/", "test", "\\", "\">", "\\", "n", "\"", "+", "payloud", ";", "protected", "String", "xxePayloud", "=", "\"", "<!", "DOCTYPE", "updateProfile", "[", "<!", "ENTITY", "file", "SYSTEM", "\\", "\"", "http", ":", "//", "notexistinghost", "/", "test", "\\", "\">", "]>", "\\", "n", "\"", "+", "getPayloudPart", "(", "\"&", "file", ";", "\")", ";", "private", "final", "boolean", "accessExternalDTD", ";", "public", "ValidatorDtdAccessAbstractTest", "(", "boolean", "accessExternalDTD", ")", "{", "this", ".", "accessExternalDTD", "=", "accessExternalDTD", ";", "}", "private", "String", "getPayloudPart", "(", "String", "bodyValue", ")", "{", "return", "\"", "<", "mail", "xmlns", "=", "'", "http", ":", "//", "foo", ".", "com", "/", "bar", "'", "><", "subject", ">", "Hey", "<", "/", "subject", ">", "<", "body", ">", "\"", "+", "bodyValue", "+", "\"", "</", "body", ">", "</", "mail", ">", "\";", "}", "@", "Override", "protected", "void", "setUp", "(", ")", "throws", "Exception", "{", "super", ".", "setUp", "(", ");", "validEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "valid", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "invalidEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "invalid", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "unknownHostExceptionEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "unknownHostException", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "finallyEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "finally", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "/", "/", "switch", "on", "DTD", "Access", "if", "(", "accessExternalDTD", ")", "{", "getContext", "(", ").", "getProperties", "(", ").", "put", "(", "SchemaReader", ".", "ACCESS_EXTERNAL_DTD", ",", "\"", "true", "\"", ");", "}", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "doTry", "(", ")", ".", "to", "(", "\"", "validator", ":", "org", "/", "apache", "/", "camel", "/", "component", "/", "validator", "/", "schema", ".", "xsd", "\"", ")", ".", "to", "(", "\"", "mock", ":", "valid", "\"", ")", ".", "doCatch", "(", "ValidationException", ".", "class", ")", ".", "to", "(", "\"", "mock", ":", "invalid", "\"", ")", ".", "doCatch", "(", "UnknownHostException", ".", "class", ")", ".", "to", "(", "\"", "mock", ":", "unknownHostException", "\"", ")", ".", "doFinally", "(", ")", ".", "to", "(", "\"", "mock", ":", "finally", "\"", ").", "end", "(", ");", "}", "}", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "61", "@", "@", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "public", "class", "ValidatorDtdAccessOffTest", "extends", "ValidatorDtdAccessAbstractTest", "{", "public", "ValidatorDtdAccessOffTest", "(", ")", "{", "super", "(", "false", ")", ";", "}", "/", "**", "Tests", "that", "no", "external", "DTD", "call", "is", "executed", "for", "StringSource", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStringSource", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "ssrfPayloud", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "not", "executed", "for", "StreamSource", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStreamSource", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "ssrfPayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "XXE", "is", "not", "possible", "for", "StreamSource", ".", "*", "/", "public", "void", "testInvalidMessageXXESourceStream", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "xxePayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "61", "@", "@", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "public", "class", "ValidatorDtdAccessOnTest", "extends", "ValidatorDtdAccessAbstractTest", "{", "public", "ValidatorDtdAccessOnTest", "(", ")", "{", "super", "(", "true", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "executed", "for", "StringSource", "by", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStringSource", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "ssrfPayloud", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "executed", "for", "StreamSourceby", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStreamSource", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "ssrfPayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "XXE", "is", "possible", "for", "StreamSource", "by", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageXXESourceStream", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "xxePayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "}</s>*", "Reads", "the", "schema", "used", "in", "the", "processor", "{", "@", "link", "ValidatingProcessor", "}", ".", "Contains", "*", "the", "method", "{", "@", "link", "clearCachedSchema", "(", ")}", "to", "force", "re", "-", "reading", "the", "schema", "."], "docstring_tokens": ["request", "forgery", "(ssrf", ")"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "arg", ">", "=", "cdi", "-", ">", "capacity", ")</s>if", "(", "(", "int", ")", "arg", ">", "=", "cdi", "-", ">", "capacity", ")"], "docstring_tokens": ["information", "leak"]}
{"contents": ["empty"], "code_tokens": ["-", "Bugs", "fixed", "-", "XEE", "injection", "security", "in", "XML", "extension", ".", "Reported", "by", "Man", "Yue", "Mo", ".", "dbf", ".", "setExpandEntityReferences", "(", "false", ")", ";", "dbf", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "isExpandingEntityRefs", "(", "))", ";", "dbf", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "isExpandingEntityRefs", "(", "))", ";</s>-", "2", ".", "3", ".", "11", "(", "09", "/", "28", "/", "2017", ")", "-", "Bugs", "fixed", "@", "@", "-", "370", ",", "7", "+", "370", ",", "10", "@", "@", "protected", "DocumentBuilder", "getDocumentBuilder", "(", ")", "throws", "IOException", "{", "dbf", ".", "setExpandEntityReferences", "(", "isExpandingEntityRefs", "(", "))", ";"], "docstring_tokens": ["xml", "external", "entity"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "addr", ",", "0", ",", "sizeof", "(", "*", "addr", ")", ");</s>"], "docstring_tokens": ["info", "leaks"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "keycloak", ".", "jose", ".", "jws", ".", "crypto", ".", "RSAProvider", ";", "JWSInput", "jwsInput", ";", "jwsInput", "=", "new", "JWSInput", "(", "encodedState", ")", ";", "initialRequest", "=", "jwsInput", ".", "readJsonContent", "(", "State", ".", "class", ")", ";", "if", "(", "!", "RSAProvider", ".", "verify", "(", "jwsInput", ",", "realm", ".", "getPublicKey", "(", "))", ")", "{", "logger", ".", "error", "(", "\"", "Invalid", "social", "callback", "\"", ");", "return", "Flows", ".", "forms", "(", "session", ",", "null", ",", "null", ",", "uriInfo", ")", ".", "setError", "(", "\"", "Unexpected", "callback", "\"", ").", "createErrorPage", "(", ");", "}</s>initialRequest", "=", "new", "JWSInput", "(", "encodedState", ")", ".", "readJsonContent", "(", "State", ".", "class", ")", ";"], "docstring_tokens": ["cross-site", "request", "forgery", "(csrf", ")"]}
{"contents": ["empty"], "code_tokens": ["*", ")", "Fix", "buffer", "overflow", "in", "SSL_get_shared_ciphers", "(", ")", "function", ".", "(", "CVE", "-", "2006", "-", "3738", ")", "[", "Tavis", "Ormandy", "and", "Will", "Drewry", ",", "Google", "Security", "Team", "]", "*", ")", "Fix", "SSL", "client", "code", "which", "could", "crash", "if", "connecting", "to", "a", "malicious", "SSLv2", "server", ".", "(", "CVE", "-", "2006", "-", "4343", ")", "[", "Tavis", "Ormandy", "and", "Will", "Drewry", ",", "Google", "Security", "Team", "]", "*", ")", "Introduce", "limits", "to", "prevent", "malicious", "keys", "being", "able", "to", "cause", "a", "denial", "of", "service", ".", "(", "CVE", "-", "2006", "-", "2940", ")", "[", "Steve", "Henson", ",", "Bodo", "Moeller", "]", "*", ")", "Fix", "ASN", ".", "1", "parsing", "of", "certain", "invalid", "structures", "that", "can", "result", "in", "a", "denial", "of", "service", ".", "(", "CVE", "-", "2006", "-", "2937", ")", "[", "Steve", "Henson", "]", "*", ")", "Fix", "buffer", "overflow", "in", "SSL_get_shared_ciphers", "(", ")", "function", ".", "(", "CVE", "-", "2006", "-", "3738", ")", "[", "Tavis", "Ormandy", "and", "Will", "Drewry", ",", "Google", "Security", "Team", "]", "*", ")", "Fix", "SSL", "client", "code", "which", "could", "crash", "if", "connecting", "to", "a", "malicious", "SSLv2", "server", ".", "(", "CVE", "-", "2006", "-", "4343", ")", "[", "Tavis", "Ormandy", "and", "Will", "Drewry", ",", "Google", "Security", "Team", "]", "if", "(", "s", "-", ">", "session", "-", ">", "sess_cert", "=", "=", "NULL", "|", "|", "s", "-", ">", "session", "-", ">", "peer", "!", "=", "s", "-", ">", "session", "-", ">", "sess_cert", "-", ">", "peer_key", "-", ">", "x509", ")", "size_t", "len", "=", "strlen", "(", "kssl_ctx", "-", ">", "client_princ", ")", ";", "if", "(", "len", "-", "-", "<", "=", "0", ")</s>if", "(", "s", "-", ">", "session", "-", ">", "peer", "!", "=", "s", "-", ">", "session", "-", ">", "sess_cert", "-", ">", "peer_key", "-", ">", "x509", ")", "int", "len", "=", "strlen", "(", "kssl_ctx", "-", ">", "client_princ", ")", ";", "if", "(", "len", "-", "-", "=", "=", "0", ")"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "Otherwise", "all", "the", "old", "leaves", "cluster", "in", "the", "same", "slot", ",", "but", "*", "the", "new", "leaf", "wants", "to", "go", "into", "a", "different", "slot", "-", "so", "we", "*", "create", "a", "new", "node", "(", "n0", ")", "to", "hold", "the", "new", "leaf", "and", "a", "pointer", "to", "*", "a", "new", "node", "(", "n1", ")", "holding", "all", "the", "old", "leaves", ".", "*", "*", "This", "can", "be", "done", "by", "falling", "through", "to", "the", "node", "splitting", "*", "path", ".", "pr_devel", "(", "\"", "present", "leaves", "cluster", "but", "not", "new", "leaf", "\\", "n", "\"", ");", "/", "*", "We", "need", "to", "split", "the", "current", "node", ".", "The", "node", "must", "contain", "anything", "*", "from", "a", "single", "leaf", "(", "in", "the", "one", "leaf", "case", ",", "this", "leaf", "will", "cluster", "*", "with", "the", "new", "leaf", ")", "and", "the", "rest", "meta", "-", "pointers", ",", "to", "all", "leaves", ",", "some", "*", "of", "which", "may", "cluster", ".", "*", "*", "It", "won", "'", "t", "contain", "the", "case", "in", "which", "all", "the", "current", "leaves", "plus", "the", "*", "new", "leaves", "want", "to", "cluster", "in", "the", "same", "slot", ".", "*", "leaves", "in", "the", "node", "and", "the", "new", "leaf", ".", "The", "current", "meta", "pointers", "can", "*", "just", "be", "copied", "as", "they", "shouldn", "'", "t", "cluster", "with", "any", "of", "the", "leaves", ".</s>/", "*", "Otherwise", "we", "can", "just", "insert", "a", "new", "node", "ahead", "of", "the", "old", "*", "one", ".", "goto", "present_leaves_cluster_but_not_new_leaf", ";", "/", "*", "We", "need", "to", "split", "the", "current", "node", ";", "we", "know", "that", "the", "node", "doesn", "'", "t", "*", "simply", "contain", "a", "full", "set", "of", "leaves", "that", "cluster", "together", "(", "it", "*", "contains", "meta", "pointers", "and", "/", "or", "non", "-", "clustering", "leaves", ")", ".", "*", "leaves", "in", "the", "node", "and", "the", "new", "leaf", ".", "present_leaves_cluster_but_not_new_leaf", ":", "/", "*", "All", "the", "old", "leaves", "cluster", "in", "the", "same", "slot", ",", "but", "the", "new", "leaf", "wants", "*", "to", "go", "into", "a", "different", "slot", ",", "so", "we", "create", "a", "new", "node", "to", "hold", "the", "new", "*", "leaf", "and", "a", "pointer", "to", "a", "new", "node", "holding", "all", "the", "old", "leaves", ".", "*", "/", "pr_devel", "(", "\"", "present", "leaves", "cluster", "but", "not", "new", "leaf", "\\", "n", "\"", ");", "new_n0", "-", ">", "back_pointer", "=", "node", "-", ">", "back_pointer", ";", "new_n0", "-", ">", "parent_slot", "=", "node", "-", ">", "parent_slot", ";", "new_n0", "-", ">", "nr_leaves_on_branch", "=", "node", "-", ">", "nr_leaves_on_branch", ";", "new_n1", "-", ">", "back_pointer", "=", "assoc_array_node_to_ptr", "(", "new_n0", ")", ";", "new_n1", "-", ">", "parent_slot", "=", "edit", "-", ">", "segment_cache", "[", "0", "]", ";", "new_n1", "-", ">", "nr_leaves_on_branch", "=", "node", "-", ">", "nr_leaves_on_branch", ";", "edit", "-", ">", "adjust_count_on", "=", "new_n0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "ASSOC_ARRAY_FAN_OUT", ";", "i", "+", "+)", "new_n1", "-", ">", "slots", "[", "i", "]", "=", "node", "-", ">", "slots", "[", "i", "]", ";", "new_n0", "-", ">", "slots", "[", "edit", "-", ">", "segment_cache", "[", "0", "]", "]", "=", "assoc_array_node_to_ptr", "(", "new_n0", ")", ";", "edit", "-", ">", "leaf_p", "=", "&", "new_n0", "-", ">", "slots", "[", "edit", "-", ">", "segment_cache", "[", "ASSOC_ARRAY_FAN_OUT", "]", "];", "edit", "-", ">", "set", "[", "0", "]", ".", "ptr", "=", "&", "assoc_array_ptr_to_node", "(", "node", "-", ">", "back_pointer", ")", "->", "slots", "[", "node", "-", ">", "parent_slot", "]", ";", "edit", "-", ">", "set", "[", "0", "]", ".", "to", "=", "assoc_array_node_to_ptr", "(", "new_n0", ")", ";", "edit", "-", ">", "excised_meta", "[", "0", "]", "=", "assoc_array_node_to_ptr", "(", "node", ")", ";", "pr_devel", "(", "\"<", "--", "%", "s", "(", ")", "=", "ok", "[", "insert", "node", "before", "]", "\\", "n", "\"", ",", "__func__", ")", ";", "return", "true", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["2019", "-", "04", "-", "23", "Dirk", "Frederickx", "(", "brushed", "AT", "apache", "DOT", "org", ")", "*", "2", ".", "11", ".", "0", "-", "M4", "-", "git", "-", "06", "*", "[", "JSPWIKI", "-", "1109", "]", "ReferredPagesPlugin", "with", "illegal", "characters", "in", "parameters", "causes", "XSS", "vulnerability", "public", "static", "final", "String", "BUILD", "=", "\"", "06", "\"", ";", "\"", "\\\"", "title", "=", "\\\"", "\"", "+", "TextUtil", ".", "replaceEntities", "(", "title", ")", "\"", "\\\"", ">\"", "+", "TextUtil", ".", "replaceEntities", "(", "rootname", ")", "+", "\"", "</", "a", ">", "\\", "n", "\"", ");", "isUL", "=", "true", ";</s>public", "static", "final", "String", "BUILD", "=", "\"", "05", "\"", ";", "\"", "\\\"", "title", "=", "\\\"", "\"", "+", "title", "+", "\"", "\\\"", ">\"", "+", "rootname", "+", "\"", "</", "a", ">", "\\", "n", "\"", ");", "isUL", "=", "true", ";"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["}", "}", "}", "}", "var_push_dtor", "(", "&", "var_hash", ",", "&", "flags", ")", ";", "-", "-", "TEST", "-", "-", "SPL", ":", "Bug", "#", "70169", "Use", "After", "Free", "Vulnerability", "in", "unserialize", "(", ")", "with", "SplDoublyLinkedList", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "inner", "=", "'", "i", ":", "1", ";", "';", "$", "exploit", "=", "'", "a", ":", "2", ":", "{", "i", ":", "0", ";", "C", ":", "19", ":", "\"", "SplDoublyLinkedList", "\"", ":'", ".", "strlen", "(", "$", "inner", ")", ".'", ":{", "'.", "$", "inner", ".", "'}", "i", ":", "1", ";", "R", ":", "3", ";", "}'", ";", "$", "data", "=", "unserialize", "(", "$", "exploit", ")", ";", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "5", ";", "$", "i", "+", "+)", "{", "$", "v", "[", "$", "i", "]", "=", "'", "hi", "'", ".$", "i", ";", "}", "var_dump", "(", "$", "data", ")", ";", "?", ">", "=", "==", "DONE", "=", "==", "-", "-", "EXPECTF", "-", "-", "array", "(", "2", ")", "{", "[", "0", "]", "=>", "object", "(", "SplDoublyLinkedList", ")", "#%", "d", "(", "2", ")", "{", "[", "\"", "flags", "\"", ":\"", "SplDoublyLinkedList", "\"", ":", "private", "]", "=>", "int", "(", "1", ")", "[", "\"", "dllist", "\"", ":\"", "SplDoublyLinkedList", "\"", ":", "private", "]", "=>", "array", "(", "0", ")", "{", "}", "}", "[", "1", "]", "=>", "int", "(", "1", ")", "}", "=", "==", "DONE", "=", "==</s>}", "}", "}", "}"], "docstring_tokens": ["use-after-free", "error"]}
{"contents": ["empty"], "code_tokens": ["+", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "int", "bz2_ret", ";", "bz2_ret", "=", "BZ2_bzread", "(", "self", "-", ">", "bz_file", ",", "buf", ",", "count", ")", ";", "if", "(", "bz2_ret", "<", "0", ")", "{", "stream", "-", ">", "eof", "=", "1", ";", "return", "-", "1", ";", "}", "if", "(", "bz2_ret", "=", "=", "0", ")", "{", "return", "(", "size_t", ")", "bz2_ret", ";", "return", "BZ2_bzwrite", "(", "self", "-", ">", "bz_file", ",", "(", "char", "*", ")", "buf", ",", "count", ")", ";", "PHP_BZ2_API", "php_stream", "*", "_php_stream_bz2open_from_BZFILE", "(", "BZFILE", "*", "bz", ",", "#", "endif", "RETURN_FALSE", ";", "Z_STRVAL_PP", "(", "file", ")", ",", "mode", ",", "REPORT_ERRORS", ",", "unsigned", "int", "dest_len", ";", "/", "*", "Length", "of", "the", "destination", "buffer", "*", "/", "+", ".", "01", "x", "length", "of", "data", "+", "600", "which", "is", "the", "largest", "size", "the", "results", "of", "the", "compression", "could", "possibly", "be", ",", "at", "least", "that", "'", "s", "what", "the", "libbz2", "docs", "say", "(", "thanks", "to", "jeremy", "@", "nirvani", ".", "net", "{", "-", "-", "TEST", "-", "-", "Bug", "#", "72613", "(", "Inadequate", "error", "handling", "in", "bzread", "(", "))", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "bz2", "\"", "))", "print", "\"", "skip", "\"", ";", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "fp", "=", "bzopen", "(", "__DIR__", ".", "'/", "72613", ".", "bz2", "'", ",", "'", "r", "'", ");", "if", "(", "$", "fp", "=", "==", "FALSE", ")", "{", "exit", "(", "\"", "ERROR", ":", "bzopen", "(", ")\"", ");", "}", "$", "data", "=", "\"", "\";", "while", "(", "!", "feof", "(", "$", "fp", ")", ")", "{", "$", "res", "=", "bzread", "(", "$", "fp", ")", ";", "if", "(", "$", "res", "=", "==", "FALSE", ")", "{", "exit", "(", "\"", "ERROR", ":", "bzread", "(", ")\"", ");", "}", "$", "data", ".", "=", "$", "res", ";", "}", "bzclose", "(", "$", "fp", ")", ";", "?", ">", "DONE", "-", "-", "EXPECT", "-", "-", "DONE</s>size_t", "ret", ";", "ret", "=", "BZ2_bzread", "(", "self", "-", ">", "bz_file", ",", "buf", ",", "count", ")", ";", "if", "(", "ret", "=", "=", "0", ")", "{", "return", "ret", ";", "return", "BZ2_bzwrite", "(", "self", "-", ">", "bz_file", ",", "(", "char", "*", ")", "buf", ",", "count", ")", ";", "PHP_BZ2_API", "php_stream", "*", "_php_stream_bz2open_from_BZFILE", "(", "BZFILE", "*", "bz", ",", "#", "endif", "RETURN_FALSE", ";", "Z_STRVAL_PP", "(", "file", ")", ",", "mode", ",", "REPORT_ERRORS", ",", "unsigned", "int", "dest_len", ";", "/", "*", "Length", "of", "the", "destination", "buffer", "*", "/", "+", ".", "01", "x", "length", "of", "data", "+", "600", "which", "is", "the", "largest", "size", "the", "results", "of", "the", "compression", "could", "possibly", "be", ",", "at", "least", "that", "'", "s", "what", "the", "libbz2", "docs", "say", "(", "thanks", "to", "jeremy", "@", "nirvani", ".", "net", "{"], "docstring_tokens": ["out-of-bounds", "write"]}
{"contents": ["empty"], "code_tokens": ["12", "Dec", "2013", ",", "PHP", "5", ".", "3", ".", "28", ".", "Fixed", "memory", "corruption", "in", "openssl_x509_parse", "(", ")", "(", "CVE", "-", "2013", "-", "6420", ")", ".", "(", "Stefan", "Esser", ")", ".", "if", "(", "ASN1_STRING_type", "(", "timestr", ")", "!", "=", "V_ASN1_UTCTIME", ")", "{", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "illegal", "ASN1", "data", "type", "for", "timestamp", "\"", ");", "if", "(", "ASN1_STRING_length", "(", "timestr", ")", "!", "=", "strlen", "(", "ASN1_STRING_data", "(", "timestr", ")", "))", "{", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "illegal", "length", "in", "timestamp", "\"", ");", "return", "(", "time_t", ")", "-", "1", ";", "}", "if", "(", "ASN1_STRING_length", "(", "timestr", ")", "<", "13", ")", "{", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "unable", "to", "parse", "time", "string", "%", "s", "correctly", "\"", ",", "timestr", "-", ">", "data", ")", ";", "return", "(", "time_t", ")", "-", "1", ";", "}", "strbuf", "=", "estrdup", "(", "(", "char", "*", ")", "ASN1_STRING_data", "(", "timestr", ")", ");", "thestr", "=", "strbuf", "+", "ASN1_STRING_length", "(", "timestr", ")", "-", "3", ";", "-", "--", "--", "BEGIN", "CERTIFICATE", "-", "--", "--", "MIIEpDCCA4ygAwIBAgIJAJzu8r6u6eBcMA0GCSqGSIb3DQEBBQUAMIHDMQswCQYD", "VQQGEwJERTEcMBoGA1UECAwTTm9yZHJoZWluLVdlc3RmYWxlbjEQMA4GA1UEBwwH", "S8ODwrZsbjEUMBIGA1UECgwLU2VrdGlvbkVpbnMxHzAdBgNVBAsMFk1hbGljaW91", "cyBDZXJ0IFNlY3Rpb24xITAfBgNVBAMMGG1hbGljaW91cy5zZWt0aW9uZWlucy5k", "ZTEqMCgGCSqGSIb3DQEJARYbc3RlZmFuLmVzc2VyQHNla3Rpb25laW5zLmRlMHUY", "ZDE5NzAwMTAxMDAwMDAwWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAXDTE0MTEyODExMzkzNVowgcMxCzAJBgNVBAYTAkRFMRwwGgYDVQQIDBNO", "b3JkcmhlaW4tV2VzdGZhbGVuMRAwDgYDVQQHDAdLw4PCtmxuMRQwEgYDVQQKDAtT", "ZWt0aW9uRWluczEfMB0GA1UECwwWTWFsaWNpb3VzIENlcnQgU2VjdGlvbjEhMB8G", "A1UEAwwYbWFsaWNpb3VzLnNla3Rpb25laW5zLmRlMSowKAYJKoZIhvcNAQkBFhtz", "dGVmYW4uZXNzZXJAc2VrdGlvbmVpbnMuZGUwggEiMA0GCSqGSIb3DQEBAQUAA4IB", "DwAwggEKAoIBAQDDAf3hl7JY0XcFniyEJpSSDqn0OqBr6QP65usJPRt", "/", "8PaDoqBu", "wEYT", "/", "Na", "+", "6fsgPjC0uK9DZgWg2tHWWoanSblAMoz5PH6Z", "+", "S4SHRZ7e2dDIjPjdhjh", "0mLg2UMO5yp0V797Ggs9lNt6JRfH81MN2obXWs4NtztLMuD6egqpr8dDbr34aOs8", "pkdui5UawTZksy5pLPHq5cMhFGm06v65CLo0V2Pd9", "+", "KAokPrPcN5KLKebz7mLpk6", "SMeEXOKP4idEqxyQ7O7fBuHMedsQhu", "+", "prY3si3BUyKfQtP5CZnX2bp0wKHxX12DX", "1nfFIt9DbGvHTcyOuN", "+", "nZLPBm3vWxntyIIvVAgMBAAGjQjBAMAkGA1UdEwQCMAAw", "EQYJYIZIAYb4QgEBBAQDAgeAMAsGA1UdDwQEAwIFoDATBgNVHSUEDDAKBggrBgEF", "BQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAG0fZYYCTbdj1XYc", "+", "1SnoaPR", "+", "vI8C8CaD", "8", "+", "0UYhdnyU4gga0BAcDrY9e94eEAu6ZqycF6FjLqXXdAboppWocr6T6GD1x33Ckl", "VArzG", "/", "KxQohGD2JeqkhIMlDomxHO7ka39", "+", "Oa8i2vWLVyjU8AZvWMAruHa4EENyG7", "lW2AagaFKFCr9TnXTfrdxGVEbv7KVQ6bdhg5p5SjpWH1", "+", "Mq03uR3ZXPBYdyV8319", "o0lVj1KFI2DCL", "/", "liWisJRoof", "+", "1cR35Ctd0wYBcpB6TZslMcOPl76dwKwJgeJo2Qg", "Zsfmc2vC1", "/", "qOlNuNq", "/", "0TzzkVGv8ETT3CgaU", "+", "UXe4XOVvkccebJn2dg", "=", "=", "-", "--", "--", "END", "CERTIFICATE", "-", "--", "--", "@", "@", "-", "0", ",", "0", "+", "1", ",", "18", "@", "@", "-", "-", "TEST", "-", "-", "CVE", "-", "2013", "-", "6420", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "openssl", "\"", "))", "die", "(", "\"", "skip", "\"", ");", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "crt", "=", "substr", "(", "__FILE__", ",", "0", ",", "-", "4", ")", ".'", ".", "crt", "'", ";", "$", "info", "=", "openssl_x509_parse", "(", "\"", "file", ":", "//", "$", "crt", "\"", ");", "var_dump", "(", "$", "info", "[", "'", "issuer", "'", "][", "'", "emailAddress", "'", "],", "$", "info", "[", "\"", "validFrom_time_t", "\"", "])", ";", "?", ">", "Done", "-", "-", "EXPECTF", "-", "-", "%", "s", "openssl_x509_parse", "(", "):", "illegal", "ASN1", "data", "type", "for", "timestamp", "in", "%", "s", "/", "cve", "-", "2013", "-", "6420", ".", "php", "on", "line", "3", "string", "(", "27", ")", "\"", "stefan", ".", "esser", "@", "sektioneins", ".", "de", "\"", "int", "(", "-", "1", ")", "Done</s>?", "?", "?", "??", "2013", ",", "PHP", "5", ".", "3", ".", "28", "-", "Openssl", ":", "if", "(", "timestr", "-", ">", "length", "<", "13", ")", "{", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "extension", "author", "too", "lazy", "to", "parse", "%", "s", "correctly", "\"", ",", "timestr", "-", ">", "data", ")", ";", "strbuf", "=", "estrdup", "(", "(", "char", "*", ")", "timestr", "-", ">", "data", ")", ";", "thestr", "=", "strbuf", "+", "timestr", "-", ">", "length", "-", "3", ";"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "gen", ".", "data_len", ">", "INT_MAX", ")", "return", "-", "EINVAL", ";", "if", "(", "gen", ".", "sense_len", ">", "INT_MAX", ")", "return", "-", "EINVAL", ";", "if", "(", "gen", ".", "data_len", "+", "gen", ".", "sense_len", ">", "INT_MAX", ")", "return", "-", "EINVAL", ";</s>"], "docstring_tokens": ["memory", "corruption.\""]}
{"contents": ["empty"], "code_tokens": ["if", "(", "used_address", "&", "&", "msg_sys", "-", ">", "msg_name", "&", "&", "used_address", "-", ">", "name_len", "=", "=", "msg_sys", "-", ">", "msg_namelen", "&", "&", "!", "memcmp", "(", "&", "used_address", "-", ">", "name", ",", "msg_sys", "-", ">", "msg_name", ",", "if", "(", "msg_sys", "-", ">", "msg_name", ")", "memcpy", "(", "&", "used_address", "-", ">", "name", ",", "msg_sys", "-", ">", "msg_name", ",", "used_address", "-", ">", "name_len", ")", ";</s>if", "(", "used_address", "&", "&", "used_address", "-", ">", "name_len", "=", "=", "msg_sys", "-", ">", "msg_namelen", "&", "&", "!", "memcmp", "(", "&", "used_address", "-", ">", "name", ",", "msg", "-", ">", "msg_name", ",", "memcpy", "(", "&", "used_address", "-", ">", "name", ",", "msg", "-", ">", "msg_name", ",", "used_address", "-", ">", "name_len", ")", ";"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "CPUID", "vendors", "*", "/", "#", "define", "X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx", "0x68747541", "#", "define", "X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx", "0x444d4163", "#", "define", "X86EMUL_CPUID_VENDOR_AuthenticAMD_edx", "0x69746e65", "#", "define", "X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx", "0x69444d41", "#", "define", "X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx", "0x21726574", "#", "define", "X86EMUL_CPUID_VENDOR_AMDisbetterI_edx", "0x74656273", "#", "define", "X86EMUL_CPUID_VENDOR_GenuineIntel_ebx", "0x756e6547", "#", "define", "X86EMUL_CPUID_VENDOR_GenuineIntel_ecx", "0x6c65746e", "#", "define", "X86EMUL_CPUID_VENDOR_GenuineIntel_edx", "0x49656e69", "static", "bool", "em_syscall_is_enabled", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ")", "{", "struct", "x86_emulate_ops", "*", "ops", "=", "ctxt", "-", ">", "ops", ";", "u32", "eax", ",", "ebx", ",", "ecx", ",", "edx", ";", "/", "*", "*", "syscall", "should", "always", "be", "enabled", "in", "longmode", "-", "so", "only", "become", "*", "vendor", "specific", "(", "cpuid", ")", "if", "other", "modes", "are", "active", ".", "..", "*", "/", "if", "(", "ctxt", "-", ">", "mode", "=", "=", "X86EMUL_MODE_PROT64", ")", "return", "true", ";", "eax", "=", "0x00000000", ";", "ecx", "=", "0x00000000", ";", "if", "(", "ops", "-", ">", "get_cpuid", "(", "ctxt", ",", "&", "eax", ",", "&", "ebx", ",", "&", "ecx", ",", "&", "edx", ")", ")", "{", "/", "*", "*", "Intel", "(", "\"", "GenuineIntel", "\"", ")", "*", "remark", ":", "Intel", "CPUs", "only", "support", "\"", "syscall", "\"", "in", "64bit", "*", "longmode", ".", "Also", "an", "64bit", "guest", "with", "a", "*", "32bit", "compat", "-", "app", "running", "will", "#", "UD", "!", "!", "While", "this", "*", "behaviour", "can", "be", "fixed", "(", "by", "emulating", ")", "into", "AMD", "*", "response", "-", "CPUs", "of", "AMD", "can", "'", "t", "behave", "like", "Intel", ".", "*", "/", "if", "(", "ebx", "=", "=", "X86EMUL_CPUID_VENDOR_GenuineIntel_ebx", "&", "&", "ecx", "=", "=", "X86EMUL_CPUID_VENDOR_GenuineIntel_ecx", "&", "&", "edx", "=", "=", "X86EMUL_CPUID_VENDOR_GenuineIntel_edx", ")", "return", "false", ";", "/", "*", "AMD", "(", "\"", "AuthenticAMD", "\"", ")", "*", "/", "if", "(", "ebx", "=", "=", "X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx", "&", "&", "ecx", "=", "=", "X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx", "&", "&", "edx", "=", "=", "X86EMUL_CPUID_VENDOR_AuthenticAMD_edx", ")", "return", "true", ";", "/", "*", "AMD", "(", "\"", "AMDisbetter", "!", "\")", "*", "/", "if", "(", "ebx", "=", "=", "X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx", "&", "&", "ecx", "=", "=", "X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx", "&", "&", "edx", "=", "=", "X86EMUL_CPUID_VENDOR_AMDisbetterI_edx", ")", "return", "true", ";", "}", "/", "*", "default", ":", "(", "not", "Intel", ",", "not", "AMD", ")", ",", "apply", "Intel", "'", "s", "stricter", "rules", ".", "..", "*", "/", "return", "false", ";", "}", "if", "(", "!(", "em_syscall_is_enabled", "(", "ctxt", ")", "))", "return", "emulate_ud", "(", "ctxt", ")", ";", "if", "(", "!(", "efer", "&", "EFER_SCE", ")", ")", "return", "emulate_ud", "(", "ctxt", ")", ";</s>"], "docstring_tokens": ["of", "service"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "!", "csrfActionHelper", ".", "requiresCsrfCheck", "(", "taggedRequest", ")", "|", "|", "(", "config", ".", "checkContentType", "(", ").", "apply", "(", "req", ".", "asScala", "(", ").", "contentType", "(", "))", "!", "=", "Boolean", ".", "TRUE", "&", "&", "!", "csrfActionHelper", ".", "hasInvalidContentType", "(", "req", ".", "asScala", "(", "))", "))", "{", "if", "(", "config", ".", "checkMethod", "(", "request", ".", "method", ")", "&", "&", "(", "config", ".", "checkContentType", "(", "request", ".", "contentType", ")", "|", "|", "csrfActionHelper", ".", "hasInvalidContentType", "(", "request", ")", "))", "{", "def", "hasInvalidContentType", "(", "request", ":", "RequestHeader", ")", ":", "Boolean", "=", "{", "/", "/", "If", "the", "content", "type", "is", "none", ",", "but", "there", "'", "s", "a", "content", "type", "header", ",", "that", "means", "/", "/", "the", "content", "type", "failed", "to", "be", "parsed", ",", "therefore", "treat", "it", "like", "a", "blacklisted", "/", "/", "content", "type", "just", "to", "be", "safe", ".", "Also", ",", "note", "we", "cannot", "use", "headers", ".", "hasHeader", ",", "/", "/", "because", "this", "is", "intercepted", "by", "the", "Akka", "HTTP", "wrapper", "and", "will", "only", "turn", "true", "/", "/", "if", "the", "content", "type", "was", "validly", "parsed", ".", "request", ".", "contentType", ".", "isEmpty", "&", "&", "request", ".", "headers", ".", "toMap", ".", "contains", "(", "CONTENT_TYPE", ")", "}", "if", "(", "!", "csrfActionHelper", ".", "requiresCsrfCheck", "(", "request", ")", "|", "|", "!", "(", "config", ".", "checkContentType", "(", "request", ".", "contentType", ")", "|", "|", "csrfActionHelper", ".", "hasInvalidContentType", "(", "request", ")", "))", "{", "import", "play", ".", "api", ".", "libs", ".", "json", ".", "Json", "\"", "allow", "configuring", "a", "content", "type", "blacklist", "\"", "in", "{", "def", "csrfCheckRequest", "=", "buildCsrfCheckRequest", "(", "false", ",", "\"", "play", ".", "filters", ".", "csrf", ".", "contentType", ".", "blackList", ".", "0", "\"", "-", ">", "\"", "text", "/", "plain", "\"", ",", "\"", "play", ".", "filters", ".", "csrf", ".", "contentType", ".", "blackList", ".", "1", "\"", "-", ">", "\"", "multipart", "/", "form", "-", "data", "\"", ",", "\"", "play", ".", "filters", ".", "csrf", ".", "contentType", ".", "blackList", ".", "2", "\"", "-", ">", "\"", "application", "/", "x", "-", "www", "-", "form", "-", "urlencoded", "\"", ")", "\"", "accept", "requests", "with", "a", "non", "blacklisted", "content", "type", "\"", "in", "{", "csrfCheckRequest", "(", "_", ".", "withSession", "(", "\"", "foo", "\"", "-", ">", "\"", "bar", "\"", ")", ".", "post", "(", "Json", ".", "obj", "(", "\"", "some", "\"", "-", ">", "\"", "field", "\"", "))", ")", "(", "_", ".", "status", "must_", "=", "=", "OK", ")", "}", "\"", "reject", "requests", "with", "a", "content", "type", "\"", "in", "{", "csrfCheckRequest", "(", "_", ".", "withSession", "(", "\"", "foo", "\"", "-", ">", "\"", "bar", "\"", ")", ".", "post", "(", "Map", "(", "\"", "some", "\"", "-", ">", "\"", "field", "\"", "))", ")", "(", "_", ".", "status", "must_", "=", "=", "FORBIDDEN", ")", "}", "\"", "reject", "requests", "with", "a", "malformed", "content", "type", "header", "\"", "in", "{", "csrfCheckRequest", "(", "_", ".", "withSession", "(", "\"", "foo", "\"", "-", ">", "\"", "bar", "\"", ")", ".", "addHttpHeaders", "(", "\"", "Content", "-", "Type", "\"", "-", ">", "\"", "multipart", "/", "form", "-", "data", ";", "boundary", "=", "123", ";", "456", "\"", ")", ".", "post", "(", "\"\"", ")", ")", "(", "_", ".", "status", "must_", "=", "=", "FORBIDDEN", ")", "}", "}</s>if", "(", "!", "csrfActionHelper", ".", "requiresCsrfCheck", "(", "taggedRequest", ")", ")", "{", "if", "(", "config", ".", "checkMethod", "(", "request", ".", "method", ")", "&", "&", "config", ".", "checkContentType", "(", "request", ".", "contentType", ")", ")", "{", "if", "(", "!", "csrfActionHelper", ".", "requiresCsrfCheck", "(", "request", ")", "|", "|", "!", "config", ".", "checkContentType", "(", "request", ".", "contentType", ")", ")", "{"], "docstring_tokens": ["cross-site", "request", "forgery", "(csrf", ")"]}
{"contents": ["empty"], "code_tokens": ["#", "define", "BPF_ALU_NON_POINTER", "(", "1U", "<", "<", "3", ")", "static", "bool", "can_skip_alu_sanitation", "(", "const", "struct", "bpf_verifier_env", "*", "env", ",", "const", "struct", "bpf_insn", "*", "insn", ")", "{", "return", "env", "-", ">", "allow_ptr_leaks", "|", "|", "BPF_SRC", "(", "insn", "-", ">", "code", ")", "=", "=", "BPF_K", ";", "}", "static", "int", "update_alu_sanitation_state", "(", "struct", "bpf_insn_aux_data", "*", "aux", ",", "u32", "alu_state", ",", "u32", "alu_limit", ")", "{", "/", "*", "If", "we", "arrived", "here", "from", "different", "branches", "with", "different", "*", "state", "or", "limits", "to", "sanitize", ",", "then", "this", "won", "'", "t", "work", ".", "*", "/", "if", "(", "aux", "-", ">", "alu_state", "&", "&", "(", "aux", "-", ">", "alu_state", "!", "=", "alu_state", "|", "|", "aux", "-", ">", "alu_limit", "!", "=", "alu_limit", ")", ")", "return", "-", "EACCES", ";", "/", "*", "Corresponding", "fixup", "done", "in", "fixup_bpf_calls", "(", ").", "*", "/", "aux", "-", ">", "alu_state", "=", "alu_state", ";", "aux", "-", ">", "alu_limit", "=", "alu_limit", ";", "return", "0", ";", "}", "static", "int", "sanitize_val_alu", "(", "struct", "bpf_verifier_env", "*", "env", ",", "struct", "bpf_insn", "*", "insn", ")", "{", "struct", "bpf_insn_aux_data", "*", "aux", "=", "cur_aux", "(", "env", ")", ";", "if", "(", "can_skip_alu_sanitation", "(", "env", ",", "insn", ")", ")", "return", "0", ";", "return", "update_alu_sanitation_state", "(", "aux", ",", "BPF_ALU_NON_POINTER", ",", "0", ")", ";", "}", "if", "(", "can_skip_alu_sanitation", "(", "env", ",", "insn", ")", ")", "if", "(", "update_alu_sanitation_state", "(", "aux", ",", "alu_state", ",", "alu_limit", ")", ")", "u32", "dst", "=", "insn", "-", ">", "dst_reg", ";", "int", "ret", ";", "ret", "=", "sanitize_val_alu", "(", "env", ",", "insn", ")", ";", "if", "(", "ret", "<", "0", ")", "{", "verbose", "(", "env", ",", "\"", "R", "%", "d", "tried", "to", "add", "from", "different", "pointers", "or", "scalars", "\\", "n", "\"", ",", "dst", ")", ";", "return", "ret", ";", "}", "ret", "=", "sanitize_val_alu", "(", "env", ",", "insn", ")", ";", "if", "(", "ret", "<", "0", ")", "{", "verbose", "(", "env", ",", "\"", "R", "%", "d", "tried", "to", "sub", "from", "different", "pointers", "or", "scalars", "\\", "n", "\"", ",", "dst", ")", ";", "return", "ret", ";", "}</s>if", "(", "env", "-", ">", "allow_ptr_leaks", "|", "|", "BPF_SRC", "(", "insn", "-", ">", "code", ")", "=", "=", "BPF_K", ")", "/", "*", "If", "we", "arrived", "here", "from", "different", "branches", "with", "different", "*", "limits", "to", "sanitize", ",", "then", "this", "won", "'", "t", "work", ".", "*", "/", "if", "(", "aux", "-", ">", "alu_state", "&", "&", "(", "aux", "-", ">", "alu_state", "!", "=", "alu_state", "|", "|", "aux", "-", ">", "alu_limit", "!", "=", "alu_limit", ")", ")", "/", "*", "Corresponding", "fixup", "done", "in", "fixup_bpf_calls", "(", ").", "*", "/", "aux", "-", ">", "alu_state", "=", "alu_state", ";", "aux", "-", ">", "alu_limit", "=", "alu_limit", ";"], "docstring_tokens": ["out-of-bounds", "access"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "u_cmd", ".", "outsize", "!", "=", "s_cmd", "-", ">", "outsize", "|", "|", "u_cmd", ".", "insize", "!", "=", "s_cmd", "-", ">", "insize", ")", "{", "ret", "=", "-", "EINVAL", ";", "goto", "exit", ";", "}", "if", "(", "copy_to_user", "(", "arg", ",", "s_cmd", ",", "sizeof", "(", "*", "s_cmd", ")", "+", "s_cmd", "-", ">", "insize", ")", ")</s>if", "(", "copy_to_user", "(", "arg", ",", "s_cmd", ",", "sizeof", "(", "*", "s_cmd", ")", "+", "u_cmd", ".", "insize", ")", ")"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["*", "Extract", "XMP", "from", "PSD", "files", "(", "TIKA", "-", "3050", ")", ".", "FONT", ",", "//", "embedded", "font", "files", "THUMBNAIL", ";", "//", "TODO", ":", "set", "this", "in", "parsers", "that", "handle", "thumbnails", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "EOFException", ";", "import", "java", ".", "nio", ".", "file", ".", "Files", ";", "import", "java", ".", "nio", ".", "file", ".", "Paths", ";", "import", "org", ".", "apache", ".", "commons", ".", "io", ".", "IOUtils", ";", "import", "org", ".", "apache", ".", "tika", ".", "extractor", ".", "EmbeddedDocumentExtractor", ";", "import", "org", ".", "apache", ".", "tika", ".", "extractor", ".", "EmbeddedDocumentUtil", ";", "import", "org", ".", "apache", ".", "tika", ".", "io", ".", "TikaInputStream", ";", "import", "org", ".", "apache", ".", "tika", ".", "parser", ".", "image", ".", "xmp", ".", "JempboxExtractor", ";", "*", "*", "An", "MIT", "-", "licensed", "python", "parser", "with", "test", "files", "is", ":", "*", "https", ":", "//", "github", ".", "com", "/", "psd", "-", "tools", "/", "psd", "-", "tools", "private", "static", "final", "int", "MAX_DATA_LENGTH_BYTES", "=", "1000000", ";", "private", "static", "final", "int", "MAX_BLOCKS", "=", "10000", ";", "if", "(", "colorMode", "<", "Photoshop", ".", "_COLOR_MODE_CHOICES_INDEXED", ".", "length", ")", "{", "metadata", ".", "set", "(", "Photoshop", ".", "COLOR_MODE", ",", "Photoshop", ".", "_COLOR_MODE_CHOICES_INDEXED", "[", "colorMode", "]", ");", "}", "IOUtils", ".", "skipFully", "(", "stream", ",", "colorModeSectionSize", ")", ";", "/", "/", "if", "something", "is", "corrupt", "about", "this", "number", ",", "prevent", "an", "/", "/", "infinite", "loop", "by", "only", "reading", "10000", "blocks", "int", "blocks", "=", "0", ";", "while", "(", "read", "<", "imageResourcesSectionSize", "&", "&", "blocks", "<", "MAX_BLOCKS", ")", "{", "if", "(", "rb", ".", "totalLength", "<", "=", "0", ")", "{", "/", "/", "break", ";", "}", "/", "/", "if", "there", "are", "multiple", "xmps", "in", "a", "file", ",", "this", "will", "/", "/", "overwrite", "the", "data", "from", "the", "earlier", "xmp", "JempboxExtractor", "ex", "=", "new", "JempboxExtractor", "(", "metadata", ")", ";", "ex", ".", "parse", "(", "new", "ByteArrayInputStream", "(", "rb", ".", "data", ")", ");", "blocks", "+", "+;", "/", "/", "TODO", "private", "static", "final", "int", "ID_URL", "=", "0x040B", ";", "private", "static", "final", "int", "ID_AUTO_SAVE_FILE_PATH", "=", "0x043E", ";", "private", "static", "final", "int", "ID_THUMBNAIL_RESOURCE", "=", "0x040C", ";", "static", "int", "counter", "=", "0", ";", "counter", "+", "+;", "if", "(", "v", "<", "0", ")", "{", "throw", "new", "EOFException", "(", ");", "}", "if", "(", "dataLen", "<", "0", ")", "{", "throw", "new", "TikaException", "(", "\"", "data", "length", "must", "be", ">", "=", "0", ":", "\"", "+", "dataLen", ")", ";", "}", "/", "/", "protect", "against", "overflow", "if", "(", "Integer", ".", "MAX_VALUE", "-", "dataLen", "<", "nameLen", "+", "10", ")", "{", "throw", "new", "TikaException", "(", "\"", "data", "length", "is", "too", "long", ":", "\"+", "dataLen", ")", ";", "}", "if", "(", "dataLen", ">", "MAX_DATA_LENGTH_BYTES", ")", "{", "throw", "new", "TikaException", "(", "\"", "data", "length", "must", "be", "<", "\"", "+", "MAX_DATA_LENGTH_BYTES", "\"", ":", "\"", "+", "dataLen", ")", ";", "}", "data", "=", "new", "byte", "[", "dataLen", "]", ";", "IOUtils", ".", "readFully", "(", "stream", ",", "data", ")", ";", "import", "java", ".", "nio", ".", "file", ".", "Files", ";", "import", "java", ".", "nio", ".", "file", ".", "Paths", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "apache", ".", "tika", ".", "TikaTest", ";", "import", "org", ".", "apache", ".", "tika", ".", "io", ".", "TikaInputStream", ";", "import", "org", ".", "apache", ".", "tika", ".", "metadata", ".", "XMPMM", ";", "public", "class", "PSDParserTest", "extends", "TikaTest", "{", "@", "Test", "public", "void", "testXMP", "(", ")", "throws", "Exception", "{", "Metadata", "metadata", "=", "getXML", "(", "\"", "testPSD_xmp", ".", "psd", "\"", ").", "metadata", ";", "assertEquals", "(", "\"", "Adobe", "Photoshop", "CC", "2014", "(", "Macintosh", ")", "\",", "metadata", ".", "get", "(", "XMPMM", ".", "HISTORY_SOFTWARE_AGENT", ")", ");", "assertEquals", "(", "\"", "xmp", ".", "iid", ":", "63681182", "-", "81a0", "-", "4035", "-", "b4b2", "-", "19bea6201c05", "\"", ",", "metadata", ".", "get", "(", "XMPMM", ".", "HISTORY_EVENT_INSTANCEID", ")", ");", "}</s>FONT", ";", "//", "embedded", "font", "files", "/", "/", "what", "else", "?", "import", "org", ".", "apache", ".", "poi", ".", "util", ".", "IOUtils", ";", "metadata", ".", "set", "(", "Photoshop", ".", "COLOR_MODE", ",", "Photoshop", ".", "_COLOR_MODE_CHOICES_INDEXED", "[", "colorMode", "]", ");", "stream", ".", "skip", "(", "colorModeSectionSize", ")", ";", "while", "(", "read", "<", "imageResourcesSectionSize", ")", "{", "/", "/", "TODO", "Parse", "the", "XMP", "info", "via", "ImageMetadataExtractor", "private", "static", "final", "int", "ID_URL", "=", "0x040B", ";", "data", "=", "new", "byte", "[", "dataLen", "]", ";", "IOUtils", ".", "readFully", "(", "stream", ",", "data", ")", ";", "public", "class", "PSDParserTest", "{"], "docstring_tokens": ["excessive", "memory", "usage"]}
{"contents": ["empty"], "code_tokens": ["static", "void", "php_snmp_internal", "(", "INTERNAL_FUNCTION_PARAMETERS", ",", "int", "st", ",", "if", "(", "vars", "-", ">", "type", "=", "=", "SNMP_ENDOFMIBVIEW", "|", "|", "vars", "-", ">", "type", "=", "=", "SNMP_NOSUCHOBJECT", "|", "|", "if", "(", "(", "st", "&", "SNMP_CMD_WALK", ")", "&", "&", "}", "else", "{", "/", "*", "{", "{{", "proto", "mixed", "snmpget", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmpgetnext", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmpwalk", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "snmpset", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "}", "}", "/", "*", "{", "{{", "proto", "mixed", "snmp2_get", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmp2_getnext", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmp2_walk", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "snmp2_set", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "SNMP", ":", ":", "close", "(", ")", "/", "*", "{", "{{", "proto", "bool", "SNMP", ":", ":", "set", "(", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", ")", "/", "*", "{", "{{", "proto", "long", "SNMP", ":", ":", "getErrno", "(", ")", "/", "*", "{", "{{", "proto", "long", "SNMP", ":", ":", "getError", "(", ")", "static", "HashTable", "*", "php_snmp_get_gc", "(", "zval", "*", "object", ",", "zval", "*", "**", "gc_data", ",", "int", "*", "gc_data_count", "TSRMLS_DC", ")", "/", "*", "{", "{{", "*", "/", "{", "*", "gc_data", "=", "NULL", ";", "*", "gc_data_count", "=", "0", ";", "return", "zend_std_get_properties", "(", "object", "TSRMLS_CC", ")", ";", "}", "/", "*", "}", "}}", "*", "/", "snmp_object", "-", ">", "exceptions_enabled", "=", "Z_LVAL_P", "(", "newval", ")", ";", "php_snmp_object_handlers", ".", "get_gc", "=", "php_snmp_get_gc", ";", "-", "-", "TEST", "-", "-", "Bug", "#", "72479", ":", "Use", "After", "Free", "Vulnerability", "in", "SNMP", "with", "GC", "and", "unserialize", "(", ")", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "require_once", "(", "dirname", "(", "__FILE__", ")", ".'", "/", "skipif", ".", "inc", "'", ");", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "arr", "=", "[", "1", ",", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", "]", ",", "3", ",", "4", ",", "5", "]", ";", "$", "poc", "=", "'", "a", ":", "3", ":", "{", "i", ":", "1", ";", "N", ";", "i", ":", "2", ";", "O", ":", "4", ":", "\"", "snmp", "\"", ":", "1", ":", "{", "s", ":", "11", ":", "\"", "quick_print", "\"", ";'", ".", "serialize", "(", "$", "arr", ")", ".'", "}", "i", ":", "1", ";", "R", ":", "7", ";", "}'", ";", "$", "out", "=", "unserialize", "(", "$", "poc", ")", ";", "gc_collect_cycles", "(", ");", "$", "fakezval", "=", "ptr2str", "(", "1122334455", ")", ";", "$", "fakezval", ".", "=", "ptr2str", "(", "0", ")", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\\", "x00", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x01", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\"", ";", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "5", ";", "$", "i", "+", "+)", "{", "$", "v", "[", "$", "i", "]", "=", "$", "fakezval", ".", "$", "i", ";", "}", "var_dump", "(", "$", "out", "[", "1", "]", ");", "function", "ptr2str", "(", "$", "ptr", ")", "{", "$", "out", "=", "'", "';", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "8", ";", "$", "i", "+", "+)", "{", "$", "out", ".", "=", "chr", "(", "$", "ptr", "&", "0xff", ")", ";", "$", "ptr", ">", ">=", "8", ";", "}", "return", "$", "out", ";", "}", "?", ">", "-", "-", "EXPECT", "-", "-", "int", "(", "1", ")</s>static", "void", "php_snmp_internal", "(", "INTERNAL_FUNCTION_PARAMETERS", ",", "int", "st", ",", "if", "(", "vars", "-", ">", "type", "=", "=", "SNMP_ENDOFMIBVIEW", "|", "|", "vars", "-", ">", "type", "=", "=", "SNMP_NOSUCHOBJECT", "|", "|", "if", "(", "(", "st", "&", "SNMP_CMD_WALK", ")", "&", "&", "}", "else", "{", "/", "*", "{", "{{", "proto", "mixed", "snmpget", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmpgetnext", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmpwalk", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "snmpset", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "}", "}", "/", "*", "{", "{{", "proto", "mixed", "snmp2_get", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmp2_getnext", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "mixed", "snmp2_walk", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "snmp2_set", "(", "string", "host", ",", "string", "community", ",", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", "[", ",", "int", "timeout", "[", ",", "int", "retries", "]", "])", "/", "*", "{", "{{", "proto", "bool", "SNMP", ":", ":", "close", "(", ")", "/", "*", "{", "{{", "proto", "bool", "SNMP", ":", ":", "set", "(", "mixed", "object_id", ",", "mixed", "type", ",", "mixed", "value", ")", "/", "*", "{", "{{", "proto", "long", "SNMP", ":", ":", "getErrno", "(", ")", "/", "*", "{", "{{", "proto", "long", "SNMP", ":", ":", "getError", "(", ")", "snmp_object", "-", ">", "exceptions_enabled", "=", "Z_LVAL_P", "(", "newval", ")", ";"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["@", "XmlAttribute", "private", "Boolean", "allowUnmarshallType", ";", "public", "Boolean", "getAllowUnmarshallType", "(", ")", "{", "return", "allowUnmarshallType", ";", "}", "/", "**", "*", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "*", "<", "p", "/", ">", "*", "This", "should", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "*", "/", "public", "void", "setAllowUnmarshallType", "(", "Boolean", "allowUnmarshallType", ")", "{", "this", ".", "allowUnmarshallType", "=", "allowUnmarshallType", ";", "}", "if", "(", "allowUnmarshallType", "!", "=", "null", ")", "{", "setProperty", "(", "camelContext", ",", "dataFormat", ",", "\"", "allowUnmarshallType", "\"", ",", "allowUnmarshallType", ")", ";", "}", "/", "**", "*", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "*", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "This", "should", "*", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "*", "/", "private", "Boolean", "allowUnmarshallType", "=", "false", ";", "public", "Boolean", "getAllowUnmarshallType", "(", ")", "{", "return", "allowUnmarshallType", ";", "}", "public", "void", "setAllowUnmarshallType", "(", "Boolean", "allowUnmarshallType", ")", "{", "this", ".", "allowUnmarshallType", "=", "allowUnmarshallType", ";", "}", "The", "JacksonXML", "dataformat", "supports", "14", "options", "which", "are", "listed", "below", ".", "|", "allowUnmarshallType", "|", "false", "|", "Boolean", "|", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "This", "should", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "private", "boolean", "allowUnmarshallType", ";", "String", "type", "=", "null", ";", "if", "(", "allowUnmarshallType", ")", "{", "type", "=", "exchange", ".", "getIn", "(", ").", "getHeader", "(", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "String", ".", "class", ")", ";", "}", "public", "boolean", "isAllowUnmarshallType", "(", ")", "{", "return", "allowUnmarshallType", ";", "}", "/", "**", "*", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "*", "<", "p", "/", ">", "*", "This", "should", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "*", "/", "public", "void", "setAllowUnmarshallType", "(", "boolean", "allowJacksonUnmarshallType", ")", "{", "this", ".", "allowUnmarshallType", "=", "allowJacksonUnmarshallType", ";", "}", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "jacksonxml", ";", "import", "java", ".", "util", ".", "LinkedHashMap", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "apache", ".", "camel", ".", "test", ".", "junit4", ".", "CamelTestSupport", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "JacksonMarshalUnmarshalTypeHeaderNotAllowedTest", "extends", "CamelTestSupport", "{", "@", "Test", "public", "void", "testUnmarshalPojo", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "reversePojo", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "String", "json", "=", "\"", "<", "pojo", "name", "=", "\\\"", "Camel", "\\", "\"/", ">\"", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "backPojo", "\"", ",", "json", ",", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "TestPojo", ".", "class", ".", "getName", "(", "))", ";", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "JacksonXMLDataFormat", "format", "=", "new", "JacksonXMLDataFormat", "(", ");", "from", "(", "\"", "direct", ":", "backPojo", "\"", ").", "unmarshal", "(", "format", ")", ".", "to", "(", "\"", "mock", ":", "reversePojo", "\"", ");", "}", "}", ";", "}", "}", "@", "@", "-", "46", ",", "6", "+", "46", ",", "7", "@", "@", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "format", ".", "setAllowUnmarshallType", "(", "true", ")", ";</s>The", "JacksonXML", "dataformat", "supports", "13", "options", "which", "are", "listed", "below", ".", "String", "type", "=", "exchange", ".", "getIn", "(", ").", "getHeader", "(", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "String", ".", "class", ")", ";"], "docstring_tokens": ["object", "de-serialization"]}
{"contents": ["empty"], "code_tokens": ["__FBSDID", "(", "\"$", "FreeBSD", ":", "head", "/", "sys", "/", "netinet", "/", "sctp_auth", ".", "c", "355931", "2019", "-", "12", "-", "20", "15", ":", "25", ":", "08Z", "tuexen", "$", "\")", ";", "if", "(", "(", "plen", "<", "sizeof", "(", "struct", "sctp_paramhdr", ")", ")", "|", "|", "(", "offset", "+", "plen", ">", "length", ")", ")", "__FBSDID", "(", "\"$", "FreeBSD", ":", "head", "/", "sys", "/", "netinet", "/", "sctp_pcb", ".", "c", "355931", "2019", "-", "12", "-", "20", "15", ":", "25", ":", "08Z", "tuexen", "$", "\")", ";", "if", "(", "plen", "<", "sizeof", "(", "struct", "sctp_paramhdr", ")", ")", "{", "if", "(", "plen", "<", "sizeof", "(", "struct", "sctp_asconf_addrv4_param", ")", ")", "{", "return", "(", "-", "101", ")", ";", "}</s>__FBSDID", "(", "\"$", "FreeBSD", ":", "head", "/", "sys", "/", "netinet", "/", "sctp_auth", ".", "c", "352438", "2019", "-", "09", "-", "17", "09", ":", "46", ":", "42Z", "tuexen", "$", "\")", ";", "if", "(", "(", "plen", "=", "=", "0", ")", "|", "|", "(", "offset", "+", "plen", ">", "length", ")", ")", "__FBSDID", "(", "\"$", "FreeBSD", ":", "head", "/", "sys", "/", "netinet", "/", "sctp_pcb", ".", "c", "353477", "2019", "-", "10", "-", "13", "16", ":", "14", ":", "04Z", "markj", "$", "\")", ";", "if", "(", "plen", "=", "=", "0", ")", "{"], "docstring_tokens": ["out-of-bounds", "reads"]}
{"contents": ["empty"], "code_tokens": ["import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "@", "Test", "public", "void", "testPrepareStatementWithSetBinaryStream", "(", ")", "throws", "SQLException", "{", "PreparedStatement", "stmt", "=", "con", ".", "prepareStatement", "(", "\"", "select", "under_col", "from", "\"", "+", "tableName", "+", "\"", "where", "value", "=", "?\"", ");", "stmt", ".", "setBinaryStream", "(", "1", ",", "new", "ByteArrayInputStream", "(", "\"'", "val_238", "'", "or", "under_col", "<", ">", "0", "\"", ".", "getBytes", "(", "))", ");", "ResultSet", "res", "=", "stmt", ".", "executeQuery", "(", ");", "assertFalse", "(", "res", ".", "next", "(", "))", ";", "}", "@", "Test", "public", "void", "testPrepareStatementWithSetString", "(", ")", "throws", "SQLException", "{", "PreparedStatement", "stmt", "=", "con", ".", "prepareStatement", "(", "\"", "select", "under_col", "from", "\"", "+", "tableName", "+", "\"", "where", "value", "=", "?\"", ");", "stmt", ".", "setString", "(", "1", ",", "\"", "val_238", "\\", "\\'", "or", "under_col", "<", ">", "0", "-", "-\"", ");", "ResultSet", "res", "=", "stmt", ".", "executeQuery", "(", ");", "assertFalse", "(", "res", ".", "next", "(", "))", ";", "stmt", ".", "setString", "(", "1", ",", "\"", "anyStringHere", "\\", "\\'", "or", "1", "=", "1", "-", "-\"", ");", "res", "=", "stmt", ".", "executeQuery", "(", ");", "assertFalse", "(", "res", ".", "next", "(", "))", ";", "}", "setString", "(", "parameterIndex", ",", "str", ")", ";", "private", "String", "replaceBackSlashSingleQuote", "(", "String", "x", ")", "{", "/", "/", "scrutinize", "escape", "pair", ",", "specifically", ",", "replace", "\\", "'", "to", "'", "StringBuffer", "newX", "=", "new", "StringBuffer", "(", ");", "for", "(", "int", "i", "=", "0", ";", "i", "<", "x", ".", "length", "(", ");", "i", "+", "+)", "{", "char", "c", "=", "x", ".", "charAt", "(", "i", ")", ";", "if", "(", "c", "=", "=", "'", "\\\\", "'", "&", "&", "i", "<", "x", ".", "length", "(", ")-", "1", ")", "{", "char", "c1", "=", "x", ".", "charAt", "(", "i", "+", "1", ")", ";", "if", "(", "c1", "=", "=", "'", "\\'", "')", "{", "newX", ".", "append", "(", "c1", ")", ";", "}", "else", "{", "newX", ".", "append", "(", "c", ")", ";", "newX", ".", "append", "(", "c1", ")", ";", "}", "i", "+", "+;", "}", "else", "{", "newX", ".", "append", "(", "c", ")", ";", "}", "}", "return", "newX", ".", "toString", "(", ");", "}", "x", "=", "replaceBackSlashSingleQuote", "(", "x", ")", ";", "x", "=", "x", ".", "replace", "(", "\"'", "\",", "\"", "\\\\", "'\"", ");", "this", ".", "parameters", ".", "put", "(", "parameterIndex", ",", "\"", "'\"", "+", "x", "+", "\"'", "\")", ";</s>this", ".", "parameters", ".", "put", "(", "parameterIndex", ",", "str", ")", ";", "x", "=", "x", ".", "replace", "(", "\"'", "\",", "\"", "\\\\", "'\"", ");", "this", ".", "parameters", ".", "put", "(", "parameterIndex", ",", "\"'", "\"+", "x", "+", "\"'", "\")", ";"], "docstring_tokens": ["sql", "injection"]}
{"contents": ["empty"], "code_tokens": ["$", "{%", "started_by_project", "(", "app", ".", "getItemByFullName", "(", "it", ".", "upstreamProject", ")", ".", "fullDisplayName", ",", "it", ".", "upstreamBuild", ".", "toString", "(", "),", "it", ".", "upstreamUrl", ",", "rootURL", ")", "}", "$", "{%", "started_by_project_with_deleted_build", "(", "app", ".", "getItemByFullName", "(", "it", ".", "upstreamProject", ")", ".", "fullDisplayName", ",", "it", ".", "upstreamBuild", ".", "toString", "(", "),", "it", ".", "upstreamUrl", ",", "rootURL", ")", "}", "$", "{", "it", ".", "shortDescription", "}", "<", "br", "/", ">$", "{%", "caused_by", "}", "/", "*", "*", "The", "MIT", "License", "*", "*", "Copyright", "(", "c", ")", "2020", "CloudBees", ",", "Inc", ".", "*", "*", "Permission", "is", "hereby", "granted", ",", "free", "of", "charge", ",", "to", "any", "person", "obtaining", "a", "copy", "*", "of", "this", "software", "and", "associated", "documentation", "files", "(", "the", "\"", "Software", "\"", "),", "to", "deal", "*", "in", "the", "Software", "without", "restriction", ",", "including", "without", "limitation", "the", "rights", "*", "to", "use", ",", "copy", ",", "modify", ",", "merge", ",", "publish", ",", "distribute", ",", "sublicense", ",", "and", "/", "or", "sell", "*", "copies", "of", "the", "Software", ",", "and", "to", "permit", "persons", "to", "whom", "the", "Software", "is", "*", "furnished", "to", "do", "so", ",", "subject", "to", "the", "following", "conditions", ":", "*", "*", "The", "above", "copyright", "notice", "and", "this", "permission", "notice", "shall", "be", "included", "in", "*", "all", "copies", "or", "substantial", "portions", "of", "the", "Software", ".", "*", "*", "THE", "SOFTWARE", "IS", "PROVIDED", "\"", "AS", "IS", "\"", ",", "WITHOUT", "WARRANTY", "OF", "ANY", "KIND", ",", "EXPRESS", "OR", "*", "IMPLIED", ",", "INCLUDING", "BUT", "NOT", "LIMITED", "TO", "THE", "WARRANTIES", "OF", "MERCHANTABILITY", ",", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", "AND", "NONINFRINGEMENT", ".", "IN", "NO", "EVENT", "SHALL", "THE", "*", "AUTHORS", "OR", "COPYRIGHT", "HOLDERS", "BE", "LIABLE", "FOR", "ANY", "CLAIM", ",", "DAMAGES", "OR", "OTHER", "*", "LIABILITY", ",", "WHETHER", "IN", "AN", "ACTION", "OF", "CONTRACT", ",", "TORT", "OR", "OTHERWISE", ",", "ARISING", "FROM", ",", "*", "OUT", "OF", "OR", "IN", "CONNECTION", "WITH", "THE", "SOFTWARE", "OR", "THE", "USE", "OR", "OTHER", "DEALINGS", "IN", "*", "THE", "SOFTWARE", ".", "*", "/", "package", "hudson", ".", "model", ";", "import", "hudson", ".", "tasks", ".", "BuildTrigger", ";", "import", "jenkins", ".", "model", ".", "Jenkins", ";", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "Issue", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "JenkinsRule", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "TestExtension", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "concurrent", ".", "atomic", ".", "AtomicBoolean", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertFalse", ";", "public", "class", "UpstreamCauseSEC1901Test", "{", "@", "Rule", "public", "JenkinsRule", "j", "=", "new", "JenkinsRule", "(", ");", "@", "Test", "@", "Issue", "(", "\"", "SECURITY", "-", "1901", "\"", ")", "public", "void", "preventXssInUpstreamDisplayName", "(", ")", "throws", "Exception", "{", "j", ".", "jenkins", ".", "setQuietPeriod", "(", "0", ")", ";", "FreeStyleProject", "up", "=", "j", ".", "createFreeStyleProject", "(", "\"", "up", "\"", ");", "up", ".", "setDisplayName", "(", "\"", "Up", "<", "script", ">", "alert", "(", "123", ")", "</", "script", ">", "Project", "\"", ");", "FreeStyleProject", "down", "=", "j", ".", "createFreeStyleProject", "(", "\"", "down", "\"", ");", "up", ".", "getPublishersList", "(", ").", "add", "(", "new", "BuildTrigger", "(", "down", ".", "getFullName", "(", "),", "false", ")", ");", "j", ".", "jenkins", ".", "rebuildDependencyGraph", "(", ");", "j", ".", "buildAndAssertSuccess", "(", "up", ")", ";", "FreeStyleBuild", "downBuild", "=", "this", ".", "waitForDownBuild", "(", "down", ")", ";", "ensureXssIsPrevented", "(", "downBuild", ")", ";", "}", "@", "Test", "@", "Issue", "(", "\"", "SECURITY", "-", "1901", "\"", ")", "public", "void", "preventXssInUpstreamDisplayName_deleted", "(", ")", "throws", "Exception", "{", "j", ".", "jenkins", ".", "setQuietPeriod", "(", "0", ")", ";", "FreeStyleProject", "up", "=", "j", ".", "createFreeStyleProject", "(", "\"", "up", "\"", ");", "up", ".", "setDisplayName", "(", "\"", "Up", "<", "script", ">", "alert", "(", "123", ")", "</", "script", ">", "Project", "\"", ");", "FreeStyleProject", "down", "=", "j", ".", "createFreeStyleProject", "(", "\"", "down", "\"", ");", "up", ".", "getPublishersList", "(", ").", "add", "(", "new", "BuildTrigger", "(", "down", ".", "getFullName", "(", "),", "false", ")", ");", "j", ".", "jenkins", ".", "rebuildDependencyGraph", "(", ");", "FreeStyleBuild", "upBuild", "=", "j", ".", "buildAndAssertSuccess", "(", "up", ")", ";", "FreeStyleBuild", "downBuild", "=", "this", ".", "waitForDownBuild", "(", "down", ")", ";", "/", "/", "that", "will", "display", "a", "different", "part", "upBuild", ".", "delete", "(", ");", "ensureXssIsPrevented", "(", "downBuild", ")", ";", "}", "@", "Test", "@", "Issue", "(", "\"", "SECURITY", "-", "1901", "\"", ")", "public", "void", "preventXssInUpstreamShortDescription", "(", ")", "throws", "Exception", "{", "FullNameChangingProject", "up", "=", "j", ".", "createProject", "(", "FullNameChangingProject", ".", "class", ",", "\"", "up", "\"", ");", "FreeStyleProject", "down", "=", "j", ".", "createFreeStyleProject", "(", "\"", "down", "\"", ");", "CustomBuild", "upBuild", "=", "j", ".", "buildAndAssertSuccess", "(", "up", ")", ";", "up", ".", "setVirtualName", "(", "\"", "Up", "<", "script", ">", "alert", "(", "123", ")", "</", "script", ">", "Project", "\"", ");", "j", ".", "assertBuildStatusSuccess", "(", "down", ".", "scheduleBuild2", "(", "0", ",", "new", "Cause", ".", "UpstreamCause", "(", "upBuild", ")", "))", ";", "up", ".", "setVirtualName", "(", "null", ")", ";", "FreeStyleBuild", "downBuild", "=", "this", ".", "waitForDownBuild", "(", "down", ")", ";", "ensureXssIsPrevented", "(", "downBuild", ")", ";", "}", "private", "void", "ensureXssIsPrevented", "(", "FreeStyleBuild", "downBuild", ")", "throws", "Exception", "{", "AtomicBoolean", "alertCalled", "=", "new", "AtomicBoolean", "(", "false", ")", ";", "JenkinsRule", ".", "WebClient", "wc", "=", "j", ".", "createWebClient", "(", ");", "wc", ".", "setAlertHandler", "(", "(", "page", ",", "s", ")", "-", ">", "alertCalled", ".", "set", "(", "true", ")", ");", "wc", ".", "goTo", "(", "downBuild", ".", "getUrl", "(", "))", ";", "assertFalse", "(", "\"", "XSS", "not", "prevented", "\"", ",", "alertCalled", ".", "get", "(", "))", ";", "}", "private", "<", "B", "extends", "Build", "<", "?,", "B", ">", ">", "B", "waitForDownBuild", "(", "Project", "<", "?,", "B", ">", "down", ")", "throws", "Exception", "{", "j", ".", "waitUntilNoActivity", "(", ");", "B", "result", "=", "down", ".", "getBuilds", "(", ").", "getLastBuild", "(", ");", "return", "result", ";", "}", "public", "static", "class", "CustomBuild", "extends", "Build", "<", "FullNameChangingProject", ",", "CustomBuild", ">", "{", "public", "CustomBuild", "(", "FullNameChangingProject", "job", ")", "throws", "IOException", "{", "super", "(", "job", ")", ";", "}", "}", "static", "class", "FullNameChangingProject", "extends", "Project", "<", "FullNameChangingProject", ",", "CustomBuild", ">", "implements", "TopLevelItem", "{", "private", "volatile", "String", "virtualName", ";", "public", "FullNameChangingProject", "(", "ItemGroup", "parent", ",", "String", "name", ")", "{", "super", "(", "parent", ",", "name", ")", ";", "}", "public", "void", "setVirtualName", "(", "String", "virtualName", ")", "{", "this", ".", "virtualName", "=", "virtualName", ";", "}", "@", "Override", "public", "String", "getName", "(", ")", "{", "if", "(", "virtualName", "!", "=", "null", ")", "{", "return", "virtualName", ";", "}", "else", "{", "return", "super", ".", "getName", "(", ");", "}", "}", "@", "Override", "protected", "Class", "<", "CustomBuild", ">", "getBuildClass", "(", ")", "{", "return", "CustomBuild", ".", "class", ";", "}", "@", "Override", "public", "TopLevelItemDescriptor", "getDescriptor", "(", ")", "{", "return", "(", "FreeStyleProject", ".", "DescriptorImpl", ")", "Jenkins", ".", "get", "(", ").", "getDescriptorOrDie", "(", "getClass", "(", "))", ";", "}", "@", "TestExtension", "public", "static", "class", "DescriptorImpl", "extends", "AbstractProjectDescriptor", "{", "@", "Override", "public", "FullNameChangingProject", "newInstance", "(", "ItemGroup", "parent", ",", "String", "name", ")", "{", "return", "new", "FullNameChangingProject", "(", "parent", ",", "name", ")", ";", "}", "}", "}", "}</s><", "j", ":", "out", "value", "=", "\"$", "{%", "started_by_project", "(", "app", ".", "getItemByFullName", "(", "it", ".", "upstreamProject", ")", ".", "fullDisplayName", ",", "it", ".", "upstreamBuild", ".", "toString", "(", "),", "it", ".", "upstreamUrl", ",", "rootURL", ")", "}\"", "/>", "<", "j", ":", "out", "value", "=", "\"$", "{%", "started_by_project_with_deleted_build", "(", "app", ".", "getItemByFullName", "(", "it", ".", "upstreamProject", ")", ".", "fullDisplayName", ",", "it", ".", "upstreamBuild", ".", "toString", "(", "),", "it", ".", "upstreamUrl", ",", "rootURL", ")", "}\"", "/>", "<", "j", ":", "out", "value", "=", "\"$", "{", "it", ".", "shortDescription", "}", "\"/", ">", "<", "br", "/", "><", "j", ":", "out", "value", "=", "\"$", "{%", "caused_by", "}", "\"", "/", ">"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["-", "Fixed", "securities", "issue", "detailed", "in", "CVE", "-", "2008", "-", "2665", "and", "CVE", "-", "2008", "-", "2666", ".", "(", "Christian", "Hoffmann", ")</s>-", "Reverted", "fix", "for", "bug", "#", "44197", "due", "to", "change", "in", "behaviour", "in", "minor", "version", ".", "/", "*", "*", "If", "given", "filepath", "is", "a", "URL", ",", "allow", "-", "safe", "mode", "stuff", "*", "related", "to", "URL", "'", "s", "is", "checked", "in", "individual", "functions", "*", "/", "wrapper", "=", "php_stream_locate_url_wrapper", "(", "filename", ",", "NULL", ",", "STREAM_LOCATE_WRAPPERS_ONLY", "TSRMLS_CC", ")", ";", "if", "(", "wrapper", "!", "=", "NULL", ")", "return", "1", ";"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "loklak", ".", "tools", ".", "IO", ";", "assets", "=", "new", "File", "(", "datadir", ",", "\"", "assets", "\"", ").", "getAbsoluteFile", "(", ");", "Path", "storage_path", "=", "IO", ".", "resolvePath", "(", "assets", ".", "toPath", "(", "),", "letter0", ",", "letter1", ",", "screen_name", ")", ";", "return", "IO", ".", "resolvePath", "(", "storage_path", ",", "id_str", "+", "\"", "_", "\"", "+", "file", ")", ".", "toFile", "(", ");", "/", "/", "all", "assets", "for", "one", "user", "in", "one", "file", "import", "java", ".", "nio", ".", "file", ".", "Paths", ";", "/", "**", "*", "Resolves", "an", "untrusted", "user", "-", "specified", "path", "against", "the", "API", "'", "s", "base", "directory", ".", "*", "Paths", "that", "try", "to", "escape", "the", "base", "directory", "are", "rejected", ".", "*", "*", "@", "param", "baseDirPath", "the", "absolute", "path", "of", "the", "base", "directory", "that", "all", "*", "user", "-", "specified", "paths", "should", "be", "within", "*", "@", "param", "userPath", "the", "untrusted", "path", "provided", "by", "the", "API", "user", ",", "expected", "to", "be", "*", "relative", "to", "{", "@", "code", "baseDirPath", "}", "*", "/", "public", "static", "Path", "resolvePath", "(", "final", "Path", "baseDirPath", ",", "final", "Path", "userPath", ")", "{", "if", "(", "!", "baseDirPath", ".", "isAbsolute", "(", "))", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Base", "path", "must", "be", "absolute", "\"", ");", "}", "if", "(", "userPath", ".", "isAbsolute", "(", "))", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "User", "path", "must", "be", "relative", "\"", ");", "}", "/", "/", "Join", "the", "two", "paths", "together", ",", "then", "normalize", "so", "that", "any", "\"", "..", "\"", "elements", "/", "/", "in", "the", "userPath", "can", "remove", "parts", "of", "baseDirPath", ".", "/", "/", "(", "e", ".", "g", ".", "\"", "/", "foo", "/", "bar", "/", "baz", "\"", "+", "\"", "..", "/", "attack", "\"", "-", ">", "\"", "/", "foo", "/", "bar", "/", "attack", "\"", ")", "final", "Path", "resolvedPath", "=", "baseDirPath", ".", "resolve", "(", "userPath", ")", ".", "normalize", "(", ");", "/", "/", "Make", "sure", "the", "resulting", "path", "is", "still", "within", "the", "required", "directory", ".", "/", "/", "(", "In", "the", "example", "above", ",", "\"", "/", "foo", "/", "bar", "/", "attack", "\"", "is", "not", ".", ")", "if", "(", "!", "resolvedPath", ".", "startsWith", "(", "baseDirPath", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "User", "path", "escapes", "the", "base", "path", "\"", ");", "}", "return", "resolvedPath", ";", "}", "public", "static", "Path", "resolvePath", "(", "final", "Path", "baseDirPath", ",", "final", "String", "userPath", ")", "{", "return", "resolvePath", "(", "baseDirPath", ",", "Paths", ".", "get", "(", "userPath", ")", ");", "}", "/", "**", "*", "Checks", "each", "subsequent", "path", "to", "be", "strictly", "within", "the", "baseDirPath", "so", "that", "*", "no", "path", "argument", "leads", "to", "directory", "traversal", "attack", "*", "*", "E", ".", "g", ".", "/", "models", "/", "+", "req", ".", "model", "+", "'", "/'", "+", "req", ".", "lang", "+", "/", "images", "/", "+", "req", ".", "image", "*", "Should", "be", "checked", "for", "(", "'", "models", "'", ",", "req", ".", "model", ",", "req", ".", "lang", ",", "'", "images", "'", ",", "req", ".", "image", ")", "*", "that", "each", "subsequent", "element", "is", "within", "the", "previous", "and", "not", "breaking", "out", "by", "passing", "*", "req", ".", "model", "=", ">", ".", ".", "*", "req", ".", "lang", "=", ">", ".", ".", "*", "req", ".", "image", "=", ">", ".", "./", "..", "/", "private", "/", "data", ".", "json", "*", "*", "Since", "just", "checking", "the", "last", "argument", "isn", "'", "t", "enough", "*", "*", "@", "param", "baseDirPath", "the", "absolute", "path", "of", "the", "base", "directory", "that", "all", "*", "user", "-", "specified", "paths", "should", "be", "within", "*", "@", "param", "paths", "the", "untrusted", "paths", "provided", "by", "the", "API", "user", ",", "expected", "to", "be", "*", "relative", "to", "{", "@", "code", "baseDirPath", "}", "*", "/", "public", "static", "Path", "resolvePath", "(", "final", "Path", "baseDirPath", ",", "final", "String", ".", "..", "paths", ")", "{", "Path", "resolved", "=", "baseDirPath", ";", "for", "(", "String", "path", ":", "paths", ")", "{", "resolved", "=", "resolvePath", "(", "resolved", ",", "path", ")", ";", "}", "return", "resolved", ";", "}</s>assets", "=", "new", "File", "(", "datadir", ",", "\"", "assets", "\"", ");", "File", "storage_path", "=", "new", "File", "(", "new", "File", "(", "new", "File", "(", "assets", ",", "letter0", ")", ",", "letter1", ")", ",", "screen_name", ")", ";", "return", "new", "File", "(", "storage_path", ",", "id_str", "+", "\"", "_", "\"", "+", "file", ")", ";", "/", "/", "all", "assets", "for", "one", "user", "in", "one", "file"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["buf", "=", "kmalloc", "(", "count", ",", "GFP_KERNEL", ")", ";</s>buf", "=", "kmalloc", "(", "8", ",", "GFP_KERNEL", ")", ";", "/", "*", "8", "bytes", "are", "enough", "for", "both", "products", "*", "/"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["#", "211", ":", "Disable", "`", "SUPPORT_DTD", "`", "for", "`", "XMLInputFactory", "`", "unless", "explicitly", "overridden", "/", "/", "and", "ditto", "wrt", "[", "dataformat", "-", "xml", "#", "211", "]", ",", "SUPPORT_DTD", "xmlIn", ".", "setProperty", "(", "XMLInputFactory", ".", "SUPPORT_DTD", ",", "Boolean", ".", "FALSE", ")", ";", "package", "com", ".", "fasterxml", ".", "jackson", ".", "dataformat", ".", "xml", ".", "failing", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "com", ".", "fasterxml", ".", "jackson", ".", "dataformat", ".", "xml", ".", "*;", "/", "/", "for", "[", "databind", "-", "xml", "#", "211", "]", "public", "class", "SupportDTDDefaultsTest", "extends", "XmlTestBase", "{", "public", "void", "testDTDAttempt", "(", ")", "throws", "Exception", "{", "XmlMapper", "mapper", "=", "new", "XmlMapper", "(", ");", "String", "XML", "=", "\"", "<?", "xml", "version", "=", "'", "1", ".", "0", "'", "encoding", "=", "'", "UTF", "-", "8", "'", "?>", "<!", "DOCTYPE", "foo", "SYSTEM", "'", "http", ":", "//", "127", ".", "0", ".", "0", ".", "1", ":", "8001", "'", "[", "]", ">\\", "n", "\"", "+", "\"<", "foo", "/", ">\"", ";", "try", "{", "/", "*", "Map", "<", "String", ",", "String", ">", "info", "=", "*/", "mapper", ".", "readValue", "(", "XML", ",", "Map", ".", "class", ")", ";", "/", "/", "At", "this", "point", "a", "GET", "request", "would", "have", "been", "sent", "to", "localhost", ":", "8001", ".", "You", "will", "see", "a", "Connection", "Refused", "in", "case", "you", "don", "'", "t", "have", "a", "server", "listening", "there", ".", "}", "catch", "(", "Exception", "e", ")", "{", "fail", "(", "\"", "Should", "not", "try", "to", "resolve", "external", "DTD", "subset", ":", "\"", "+", "e", ")", ";", "}", "}", "}</s>"], "docstring_tokens": ["request", "forgery", "(ssrf", ")"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "UNEXPECTED", "(", "length", "<", "0", ")", ")", "{", "zend_error", "(", "E_ERROR", ",", "\"", "String", "size", "overflow", "\"", ");", "}", "if", "(", "UNEXPECTED", "(", "length", "<", "0", ")", ")", "{", "zend_error", "(", "E_ERROR", ",", "\"", "String", "size", "overflow", "\"", ");", "}</s>"], "docstring_tokens": ["out-of-bounds", "read"]}
{"contents": ["empty"], "code_tokens": ["sk", "-", ">", "sk_sndbuf", "=", "max_t", "(", "int", ",", "val", "*", "2", ",", "SOCK_MIN_SNDBUF", ")", ";", "sk", "-", ">", "sk_rcvbuf", "=", "max_t", "(", "int", ",", "val", "*", "2", ",", "SOCK_MIN_RCVBUF", ")", ";</s>sk", "-", ">", "sk_sndbuf", "=", "max_t", "(", "u32", ",", "val", "*", "2", ",", "SOCK_MIN_SNDBUF", ")", ";", "sk", "-", ">", "sk_rcvbuf", "=", "max_t", "(", "u32", ",", "val", "*", "2", ",", "SOCK_MIN_RCVBUF", ")", ";"], "docstring_tokens": ["memory", "corruptions"]}
{"contents": ["empty"], "code_tokens": ["mutex_lock", "(", "&", "pit", "-", ">", "pit_state", ".", "lock", ")", ";", "mutex_unlock", "(", "&", "pit", "-", ">", "pit_state", ".", "lock", ")", ";</s>"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "!", "ssid_ie", "|", "|", "ssid_ie", "-", ">", "len", ">", "IEEE80211_MAX_SSID_LEN", ")</s>if", "(", "!", "ssid_ie", ")"], "docstring_tokens": ["stack", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "onlined_pages", ")", "{", "node_set_state", "(", "zone_to_nid", "(", "zone", ")", ",", "N_HIGH_MEMORY", ")", ";", "if", "(", "need_zonelists_rebuild", ")", "build_all_zonelists", "(", "NULL", ",", "zone", ")", ";", "else", "zone_pcp_update", "(", "zone", ")", ";", "}", "if", "(", "onlined_pages", ")</s>if", "(", "need_zonelists_rebuild", ")", "build_all_zonelists", "(", "NULL", ",", "zone", ")", ";", "else", "zone_pcp_update", "(", "zone", ")", ";", "if", "(", "onlined_pages", ")", "{", "node_set_state", "(", "zone_to_nid", "(", "zone", ")", ",", "N_HIGH_MEMORY", ")", ";", "}"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["<", "Connector", "protocol", "=", "\"", "AJP", "/", "1", ".", "3", "\"", "address", "=", "\":", ":", "1", "\"", "port", "=", "\"", "8009", "\"", "redirectPort", "=", "\"", "8443", "\"", "/", "></s><", "Connector", "port", "=", "\"", "8009", "\"", "protocol", "=", "\"", "AJP", "/", "1", ".", "3", "\"", "redirectPort", "=", "\"", "8443", "\"", "/", ">", "-", "->"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["PHP", "NEWS", "-", "Core", ":", ".", "Fixed", "bug", "#", "70002", "(", "TS", "issues", "with", "temporary", "dir", "handling", ")", ".", "(", "Anatol", ")", "static", "#", "ifdef", "ZTS", "#", "ifdef", "PHP_WIN32", "__declspec", "(", "thread", ")", "#", "elif", "defined", "(", "__GNUC__", ")", "__thread", "#", "endif", "#", "endif", "char", "*", "temporary_directory", ";</s>\ufeff", "PHP", "NEWS", "-", "Core", ":", "@", "@", "-", "176", ",", "7", "+", "176", ",", "15", "@", "@", "static", "int", "php_do_open_temporary_file", "(", "const", "char", "*", "path", ",", "const", "char", "*", "pfx", ",", "char", "*", "*", "static", "char", "*", "temporary_directory", ";"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "slot", "was", "deleted", "or", "moved", ",", "clear", "iommu", "mapping", "*", "/", "kvm_iommu_unmap_pages", "(", "kvm", ",", "&", "old", ")", ";", "/", "*", "map", "new", "memory", "slot", "into", "the", "iommu", "*", "/", "if", "(", "npages", ")", "{", "r", "=", "kvm_iommu_map_pages", "(", "kvm", ",", "&", "new", ")", ";", "if", "(", "r", ")", "goto", "out_slots", ";", "}", "out_slots", ":", "kfree", "(", "slots", ")", ";</s>/", "*", "map", "/", "unmap", "the", "pages", "in", "iommu", "page", "table", "*", "/", "if", "(", "npages", ")", "{", "r", "=", "kvm_iommu_map_pages", "(", "kvm", ",", "&", "new", ")", ";", "if", "(", "r", ")", "goto", "out_free", ";", "}", "else", "kvm_iommu_unmap_pages", "(", "kvm", ",", "&", "old", ")", ";"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["}", "else", "if", "(", "report", "-", ">", "field", "[", "0", "]", "->", "maxusage", "=", "=", "1", "&", "&", "report", "-", ">", "field", "[", "0", "]", "->", "usage", "[", "0", "]", ".", "hid", "=", "=", "(", "HID_UP_LED", "|", "0x43", ")", "&", "&", "report", "-", ">", "maxfield", ">", "=", "4", "&", "&", "report", "-", ">", "field", "[", "0", "]", "->", "report_count", ">", "=", "1", "&", "&", "report", "-", ">", "field", "[", "1", "]", "->", "report_count", ">", "=", "1", "&", "&", "report", "-", ">", "field", "[", "2", "]", "->", "report_count", ">", "=", "1", "&", "&", "report", "-", ">", "field", "[", "3", "]", "->", "report_count", ">", "=", "1", ")", "{</s>}", "else", "if", "(", "report", "-", ">", "maxfield", ">", "=", "4", "&", "&", "report", "-", ">", "field", "[", "0", "]", "->", "maxusage", "=", "=", "1", "&", "&", "report", "-", ">", "field", "[", "0", "]", "->", "usage", "[", "0", "]", ".", "hid", "=", "=", "(", "HID_UP_LED", "|", "0x43", ")", ")", "{"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "channels", "=", "=", "0", ")", "{", "AUBIO_ERR", "(", "\"", "source_wavread", ":", "Failed", "opening", "%", "s", "(", "number", "of", "channels", "can", "not", "be", "0", ")", "\\", "n", "\"", ",", "s", "-", ">", "path", ")", ";", "goto", "beach", ";", "}", "if", "(", "sr", "=", "=", "0", ")", "{", "AUBIO_ERR", "(", "\"", "source_wavread", ":", "Failed", "opening", "%", "s", "(", "samplerate", "can", "not", "be", "0", ")", "\\", "n", "\"", ",", "s", "-", ">", "path", ")", ";", "goto", "beach", ";", "}", "if", "(", "byterate", "=", "=", "0", ")", "{", "AUBIO_ERR", "(", "\"", "source_wavread", ":", "Failed", "opening", "%", "s", "(", "byterate", "can", "not", "be", "0", ")", "\\", "n", "\"", ",", "s", "-", ">", "path", ")", ";", "goto", "beach", ";", "}", "if", "(", "bitspersample", "=", "=", "0", ")", "{", "AUBIO_ERR", "(", "\"", "source_wavread", ":", "Failed", "opening", "%", "s", "(", "bitspersample", "can", "not", "be", "0", ")", "\\", "n", "\"", ",", "s", "-", ">", "path", ")", ";", "goto", "beach", ";", "}</s>"], "docstring_tokens": ["divide-by-zero", "error"]}
{"contents": ["empty"], "code_tokens": ["#", "define", "DOUBLEFAULT_STACK", "1", "#", "define", "NMI_STACK", "2", "#", "define", "DEBUG_STACK", "3", "#", "define", "MCE_STACK", "4", "#", "define", "N_EXCEPTION_STACKS", "4", "/", "*", "hw", "limit", ":", "7", "*", "/", "#", "define", "trace_stack_segment", "stack_segment", "idtentry", "stack_segment", "do_stack_segment", "has_error_code", "=", "1", "set_intr_gate", "(", "X86_TRAP_SS", ",", "stack_segment", ")", ";</s>#", "define", "STACKFAULT_STACK", "0", "#", "define", "STACKFAULT_STACK", "1", "#", "define", "DOUBLEFAULT_STACK", "2", "#", "define", "NMI_STACK", "3", "#", "define", "DEBUG_STACK", "4", "#", "define", "MCE_STACK", "5", "#", "define", "N_EXCEPTION_STACKS", "5", "/", "*", "hw", "limit", ":", "7", "*", "/", "[", "STACKFAULT_STACK", "-", "1", "]", "=", "\"", "#", "SS", "\"", ",", "idtentry", "stack_segment", "do_stack_segment", "has_error_code", "=", "1", "paranoid", "=", "1", "#", "ifdef", "CONFIG_X86_32", "#", "endif", "dotraplinkage", "void", "do_stack_segment", "(", "struct", "pt_regs", "*", "regs", ",", "long", "error_code", ")", "{", "enum", "ctx_state", "prev_state", ";", "prev_state", "=", "exception_enter", "(", ");", "if", "(", "notify_die", "(", "DIE_TRAP", ",", "\"", "stack", "segment", "\"", ",", "regs", ",", "error_code", ",", "X86_TRAP_SS", ",", "SIGBUS", ")", "!", "=", "NOTIFY_STOP", ")", "{", "preempt_conditional_sti", "(", "regs", ")", ";", "do_trap", "(", "X86_TRAP_SS", ",", "SIGBUS", ",", "\"", "stack", "segment", "\"", ",", "regs", ",", "error_code", ",", "NULL", ")", ";", "preempt_conditional_cli", "(", "regs", ")", ";", "}", "exception_exit", "(", "prev_state", ")", ";", "}", "set_intr_gate_ist", "(", "X86_TRAP_SS", ",", "&", "stack_segment", ",", "STACKFAULT_STACK", ")", ";"], "docstring_tokens": ["fault", "handling", "crash"]}
{"contents": ["empty"], "code_tokens": ["memcpy", "(", "msg", ",", "&", "msg_tmp", ",", "sizeof", "(", "*", "msg", ")", ");</s>memcpy", "(", "msg", ",", "&", "msg_tmp", ",", "sizeof", "(", "*", "msg", ")", ");", "/", "*", "msg", "wraps", "around", "the", "ring", "*", "/", "memcpy_fromio", "(", "msg", ",", "bus", "-", ">", "m_pdwGetRing", "+", "curr_grp", ",", "space_rem", ")", ";", "memcpy_fromio", "(", "(", "u8", "*", ")", "msg", "+", "space_rem", ",", "bus", "-", ">", "m_pdwGetRing", ",", "sizeof", "(", "*", "msg", ")", "-", "space_rem", ")", ";", "memcpy_fromio", "(", "msg", ",", "bus", "-", ">", "m_pdwGetRing", "+", "curr_grp", ",", "sizeof", "(", "*", "msg", ")", ");", "memcpy_fromio", "(", "msg", ",", "bus", "-", ">", "m_pdwGetRing", "+", "curr_grp", ",", "sizeof", "(", "*", "msg", ")", ");", "memcpy_fromio", "(", "msg", ",", "bus", "-", ">", "m_pdwGetRing", "+", "curr_grp", ",", "sizeof", "(", "*", "msg", ")", ");", "/", "*", "Convert", "from", "little", "endian", "to", "CPU", "*", "/", "msg", "-", ">", "size", "=", "le16_to_cpu", "(", "(", "__force", "__le16", ")", "msg", "-", ">", "size", ")", ";", "msg", "-", ">", "command", "=", "le32_to_cpu", "(", "(", "__force", "__le32", ")", "msg", "-", ">", "command", ")", ";", "msg", "-", ">", "controlselector", "=", "le16_to_cpu", "(", "(", "__force", "__le16", ")", "msg", "-", ">", "controlselector", ")", ";"], "docstring_tokens": ["out-of-bounds", "array", "access"]}
{"contents": ["empty"], "code_tokens": ["private", "static", "final", "String", "PARSE_DEPTH_EXCEEDED", "=", "\"", "Trying", "to", "parse", "a", "path", "with", "depth", "greater", "than", "1000", "!", "This", "has", "been", "disabled", "for", "security", "reasons", "to", "prevent", "parsing", "overflows", ".", "\";", "if", "(", "base", ".", "size", "(", ")", ">", "1000", ")", "{", "throw", "new", "IllegalArgumentException", "(", "PARSE_DEPTH_EXCEEDED", ")", ";", "}", "*", "Copyright", "2011", "-", "2018", "the", "original", "author", "or", "authors", ".", "@", "Test", "/", "/", "DATACMNS", "-", "1285", "public", "void", "rejectsTooLongPath", "(", ")", "{", "String", "source", "=", "\"", "foo", ".", "bar", "\"", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "9", ";", "i", "+", "+)", "{", "source", "=", "source", "+", "\"", ".\"", "+", "source", ";", "}", "assertThat", "(", "source", ".", "split", "(", "\"\\", "\\.", "\")", ".", "length", ")", ".", "isGreaterThan", "(", "1000", ")", ";", "final", "String", "path", "=", "source", ";", "assertThatExceptionOfType", "(", "IllegalArgumentException", ".", "class", ")", "/", "/", ".", "isThrownBy", "(", "()", "-", ">", "PropertyPath", ".", "from", "(", "path", ",", "Left", ".", "class", ")", ");", "}", "/", "/", "DATACMNS", "-", "1285", "private", "class", "Left", "{", "Right", "foo", ";", "}", "private", "class", "Right", "{", "Left", "bar", ";", "}</s>*", "Copyright", "2011", "-", "2017", "the", "original", "author", "or", "authors", "."], "docstring_tokens": ["property", "path", "parser"]}
{"contents": ["empty"], "code_tokens": ["static", "int", "ocfs2_lock_get_block", "(", "struct", "inode", "*", "inode", ",", "sector_t", "iblock", ",", "struct", "buffer_head", "*", "bh_result", ",", "int", "create", ")", "{", "int", "ret", "=", "0", ";", "struct", "ocfs2_inode_info", "*", "oi", "=", "OCFS2_I", "(", "inode", ")", ";", "down_read", "(", "&", "oi", "-", ">", "ip_alloc_sem", ")", ";", "ret", "=", "ocfs2_get_block", "(", "inode", ",", "iblock", ",", "bh_result", ",", "create", ")", ";", "up_read", "(", "&", "oi", "-", ">", "ip_alloc_sem", ")", ";", "return", "ret", ";", "}", "static", "int", "ocfs2_dio_wr_get_block", "(", "struct", "inode", "*", "inode", ",", "sector_t", "iblock", ",", "/", "*", "This", "is", "the", "fast", "path", "for", "re", "-", "write", ".", "*", "/", "ret", "=", "ocfs2_lock_get_block", "(", "inode", ",", "iblock", ",", "bh_result", ",", "create", ")", ";", "get_block", "=", "ocfs2_lock_get_block", ";", "get_block", "=", "ocfs2_dio_wr_get_block", ";</s>static", "int", "ocfs2_dio_get_block", "(", "struct", "inode", "*", "inode", ",", "sector_t", "iblock", ",", "down_read", "(", "&", "oi", "-", ">", "ip_alloc_sem", ")", ";", "/", "*", "This", "is", "the", "fast", "path", "for", "re", "-", "write", ".", "*", "/", "ret", "=", "ocfs2_get_block", "(", "inode", ",", "iblock", ",", "bh_result", ",", "create", ")", ";", "up_read", "(", "&", "oi", "-", ">", "ip_alloc_sem", ")", ";", "get_block", "=", "ocfs2_get_block", ";", "get_block", "=", "ocfs2_dio_get_block", ";"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["*", "Copyright", "2002", "-", "2018", "the", "original", "author", "or", "authors", ".", "import", "org", ".", "springframework", ".", "expression", ".", "spel", ".", "support", ".", "SimpleEvaluationContext", ";", "/", "**", "Static", "evaluation", "context", "to", "re", "-", "use", "*", "/", "private", "static", "SimpleEvaluationContext", "evaluationContext", "=", "SimpleEvaluationContext", ".", "builder", "(", ")", ".", "propertyAccessor", "(", "new", "SimpMessageHeaderPropertyAccessor", "(", "))", ".", "build", "(", ");", "if", "(", "Boolean", ".", "TRUE", ".", "equals", "(", "expression", ".", "getValue", "(", "evaluationContext", ",", "message", ",", "Boolean", ".", "class", ")", "))", "{", "return", "new", "Class", "<", "?>", "[]", "{", "Message", ".", "class", ",", "MessageHeaders", ".", "class", "}", ";", "public", "TypedValue", "read", "(", "EvaluationContext", "context", ",", "@", "Nullable", "Object", "target", ",", "String", "name", ")", "{", "if", "(", "target", "instanceof", "Message", ")", "{", "value", "=", "name", ".", "equals", "(", "\"", "headers", "\"", ")", "?", "(", "(", "Message", ")", "target", ")", ".", "getHeaders", "(", ")", ":", "null", ";", "else", "if", "(", "target", "instanceof", "MessageHeaders", ")", "{", "MessageHeaders", "headers", "=", "(", "MessageHeaders", ")", "target", ";", "SimpMessageHeaderAccessor", "accessor", "=", "MessageHeaderAccessor", ".", "getAccessor", "(", "headers", ",", "SimpMessageHeaderAccessor", ".", "class", ")", ";", "Assert", ".", "state", "(", "accessor", "!", "=", "null", ",", "\"", "No", "SimpMessageHeaderAccessor", "\"", ");", "if", "(", "\"", "destination", "\"", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "value", "=", "accessor", ".", "getDestination", "(", ");", "else", "{", "value", "=", "accessor", ".", "getFirstNativeHeader", "(", "name", ")", ";", "if", "(", "value", "=", "=", "null", ")", "{", "value", "=", "headers", ".", "get", "(", "name", ")", ";", "}", "}", "}", "else", "{", "/", "/", "Should", "never", "happen", ".", "..", "throw", "new", "IllegalStateException", "(", "\"", "Expected", "Message", "or", "MessageHeaders", ".", "\")", ";</s>*", "Copyright", "2002", "-", "2017", "the", "original", "author", "or", "authors", ".", "import", "org", ".", "springframework", ".", "expression", ".", "AccessException", ";", "import", "org", ".", "springframework", ".", "expression", ".", "spel", ".", "support", ".", "StandardEvaluationContext", ";", "EvaluationContext", "context", "=", "null", ";", "if", "(", "context", "=", "=", "null", ")", "{", "context", "=", "new", "StandardEvaluationContext", "(", "message", ")", ";", "context", ".", "getPropertyAccessors", "(", ").", "add", "(", "new", "SimpMessageHeaderPropertyAccessor", "(", "))", ";", "}", "if", "(", "Boolean", ".", "TRUE", ".", "equals", "(", "expression", ".", "getValue", "(", "context", ",", "Boolean", ".", "class", ")", "))", "{", "return", "new", "Class", "<", "?>", "[]", "{", "MessageHeaders", ".", "class", "}", ";", "public", "TypedValue", "read", "(", "EvaluationContext", "context", ",", "@", "Nullable", "Object", "target", ",", "String", "name", ")", "throws", "AccessException", "{", "Assert", ".", "state", "(", "target", "instanceof", "MessageHeaders", ",", "\"", "No", "MessageHeaders", "\"", ");", "MessageHeaders", "headers", "=", "(", "MessageHeaders", ")", "target", ";", "SimpMessageHeaderAccessor", "accessor", "=", "MessageHeaderAccessor", ".", "getAccessor", "(", "headers", ",", "SimpMessageHeaderAccessor", ".", "class", ")", ";", "Assert", ".", "state", "(", "accessor", "!", "=", "null", ",", "\"", "No", "SimpMessageHeaderAccessor", "\"", ");", "if", "(", "\"", "destination", "\"", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "value", "=", "accessor", ".", "getDestination", "(", ");", "else", "{", "value", "=", "accessor", ".", "getFirstNativeHeader", "(", "name", ")", ";", "if", "(", "value", "=", "=", "null", ")", "{", "value", "=", "headers", ".", "get", "(", "name", ")", ";"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["#", "ifdef", "CONFIG_COMPAT", "#", "define", "COMPAT_TO_USER", "1", "#", "define", "COMPAT_FROM_USER", "-", "1", "#", "define", "COMPAT_CALC_SIZE", "0", "#", "endif", "/", "*", "Called", "when", "userspace", "align", "differs", "from", "kernel", "space", "one", "*", "/", "int", "(", "*", "compat", ")", "(", "void", "*", "match", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", ";", "/", "*", "Called", "when", "userspace", "align", "differs", "from", "kernel", "space", "one", "*", "/", "int", "(", "*", "compat", ")", "(", "void", "*", "target", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", ";", "#", "ifdef", "CONFIG_COMPAT", "#", "include", "<", "net", "/", "compat", ".", "h", ">", "struct", "compat_xt_entry_match", "{", "union", "{", "struct", "{", "u_int16_t", "match_size", ";", "char", "name", "[", "XT_FUNCTION_MAXNAMELEN", "-", "1", "]", ";", "u_int8_t", "revision", ";", "}", "user", ";", "u_int16_t", "match_size", ";", "}", "u", ";", "unsigned", "char", "data", "[", "0", "]", ";", "}", ";", "struct", "compat_xt_entry_target", "{", "union", "{", "struct", "{", "u_int16_t", "target_size", ";", "char", "name", "[", "XT_FUNCTION_MAXNAMELEN", "-", "1", "]", ";", "u_int8_t", "revision", ";", "}", "user", ";", "u_int16_t", "target_size", ";", "}", "u", ";", "unsigned", "char", "data", "[", "0", "]", ";", "}", ";", "/", "*", "FIXME", ":", "this", "works", "only", "on", "32", "bit", "tasks", "*", "need", "to", "change", "whole", "approach", "in", "order", "to", "calculate", "align", "as", "function", "of", "*", "current", "task", "alignment", "*", "/", "struct", "compat_xt_counters", "{", "u_int32_t", "cnt", "[", "4", "]", ";", "}", ";", "struct", "compat_xt_counters_info", "{", "char", "name", "[", "XT_TABLE_MAXNAMELEN", "]", ";", "compat_uint_t", "num_counters", ";", "struct", "compat_xt_counters", "counters", "[", "0", "]", ";", "}", ";", "#", "define", "COMPAT_XT_ALIGN", "(", "s", ")", "(", "((", "s", ")", "+", "(", "__alignof__", "(", "struct", "compat_xt_counters", ")", "-", "1", ")", ")", "\\", "&", "~", "(", "__alignof__", "(", "struct", "compat_xt_counters", ")", "-", "1", ")", ")", "extern", "void", "xt_compat_lock", "(", "int", "af", ")", ";", "extern", "void", "xt_compat_unlock", "(", "int", "af", ")", ";", "extern", "int", "xt_compat_match", "(", "void", "*", "match", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", ";", "extern", "int", "xt_compat_target", "(", "void", "*", "target", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", ";", "#", "endif", "/", "*", "CONFIG_COMPAT", "*", "/", "#", "ifdef", "CONFIG_COMPAT", "#", "include", "<", "net", "/", "compat", ".", "h", ">", "struct", "compat_ipt_entry", "{", "struct", "ipt_ip", "ip", ";", "compat_uint_t", "nfcache", ";", "u_int16_t", "target_offset", ";", "u_int16_t", "next_offset", ";", "compat_uint_t", "comefrom", ";", "struct", "compat_xt_counters", "counters", ";", "unsigned", "char", "elems", "[", "0", "]", ";", "}", ";", "#", "define", "COMPAT_IPT_ALIGN", "(", "s", ")", "COMPAT_XT_ALIGN", "(", "s", ")", "#", "endif", "/", "*", "CONFIG_COMPAT", "*", "/", "if", "(", "level", "=", "=", "SOL_IPV6", "&", "&", "optname", "=", "=", "IPT_SO_SET_REPLACE", ")", "#", "include", "<", "net", "/", "compat", ".", "h", ">", "static", "inline", "struct", "xt_counters", "*", "alloc_counters", "(", "struct", "ipt_table", "*", "table", ")", "unsigned", "int", "countersize", ";", "return", "ERR_PTR", "(", "-", "ENOMEM", ")", ";", "return", "counters", ";", "}", "static", "int", "copy_entries_to_user", "(", "unsigned", "int", "total_size", ",", "struct", "ipt_table", "*", "table", ",", "void", "__user", "*", "userptr", ")", "{", "unsigned", "int", "off", ",", "num", ";", "struct", "ipt_entry", "*", "e", ";", "struct", "xt_counters", "*", "counters", ";", "struct", "xt_table_info", "*", "private", "=", "table", "-", ">", "private", ";", "int", "ret", "=", "0", ";", "void", "*", "loc_cpu_entry", ";", "counters", "=", "alloc_counters", "(", "table", ")", ";", "if", "(", "IS_ERR", "(", "counters", ")", ")", "return", "PTR_ERR", "(", "counters", ")", ";", "#", "ifdef", "CONFIG_COMPAT", "struct", "compat_delta", "{", "struct", "compat_delta", "*", "next", ";", "u_int16_t", "offset", ";", "short", "delta", ";", "}", ";", "static", "struct", "compat_delta", "*", "compat_offsets", "=", "NULL", ";", "static", "int", "compat_add_offset", "(", "u_int16_t", "offset", ",", "short", "delta", ")", "{", "struct", "compat_delta", "*", "tmp", ";", "tmp", "=", "kmalloc", "(", "sizeof", "(", "struct", "compat_delta", ")", ",", "GFP_KERNEL", ")", ";", "if", "(", "!", "tmp", ")", "return", "-", "ENOMEM", ";", "tmp", "-", ">", "offset", "=", "offset", ";", "tmp", "-", ">", "delta", "=", "delta", ";", "if", "(", "compat_offsets", ")", "{", "tmp", "-", ">", "next", "=", "compat_offsets", "-", ">", "next", ";", "compat_offsets", "-", ">", "next", "=", "tmp", ";", "}", "else", "{", "compat_offsets", "=", "tmp", ";", "tmp", "-", ">", "next", "=", "NULL", ";", "}", "return", "0", ";", "}", "static", "void", "compat_flush_offsets", "(", "void", ")", "{", "struct", "compat_delta", "*", "tmp", ",", "*", "next", ";", "if", "(", "compat_offsets", ")", "{", "for", "(", "tmp", "=", "compat_offsets", ";", "tmp", ";", "tmp", "=", "next", ")", "{", "next", "=", "tmp", "-", ">", "next", ";", "kfree", "(", "tmp", ")", ";", "}", "compat_offsets", "=", "NULL", ";", "}", "}", "static", "short", "compat_calc_jump", "(", "u_int16_t", "offset", ")", "{", "struct", "compat_delta", "*", "tmp", ";", "short", "delta", ";", "for", "(", "tmp", "=", "compat_offsets", ",", "delta", "=", "0", ";", "tmp", ";", "tmp", "=", "tmp", "-", ">", "next", ")", "if", "(", "tmp", "-", ">", "offset", "<", "offset", ")", "delta", "+", "=", "tmp", "-", ">", "delta", ";", "return", "delta", ";", "}", "struct", "compat_ipt_standard_target", "{", "struct", "compat_xt_entry_target", "target", ";", "compat_int_t", "verdict", ";", "}", ";", "#", "define", "IPT_ST_OFFSET", "(", "sizeof", "(", "struct", "ipt_standard_target", ")", "-", "\\", "sizeof", "(", "struct", "compat_ipt_standard_target", ")", ")", "struct", "compat_ipt_standard", "{", "struct", "compat_ipt_entry", "entry", ";", "struct", "compat_ipt_standard_target", "target", ";", "}", ";", "static", "int", "compat_ipt_standard_fn", "(", "void", "*", "target", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", "{", "struct", "compat_ipt_standard_target", "compat_st", ",", "*", "pcompat_st", ";", "struct", "ipt_standard_target", "st", ",", "*", "pst", ";", "int", "ret", ";", "ret", "=", "0", ";", "switch", "(", "convert", ")", "{", "case", "COMPAT_TO_USER", ":", "pst", "=", "(", "struct", "ipt_standard_target", "*", ")", "target", ";", "memcpy", "(", "&", "compat_st", ".", "target", ",", "&", "pst", "-", ">", "target", ",", "sizeof", "(", "struct", "ipt_entry_target", ")", ");", "compat_st", ".", "verdict", "=", "pst", "-", ">", "verdict", ";", "if", "(", "compat_st", ".", "verdict", ">", "0", ")", "compat_st", ".", "verdict", "-", "=", "compat_calc_jump", "(", "compat_st", ".", "verdict", ")", ";", "compat_st", ".", "target", ".", "u", ".", "user", ".", "target_size", "=", "sizeof", "(", "struct", "compat_ipt_standard_target", ")", ";", "if", "(", "__copy_to_user", "(", "*", "dstptr", ",", "&", "compat_st", ",", "sizeof", "(", "struct", "compat_ipt_standard_target", ")", "))", "ret", "=", "-", "EFAULT", ";", "*", "size", "-", "=", "IPT_ST_OFFSET", ";", "*", "dstptr", "+", "=", "sizeof", "(", "struct", "compat_ipt_standard_target", ")", ";", "break", ";", "case", "COMPAT_FROM_USER", ":", "pcompat_st", "=", "(", "struct", "compat_ipt_standard_target", "*", ")", "target", ";", "memcpy", "(", "&", "st", ".", "target", ",", "&", "pcompat_st", "-", ">", "target", ",", "sizeof", "(", "struct", "ipt_entry_target", ")", ");", "st", ".", "verdict", "=", "pcompat_st", "-", ">", "verdict", ";", "if", "(", "st", ".", "verdict", ">", "0", ")", "st", ".", "verdict", "+", "=", "compat_calc_jump", "(", "st", ".", "verdict", ")", ";", "st", ".", "target", ".", "u", ".", "user", ".", "target_size", "=", "sizeof", "(", "struct", "ipt_standard_target", ")", ";", "memcpy", "(", "*", "dstptr", ",", "&", "st", ",", "sizeof", "(", "struct", "ipt_standard_target", ")", ");", "*", "size", "+", "=", "IPT_ST_OFFSET", ";", "*", "dstptr", "+", "=", "sizeof", "(", "struct", "ipt_standard_target", ")", ";", "break", ";", "case", "COMPAT_CALC_SIZE", ":", "*", "size", "+", "=", "IPT_ST_OFFSET", ";", "break", ";", "default", ":", "ret", "=", "-", "ENOPROTOOPT", ";", "break", ";", "}", "return", "ret", ";", "}", "static", "inline", "int", "compat_calc_match", "(", "struct", "ipt_entry_match", "*", "m", ",", "int", "*", "size", ")", "{", "if", "(", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", ")", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", "(", "m", ",", "NULL", ",", "size", ",", "COMPAT_CALC_SIZE", ")", ";", "else", "xt_compat_match", "(", "m", ",", "NULL", ",", "size", ",", "COMPAT_CALC_SIZE", ")", ";", "return", "0", ";", "}", "static", "int", "compat_calc_entry", "(", "struct", "ipt_entry", "*", "e", ",", "struct", "xt_table_info", "*", "info", ",", "void", "*", "base", ",", "struct", "xt_table_info", "*", "newinfo", ")", "{", "struct", "ipt_entry_target", "*", "t", ";", "u_int16_t", "entry_offset", ";", "int", "off", ",", "i", ",", "ret", ";", "off", "=", "0", ";", "entry_offset", "=", "(", "void", "*", ")", "e", "-", "base", ";", "IPT_MATCH_ITERATE", "(", "e", ",", "compat_calc_match", ",", "&", "off", ")", ";", "t", "=", "ipt_get_target", "(", "e", ")", ";", "if", "(", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", ")", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", "(", "t", ",", "NULL", ",", "&", "off", ",", "COMPAT_CALC_SIZE", ")", ";", "else", "xt_compat_target", "(", "t", ",", "NULL", ",", "&", "off", ",", "COMPAT_CALC_SIZE", ")", ";", "newinfo", "-", ">", "size", "-", "=", "off", ";", "ret", "=", "compat_add_offset", "(", "entry_offset", ",", "off", ")", ";", "if", "(", "ret", ")", "return", "ret", ";", "for", "(", "i", "=", "0", ";", "i", "<", "NF_IP_NUMHOOKS", ";", "i", "+", "+)", "{", "if", "(", "info", "-", ">", "hook_entry", "[", "i", "]", "&", "&", "(", "e", "<", "(", "struct", "ipt_entry", "*", ")", "(", "base", "+", "info", "-", ">", "hook_entry", "[", "i", "]", "))", ")", "newinfo", "-", ">", "hook_entry", "[", "i", "]", "-", "=", "off", ";", "if", "(", "info", "-", ">", "underflow", "[", "i", "]", "&", "&", "(", "e", "<", "(", "struct", "ipt_entry", "*", ")", "(", "base", "+", "info", "-", ">", "underflow", "[", "i", "]", "))", ")", "newinfo", "-", ">", "underflow", "[", "i", "]", "-", "=", "off", ";", "}", "return", "0", ";", "}", "static", "int", "compat_table_info", "(", "struct", "xt_table_info", "*", "info", ",", "struct", "xt_table_info", "*", "newinfo", ")", "{", "void", "*", "loc_cpu_entry", ";", "int", "i", ";", "if", "(", "!", "newinfo", "|", "|", "!", "info", ")", "return", "-", "EINVAL", ";", "memset", "(", "newinfo", ",", "0", ",", "sizeof", "(", "struct", "xt_table_info", ")", ");", "newinfo", "-", ">", "size", "=", "info", "-", ">", "size", ";", "newinfo", "-", ">", "number", "=", "info", "-", ">", "number", ";", "for", "(", "i", "=", "0", ";", "i", "<", "NF_IP_NUMHOOKS", ";", "i", "+", "+)", "{", "newinfo", "-", ">", "hook_entry", "[", "i", "]", "=", "info", "-", ">", "hook_entry", "[", "i", "]", ";", "newinfo", "-", ">", "underflow", "[", "i", "]", "=", "info", "-", ">", "underflow", "[", "i", "]", ";", "}", "loc_cpu_entry", "=", "info", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "return", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "info", "-", ">", "size", ",", "compat_calc_entry", ",", "info", ",", "loc_cpu_entry", ",", "newinfo", ")", ";", "}", "#", "endif", "static", "int", "get_info", "(", "void", "__user", "*", "user", ",", "int", "*", "len", ",", "int", "compat", ")", "{", "char", "name", "[", "IPT_TABLE_MAXNAMELEN", "]", ";", "struct", "ipt_table", "*", "t", ";", "int", "ret", ";", "if", "(", "*", "len", "!", "=", "sizeof", "(", "struct", "ipt_getinfo", ")", ")", "{", "duprintf", "(", "\"", "length", "%", "u", "!", "=", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "(", "unsigned", "int", ")", "sizeof", "(", "struct", "ipt_getinfo", ")", ");", "return", "-", "EINVAL", ";", "}", "if", "(", "copy_from_user", "(", "name", ",", "user", ",", "sizeof", "(", "name", ")", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "name", "[", "IPT_TABLE_MAXNAMELEN", "-", "1", "]", "=", "'", "\\", "0", "'", ";", "#", "ifdef", "CONFIG_COMPAT", "if", "(", "compat", ")", "xt_compat_lock", "(", "AF_INET", ")", ";", "#", "endif", "t", "=", "try_then_request_module", "(", "xt_find_table_lock", "(", "AF_INET", ",", "name", ")", ",", "\"", "iptable_", "%", "s", "\"", ",", "name", ")", ";", "if", "(", "t", "&", "&", "!", "IS_ERR", "(", "t", ")", ")", "{", "struct", "ipt_getinfo", "info", ";", "struct", "xt_table_info", "*", "private", "=", "t", "-", ">", "private", ";", "#", "ifdef", "CONFIG_COMPAT", "if", "(", "compat", ")", "{", "struct", "xt_table_info", "tmp", ";", "ret", "=", "compat_table_info", "(", "private", ",", "&", "tmp", ")", ";", "compat_flush_offsets", "(", ");", "private", "=", "&", "tmp", ";", "}", "#", "endif", "info", ".", "valid_hooks", "=", "t", "-", ">", "valid_hooks", ";", "memcpy", "(", "info", ".", "hook_entry", ",", "private", "-", ">", "hook_entry", ",", "sizeof", "(", "info", ".", "hook_entry", ")", ");", "memcpy", "(", "info", ".", "underflow", ",", "private", "-", ">", "underflow", ",", "sizeof", "(", "info", ".", "underflow", ")", ");", "info", ".", "num_entries", "=", "private", "-", ">", "number", ";", "info", ".", "size", "=", "private", "-", ">", "size", ";", "strcpy", "(", "info", ".", "name", ",", "name", ")", ";", "if", "(", "copy_to_user", "(", "user", ",", "&", "info", ",", "*", "len", ")", "!", "=", "0", ")", "ret", "=", "-", "EFAULT", ";", "else", "ret", "=", "0", ";", "xt_table_unlock", "(", "t", ")", ";", "module_put", "(", "t", "-", ">", "me", ")", ";", "}", "else", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "#", "ifdef", "CONFIG_COMPAT", "if", "(", "compat", ")", "xt_compat_unlock", "(", "AF_INET", ")", ";", "#", "endif", "return", "ret", ";", "}", "static", "int", "get_entries", "(", "struct", "ipt_get_entries", "__user", "*", "uptr", ",", "int", "*", "len", ")", "{", "int", "ret", ";", "struct", "ipt_get_entries", "get", ";", "struct", "ipt_table", "*", "t", ";", "if", "(", "*", "len", "<", "sizeof", "(", "get", ")", ")", "{", "duprintf", "(", "\"", "get_entries", ":", "%", "u", "<", "%", "d", "\\", "n", "\"", ",", "*", "len", ",", "(", "unsigned", "int", ")", "sizeof", "(", "get", ")", ");", "return", "-", "EINVAL", ";", "}", "if", "(", "copy_from_user", "(", "&", "get", ",", "uptr", ",", "sizeof", "(", "get", ")", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "if", "(", "*", "len", "!", "=", "sizeof", "(", "struct", "ipt_get_entries", ")", "+", "get", ".", "size", ")", "{", "duprintf", "(", "\"", "get_entries", ":", "%", "u", "!", "=", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "(", "unsigned", "int", ")", "(", "sizeof", "(", "struct", "ipt_get_entries", ")", "get", ".", "size", ")", ");", "return", "-", "EINVAL", ";", "}", "t", "=", "xt_find_table_lock", "(", "AF_INET", ",", "get", ".", "name", ")", ";", "if", "(", "t", "&", "&", "!", "IS_ERR", "(", "t", ")", ")", "{", "struct", "xt_table_info", "*", "private", "=", "t", "-", ">", "private", ";", "duprintf", "(", "\"", "t", "-", ">", "private", "-", ">", "number", "=", "%", "u", "\\", "n", "\"", ",", "private", "-", ">", "number", ")", ";", "if", "(", "get", ".", "size", "=", "=", "private", "-", ">", "size", ")", "ret", "=", "copy_entries_to_user", "(", "private", "-", ">", "size", ",", "t", ",", "uptr", "-", ">", "entrytable", ")", ";", "else", "{", "duprintf", "(", "\"", "get_entries", ":", "I", "'", "ve", "got", "%", "u", "not", "%", "u", "!", "\\", "n", "\"", ",", "private", "-", ">", "size", ",", "get", ".", "size", ")", ";", "ret", "=", "-", "EINVAL", ";", "}", "module_put", "(", "t", "-", ">", "me", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "}", "else", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "return", "ret", ";", "}", "static", "int", "__do_replace", "(", "const", "char", "*", "name", ",", "unsigned", "int", "valid_hooks", ",", "struct", "xt_table_info", "*", "newinfo", ",", "unsigned", "int", "num_counters", ",", "void", "__user", "*", "counters_ptr", ")", "{", "int", "ret", ";", "struct", "ipt_table", "*", "t", ";", "struct", "xt_table_info", "*", "oldinfo", ";", "struct", "xt_counters", "*", "counters", ";", "void", "*", "loc_cpu_old_entry", ";", "ret", "=", "0", ";", "counters", "=", "vmalloc", "(", "num_counters", "*", "sizeof", "(", "struct", "xt_counters", ")", ");", "if", "(", "!", "counters", ")", "{", "ret", "=", "-", "ENOMEM", ";", "goto", "out", ";", "}", "t", "=", "try_then_request_module", "(", "xt_find_table_lock", "(", "AF_INET", ",", "name", ")", ",", "\"", "iptable_", "%", "s", "\"", ",", "name", ")", ";", "if", "(", "!", "t", "|", "|", "IS_ERR", "(", "t", ")", ")", "{", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "goto", "free_newinfo_counters_untrans", ";", "}", "/", "*", "You", "lied", "!", "*", "/", "if", "(", "valid_hooks", "!", "=", "t", "-", ">", "valid_hooks", ")", "{", "duprintf", "(", "\"", "Valid", "hook", "crap", ":", "%", "08X", "vs", "%", "08X", "\\", "n", "\"", ",", "valid_hooks", ",", "t", "-", ">", "valid_hooks", ")", ";", "ret", "=", "-", "EINVAL", ";", "goto", "put_module", ";", "}", "oldinfo", "=", "xt_replace_table", "(", "t", ",", "num_counters", ",", "newinfo", ",", "&", "ret", ")", ";", "if", "(", "!", "oldinfo", ")", "goto", "put_module", ";", "/", "*", "Update", "module", "usage", "count", "based", "on", "number", "of", "rules", "*", "/", "duprintf", "(", "\"", "do_replace", ":", "oldnum", "=", "%", "u", ",", "initnum", "=", "%", "u", ",", "newnum", "=", "%", "u", "\\", "n", "\"", ",", "oldinfo", "-", ">", "number", ",", "oldinfo", "-", ">", "initial_entries", ",", "newinfo", "-", ">", "number", ")", ";", "if", "(", "(", "oldinfo", "-", ">", "number", ">", "oldinfo", "-", ">", "initial_entries", ")", "|", "|", "(", "newinfo", "-", ">", "number", "<", "=", "oldinfo", "-", ">", "initial_entries", ")", ")", "module_put", "(", "t", "-", ">", "me", ")", ";", "if", "(", "(", "oldinfo", "-", ">", "number", ">", "oldinfo", "-", ">", "initial_entries", ")", "&", "&", "(", "newinfo", "-", ">", "number", "<", "=", "oldinfo", "-", ">", "initial_entries", ")", ")", "module_put", "(", "t", "-", ">", "me", ")", ";", "/", "*", "Get", "the", "old", "counters", ".", "*", "/", "get_counters", "(", "oldinfo", ",", "counters", ")", ";", "/", "*", "Decrease", "module", "usage", "counts", "and", "free", "resource", "*", "/", "loc_cpu_old_entry", "=", "oldinfo", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "IPT_ENTRY_ITERATE", "(", "loc_cpu_old_entry", ",", "oldinfo", "-", ">", "size", ",", "cleanup_entry", ",", "NULL", ")", ";", "xt_free_table_info", "(", "oldinfo", ")", ";", "if", "(", "copy_to_user", "(", "counters_ptr", ",", "counters", ",", "sizeof", "(", "struct", "xt_counters", ")", "*", "num_counters", ")", "!", "=", "0", ")", "ret", "=", "-", "EFAULT", ";", "vfree", "(", "counters", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "return", "ret", ";", "put_module", ":", "module_put", "(", "t", "-", ">", "me", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "free_newinfo_counters_untrans", ":", "vfree", "(", "counters", ")", ";", "out", ":", "return", "ret", ";", "}", "static", "int", "do_replace", "(", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ")", "{", "int", "ret", ";", "struct", "ipt_replace", "tmp", ";", "struct", "xt_table_info", "*", "newinfo", ";", "void", "*", "loc_cpu_entry", ";", "if", "(", "copy_from_user", "(", "&", "tmp", ",", "user", ",", "sizeof", "(", "tmp", ")", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "/", "*", "Hack", ":", "Causes", "ipchains", "to", "give", "correct", "error", "msg", "-", "-", "RR", "*", "/", "if", "(", "len", "!", "=", "sizeof", "(", "tmp", ")", "+", "tmp", ".", "size", ")", "return", "-", "ENOPROTOOPT", ";", "/", "*", "overflow", "check", "*", "/", "if", "(", "tmp", ".", "size", ">", "=", "(", "INT_MAX", "-", "sizeof", "(", "struct", "xt_table_info", ")", ")", "/", "NR_CPUS", "-", "SMP_CACHE_BYTES", ")", "return", "-", "ENOMEM", ";", "if", "(", "tmp", ".", "num_counters", ">", "=", "INT_MAX", "/", "sizeof", "(", "struct", "xt_counters", ")", ")", "return", "-", "ENOMEM", ";", "newinfo", "=", "xt_alloc_table_info", "(", "tmp", ".", "size", ")", ";", "if", "(", "!", "newinfo", ")", "return", "-", "ENOMEM", ";", "/", "*", "choose", "the", "copy", "that", "is", "our", "node", "/", "cpu", "*", "/", "loc_cpu_entry", "=", "newinfo", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "if", "(", "copy_from_user", "(", "loc_cpu_entry", ",", "user", "+", "sizeof", "(", "tmp", ")", ",", "tmp", ".", "size", ")", "!", "=", "0", ")", "{", "ret", "=", "-", "EFAULT", ";", "goto", "free_newinfo", ";", "}", "ret", "=", "translate_table", "(", "tmp", ".", "name", ",", "tmp", ".", "valid_hooks", ",", "newinfo", ",", "loc_cpu_entry", ",", "tmp", ".", "size", ",", "tmp", ".", "num_entries", ",", "tmp", ".", "hook_entry", ",", "tmp", ".", "underflow", ")", ";", "if", "(", "ret", "!", "=", "0", ")", "goto", "free_newinfo", ";", "duprintf", "(", "\"", "ip_tables", ":", "Translated", "table", "\\", "n", "\"", ");", "ret", "=", "__do_replace", "(", "tmp", ".", "name", ",", "tmp", ".", "valid_hooks", ",", "newinfo", ",", "tmp", ".", "num_counters", ",", "tmp", ".", "counters", ")", ";", "if", "(", "ret", ")", "goto", "free_newinfo_untrans", ";", "return", "0", ";", "free_newinfo_untrans", ":", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "newinfo", "-", ">", "size", ",", "cleanup_entry", ",", "NULL", ")", ";", "free_newinfo", ":", "xt_free_table_info", "(", "newinfo", ")", ";", "return", "ret", ";", "}", "/", "*", "We", "'", "re", "lazy", ",", "and", "add", "to", "the", "first", "CPU", ";", "overflow", "works", "its", "fey", "magic", "*", "and", "everything", "is", "OK", ".", "*", "/", "static", "inline", "int", "add_counter_to_entry", "(", "struct", "ipt_entry", "*", "e", ",", "const", "struct", "xt_counters", "addme", "[", "],", "unsigned", "int", "*", "i", ")", "{", "#", "if", "0", "duprintf", "(", "\"", "add_counter", ":", "Entry", "%", "u", "%", "lu", "/", "%", "lu", "+", "%", "lu", "/", "%", "lu", "\\", "n", "\"", ",", "*", "i", ",", "(", "long", "unsigned", "int", ")", "e", "-", ">", "counters", ".", "pcnt", ",", "(", "long", "unsigned", "int", ")", "e", "-", ">", "counters", ".", "bcnt", ",", "(", "long", "unsigned", "int", ")", "addme", "[", "*", "i", "]", ".", "pcnt", ",", "(", "long", "unsigned", "int", ")", "addme", "[", "*", "i", "]", ".", "bcnt", ")", ";", "#", "endif", "ADD_COUNTER", "(", "e", "-", ">", "counters", ",", "addme", "[", "*", "i", "]", ".", "bcnt", ",", "addme", "[", "*", "i", "]", ".", "pcnt", ")", ";", "(", "*", "i", ")", "++", ";", "return", "0", ";", "}", "static", "int", "do_add_counters", "(", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ",", "int", "compat", ")", "{", "unsigned", "int", "i", ";", "struct", "xt_counters_info", "tmp", ";", "struct", "xt_counters", "*", "paddc", ";", "unsigned", "int", "num_counters", ";", "char", "*", "name", ";", "int", "size", ";", "void", "*", "ptmp", ";", "struct", "ipt_table", "*", "t", ";", "struct", "xt_table_info", "*", "private", ";", "int", "ret", "=", "0", ";", "void", "*", "loc_cpu_entry", ";", "#", "ifdef", "CONFIG_COMPAT", "struct", "compat_xt_counters_info", "compat_tmp", ";", "if", "(", "compat", ")", "{", "ptmp", "=", "&", "compat_tmp", ";", "size", "=", "sizeof", "(", "struct", "compat_xt_counters_info", ")", ";", "}", "else", "#", "endif", "{", "ptmp", "=", "&", "tmp", ";", "size", "=", "sizeof", "(", "struct", "xt_counters_info", ")", ";", "}", "if", "(", "copy_from_user", "(", "ptmp", ",", "user", ",", "size", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "#", "ifdef", "CONFIG_COMPAT", "if", "(", "compat", ")", "{", "num_counters", "=", "compat_tmp", ".", "num_counters", ";", "name", "=", "compat_tmp", ".", "name", ";", "}", "else", "#", "endif", "{", "num_counters", "=", "tmp", ".", "num_counters", ";", "name", "=", "tmp", ".", "name", ";", "}", "if", "(", "len", "!", "=", "size", "+", "num_counters", "*", "sizeof", "(", "struct", "xt_counters", ")", ")", "return", "-", "EINVAL", ";", "paddc", "=", "vmalloc_node", "(", "len", "-", "size", ",", "numa_node_id", "(", "))", ";", "if", "(", "!", "paddc", ")", "return", "-", "ENOMEM", ";", "if", "(", "copy_from_user", "(", "paddc", ",", "user", "+", "size", ",", "len", "-", "size", ")", "!", "=", "0", ")", "{", "ret", "=", "-", "EFAULT", ";", "goto", "free", ";", "}", "t", "=", "xt_find_table_lock", "(", "AF_INET", ",", "name", ")", ";", "if", "(", "!", "t", "|", "|", "IS_ERR", "(", "t", ")", ")", "{", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "goto", "free", ";", "}", "write_lock_bh", "(", "&", "t", "-", ">", "lock", ")", ";", "private", "=", "t", "-", ">", "private", ";", "if", "(", "private", "-", ">", "number", "!", "=", "num_counters", ")", "{", "ret", "=", "-", "EINVAL", ";", "goto", "unlock_up_free", ";", "}", "i", "=", "0", ";", "/", "*", "Choose", "the", "copy", "that", "is", "on", "our", "node", "*", "/", "loc_cpu_entry", "=", "private", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "private", "-", ">", "size", ",", "add_counter_to_entry", ",", "paddc", ",", "&", "i", ")", ";", "unlock_up_free", ":", "write_unlock_bh", "(", "&", "t", "-", ">", "lock", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "module_put", "(", "t", "-", ">", "me", ")", ";", "free", ":", "vfree", "(", "paddc", ")", ";", "return", "ret", ";", "}", "#", "ifdef", "CONFIG_COMPAT", "struct", "compat_ipt_replace", "{", "char", "name", "[", "IPT_TABLE_MAXNAMELEN", "]", ";", "u32", "valid_hooks", ";", "u32", "num_entries", ";", "u32", "size", ";", "u32", "hook_entry", "[", "NF_IP_NUMHOOKS", "]", ";", "u32", "underflow", "[", "NF_IP_NUMHOOKS", "]", ";", "u32", "num_counters", ";", "compat_uptr_t", "counters", ";", "/", "*", "struct", "ipt_counters", "*", "*", "/", "struct", "compat_ipt_entry", "entries", "[", "0", "]", ";", "}", ";", "static", "inline", "int", "compat_copy_match_to_user", "(", "struct", "ipt_entry_match", "*", "m", ",", "void", "__user", "*", "*", "dstptr", ",", "compat_uint_t", "*", "size", ")", "{", "if", "(", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", ")", "return", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", "(", "m", ",", "dstptr", ",", "size", ",", "COMPAT_TO_USER", ")", ";", "else", "return", "xt_compat_match", "(", "m", ",", "dstptr", ",", "size", ",", "COMPAT_TO_USER", ")", ";", "}", "static", "int", "compat_copy_entry_to_user", "(", "struct", "ipt_entry", "*", "e", ",", "void", "__user", "*", "*", "dstptr", ",", "compat_uint_t", "*", "size", ")", "{", "struct", "ipt_entry_target", "__user", "*", "t", ";", "struct", "compat_ipt_entry", "__user", "*", "ce", ";", "u_int16_t", "target_offset", ",", "next_offset", ";", "compat_uint_t", "origsize", ";", "int", "ret", ";", "ret", "=", "-", "EFAULT", ";", "origsize", "=", "*", "size", ";", "ce", "=", "(", "struct", "compat_ipt_entry", "__user", "*", ")*", "dstptr", ";", "if", "(", "__copy_to_user", "(", "ce", ",", "e", ",", "sizeof", "(", "struct", "ipt_entry", ")", "))", "goto", "out", ";", "*", "dstptr", "+", "=", "sizeof", "(", "struct", "compat_ipt_entry", ")", ";", "ret", "=", "IPT_MATCH_ITERATE", "(", "e", ",", "compat_copy_match_to_user", ",", "dstptr", ",", "size", ")", ";", "target_offset", "=", "e", "-", ">", "target_offset", "-", "(", "origsize", "-", "*", "size", ")", ";", "if", "(", "ret", ")", "goto", "out", ";", "t", "=", "ipt_get_target", "(", "e", ")", ";", "if", "(", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", ")", "ret", "=", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", "(", "t", ",", "dstptr", ",", "size", ",", "COMPAT_TO_USER", ")", ";", "else", "ret", "=", "xt_compat_target", "(", "t", ",", "dstptr", ",", "size", ",", "COMPAT_TO_USER", ")", ";", "if", "(", "ret", ")", "goto", "out", ";", "ret", "=", "-", "EFAULT", ";", "next_offset", "=", "e", "-", ">", "next_offset", "-", "(", "origsize", "-", "*", "size", ")", ";", "if", "(", "__put_user", "(", "target_offset", ",", "&", "ce", "-", ">", "target_offset", ")", ")", "goto", "out", ";", "if", "(", "__put_user", "(", "next_offset", ",", "&", "ce", "-", ">", "next_offset", ")", ")", "goto", "out", ";", "return", "0", ";", "out", ":", "return", "ret", ";", "}", "static", "inline", "int", "compat_check_calc_match", "(", "struct", "ipt_entry_match", "*", "m", ",", "const", "char", "*", "name", ",", "const", "struct", "ipt_ip", "*", "ip", ",", "unsigned", "int", "hookmask", ",", "int", "*", "size", ",", "int", "*", "i", ")", "{", "struct", "ipt_match", "*", "match", ";", "match", "=", "try_then_request_module", "(", "xt_find_match", "(", "AF_INET", ",", "m", "-", ">", "u", ".", "user", ".", "name", ",", "m", "-", ">", "u", ".", "user", ".", "revision", ")", ",", "\"", "ipt_", "%", "s", "\"", ",", "m", "-", ">", "u", ".", "user", ".", "name", ")", ";", "if", "(", "IS_ERR", "(", "match", ")", "|", "|", "!", "match", ")", "{", "duprintf", "(", "\"", "compat_check_calc_match", ":", "`", "%", "s", "'", "not", "found", "\\", "n", "\"", ",", "m", "-", ">", "u", ".", "user", ".", "name", ")", ";", "return", "match", "?", "PTR_ERR", "(", "match", ")", ":", "-", "ENOENT", ";", "}", "m", "-", ">", "u", ".", "kernel", ".", "match", "=", "match", ";", "if", "(", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", ")", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "compat", "(", "m", ",", "NULL", ",", "size", ",", "COMPAT_CALC_SIZE", ")", ";", "else", "xt_compat_match", "(", "m", ",", "NULL", ",", "size", ",", "COMPAT_CALC_SIZE", ")", ";", "(", "*", "i", ")", "++", ";", "return", "0", ";", "}", "static", "inline", "int", "check_compat_entry_size_and_hooks", "(", "struct", "ipt_entry", "*", "e", ",", "struct", "xt_table_info", "*", "newinfo", ",", "unsigned", "int", "*", "size", ",", "unsigned", "char", "*", "base", ",", "unsigned", "char", "*", "limit", ",", "unsigned", "int", "*", "hook_entries", ",", "unsigned", "int", "*", "underflows", ",", "unsigned", "int", "*", "i", ",", "const", "char", "*", "name", ")", "{", "struct", "ipt_entry_target", "*", "t", ";", "struct", "ipt_target", "*", "target", ";", "u_int16_t", "entry_offset", ";", "int", "ret", ",", "off", ",", "h", ",", "j", ";", "duprintf", "(", "\"", "check_compat_entry_size_and_hooks", "%", "p", "\\", "n", "\"", ",", "e", ")", ";", "if", "(", "(", "unsigned", "long", ")", "e", "%", "__alignof__", "(", "struct", "compat_ipt_entry", ")", "!", "=", "0", "|", "|", "(", "unsigned", "char", "*", ")", "e", "+", "sizeof", "(", "struct", "compat_ipt_entry", ")", ">", "=", "limit", ")", "{", "duprintf", "(", "\"", "Bad", "offset", "%", "p", ",", "limit", "=", "%", "p", "\\", "n", "\"", ",", "e", ",", "limit", ")", ";", "return", "-", "EINVAL", ";", "}", "if", "(", "e", "-", ">", "next_offset", "<", "sizeof", "(", "struct", "compat_ipt_entry", ")", "sizeof", "(", "struct", "compat_xt_entry_target", ")", ")", "{", "duprintf", "(", "\"", "checking", ":", "element", "%", "p", "size", "%", "u", "\\", "n", "\"", ",", "e", ",", "e", "-", ">", "next_offset", ")", ";", "return", "-", "EINVAL", ";", "}", "if", "(", "!", "ip_checkentry", "(", "&", "e", "-", ">", "ip", ")", ")", "{", "duprintf", "(", "\"", "ip_tables", ":", "ip", "check", "failed", "%", "p", "%", "s", ".", "\\", "n", "\"", ",", "e", ",", "name", ")", ";", "return", "-", "EINVAL", ";", "}", "off", "=", "0", ";", "entry_offset", "=", "(", "void", "*", ")", "e", "-", "(", "void", "*", ")", "base", ";", "j", "=", "0", ";", "ret", "=", "IPT_MATCH_ITERATE", "(", "e", ",", "compat_check_calc_match", ",", "name", ",", "&", "e", "-", ">", "ip", ",", "e", "-", ">", "comefrom", ",", "&", "off", ",", "&", "j", ")", ";", "if", "(", "ret", "!", "=", "0", ")", "goto", "out", ";", "t", "=", "ipt_get_target", "(", "e", ")", ";", "target", "=", "try_then_request_module", "(", "xt_find_target", "(", "AF_INET", ",", "t", "-", ">", "u", ".", "user", ".", "name", ",", "t", "-", ">", "u", ".", "user", ".", "revision", ")", ",", "\"", "ipt_", "%", "s", "\"", ",", "t", "-", ">", "u", ".", "user", ".", "name", ")", ";", "if", "(", "IS_ERR", "(", "target", ")", "|", "|", "!", "target", ")", "{", "duprintf", "(", "\"", "check_entry", ":", "`", "%", "s", "'", "not", "found", "\\", "n", "\"", ",", "t", "-", ">", "u", ".", "user", ".", "name", ")", ";", "ret", "=", "target", "?", "PTR_ERR", "(", "target", ")", ":", "-", "ENOENT", ";", "goto", "out", ";", "}", "t", "-", ">", "u", ".", "kernel", ".", "target", "=", "target", ";", "if", "(", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", ")", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "compat", "(", "t", ",", "NULL", ",", "&", "off", ",", "COMPAT_CALC_SIZE", ")", ";", "else", "xt_compat_target", "(", "t", ",", "NULL", ",", "&", "off", ",", "COMPAT_CALC_SIZE", ")", ";", "*", "size", "+", "=", "off", ";", "ret", "=", "compat_add_offset", "(", "entry_offset", ",", "off", ")", ";", "if", "(", "ret", ")", "goto", "out", ";", "/", "*", "Check", "hooks", "&", "underflows", "*", "/", "for", "(", "h", "=", "0", ";", "h", "<", "NF_IP_NUMHOOKS", ";", "h", "+", "+)", "{", "if", "(", "(", "unsigned", "char", "*", ")", "e", "-", "base", "=", "=", "hook_entries", "[", "h", "]", ")", "newinfo", "-", ">", "hook_entry", "[", "h", "]", "=", "hook_entries", "[", "h", "]", ";", "if", "(", "(", "unsigned", "char", "*", ")", "e", "-", "base", "=", "=", "underflows", "[", "h", "]", ")", "newinfo", "-", ">", "underflow", "[", "h", "]", "=", "underflows", "[", "h", "]", ";", "}", "/", "*", "Clear", "counters", "and", "comefrom", "*", "/", "e", "-", ">", "counters", "=", "(", "(", "struct", "ipt_counters", ")", "{", "0", ",", "0", "}", ");", "e", "-", ">", "comefrom", "=", "0", ";", "(", "*", "i", ")", "++", ";", "return", "0", ";", "out", ":", "IPT_MATCH_ITERATE", "(", "e", ",", "cleanup_match", ",", "&", "j", ")", ";", "return", "ret", ";", "}", "static", "inline", "int", "compat_copy_match_from_user", "(", "struct", "ipt_entry_match", "*", "m", ",", "void", "*", "*", "dstptr", ",", "compat_uint_t", "*", "size", ",", "const", "char", "*", "name", ",", "const", "struct", "ipt_ip", "*", "ip", ",", "unsigned", "int", "hookmask", ")", "{", "struct", "ipt_entry_match", "*", "dm", ";", "struct", "ipt_match", "*", "match", ";", "int", "ret", ";", "dm", "=", "(", "struct", "ipt_entry_match", "*", ")*", "dstptr", ";", "match", "=", "m", "-", ">", "u", ".", "kernel", ".", "match", ";", "if", "(", "match", "-", ">", "compat", ")", "match", "-", ">", "compat", "(", "m", ",", "dstptr", ",", "size", ",", "COMPAT_FROM_USER", ")", ";", "else", "xt_compat_match", "(", "m", ",", "dstptr", ",", "size", ",", "COMPAT_FROM_USER", ")", ";", "ret", "=", "xt_check_match", "(", "match", ",", "AF_INET", ",", "dm", "-", ">", "u", ".", "match_size", "-", "sizeof", "(", "*", "dm", ")", ",", "name", ",", "hookmask", ",", "ip", "-", ">", "proto", ",", "ip", "-", ">", "invflags", "&", "IPT_INV_PROTO", ")", ";", "if", "(", "ret", ")", "return", "ret", ";", "if", "(", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "checkentry", "&", "&", "!", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "checkentry", "(", "name", ",", "ip", ",", "match", ",", "dm", "-", ">", "data", ",", "dm", "-", ">", "u", ".", "match_size", "-", "sizeof", "(", "*", "dm", ")", ",", "hookmask", ")", ")", "{", "duprintf", "(", "\"", "ip_tables", ":", "check", "failed", "for", "`", "%", "s", "'", ".\\", "n", "\"", ",", "m", "-", ">", "u", ".", "kernel", ".", "match", "-", ">", "name", ")", ";", "return", "-", "EINVAL", ";", "}", "return", "0", ";", "}", "static", "int", "compat_copy_entry_from_user", "(", "struct", "ipt_entry", "*", "e", ",", "void", "*", "*", "dstptr", ",", "unsigned", "int", "*", "size", ",", "const", "char", "*", "name", ",", "struct", "xt_table_info", "*", "newinfo", ",", "unsigned", "char", "*", "base", ")", "{", "struct", "ipt_entry_target", "*", "t", ";", "struct", "ipt_target", "*", "target", ";", "struct", "ipt_entry", "*", "de", ";", "unsigned", "int", "origsize", ";", "int", "ret", ",", "h", ";", "ret", "=", "0", ";", "origsize", "=", "*", "size", ";", "de", "=", "(", "struct", "ipt_entry", "*", ")*", "dstptr", ";", "memcpy", "(", "de", ",", "e", ",", "sizeof", "(", "struct", "ipt_entry", ")", ");", "*", "dstptr", "+", "=", "sizeof", "(", "struct", "compat_ipt_entry", ")", ";", "ret", "=", "IPT_MATCH_ITERATE", "(", "e", ",", "compat_copy_match_from_user", ",", "dstptr", ",", "size", ",", "name", ",", "&", "de", "-", ">", "ip", ",", "de", "-", ">", "comefrom", ")", ";", "if", "(", "ret", ")", "goto", "out", ";", "de", "-", ">", "target_offset", "=", "e", "-", ">", "target_offset", "-", "(", "origsize", "-", "*", "size", ")", ";", "t", "=", "ipt_get_target", "(", "e", ")", ";", "target", "=", "t", "-", ">", "u", ".", "kernel", ".", "target", ";", "if", "(", "target", "-", ">", "compat", ")", "target", "-", ">", "compat", "(", "t", ",", "dstptr", ",", "size", ",", "COMPAT_FROM_USER", ")", ";", "else", "xt_compat_target", "(", "t", ",", "dstptr", ",", "size", ",", "COMPAT_FROM_USER", ")", ";", "de", "-", ">", "next_offset", "=", "e", "-", ">", "next_offset", "-", "(", "origsize", "-", "*", "size", ")", ";", "for", "(", "h", "=", "0", ";", "h", "<", "NF_IP_NUMHOOKS", ";", "h", "+", "+)", "{", "if", "(", "(", "unsigned", "char", "*", ")", "de", "-", "base", "<", "newinfo", "-", ">", "hook_entry", "[", "h", "]", ")", "newinfo", "-", ">", "hook_entry", "[", "h", "]", "-", "=", "origsize", "-", "*", "size", ";", "if", "(", "(", "unsigned", "char", "*", ")", "de", "-", "base", "<", "newinfo", "-", ">", "underflow", "[", "h", "]", ")", "newinfo", "-", ">", "underflow", "[", "h", "]", "-", "=", "origsize", "-", "*", "size", ";", "}", "t", "=", "ipt_get_target", "(", "de", ")", ";", "target", "=", "t", "-", ">", "u", ".", "kernel", ".", "target", ";", "ret", "=", "xt_check_target", "(", "target", ",", "AF_INET", ",", "t", "-", ">", "u", ".", "target_size", "-", "sizeof", "(", "*", "t", ")", ",", "name", ",", "e", "-", ">", "comefrom", ",", "e", "-", ">", "ip", ".", "proto", ",", "e", "-", ">", "ip", ".", "invflags", "&", "IPT_INV_PROTO", ")", ";", "if", "(", "ret", ")", "goto", "out", ";", "ret", "=", "-", "EINVAL", ";", "if", "(", "t", "-", ">", "u", ".", "kernel", ".", "target", "=", "=", "&", "ipt_standard_target", ")", "{", "if", "(", "!", "standard_check", "(", "t", ",", "*", "size", ")", ")", "goto", "out", ";", "}", "else", "if", "(", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "checkentry", "&", "&", "!", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "checkentry", "(", "name", ",", "de", ",", "target", ",", "t", "-", ">", "data", ",", "t", "-", ">", "u", ".", "target_size", "-", "sizeof", "(", "*", "t", ")", ",", "de", "-", ">", "comefrom", ")", ")", "{", "duprintf", "(", "\"", "ip_tables", ":", "compat", ":", "check", "failed", "for", "`", "%", "s", "'", ".\\", "n", "\"", ",", "t", "-", ">", "u", ".", "kernel", ".", "target", "-", ">", "name", ")", ";", "goto", "out", ";", "}", "ret", "=", "0", ";", "out", ":", "return", "ret", ";", "}", "translate_compat_table", "(", "const", "char", "*", "name", ",", "unsigned", "int", "valid_hooks", ",", "struct", "xt_table_info", "*", "*", "pinfo", ",", "void", "*", "*", "pentry0", ",", "unsigned", "int", "total_size", ",", "unsigned", "int", "number", ",", "unsigned", "int", "*", "hook_entries", ",", "unsigned", "int", "*", "underflows", ")", "unsigned", "int", "i", ";", "struct", "xt_table_info", "*", "newinfo", ",", "*", "info", ";", "void", "*", "pos", ",", "*", "entry0", ",", "*", "entry1", ";", "unsigned", "int", "size", ";", "info", "=", "*", "pinfo", ";", "entry0", "=", "*", "pentry0", ";", "size", "=", "total_size", ";", "info", "-", ">", "number", "=", "number", ";", "/", "*", "Init", "all", "hooks", "to", "impossible", "value", ".", "*", "/", "for", "(", "i", "=", "0", ";", "i", "<", "NF_IP_NUMHOOKS", ";", "i", "+", "+)", "{", "info", "-", ">", "hook_entry", "[", "i", "]", "=", "0xFFFFFFFF", ";", "info", "-", ">", "underflow", "[", "i", "]", "=", "0xFFFFFFFF", ";", "}", "duprintf", "(", "\"", "translate_compat_table", ":", "size", "%", "u", "\\", "n", "\"", ",", "info", "-", ">", "size", ")", ";", "i", "=", "0", ";", "xt_compat_lock", "(", "AF_INET", ")", ";", "/", "*", "Walk", "through", "entries", ",", "checking", "offsets", ".", "*", "/", "ret", "=", "IPT_ENTRY_ITERATE", "(", "entry0", ",", "total_size", ",", "check_compat_entry_size_and_hooks", ",", "info", ",", "&", "size", ",", "entry0", ",", "entry0", "+", "total_size", ",", "hook_entries", ",", "underflows", ",", "&", "i", ",", "name", ")", ";", "if", "(", "ret", "!", "=", "0", ")", "goto", "out_unlock", ";", "ret", "=", "-", "EINVAL", ";", "if", "(", "i", "!", "=", "number", ")", "{", "duprintf", "(", "\"", "translate_compat_table", ":", "%", "u", "not", "%", "u", "entries", "\\", "n", "\"", ",", "i", ",", "number", ")", ";", "goto", "out_unlock", ";", "}", "/", "*", "Check", "hooks", "all", "assigned", "*", "/", "for", "(", "i", "=", "0", ";", "i", "<", "NF_IP_NUMHOOKS", ";", "i", "+", "+)", "{", "/", "*", "Only", "hooks", "which", "are", "valid", "*", "/", "if", "(", "!(", "valid_hooks", "&", "(", "1", "<", "<", "i", ")", "))", "continue", ";", "if", "(", "info", "-", ">", "hook_entry", "[", "i", "]", "=", "=", "0xFFFFFFFF", ")", "{", "duprintf", "(", "\"", "Invalid", "hook", "entry", "%", "u", "%", "u", "\\", "n", "\"", ",", "i", ",", "hook_entries", "[", "i", "]", ");", "goto", "out_unlock", ";", "if", "(", "info", "-", ">", "underflow", "[", "i", "]", "=", "=", "0xFFFFFFFF", ")", "{", "duprintf", "(", "\"", "Invalid", "underflow", "%", "u", "%", "u", "\\", "n", "\"", ",", "i", ",", "underflows", "[", "i", "]", ");", "goto", "out_unlock", ";", "}", "}", "ret", "=", "-", "ENOMEM", ";", "newinfo", "=", "xt_alloc_table_info", "(", "size", ")", ";", "if", "(", "!", "newinfo", ")", "goto", "out_unlock", ";", "newinfo", "-", ">", "number", "=", "number", ";", "for", "(", "i", "=", "0", ";", "i", "<", "NF_IP_NUMHOOKS", ";", "i", "+", "+)", "{", "newinfo", "-", ">", "hook_entry", "[", "i", "]", "=", "info", "-", ">", "hook_entry", "[", "i", "]", ";", "newinfo", "-", ">", "underflow", "[", "i", "]", "=", "info", "-", ">", "underflow", "[", "i", "]", ";", "}", "entry1", "=", "newinfo", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "pos", "=", "entry1", ";", "size", "=", "total_size", ";", "ret", "=", "IPT_ENTRY_ITERATE", "(", "entry0", ",", "total_size", ",", "compat_copy_entry_from_user", ",", "&", "pos", ",", "&", "size", ",", "name", ",", "newinfo", ",", "entry1", ")", ";", "compat_flush_offsets", "(", ");", "xt_compat_unlock", "(", "AF_INET", ")", ";", "if", "(", "ret", ")", "goto", "free_newinfo", ";", "ret", "=", "-", "ELOOP", ";", "if", "(", "!", "mark_source_chains", "(", "newinfo", ",", "valid_hooks", ",", "entry1", ")", ")", "goto", "free_newinfo", ";", "/", "*", "And", "one", "copy", "for", "every", "other", "CPU", "*", "/", "for_each_cpu", "(", "i", ")", "if", "(", "newinfo", "-", ">", "entries", "[", "i", "]", "&", "&", "newinfo", "-", ">", "entries", "[", "i", "]", "!", "=", "entry1", ")", "memcpy", "(", "newinfo", "-", ">", "entries", "[", "i", "]", ",", "entry1", ",", "newinfo", "-", ">", "size", ")", ";", "*", "pinfo", "=", "newinfo", ";", "*", "pentry0", "=", "entry1", ";", "xt_free_table_info", "(", "info", ")", ";", "return", "0", ";", "free_newinfo", ":", "xt_free_table_info", "(", "newinfo", ")", ";", "out", ":", "out_unlock", ":", "xt_compat_unlock", "(", "AF_INET", ")", ";", "goto", "out", ";", "compat_do_replace", "(", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ")", "struct", "compat_ipt_replace", "tmp", ";", "struct", "xt_table_info", "*", "newinfo", ";", "void", "*", "loc_cpu_entry", ";", "ret", "=", "translate_compat_table", "(", "tmp", ".", "name", ",", "tmp", ".", "valid_hooks", ",", "&", "newinfo", ",", "&", "loc_cpu_entry", ",", "tmp", ".", "size", ",", "tmp", ".", "num_entries", ",", "tmp", ".", "hook_entry", ",", "tmp", ".", "underflow", ")", ";", "if", "(", "ret", "!", "=", "0", ")", "duprintf", "(", "\"", "compat_do_replace", ":", "Translated", "table", "\\", "n", "\"", ");", "ret", "=", "__do_replace", "(", "tmp", ".", "name", ",", "tmp", ".", "valid_hooks", ",", "newinfo", ",", "tmp", ".", "num_counters", ",", "compat_ptr", "(", "tmp", ".", "counters", ")", ");", "if", "(", "ret", ")", "goto", "free_newinfo_untrans", ";", "return", "0", ";", "free_newinfo_untrans", ":", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "newinfo", "-", ">", "size", ",", "cleanup_entry", ",", "NULL", ")", ";", "free_newinfo", ":", "xt_free_table_info", "(", "newinfo", ")", ";", "return", "ret", ";", "}", "static", "int", "compat_do_ipt_set_ctl", "(", "struct", "sock", "*", "sk", ",", "int", "cmd", ",", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ")", "{", "int", "ret", ";", "if", "(", "!", "capable", "(", "CAP_NET_ADMIN", ")", ")", "return", "-", "EPERM", ";", "switch", "(", "cmd", ")", "{", "case", "IPT_SO_SET_REPLACE", ":", "ret", "=", "compat_do_replace", "(", "user", ",", "len", ")", ";", "break", ";", "case", "IPT_SO_SET_ADD_COUNTERS", ":", "ret", "=", "do_add_counters", "(", "user", ",", "len", ",", "1", ")", ";", "break", ";", "default", ":", "duprintf", "(", "\"", "do_ipt_set_ctl", ":", "unknown", "request", "%", "i", "\\", "n", "\"", ",", "cmd", ")", ";", "ret", "=", "-", "EINVAL", ";", "}", "struct", "compat_ipt_get_entries", "char", "name", "[", "IPT_TABLE_MAXNAMELEN", "]", ";", "compat_uint_t", "size", ";", "struct", "compat_ipt_entry", "entrytable", "[", "0", "]", ";", "}", ";", "static", "int", "compat_copy_entries_to_user", "(", "unsigned", "int", "total_size", ",", "struct", "ipt_table", "*", "table", ",", "void", "__user", "*", "userptr", ")", "{", "unsigned", "int", "off", ",", "num", ";", "struct", "compat_ipt_entry", "e", ";", "struct", "xt_counters", "*", "counters", ";", "struct", "xt_table_info", "*", "private", "=", "table", "-", ">", "private", ";", "void", "__user", "*", "pos", ";", "unsigned", "int", "size", ";", "int", "ret", "=", "0", ";", "void", "*", "loc_cpu_entry", ";", "counters", "=", "alloc_counters", "(", "table", ")", ";", "if", "(", "IS_ERR", "(", "counters", ")", ")", "return", "PTR_ERR", "(", "counters", ")", ";", "/", "*", "choose", "the", "copy", "that", "is", "on", "our", "node", "/", "cpu", ",", ".", "..", "*", "This", "choice", "is", "lazy", "(", "because", "current", "thread", "is", "*", "allowed", "to", "migrate", "to", "another", "cpu", ")", "*", "/", "loc_cpu_entry", "=", "private", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "pos", "=", "userptr", ";", "size", "=", "total_size", ";", "ret", "=", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "total_size", ",", "compat_copy_entry_to_user", ",", "&", "pos", ",", "&", "size", ")", ";", "if", "(", "ret", ")", "goto", "free_counters", ";", "/", "*", ".", "..", "then", "go", "back", "and", "fix", "counters", "and", "names", "*", "/", "for", "(", "off", "=", "0", ",", "num", "=", "0", ";", "off", "<", "size", ";", "off", "+", "=", "e", ".", "next_offset", ",", "num", "+", "+)", "{", "unsigned", "int", "i", ";", "struct", "ipt_entry_match", "m", ";", "struct", "ipt_entry_target", "t", ";", "ret", "=", "-", "EFAULT", ";", "if", "(", "copy_from_user", "(", "&", "e", ",", "userptr", "+", "off", ",", "sizeof", "(", "struct", "compat_ipt_entry", ")", "))", "goto", "free_counters", ";", "if", "(", "copy_to_user", "(", "userptr", "+", "off", "offsetof", "(", "struct", "compat_ipt_entry", ",", "counters", ")", ",", "&", "counters", "[", "num", "]", ",", "sizeof", "(", "counters", "[", "num", "]", "))", ")", "goto", "free_counters", ";", "for", "(", "i", "=", "sizeof", "(", "struct", "compat_ipt_entry", ")", ";", "i", "<", "e", ".", "target_offset", ";", "i", "+", "=", "m", ".", "u", ".", "match_size", ")", "{", "if", "(", "copy_from_user", "(", "&", "m", ",", "userptr", "+", "off", "+", "i", ",", "sizeof", "(", "struct", "ipt_entry_match", ")", "))", "goto", "free_counters", ";", "if", "(", "copy_to_user", "(", "userptr", "+", "off", "+", "i", "offsetof", "(", "struct", "ipt_entry_match", ",", "u", ".", "user", ".", "name", ")", ",", "m", ".", "u", ".", "kernel", ".", "match", "-", ">", "name", ",", "strlen", "(", "m", ".", "u", ".", "kernel", ".", "match", "-", ">", "name", ")", "+", "1", ")", ")", "goto", "free_counters", ";", "}", "if", "(", "copy_from_user", "(", "&", "t", ",", "userptr", "+", "off", "+", "e", ".", "target_offset", ",", "sizeof", "(", "struct", "ipt_entry_target", ")", "))", "goto", "free_counters", ";", "if", "(", "copy_to_user", "(", "userptr", "+", "off", "+", "e", ".", "target_offset", "offsetof", "(", "struct", "ipt_entry_target", ",", "u", ".", "user", ".", "name", ")", ",", "t", ".", "u", ".", "kernel", ".", "target", "-", ">", "name", ",", "strlen", "(", "t", ".", "u", ".", "kernel", ".", "target", "-", ">", "name", ")", "+", "1", ")", ")", "goto", "free_counters", ";", "}", "ret", "=", "0", ";", "free_counters", ":", "vfree", "(", "counters", ")", ";", "return", "ret", ";", "compat_get_entries", "(", "struct", "compat_ipt_get_entries", "__user", "*", "uptr", ",", "int", "*", "len", ")", "int", "ret", ";", "struct", "compat_ipt_get_entries", "get", ";", "if", "(", "*", "len", "<", "sizeof", "(", "get", ")", ")", "{", "duprintf", "(", "\"", "compat_get_entries", ":", "%", "u", "<", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "(", "unsigned", "int", ")", "sizeof", "(", "get", ")", ");", "}", "if", "(", "copy_from_user", "(", "&", "get", ",", "uptr", ",", "sizeof", "(", "get", ")", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "if", "(", "*", "len", "!", "=", "sizeof", "(", "struct", "compat_ipt_get_entries", ")", "+", "get", ".", "size", ")", "{", "duprintf", "(", "\"", "compat_get_entries", ":", "%", "u", "!", "=", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "(", "unsigned", "int", ")", "(", "sizeof", "(", "struct", "compat_ipt_get_entries", ")", "get", ".", "size", ")", ");", "return", "-", "EINVAL", ";", "xt_compat_lock", "(", "AF_INET", ")", ";", "t", "=", "xt_find_table_lock", "(", "AF_INET", ",", "get", ".", "name", ")", ";", "if", "(", "t", "&", "&", "!", "IS_ERR", "(", "t", ")", ")", "{", "struct", "xt_table_info", "*", "private", "=", "t", "-", ">", "private", ";", "struct", "xt_table_info", "info", ";", "duprintf", "(", "\"", "t", "-", ">", "private", "-", ">", "number", "=", "%", "u", "\\", "n", "\"", ",", "private", "-", ">", "number", ")", ";", "ret", "=", "compat_table_info", "(", "private", ",", "&", "info", ")", ";", "if", "(", "!", "ret", "&", "&", "get", ".", "size", "=", "=", "info", ".", "size", ")", "{", "ret", "=", "compat_copy_entries_to_user", "(", "private", "-", ">", "size", ",", "t", ",", "uptr", "-", ">", "entrytable", ")", ";", "}", "else", "if", "(", "!", "ret", ")", "{", "duprintf", "(", "\"", "compat_get_entries", ":", "I", "'", "ve", "got", "%", "u", "not", "%", "u", "!", "\\", "n", "\"", ",", "private", "-", ">", "size", ",", "get", ".", "size", ")", ";", "ret", "=", "-", "EINVAL", ";", "}", "compat_flush_offsets", "(", ");", "module_put", "(", "t", "-", ">", "me", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "}", "else", "xt_compat_unlock", "(", "AF_INET", ")", ";", "return", "ret", ";", "}", "static", "int", "compat_do_ipt_get_ctl", "(", "struct", "sock", "*", "sk", ",", "int", "cmd", ",", "void", "__user", "*", "user", ",", "int", "*", "len", ")", "{", "int", "ret", ";", "switch", "(", "cmd", ")", "{", "case", "IPT_SO_GET_INFO", ":", "ret", "=", "get_info", "(", "user", ",", "len", ",", "1", ")", ";", "break", ";", "case", "IPT_SO_GET_ENTRIES", ":", "ret", "=", "compat_get_entries", "(", "user", ",", "len", ")", ";", "break", ";", "default", ":", "duprintf", "(", "\"", "compat_do_ipt_get_ctl", ":", "unknown", "request", "%", "i", "\\", "n", "\"", ",", "cmd", ")", ";", "ret", "=", "-", "EINVAL", ";", "}", "#", "endif", "ret", "=", "do_add_counters", "(", "user", ",", "len", ",", "0", ")", ";", "case", "IPT_SO_GET_INFO", ":", "ret", "=", "get_info", "(", "user", ",", "len", ",", "0", ")", ";", "break", ";", "case", "IPT_SO_GET_ENTRIES", ":", "ret", "=", "get_entries", "(", "user", ",", "len", ")", ";", "#", "ifdef", "CONFIG_COMPAT", ".", "compat", "=", "&", "compat_ipt_standard_fn", ",", "#", "endif", "#", "ifdef", "CONFIG_COMPAT", ".", "compat_set", "=", "compat_do_ipt_set_ctl", ",", "#", "endif", "#", "ifdef", "CONFIG_COMPAT", ".", "compat_get", "=", "compat_do_ipt_get_ctl", ",", "#", "endif", "struct", "mutex", "compat_mutex", ";", "#", "ifdef", "CONFIG_COMPAT", "int", "xt_compat_match", "(", "void", "*", "match", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", "{", "struct", "xt_match", "*", "m", ";", "struct", "compat_xt_entry_match", "*", "pcompat_m", ";", "struct", "xt_entry_match", "*", "pm", ";", "u_int16_t", "msize", ";", "int", "off", ",", "ret", ";", "ret", "=", "0", ";", "m", "=", "(", "(", "struct", "xt_entry_match", "*", ")", "match", ")", "->", "u", ".", "kernel", ".", "match", ";", "off", "=", "XT_ALIGN", "(", "m", "-", ">", "matchsize", ")", "-", "COMPAT_XT_ALIGN", "(", "m", "-", ">", "matchsize", ")", ";", "switch", "(", "convert", ")", "{", "case", "COMPAT_TO_USER", ":", "pm", "=", "(", "struct", "xt_entry_match", "*", ")", "match", ";", "msize", "=", "pm", "-", ">", "u", ".", "user", ".", "match_size", ";", "if", "(", "__copy_to_user", "(", "*", "dstptr", ",", "pm", ",", "msize", ")", ")", "{", "ret", "=", "-", "EFAULT", ";", "break", ";", "}", "msize", "-", "=", "off", ";", "if", "(", "put_user", "(", "msize", ",", "(", "u_int16_t", "*", ")*", "dstptr", ")", ")", "ret", "=", "-", "EFAULT", ";", "*", "size", "-", "=", "off", ";", "*", "dstptr", "+", "=", "msize", ";", "break", ";", "case", "COMPAT_FROM_USER", ":", "pcompat_m", "=", "(", "struct", "compat_xt_entry_match", "*", ")", "match", ";", "pm", "=", "(", "struct", "xt_entry_match", "*", ")*", "dstptr", ";", "msize", "=", "pcompat_m", "-", ">", "u", ".", "user", ".", "match_size", ";", "memcpy", "(", "pm", ",", "pcompat_m", ",", "msize", ")", ";", "msize", "+", "=", "off", ";", "pm", "-", ">", "u", ".", "user", ".", "match_size", "=", "msize", ";", "*", "size", "+", "=", "off", ";", "*", "dstptr", "+", "=", "msize", ";", "break", ";", "case", "COMPAT_CALC_SIZE", ":", "*", "size", "+", "=", "off", ";", "break", ";", "default", ":", "ret", "=", "-", "ENOPROTOOPT", ";", "break", ";", "}", "return", "ret", ";", "}", "EXPORT_SYMBOL_GPL", "(", "xt_compat_match", ")", ";", "#", "endif", "#", "ifdef", "CONFIG_COMPAT", "int", "xt_compat_target", "(", "void", "*", "target", ",", "void", "*", "*", "dstptr", ",", "int", "*", "size", ",", "int", "convert", ")", "{", "struct", "xt_target", "*", "t", ";", "struct", "compat_xt_entry_target", "*", "pcompat", ";", "struct", "xt_entry_target", "*", "pt", ";", "u_int16_t", "tsize", ";", "int", "off", ",", "ret", ";", "ret", "=", "0", ";", "t", "=", "(", "(", "struct", "xt_entry_target", "*", ")", "target", ")", "->", "u", ".", "kernel", ".", "target", ";", "off", "=", "XT_ALIGN", "(", "t", "-", ">", "targetsize", ")", "-", "COMPAT_XT_ALIGN", "(", "t", "-", ">", "targetsize", ")", ";", "switch", "(", "convert", ")", "{", "case", "COMPAT_TO_USER", ":", "pt", "=", "(", "struct", "xt_entry_target", "*", ")", "target", ";", "tsize", "=", "pt", "-", ">", "u", ".", "user", ".", "target_size", ";", "if", "(", "__copy_to_user", "(", "*", "dstptr", ",", "pt", ",", "tsize", ")", ")", "{", "ret", "=", "-", "EFAULT", ";", "break", ";", "}", "tsize", "-", "=", "off", ";", "if", "(", "put_user", "(", "tsize", ",", "(", "u_int16_t", "*", ")*", "dstptr", ")", ")", "ret", "=", "-", "EFAULT", ";", "*", "size", "-", "=", "off", ";", "*", "dstptr", "+", "=", "tsize", ";", "break", ";", "case", "COMPAT_FROM_USER", ":", "pcompat", "=", "(", "struct", "compat_xt_entry_target", "*", ")", "target", ";", "pt", "=", "(", "struct", "xt_entry_target", "*", ")*", "dstptr", ";", "tsize", "=", "pcompat", "-", ">", "u", ".", "user", ".", "target_size", ";", "memcpy", "(", "pt", ",", "pcompat", ",", "tsize", ")", ";", "tsize", "+", "=", "off", ";", "pt", "-", ">", "u", ".", "user", ".", "target_size", "=", "tsize", ";", "*", "size", "+", "=", "off", ";", "*", "dstptr", "+", "=", "tsize", ";", "break", ";", "case", "COMPAT_CALC_SIZE", ":", "*", "size", "+", "=", "off", ";", "break", ";", "default", ":", "ret", "=", "-", "ENOPROTOOPT", ";", "break", ";", "}", "return", "ret", ";", "}", "EXPORT_SYMBOL_GPL", "(", "xt_compat_target", ")", ";", "#", "endif", "#", "ifdef", "CONFIG_COMPAT", "void", "xt_compat_lock", "(", "int", "af", ")", "{", "mutex_lock", "(", "&", "xt", "[", "af", "]", ".", "compat_mutex", ")", ";", "}", "EXPORT_SYMBOL_GPL", "(", "xt_compat_lock", ")", ";", "void", "xt_compat_unlock", "(", "int", "af", ")", "{", "mutex_unlock", "(", "&", "xt", "[", "af", "]", ".", "compat_mutex", ")", ";", "}", "EXPORT_SYMBOL_GPL", "(", "xt_compat_unlock", ")", ";", "#", "endif", "#", "ifdef", "CONFIG_COMPAT", "mutex_init", "(", "&", "xt", "[", "i", "]", ".", "compat_mutex", ")", ";", "#", "endif</s>/", "*", "SO_SET_REPLACE", "seems", "to", "be", "the", "same", "in", "all", "levels", "*", "/", "if", "(", "optname", "=", "=", "IPT_SO_SET_REPLACE", ")", "static", "int", "copy_entries_to_user", "(", "unsigned", "int", "total_size", ",", "struct", "ipt_table", "*", "table", ",", "void", "__user", "*", "userptr", ")", "unsigned", "int", "off", ",", "num", ",", "countersize", ";", "struct", "ipt_entry", "*", "e", ";", "int", "ret", "=", "0", ";", "void", "*", "loc_cpu_entry", ";", "return", "-", "ENOMEM", ";", "get_entries", "(", "const", "struct", "ipt_get_entries", "*", "entries", ",", "struct", "ipt_get_entries", "__user", "*", "uptr", ")", "struct", "ipt_table", "*", "t", ";", "t", "=", "xt_find_table_lock", "(", "AF_INET", ",", "entries", "-", ">", "name", ")", ";", "if", "(", "t", "&", "&", "!", "IS_ERR", "(", "t", ")", ")", "{", "struct", "xt_table_info", "*", "private", "=", "t", "-", ">", "private", ";", "duprintf", "(", "\"", "t", "-", ">", "private", "-", ">", "number", "=", "%", "u", "\\", "n", "\"", ",", "private", "-", ">", "number", ")", ";", "if", "(", "entries", "-", ">", "size", "=", "=", "private", "-", ">", "size", ")", "ret", "=", "copy_entries_to_user", "(", "private", "-", ">", "size", ",", "t", ",", "uptr", "-", ">", "entrytable", ")", ";", "else", "{", "duprintf", "(", "\"", "get_entries", ":", "I", "'", "ve", "got", "%", "u", "not", "%", "u", "!", "\\", "n", "\"", ",", "private", "-", ">", "size", ",", "entries", "-", ">", "size", ")", ";", "ret", "=", "-", "EINVAL", ";", "module_put", "(", "t", "-", ">", "me", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "}", "else", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "do_replace", "(", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ")", "struct", "ipt_replace", "tmp", ";", "struct", "ipt_table", "*", "t", ";", "struct", "xt_table_info", "*", "newinfo", ",", "*", "oldinfo", ";", "struct", "xt_counters", "*", "counters", ";", "void", "*", "loc_cpu_entry", ",", "*", "loc_cpu_old_entry", ";", "counters", "=", "vmalloc", "(", "tmp", ".", "num_counters", "*", "sizeof", "(", "struct", "xt_counters", ")", ");", "if", "(", "!", "counters", ")", "{", "ret", "=", "-", "ENOMEM", ";", "}", "ret", "=", "translate_table", "(", "tmp", ".", "name", ",", "tmp", ".", "valid_hooks", ",", "newinfo", ",", "loc_cpu_entry", ",", "tmp", ".", "size", ",", "tmp", ".", "num_entries", ",", "tmp", ".", "hook_entry", ",", "tmp", ".", "underflow", ")", ";", "if", "(", "ret", "!", "=", "0", ")", "goto", "free_newinfo_counters", ";", "duprintf", "(", "\"", "ip_tables", ":", "Translated", "table", "\\", "n", "\"", ");", "t", "=", "try_then_request_module", "(", "xt_find_table_lock", "(", "AF_INET", ",", "tmp", ".", "name", ")", ",", "\"", "iptable_", "%", "s", "\"", ",", "tmp", ".", "name", ")", ";", "if", "(", "!", "t", "|", "|", "IS_ERR", "(", "t", ")", ")", "{", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "goto", "free_newinfo_counters_untrans", ";", "}", "/", "*", "You", "lied", "!", "*", "/", "if", "(", "tmp", ".", "valid_hooks", "!", "=", "t", "-", ">", "valid_hooks", ")", "{", "duprintf", "(", "\"", "Valid", "hook", "crap", ":", "%", "08X", "vs", "%", "08X", "\\", "n", "\"", ",", "tmp", ".", "valid_hooks", ",", "t", "-", ">", "valid_hooks", ")", ";", "ret", "=", "-", "EINVAL", ";", "goto", "put_module", ";", "}", "oldinfo", "=", "xt_replace_table", "(", "t", ",", "tmp", ".", "num_counters", ",", "newinfo", ",", "&", "ret", ")", ";", "if", "(", "!", "oldinfo", ")", "goto", "put_module", ";", "/", "*", "Update", "module", "usage", "count", "based", "on", "number", "of", "rules", "*", "/", "duprintf", "(", "\"", "do_replace", ":", "oldnum", "=", "%", "u", ",", "initnum", "=", "%", "u", ",", "newnum", "=", "%", "u", "\\", "n", "\"", ",", "oldinfo", "-", ">", "number", ",", "oldinfo", "-", ">", "initial_entries", ",", "newinfo", "-", ">", "number", ")", ";", "if", "(", "(", "oldinfo", "-", ">", "number", ">", "oldinfo", "-", ">", "initial_entries", ")", "|", "|", "(", "newinfo", "-", ">", "number", "<", "=", "oldinfo", "-", ">", "initial_entries", ")", ")", "module_put", "(", "t", "-", ">", "me", ")", ";", "if", "(", "(", "oldinfo", "-", ">", "number", ">", "oldinfo", "-", ">", "initial_entries", ")", "&", "&", "(", "newinfo", "-", ">", "number", "<", "=", "oldinfo", "-", ">", "initial_entries", ")", ")", "module_put", "(", "t", "-", ">", "me", ")", ";", "/", "*", "Get", "the", "old", "counters", ".", "*", "/", "get_counters", "(", "oldinfo", ",", "counters", ")", ";", "/", "*", "Decrease", "module", "usage", "counts", "and", "free", "resource", "*", "/", "loc_cpu_old_entry", "=", "oldinfo", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "IPT_ENTRY_ITERATE", "(", "loc_cpu_old_entry", ",", "oldinfo", "-", ">", "size", ",", "cleanup_entry", ",", "NULL", ")", ";", "xt_free_table_info", "(", "oldinfo", ")", ";", "if", "(", "copy_to_user", "(", "tmp", ".", "counters", ",", "counters", ",", "sizeof", "(", "struct", "xt_counters", ")", "*", "tmp", ".", "num_counters", ")", "!", "=", "0", ")", "ret", "=", "-", "EFAULT", ";", "vfree", "(", "counters", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "return", "ret", ";", "put_module", ":", "module_put", "(", "t", "-", ">", "me", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "free_newinfo_counters_untrans", ":", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "newinfo", "-", ">", "size", ",", "cleanup_entry", ",", "NULL", ")", ";", "free_newinfo_counters", ":", "vfree", "(", "counters", ")", ";", "free_newinfo", ":", "xt_free_table_info", "(", "newinfo", ")", ";", "/", "*", "We", "'", "re", "lazy", ",", "and", "add", "to", "the", "first", "CPU", ";", "overflow", "works", "its", "fey", "magic", "*", "and", "everything", "is", "OK", ".", "*", "/", "static", "inline", "int", "add_counter_to_entry", "(", "struct", "ipt_entry", "*", "e", ",", "const", "struct", "xt_counters", "addme", "[", "],", "unsigned", "int", "*", "i", ")", "#", "if", "0", "duprintf", "(", "\"", "add_counter", ":", "Entry", "%", "u", "%", "lu", "/", "%", "lu", "+", "%", "lu", "/", "%", "lu", "\\", "n", "\"", ",", "*", "i", ",", "(", "long", "unsigned", "int", ")", "e", "-", ">", "counters", ".", "pcnt", ",", "(", "long", "unsigned", "int", ")", "e", "-", ">", "counters", ".", "bcnt", ",", "(", "long", "unsigned", "int", ")", "addme", "[", "*", "i", "]", ".", "pcnt", ",", "(", "long", "unsigned", "int", ")", "addme", "[", "*", "i", "]", ".", "bcnt", ")", ";", "#", "endif", "ADD_COUNTER", "(", "e", "-", ">", "counters", ",", "addme", "[", "*", "i", "]", ".", "bcnt", ",", "addme", "[", "*", "i", "]", ".", "pcnt", ")", ";", "(", "*", "i", ")", "++", ";", "return", "0", ";", "do_add_counters", "(", "void", "__user", "*", "user", ",", "unsigned", "int", "len", ")", "unsigned", "int", "i", ";", "struct", "xt_counters_info", "tmp", ",", "*", "paddc", ";", "struct", "xt_table_info", "*", "private", ";", "int", "ret", "=", "0", ";", "void", "*", "loc_cpu_entry", ";", "if", "(", "copy_from_user", "(", "&", "tmp", ",", "user", ",", "sizeof", "(", "tmp", ")", ")", "!", "=", "0", ")", "return", "-", "EFAULT", ";", "if", "(", "len", "!", "=", "sizeof", "(", "tmp", ")", "+", "tmp", ".", "num_counters", "*", "sizeof", "(", "struct", "xt_counters", ")", ")", "paddc", "=", "vmalloc_node", "(", "len", ",", "numa_node_id", "(", "))", ";", "if", "(", "!", "paddc", ")", "return", "-", "ENOMEM", ";", "if", "(", "copy_from_user", "(", "paddc", ",", "user", ",", "len", ")", "!", "=", "0", ")", "{", "ret", "=", "-", "EFAULT", ";", "goto", "free", ";", "t", "=", "xt_find_table_lock", "(", "AF_INET", ",", "tmp", ".", "name", ")", ";", "if", "(", "!", "t", "|", "|", "IS_ERR", "(", "t", ")", ")", "{", "goto", "free", ";", "}", "write_lock_bh", "(", "&", "t", "-", ">", "lock", ")", ";", "private", "=", "t", "-", ">", "private", ";", "if", "(", "private", "-", ">", "number", "!", "=", "paddc", "-", ">", "num_counters", ")", "{", "ret", "=", "-", "EINVAL", ";", "goto", "unlock_up_free", ";", "}", "i", "=", "0", ";", "/", "*", "Choose", "the", "copy", "that", "is", "on", "our", "node", "*", "/", "loc_cpu_entry", "=", "private", "-", ">", "entries", "[", "raw_smp_processor_id", "(", ")]", ";", "IPT_ENTRY_ITERATE", "(", "loc_cpu_entry", ",", "private", "-", ">", "size", ",", "add_counter_to_entry", ",", "paddc", "-", ">", "counters", ",", "&", "i", ")", ";", "unlock_up_free", ":", "write_unlock_bh", "(", "&", "t", "-", ">", "lock", ")", ";", "xt_table_unlock", "(", "t", ")", ";", "module_put", "(", "t", "-", ">", "me", ")", ";", "free", ":", "vfree", "(", "paddc", ")", ";", "ret", "=", "do_add_counters", "(", "user", ",", "len", ")", ";", "case", "IPT_SO_GET_INFO", ":", "{", "char", "name", "[", "IPT_TABLE_MAXNAMELEN", "]", ";", "struct", "ipt_table", "*", "t", ";", "if", "(", "*", "len", "!", "=", "sizeof", "(", "struct", "ipt_getinfo", ")", ")", "{", "duprintf", "(", "\"", "length", "%", "u", "!", "=", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "sizeof", "(", "struct", "ipt_getinfo", ")", ");", "ret", "=", "-", "EINVAL", ";", "break", ";", "}", "if", "(", "copy_from_user", "(", "name", ",", "user", ",", "sizeof", "(", "name", ")", ")", "!", "=", "0", ")", "{", "ret", "=", "-", "EFAULT", ";", "break", ";", "}", "name", "[", "IPT_TABLE_MAXNAMELEN", "-", "1", "]", "=", "'", "\\", "0", "'", ";", "t", "=", "try_then_request_module", "(", "xt_find_table_lock", "(", "AF_INET", ",", "name", ")", ",", "\"", "iptable_", "%", "s", "\"", ",", "name", ")", ";", "if", "(", "t", "&", "&", "!", "IS_ERR", "(", "t", ")", ")", "{", "struct", "ipt_getinfo", "info", ";", "struct", "xt_table_info", "*", "private", "=", "t", "-", ">", "private", ";", "info", ".", "valid_hooks", "=", "t", "-", ">", "valid_hooks", ";", "memcpy", "(", "info", ".", "hook_entry", ",", "private", "-", ">", "hook_entry", ",", "sizeof", "(", "info", ".", "hook_entry", ")", ");", "memcpy", "(", "info", ".", "underflow", ",", "private", "-", ">", "underflow", ",", "sizeof", "(", "info", ".", "underflow", ")", ");", "info", ".", "num_entries", "=", "private", "-", ">", "number", ";", "info", ".", "size", "=", "private", "-", ">", "size", ";", "memcpy", "(", "info", ".", "name", ",", "name", ",", "sizeof", "(", "info", ".", "name", ")", ");", "if", "(", "copy_to_user", "(", "user", ",", "&", "info", ",", "*", "len", ")", "!", "=", "0", ")", "ret", "=", "-", "EFAULT", ";", "else", "ret", "=", "0", ";", "xt_table_unlock", "(", "t", ")", ";", "module_put", "(", "t", "-", ">", "me", ")", ";", "}", "else", "ret", "=", "t", "?", "PTR_ERR", "(", "t", ")", ":", "-", "ENOENT", ";", "}", "break", ";", "case", "IPT_SO_GET_ENTRIES", ":", "{", "struct", "ipt_get_entries", "get", ";", "if", "(", "*", "len", "<", "sizeof", "(", "get", ")", ")", "{", "duprintf", "(", "\"", "get_entries", ":", "%", "u", "<", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "sizeof", "(", "get", ")", ");", "ret", "=", "-", "EINVAL", ";", "}", "else", "if", "(", "copy_from_user", "(", "&", "get", ",", "user", ",", "sizeof", "(", "get", ")", ")", "!", "=", "0", ")", "{", "ret", "=", "-", "EFAULT", ";", "}", "else", "if", "(", "*", "len", "!", "=", "sizeof", "(", "struct", "ipt_get_entries", ")", "+", "get", ".", "size", ")", "{", "duprintf", "(", "\"", "get_entries", ":", "%", "u", "!", "=", "%", "u", "\\", "n", "\"", ",", "*", "len", ",", "sizeof", "(", "struct", "ipt_get_entries", ")", "+", "get", ".", "size", ")", ";", "ret", "=", "-", "EINVAL", ";", "}", "else", "ret", "=", "get_entries", "(", "&", "get", ",", "user", ")", ";", "}"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["{", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";", "ThrowReaderException", "(", "ResourceLimitError", ",", "\"", "MemoryAllocationFailed", "\"", ");", "}", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";", "{", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";", "ThrowReaderException", "(", "ResourceLimitError", ",", "\"", "MemoryAllocationFailed", "\"", ");", "}", "scanline", "=", "(", "unsigned", "char", "*", ")", "RelinquishMagickMemory", "(", "scanline", ")", ";</s>ThrowReaderException", "(", "ResourceLimitError", ",", "\"", "MemoryAllocationFailed", "\"", ");", "ThrowReaderException", "(", "ResourceLimitError", ",", "\"", "MemoryAllocationFailed", "\"", ");"], "docstring_tokens": ["memory", "leak"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "icount", ",", "0", ",", "sizeof", "(", "struct", "serial_icounter_struct", ")", ");", "memset", "(", "&", "icount", ",", "0", ",", "sizeof", "(", "struct", "serial_icounter_struct", ")", ");</s>"], "docstring_tokens": ["stack", "leak"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "sat", ".", "sat_zero", ",", "0", ",", "sizeof", "(", "sat", ".", "sat_zero", ")", ");</s>"], "docstring_tokens": ["8-bytes", "kernel", "stack", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "ssocket", "=", "=", "NULL", ")", "return", "-", "ENOTSOCK", ";</s>if", "(", "ssocket", "=", "=", "NULL", ")", "return", "-", "ENOTSOCK", ";", "/", "*", "BB", "eventually", "add", "reconnect", "code", "here", "*", "/"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["#", "define", "LIST_POISON1", "(", "(", "void", "*", ")", "0x100", "+", "POISON_POINTER_DELTA", ")", "#", "define", "LIST_POISON2", "(", "(", "void", "*", ")", "0x200", "+", "POISON_POINTER_DELTA", ")</s>#", "define", "LIST_POISON1", "(", "(", "void", "*", ")", "0x00100100", "+", "POISON_POINTER_DELTA", ")", "#", "define", "LIST_POISON2", "(", "(", "void", "*", ")", "0x00200200", "+", "POISON_POINTER_DELTA", ")"], "docstring_tokens": ["kernel", "arbitrary", "execution"]}
{"contents": ["empty"], "code_tokens": ["=", "==", "=", "Query", "Parameters", "(", "87", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "@", "UriParam", "(", "label", "=", "\"", "producer", "\"", ",", "defaultValue", "=", "\"", "true", "\"", ")", "protected", "boolean", "jailStartingDirectory", "=", "true", ";", "public", "boolean", "isJailStartingDirectory", "(", ")", "{", "return", "jailStartingDirectory", ";", "}", "/", "**", "*", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "*", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "*", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "*", "/", "public", "void", "setJailStartingDirectory", "(", "boolean", "jailStartingDirectory", ")", "{", "this", ".", "jailStartingDirectory", "=", "jailStartingDirectory", ";", "}", "import", "org", ".", "apache", ".", "camel", ".", "CamelExchangeException", ";", "if", "(", "value", "instanceof", "String", "&", "&", "StringHelper", ".", "hasStartToken", "(", "(", "String", ")", "value", ",", "\"", "simple", "\"", "))", "{", "if", "(", "endpoint", ".", "isJailStartingDirectory", "(", "))", "{", "/", "/", "check", "for", "file", "must", "be", "within", "starting", "directory", "(", "need", "to", "compact", "first", "as", "the", "name", "can", "be", "using", "relative", "paths", "via", ".", "./", "etc", ")", "String", "compatchAnswer", "=", "FileUtil", ".", "compactPath", "(", "answer", ")", ";", "String", "compatchBaseDir", "=", "FileUtil", ".", "compactPath", "(", "baseDir", ")", ";", "if", "(", "!", "compatchAnswer", ".", "startsWith", "(", "compatchBaseDir", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "Cannot", "write", "file", "with", "name", ":", "\"", "+", "compatchAnswer", "+", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", ":", "\"", "+", "compatchBaseDir", ")", ";", "}", "}", "template", ".", "sendBody", "(", "\"", "file", ":", "//", "target", "/", "filelanguage", "?", "jailStartingDirectory", "=", "false", "&", "fileName", "=", "\"", "+", "expression", ",", "\"", "Hello", "World", "\"", ");", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "file", ";", "import", "org", ".", "apache", ".", "camel", ".", "ContextTestSupport", ";", "import", "org", ".", "apache", ".", "camel", ".", "Exchange", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "FileProducerJailStartingDirectoryTest", "extends", "ContextTestSupport", "{", "@", "Override", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "deleteDirectory", "(", "\"", "target", "/", "jail", "\"", ");", "super", ".", "setUp", "(", ");", "}", "@", "Test", "public", "void", "testWriteOutsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "0", ")", ";", "try", "{", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Hello", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "hello", ".", "txt", "\"", ");", "fail", "(", "\"", "Should", "have", "thrown", "exception", "\"", ");", "}", "catch", "(", "Exception", "e", ")", "{", "IllegalArgumentException", "iae", "=", "assertIsInstanceOf", "(", "IllegalArgumentException", ".", "class", ",", "e", ".", "getCause", "(", "))", ";", "assertTrue", "(", "iae", ".", "getMessage", "(", ").", "contains", "(", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", "\"", "))", ";", "}", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Test", "public", "void", "testWriteInsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Bye", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "outbox", "/", "bye", ".", "txt", "\"", ");", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "setHeader", "(", "Exchange", ".", "FILE_NAME", ",", "simple", "(", "\".", "./", "${", "file", ":", "name", "}", "\")", ")", ".", "to", "(", "\"", "file", ":", "target", "/", "jail", "/", "outbox", "\"", ")", ".", "to", "(", "\"", "mock", ":", "result", "\"", ");", "}", "}", ";", "}", "}", "@", "@", "-", "100", ",", "7", "+", "100", ",", "7", "@", "@", "with", "the", "following", "path", "and", "query", "parameters", ":", "=", "==", "=", "Query", "Parameters", "(", "110", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "122", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "118", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "String", "url", "=", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "filelanguage", "/", "foo", "?", "password", "=", "admin", "&", "jailStartingDirectory", "=", "false", "\"", ";", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "file", ".", "remote", ";", "import", "org", ".", "apache", ".", "camel", ".", "Exchange", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "FtpProducerJailStartingDirectoryTest", "extends", "FtpServerTestSupport", "{", "private", "String", "getFtpUrl", "(", ")", "{", "return", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "upload", "/", "jail", "?", "binary", "=", "false", "&", "password", "=", "admin", "&", "tempPrefix", "=", ".", "uploading", "\"", ";", "}", "@", "Test", "public", "void", "testWriteOutsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "0", ")", ";", "try", "{", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Hello", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "hello", ".", "txt", "\"", ");", "fail", "(", "\"", "Should", "have", "thrown", "exception", "\"", ");", "}", "catch", "(", "Exception", "e", ")", "{", "IllegalArgumentException", "iae", "=", "assertIsInstanceOf", "(", "IllegalArgumentException", ".", "class", ",", "e", ".", "getCause", "(", "))", ";", "assertTrue", "(", "iae", ".", "getMessage", "(", ").", "contains", "(", "\"", "as", "the", "filename", "is", "jailed", "to", "the", "starting", "directory", "\"", "))", ";", "}", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Test", "public", "void", "testWriteInsideStartingDirectory", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "result", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "start", "\"", ",", "\"", "Bye", "World", "\"", ",", "Exchange", ".", "FILE_NAME", ",", "\"", "jail", "/", "bye", ".", "txt", "\"", ");", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "setHeader", "(", "Exchange", ".", "FILE_NAME", ",", "simple", "(", "\".", "./", "${", "file", ":", "name", "}", "\")", ")", ".", "to", "(", "getFtpUrl", "(", "))", ".", "to", "(", "\"", "mock", ":", "result", "\"", ");", "}", "}", ";", "}", "}", "=", "==", "=", "Query", "Parameters", "(", "22", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "110", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "122", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "22", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean", "=", "==", "=", "Query", "Parameters", "(", "118", "parameters", ")", ":", "|", "*", "jailStartingDirectory", "*", "(", "producer", ")", "|", "Used", "for", "jailing", "(", "restricting", ")", "writing", "files", "to", "the", "starting", "directory", "(", "and", "sub", ")", "only", ".", "This", "is", "enabled", "by", "default", "to", "not", "allow", "Camel", "to", "write", "files", "to", "outside", "directories", "(", "to", "be", "more", "secured", "out", "of", "the", "box", ")", ".", "You", "can", "turn", "this", "off", "to", "allow", "writing", "files", "to", "directories", "outside", "the", "starting", "directory", ",", "such", "as", "parent", "or", "root", "folders", ".", "|", "true", "|", "boolean</s>=", "==", "=", "Query", "Parameters", "(", "86", "parameters", ")", ":", "if", "(", "value", "!", "=", "null", "&", "&", "value", "instanceof", "String", "&", "&", "StringHelper", ".", "hasStartToken", "(", "(", "String", ")", "value", ",", "\"", "simple", "\"", "))", "{", "template", ".", "sendBody", "(", "\"", "file", ":", "//", "target", "/", "filelanguage", "?", "fileName", "=", "\"", "+", "expression", ",", "\"", "Hello", "World", "\"", ");", "=", "==", "=", "Query", "Parameters", "(", "109", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "121", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "117", "parameters", ")", ":", "String", "url", "=", "\"", "ftp", ":", "//", "admin", "@", "localhost", ":", "\"", "+", "getPort", "(", ")", "+", "\"", "/", "filelanguage", "/", "foo", "?", "password", "=", "admin", "\"", ";", "=", "==", "=", "Query", "Parameters", "(", "21", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "109", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "121", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "21", "parameters", ")", ":", "=", "==", "=", "Query", "Parameters", "(", "117", "parameters", ")", ":"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "urb", "-", ">", "actual_length", ">", "0", "&", "&", "edge_port", "-", ">", "lsr_event", ")", "{</s>if", "(", "edge_port", "-", ">", "lsr_event", ")", "{"], "docstring_tokens": ["integer", "underflow"]}
{"contents": ["empty"], "code_tokens": ["=", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "READING", "DNS", "KEYS", "FROM", "USERSPACE", "=", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "Keys", "of", "dns_resolver", "type", "can", "be", "read", "from", "userspace", "using", "keyctl_read", "(", ")", "or", "\"", "keyctl", "read", "/", "print", "/", "pipe", "\"", ".", "kenter", "(", "\"%", "%%", "d", ",", "%", "s", ",", "'%", "*.", "*", "s", "'", ",%", "zu", "\"", ",", "key", "-", ">", "serial", ",", "key", "-", ">", "description", ",", "(", "int", ")", "datalen", ",", "(", "int", ")", "datalen", ",", "data", ",", "datalen", ")", ";", "/", "*", "*", "read", "the", "DNS", "data", "*", "-", "the", "key", "'", "s", "semaphore", "is", "read", "-", "locked", "*", "/", "static", "long", "dns_resolver_read", "(", "const", "struct", "key", "*", "key", ",", "char", "__user", "*", "buffer", ",", "size_t", "buflen", ")", "{", "if", "(", "key", "-", ">", "type_data", ".", "x", "[", "0", "]", ")", "return", "key", "-", ">", "type_data", ".", "x", "[", "0", "]", ";", "return", "user_read", "(", "key", ",", "buffer", ",", "buflen", ")", ";", "}", ".", "read", "=", "dns_resolver_read", ",</s>kenter", "(", "\"%", "%%", "d", ",", "%", "s", ",", "'%", "s", "'", ",%", "zu", "\"", ",", "key", "-", ">", "serial", ",", "key", "-", ">", "description", ",", "data", ",", "datalen", ")", ";", ".", "read", "=", "user_read", ","], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["int", "err", "=", "inet_csk", "(", "sk", ")", "->", "icsk_af_ops", "-", ">", "rebuild_header", "(", "sk", ")", ";</s>int", "err", "=", "inet_sk_rebuild_header", "(", "sk", ")", ";"], "docstring_tokens": ["memory", "corruptions"]}
{"contents": ["empty"], "code_tokens": ["<", "map", ":", "pipeline", "internal", "-", "only", "=", "\"", "true", "\"", ">", "<", "map", ":", "parameter", "name", "=", "\"", "expires", "\"", "value", "=", "\"", "access", "plus", "1", "hours", "\"", "/>", "<", "!-", "-", "Bypass", "the", "file", "extension", "check", "for", "the", "Mirage2", "theme", "'", "s", "scripts", "-", "dist", ".", "xml", "file", ".", "That", "way", ",", "we", "don", "'", "t", "have", "to", "whitelist", "all", ".", "xml", "files", "just", "to", "make", "JS", "loading", "work", ".", "-", "->", "<", "map", ":", "match", "pattern", "=", "\"", "themes", "/", "{", "global", ":", "theme", "-", "name", "}", "/", "scripts", "-", "dist", ".", "xml", "\"", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"", "scripts", "-", "dist", ".", "xml", "\"", ">", "<", "map", ":", "parameter", "name", "=", "\"", "bypass", "-", "whitelist", "\"", "value", "=", "\"", "true", "\"", "/>", "<", "/", "map", ":", "read", ">", "<", "/", "map", ":", "match", ">", "<", "/", "map", ":", "pipeline", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"{", "2", "}", "\"/", ">", "/", "**", "*", "The", "contents", "of", "this", "file", "are", "subject", "to", "the", "license", "and", "copyright", "*", "detailed", "in", "the", "LICENSE", "and", "NOTICE", "files", "at", "the", "root", "of", "the", "source", "*", "tree", "and", "available", "online", "at", "*", "*", "http", ":", "//", "www", ".", "dspace", ".", "org", "/", "license", "/", "*", "/", "src", ".", "toLowerCase", "(", ").", "contains", "(", "\":", "\")", "|", "|", "/", "/", "%", "3a", "=", "encoded", "colon", "(", ":)", "src", ".", "toLowerCase", "(", ").", "contains", "(", "\"%", "3a", "\"", ")", "|", "|", "/", "**", "*", "The", "contents", "of", "this", "file", "are", "subject", "to", "the", "license", "and", "copyright", "*", "detailed", "in", "the", "LICENSE", "and", "NOTICE", "files", "at", "the", "root", "of", "the", "source", "*", "tree", "and", "available", "online", "at", "*", "*", "http", ":", "//", "www", ".", "dspace", ".", "org", "/", "license", "/", "*", "/", "package", "org", ".", "dspace", ".", "app", ".", "xmlui", ".", "cocoon", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "org", ".", "apache", ".", "avalon", ".", "framework", ".", "configuration", ".", "Configurable", ";", "import", "org", ".", "apache", ".", "avalon", ".", "framework", ".", "parameters", ".", "Parameters", ";", "import", "org", ".", "apache", ".", "cocoon", ".", "ProcessingException", ";", "import", "org", ".", "apache", ".", "cocoon", ".", "ResourceNotFoundException", ";", "import", "org", ".", "apache", ".", "cocoon", ".", "caching", ".", "CacheableProcessingComponent", ";", "import", "org", ".", "apache", ".", "cocoon", ".", "environment", ".", "SourceResolver", ";", "import", "org", ".", "apache", ".", "commons", ".", "lang", ".", "StringUtils", ";", "import", "org", ".", "dspace", ".", "core", ".", "ConfigurationManager", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "/", "**", "*", "An", "XMLUI", "Theme", "Resource", "Reader", ",", "which", "ONLY", "allows", "for", "certain", "types", "of", "files", "*", "to", "be", "included", "in", "a", "themes", ".", "*", "*", "@", "author", "Tim", "Donohue", "*", "@", "author", "Andrea", "Schweer", "*", "/", "public", "class", "ThemeResourceReader", "extends", "SafeResourceReader", "implements", "CacheableProcessingComponent", ",", "Configurable", "{", "/", "/", "Default", "whitelist", "of", "file", "extensions", "that", "are", "allowed", "in", "an", "XMLUI", "theme", "protected", "String", "[", "]", "DEFAULT_WHITELIST", "=", "new", "String", "[", "]{", "\"", "css", "\"", ",", "\"", "js", "\"", ",", "\"", "json", "\"", ",", "\"", "gif", "\"", ",", "\"", "jpg", "\"", ",", "\"", "jpeg", "\"", ",", "\"", "png", "\"", ",", "\"", "ico", "\"", ",", "\"", "bmp", "\"", ",", "\"", "htm", "\"", ",", "\"", "html", "\"", ",", "\"", "svg", "\"", ",", "\"", "ttf", "\"", ",", "\"", "woff", "\"", "};", "@", "Override", "public", "void", "setup", "(", "SourceResolver", "resolver", ",", "Map", "objectModel", ",", "String", "src", ",", "Parameters", "par", ")", "throws", "ProcessingException", ",", "SAXException", ",", "IOException", "{", "/", "/", "If", "our", "XMLUI", "sitemap", "has", "specified", "to", "bypass", "the", "whitelist", "for", "this", "resource", ",", "/", "/", "then", "just", "let", "this", "through", "to", "the", "SafeResourceReader", "if", "(", "par", ".", "getParameterAsBoolean", "(", "\"", "bypass", "-", "whitelist", "\"", ",", "false", ")", ")", "{", "super", ".", "setup", "(", "resolver", ",", "objectModel", ",", "src", ",", "par", ")", ";", "return", ";", "}", "/", "/", "Otherwise", ",", "we", "'", "ll", "load", "our", "configured", "file", "-", "extension", "whitelist", "String", "whitelistProp", "=", "ConfigurationManager", ".", "getProperty", "(", "\"", "xmlui", ".", "theme", ".", "whitelist", "\"", ");", "String", "[", "]", "whitelist", ";", "if", "(", "StringUtils", ".", "isEmpty", "(", "whitelistProp", ")", ")", "{", "whitelist", "=", "DEFAULT_WHITELIST", ";", "}", "else", "{", "whitelist", "=", "whitelistProp", ".", "split", "(", "\",", "\")", ";", "}", "/", "/", "Check", "resource", "suffix", "against", "our", "whitelist", "for", "(", "String", "suffix", ":", "whitelist", ")", "{", "/", "/", "If", "it", "is", "in", "our", "whitelist", ",", "let", "it", "through", "to", "the", "SafeResourceReader", "if", "(", "src", "!", "=", "null", "&", "&", "src", ".", "toLowerCase", "(", ").", "endsWith", "(", "\".", "\"", "+", "suffix", ".", "trim", "(", "))", ")", "{", "super", ".", "setup", "(", "resolver", ",", "objectModel", ",", "src", ",", "par", ")", ";", "return", ";", "}", "}", "/", "/", "Finally", ",", "if", "the", "resource", "has", "a", "suffix", "that", "is", "NOT", "in", "our", "whitelist", ",", "block", "it", "throw", "new", "ResourceNotFoundException", "(", "\"", "Resource", "not", "found", "(", "\"", "+", "src", "+", "\"", ")\"", ");", "}", "}", "@", "@", "-", "188", ",", "6", "+", "188", ",", "7", "@", "@", "<", "map", ":", "reader", "name", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"", "org", ".", "dspace", ".", "app", ".", "xmlui", ".", "cocoon", ".", "ThemeResourceReader", "\"", "/>", "<", "!-", "-", "Redirect", "/", "block", "for", "DS", "-", "3094", "(", "security", "issue", ")", "for", "custom", "themes", "-", "->", "<", "!-", "-", "This", "ensures", "any", "custom", "themes", "are", "not", "affected", "by", "DS", "-", "3094", "by", "redirecting", "vulnerable", "URL", "paths", "to", "/", "error", "(", "which", "returns", "a", "404", "File", "Not", "Found", ")", ".", "Custom", "themes", "may", "still", "be", "affected", "by", "this", "issue", ",", "if", "they", "have", "not", "been", "updated", "to", "use", "ThemeResourceReader", "in", "all", "<", "map", ":", "read", ">", "settings", ".", "-", "->", "<", "map", ":", "match", "pattern", "=", "\"", "themes", "/", "**", ":*", "*\"", ">", "<", "map", ":", "redirect", "-", "to", "uri", "=", "\"{", "request", ":", "contextPath", "}", "/", "error", "\"", "permanent", "=", "\"", "yes", "\"", "/>", "<", "/", "map", ":", "match", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"", "themes", "/", "{", "1", "}", "\"/", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "type", "=", "\"", "ThemeResourceReader", "\"", "src", "=", "\"{", "2", "}", "\"/", ">", "#", "Themes", "only", "allow", "specific", "file", "formats", "(", "extensions", ")", "to", "be", "accessible", ",", "for", "security", "reasons", ".", "#", "While", "the", "default", "list", "should", "work", "for", "most", "sites", ",", "you", "may", "wish", "to", "customize", "it", ".", "The", "default", "#", "list", "is", "commented", "out", "below", ".", "To", "customize", ",", "just", "uncomment", "and", "add", "more", "file", "extensions", ".", "#", "xmlui", ".", "theme", ".", "whitelist", "=", "css", ",", "js", ",", "json", ",", "gif", ",", "jpg", ",", "jpeg", ",", "png", ",", "bmp", ",", "ico", ",", "htm", ",", "html", ",", "svg", ",", "ttf", ",", "woff</s><", "map", ":", "read", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "src", "=", "\"", "themes", "/", "{", "1", "}", "\"/", ">", "<", "map", ":", "read", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "src", "=", "\"{", "2", "}", "\"/", ">", "<", "map", ":", "read", "src", "=", "\"{", "2", "}", "\"/", ">"], "docstring_tokens": ["directory", "traversal"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "Report", "violation", "if", "chunk", "len", "overflows", "*", "/", "ch_end", "=", "(", "(", "__u8", "*", ")", "ch", ")", "+", "SCTP_PAD4", "(", "ntohs", "(", "ch", "-", ">", "length", ")", ");", "if", "(", "ch_end", ">", "skb_tail_pointer", "(", "skb", ")", ")", "return", "sctp_sf_violation_chunklen", "(", "net", ",", "ep", ",", "asoc", ",", "type", ",", "arg", ",", "commands", ")", ";</s>/", "*", "Report", "violation", "if", "chunk", "len", "overflows", "*", "/", "ch_end", "=", "(", "(", "__u8", "*", ")", "ch", ")", "+", "SCTP_PAD4", "(", "ntohs", "(", "ch", "-", ">", "length", ")", ");", "if", "(", "ch_end", ">", "skb_tail_pointer", "(", "skb", ")", ")", "return", "sctp_sf_violation_chunklen", "(", "net", ",", "ep", ",", "asoc", ",", "type", ",", "arg", ",", "commands", ")", ";"], "docstring_tokens": ["slab-out-of-bounds", "access"]}
{"contents": ["empty"], "code_tokens": ["QuotedStringTokenizer", ".", "quote", "(", "StringUtil", ".", "sanitizeXmlString", "(", "(", "e", ".", "getValue", "(", "))", "))", ")", "if", "(", "th", "!", "=", "null", ")", "try", "(", "StringWriter", "sw", "=", "new", "StringWriter", "(", ");", "PrintWriter", "pw", "=", "new", "PrintWriter", "(", "sw", ")", ")", "{", "th", ".", "printStackTrace", "(", "pw", ")", ";", "pw", ".", "flush", "(", ");", "write", "(", "writer", ",", "sw", ".", "getBuffer", "(", ").", "toString", "(", "))", ";", "/", "/", "sanitize", "}", "import", "org", ".", "eclipse", ".", "jetty", ".", "util", ".", "log", ".", "StacklessLogging", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "anyOf", ";", "static", "StacklessLogging", "stacklessLogging", ";", "stacklessLogging", "=", "new", "StacklessLogging", "(", "HttpChannel", ".", "class", ")", ";", "response", ".", "sendError", "(", "(", "Integer", ")", "request", ".", "getAttribute", "(", "RequestDispatcher", ".", "ERROR_STATUS_CODE", ")", ");", "int", "code", "=", "Integer", ".", "parseInt", "(", "target", ".", "substring", "(", "target", ".", "lastIndexOf", "(", "'/", "')", "+", "1", ")", ");", "String", "message", "=", "\"", "{\\", "n", "\\", "\"", "glossary", "\\", "\":", "{", "\\", "n", "\\", "\"", "title", "\\", "\":", "\\", "\"", "example", "\\", "\"\\", "n", "}", "\\", "n", "}", "\";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ")", ");", "String", "message", "=", "\"", "<!", "DOCTYPE", "glossary", "PUBLIC", "\\", "\"-", "//", "OASIS", "/", "/", "DTD", "DocBook", "V3", ".", "1", "/", "/", "EN", "\\", "\">", "\\", "n", "\"", "\"", "<", "glossary", ">", "\\", "n", "\"", "\"", "<", "title", ">", "example", "glossary", "<", "/", "title", ">", "\\", "n", "\"", "\"", "<", "/", "glossary", ">", "\";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ")", ");", "String", "message", "=", "\"", "<", "hr", "/", "><", "script", ">", "alert", "(", "42", ")", "</", "script", ">", "%", "3Cscript", "%", "3E", "\"", ";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ")", ");", "String", "message", "=", "\"", "Euro", "is", "&", "euro", ";", "and", "\\", "u20AC", "and", "%", "E2", "%", "82", "%", "AC", "\"", ";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ")", ");", "stacklessLogging", ".", "close", "(", ");", "Map", "jo", "=", "(", "Map", ")", "JSON", ".", "parse", "(", "response", ".", "getContent", "(", "))", ";", "String", "message", "=", "(", "String", ")", "jo", ".", "get", "(", "\"", "message", "\"", ");", "assertThat", "(", "\"", "message", "field", "\"", ",", "message", ",", "is", "(", "notNullValue", "(", "))", ");", "assertThat", "(", "\"", "message", "field", "\"", ",", "message", ",", "anyOf", "(", "not", "(", "containsString", "(", "\"<", "\")", "),", "not", "(", "containsString", "(", "\">", "\")", "))", ");", "assertThat", "(", "\"", "content", "\"", ",", "content", ",", "containsString", "(", "\"", "Euro", "is", "&", "amp", ";", "euro", ";", "and", "\\", "u20AC", "and", "%", "E2", "%", "82", "%", "AC", "\"", "))", ";</s>QuotedStringTokenizer", ".", "quote", "(", "(", "e", ".", "getValue", "(", "))", "))", "while", "(", "th", "!", "=", "null", ")", "StringWriter", "sw", "=", "new", "StringWriter", "(", ");", "PrintWriter", "pw", "=", "new", "PrintWriter", "(", "sw", ")", ";", "th", ".", "printStackTrace", "(", "pw", ")", ";", "pw", ".", "flush", "(", ");", "write", "(", "writer", ",", "sw", ".", "getBuffer", "(", ").", "toString", "(", "))", ";", "/", "/", "IMPORTANT", "STEP", "th", "=", "th", ".", "getCause", "(", ");", "response", ".", "sendError", "(", "((", "Integer", ")", "request", ".", "getAttribute", "(", "RequestDispatcher", ".", "ERROR_STATUS_CODE", ")", ").", "intValue", "(", "))", ";", "int", "code", "=", "Integer", ".", "valueOf", "(", "target", ".", "substring", "(", "target", ".", "lastIndexOf", "(", "'/", "')", "+", "1", ")", ");", "StringBuilder", "message", "=", "new", "StringBuilder", "(", ");", "message", ".", "append", "(", "\"{", "\\", "n", "\\", "\"", "glossary", "\\", "\":", "{", "\\", "n", "\\", "\"", "title", "\\", "\":", "\\", "\"", "example", "\\", "\"\\", "n", "}", "\\", "n", "}", "\")", ";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ".", "toString", "(", "))", ");", "StringBuilder", "message", "=", "new", "StringBuilder", "(", ");", "message", ".", "append", "(", "\"<", "!", "DOCTYPE", "glossary", "PUBLIC", "\\", "\"-", "//", "OASIS", "/", "/", "DTD", "DocBook", "V3", ".", "1", "/", "/", "EN", "\\", "\">", "\\", "n", "\"", ");", "message", ".", "append", "(", "\"", "<", "glossary", ">", "\\", "n", "\"", ");", "message", ".", "append", "(", "\"", "<", "title", ">", "example", "glossary", "<", "/", "title", ">", "\\", "n", "\"", ");", "message", ".", "append", "(", "\"", "<", "/", "glossary", ">", "\")", ";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ".", "toString", "(", "))", ");", "StringBuilder", "message", "=", "new", "StringBuilder", "(", ");", "message", ".", "append", "(", "\"<", "hr", "/", "><", "script", ">", "alert", "(", "42", ")", "</", "script", ">", "\")", ";", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ".", "toString", "(", "))", ");", "StringBuilder", "message", "=", "new", "StringBuilder", "(", ");", "message", ".", "append", "(", "\"", "Euro", "is", "&", "euro", ";", "and", "\\", "u20AC", "and", "%", "E2", "%", "82", "%", "AC", "\"", ");", "throw", "new", "ServletException", "(", "new", "RuntimeException", "(", "message", ".", "toString", "(", "))", ");", "Map", "<", "Object", ",", "Object", ">", "jo", "=", "(", "Map", ")", "JSON", ".", "parse", "(", "response", ".", "getContent", "(", "))", ";", "assertThat", "(", "\"", "message", "field", "\"", ",", "jo", ".", "get", "(", "\"", "message", "\"", "),", "is", "(", "notNullValue", "(", "))", ");", "assertThat", "(", "\"", "content", "\"", ",", "content", ",", "containsString", "(", "\"", "Euro", "is", "&", "euro", ";", "and", "\\", "u20AC", "and", "%", "E2", "%", "82", "%", "AC", "\"", "))", ";"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["responseContext", ".", "getHeaders", "(", ").", "putSingle", "(", "CorsHeaders", ".", "VARY", ",", "CorsHeaders", ".", "ORIGIN", ")", ";", "builder", ".", "header", "(", "CorsHeaders", ".", "VARY", ",", "CorsHeaders", ".", "ORIGIN", ")", ";", "public", "static", "final", "String", "VARY", "=", "\"", "Vary", "\"", ";</s>"], "docstring_tokens": ["http", "header", "injection"]}
{"contents": ["empty"], "code_tokens": ["String", "targetDirPath", "=", "toDir", ".", "getCanonicalPath", "(", ")", "+", "File", ".", "separator", ";", "if", "(", "!", "file", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "targetDirPath", ")", ")", "{", "throw", "new", "IOException", "(", "\"", "expanding", "\"", "+", "entry", ".", "getName", "(", ")", "+", "\"", "would", "create", "file", "outside", "of", "\"", "+", "toDir", ")", ";", "}", "String", "targetDirPath", "=", "unzipDir", ".", "getCanonicalPath", "(", ")", "+", "File", ".", "separator", ";", "if", "(", "!", "file", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "targetDirPath", ")", ")", "{", "throw", "new", "IOException", "(", "\"", "expanding", "\"", "+", "entry", ".", "getName", "(", ")", "+", "\"", "would", "create", "file", "outside", "of", "\"", "+", "unzipDir", ")", ";", "}", "String", "targetDirPath", "=", "outputDir", ".", "getCanonicalPath", "(", ")", "+", "File", ".", "separator", ";", "File", "outputFile", "=", "new", "File", "(", "outputDir", ",", "entry", ".", "getName", "(", "))", ";", "if", "(", "!", "outputFile", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "targetDirPath", ")", ")", "{", "throw", "new", "IOException", "(", "\"", "expanding", "\"", "+", "entry", ".", "getName", "(", ")", "+", "\"", "would", "create", "entry", "outside", "of", "\"", "+", "outputDir", ")", ";", "}", "import", "static", "org", ".", "junit", ".", "Assert", ".", "fail", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "/", "/", "make", "a", "simple", "zip", "/", "/", "successfully", "unzip", "it", "into", "an", "existing", "dir", ":", "}", "@", "Test", "(", "timeout", "=", "30000", ")", "public", "void", "testUnZip2", "(", ")", "throws", "IOException", "{", "setupDirs", "(", ");", "/", "/", "make", "a", "simple", "zip", "final", "File", "simpleZip", "=", "new", "File", "(", "del", ",", "FILE", ")", ";", "OutputStream", "os", "=", "new", "FileOutputStream", "(", "simpleZip", ")", ";", "try", "(", "ZipOutputStream", "tos", "=", "new", "ZipOutputStream", "(", "os", ")", ")", "{", "/", "/", "Add", "an", "entry", "that", "contains", "invalid", "filename", "ZipEntry", "ze", "=", "new", "ZipEntry", "(", "\".", "./", "foo", "\"", ");", "byte", "[", "]", "data", "=", "\"", "some", "-", "content", "\"", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ";", "ze", ".", "setSize", "(", "data", ".", "length", ")", ";", "tos", ".", "putNextEntry", "(", "ze", ")", ";", "tos", ".", "write", "(", "data", ")", ";", "tos", ".", "closeEntry", "(", ");", "tos", ".", "flush", "(", ");", "tos", ".", "finish", "(", ");", "}", "/", "/", "Unzip", "it", "into", "an", "existing", "dir", "try", "{", "FileUtil", ".", "unZip", "(", "simpleZip", ",", "tmp", ")", ";", "fail", "(", "\"", "unZip", "should", "throw", "IOException", ".", "\")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "GenericTestUtils", ".", "assertExceptionContains", "(", "\"", "would", "create", "file", "outside", "of", "\"", ",", "e", ")", ";", "}", "}</s>File", "outputFile", "=", "new", "File", "(", "outputDir", ",", "entry", ".", "getName", "(", "))", ";", "/", "/", "make", "sa", "simple", "zip", "/", "/", "make", "a", "simple", "tar", ":", "/", "/", "successfully", "untar", "it", "into", "an", "existing", "dir", ":", "}"], "docstring_tokens": ["zip", "slip"]}
{"contents": ["empty"], "code_tokens": ["-", "Libxml", ":", ".", "Fixed", "bug", "#", "64938", "(", "libxml_disable_entity_loader", "setting", "is", "shared", "between", "threads", ")", ".", "(", "Martin", "Jansen", ")", "/", "*", "Enable", "the", "entity", "loader", "by", "default", ".", "This", "ensure", "that", "*", "other", "threads", "/", "requests", "that", "might", "have", "disable", "the", "loader", "*", "do", "not", "affect", "the", "current", "request", ".", "*", "/", "LIBXML", "(", "entity_loader_disabled", ")", "=", "0", ";</s>-", "OpenSSL", ":"], "docstring_tokens": ["xml", "entity", "expansion", "(xee", ")"]}
{"contents": ["empty"], "code_tokens": ["/", "**", "Key", "of", "the", "global", "option", "to", "switch", "either", "off", "or", "on", "the", "access", "to", "external", "DTDs", "in", "the", "XML", "Validator", "for", "StreamSources", ".", "*", "Only", "effective", ",", "if", "not", "a", "custom", "schema", "factory", "is", "used", ".", "*/", "public", "static", "final", "String", "ACCESS_EXTERNAL_DTD", "=", "\"", "CamelXmlValidatorAccessExternalDTD", "\"", ";", "}", "if", "(", "!", "Boolean", ".", "parseBoolean", "(", "camelContext", ".", "getGlobalOptions", "(", ").", "get", "(", "ACCESS_EXTERNAL_DTD", ")", "))", "{", "try", "{", "factory", ".", "setProperty", "(", "XMLConstants", ".", "ACCESS_EXTERNAL_DTD", ",", "\"", "\")", ";", "}", "catch", "(", "SAXException", "e", ")", "{", "LOG", ".", "error", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "throw", "new", "IllegalStateException", "(", "e", ")", ";", "}", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "net", ".", "UnknownHostException", ";", "import", "org", ".", "apache", ".", "camel", ".", "ContextTestSupport", ";", "import", "org", ".", "apache", ".", "camel", ".", "ValidationException", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "apache", ".", "camel", ".", "processor", ".", "validation", ".", "SchemaReader", ";", "public", "abstract", "class", "ValidatorDtdAccessAbstractTest", "extends", "ContextTestSupport", "{", "protected", "MockEndpoint", "finallyEndpoint", ";", "protected", "MockEndpoint", "invalidEndpoint", ";", "protected", "MockEndpoint", "unknownHostExceptionEndpoint", ";", "protected", "MockEndpoint", "validEndpoint", ";", "protected", "String", "payloud", "=", "getPayloudPart", "(", "\"", "Hello", "world", "!", "\")", ";", "protected", "String", "ssrfPayloud", "=", "\"", "<!", "DOCTYPE", "roottag", "PUBLIC", "\\", "\"-", "//", "VSR", "/", "/", "PENTEST", "/", "/", "EN", "\\", "\"", "\\", "\"", "http", ":", "//", "notexisting", "/", "test", "\\", "\">", "\\", "n", "\"", "+", "payloud", ";", "protected", "String", "xxePayloud", "=", "\"", "<!", "DOCTYPE", "updateProfile", "[", "<!", "ENTITY", "file", "SYSTEM", "\\", "\"", "http", ":", "//", "notexistinghost", "/", "test", "\\", "\">", "]>", "\\", "n", "\"", "+", "getPayloudPart", "(", "\"&", "file", ";", "\")", ";", "private", "final", "boolean", "accessExternalDTD", ";", "public", "ValidatorDtdAccessAbstractTest", "(", "boolean", "accessExternalDTD", ")", "{", "this", ".", "accessExternalDTD", "=", "accessExternalDTD", ";", "}", "private", "String", "getPayloudPart", "(", "String", "bodyValue", ")", "{", "return", "\"", "<", "mail", "xmlns", "=", "'", "http", ":", "//", "foo", ".", "com", "/", "bar", "'", "><", "subject", ">", "Hey", "<", "/", "subject", ">", "<", "body", ">", "\"", "+", "bodyValue", "+", "\"", "</", "body", ">", "</", "mail", ">", "\";", "}", "@", "Override", "protected", "void", "setUp", "(", ")", "throws", "Exception", "{", "super", ".", "setUp", "(", ");", "validEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "valid", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "invalidEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "invalid", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "unknownHostExceptionEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "unknownHostException", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "finallyEndpoint", "=", "resolveMandatoryEndpoint", "(", "\"", "mock", ":", "finally", "\"", ",", "MockEndpoint", ".", "class", ")", ";", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "/", "/", "switch", "on", "DTD", "Access", "if", "(", "accessExternalDTD", ")", "{", "getContext", "(", ").", "getGlobalOptions", "(", ").", "put", "(", "SchemaReader", ".", "ACCESS_EXTERNAL_DTD", ",", "\"", "true", "\"", ");", "}", "from", "(", "\"", "direct", ":", "start", "\"", ")", ".", "doTry", "(", ")", ".", "to", "(", "\"", "validator", ":", "org", "/", "apache", "/", "camel", "/", "component", "/", "validator", "/", "schema", ".", "xsd", "\"", ")", ".", "to", "(", "\"", "mock", ":", "valid", "\"", ")", ".", "doCatch", "(", "ValidationException", ".", "class", ")", ".", "to", "(", "\"", "mock", ":", "invalid", "\"", ")", ".", "doCatch", "(", "UnknownHostException", ".", "class", ")", ".", "to", "(", "\"", "mock", ":", "unknownHostException", "\"", ")", ".", "doFinally", "(", ")", ".", "to", "(", "\"", "mock", ":", "finally", "\"", ").", "end", "(", ");", "}", "}", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "61", "@", "@", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "public", "class", "ValidatorDtdAccessOffTest", "extends", "ValidatorDtdAccessAbstractTest", "{", "public", "ValidatorDtdAccessOffTest", "(", ")", "{", "super", "(", "false", ")", ";", "}", "/", "**", "Tests", "that", "no", "external", "DTD", "call", "is", "executed", "for", "StringSource", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStringSource", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "ssrfPayloud", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "not", "executed", "for", "StreamSource", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStreamSource", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "ssrfPayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "XXE", "is", "not", "possible", "for", "StreamSource", ".", "*", "/", "public", "void", "testInvalidMessageXXESourceStream", "(", ")", "throws", "Exception", "{", "invalidEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "xxePayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "61", "@", "@", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "validator", ";", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "public", "class", "ValidatorDtdAccessOnTest", "extends", "ValidatorDtdAccessAbstractTest", "{", "public", "ValidatorDtdAccessOnTest", "(", ")", "{", "super", "(", "true", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "executed", "for", "StringSource", "by", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStringSource", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "ssrfPayloud", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "external", "DTD", "call", "is", "executed", "for", "StreamSourceby", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageWithExternalDTDStreamSource", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "ssrfPayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "/", "**", "Tests", "that", "XXE", "is", "possible", "for", "StreamSource", "by", "expecting", "an", "UnkonwHostException", ".", "*", "/", "public", "void", "testInvalidMessageXXESourceStream", "(", ")", "throws", "Exception", "{", "unknownHostExceptionEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "finallyEndpoint", ".", "expectedMessageCount", "(", "1", ")", ";", "InputStream", "is", "=", "new", "ByteArrayInputStream", "(", "xxePayloud", ".", "getBytes", "(", "StandardCharsets", ".", "UTF_8", ")", ");", "template", ".", "sendBody", "(", "\"", "direct", ":", "start", "\"", ",", "is", ")", ";", "MockEndpoint", ".", "assertIsSatisfied", "(", "validEndpoint", ",", "unknownHostExceptionEndpoint", ",", "finallyEndpoint", ")", ";", "}", "}</s>"], "docstring_tokens": ["xml", "external", "entity"]}
{"contents": ["empty"], "code_tokens": ["*", "Bootstrap", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "(", "v4", ".", "3", ".", "1", ")", ":", "util", ".", "js", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "1", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "2", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "3", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "4", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "5", "=", "'", "4", ".", "3", ".", "1", "'", ";", "/", "**", "*", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "-", "*", "Bootstrap", "(", "v4", ".", "3", ".", "1", ")", ":", "tools", "/", "sanitizer", ".", "js", "*", "Licensed", "under", "MIT", "(", "https", ":", "//", "github", ".", "com", "/", "twbs", "/", "bootstrap", "/", "blob", "/", "master", "/", "LICENSE", ")", "*", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "-", "*", "/", "var", "uriAttrs", "=", "[", "'", "background", "'", ",", "'", "cite", "'", ",", "'", "href", "'", ",", "'", "itemtype", "'", ",", "'", "longdesc", "'", ",", "'", "poster", "'", ",", "'", "src", "'", ",", "'", "xlink", ":", "href", "'", "];", "var", "ARIA_ATTRIBUTE_PATTERN", "=", "/", "^", "aria", "-", "[\\", "w", "-", "]*", "$/", "i", ";", "var", "DefaultWhitelist", "=", "{", "/", "/", "Global", "attributes", "allowed", "on", "any", "supplied", "element", "below", ".", "'", "*'", ":", "[", "'", "class", "'", ",", "'", "dir", "'", ",", "'", "id", "'", ",", "'", "lang", "'", ",", "'", "role", "'", ",", "ARIA_ATTRIBUTE_PATTERN", "]", ",", "a", ":", "[", "'", "target", "'", ",", "'", "href", "'", ",", "'", "title", "'", ",", "'", "rel", "'", "],", "area", ":", "[", "],", "b", ":", "[", "],", "br", ":", "[", "],", "col", ":", "[", "],", "code", ":", "[", "],", "div", ":", "[", "],", "em", ":", "[", "],", "hr", ":", "[", "],", "h1", ":", "[", "],", "h2", ":", "[", "],", "h3", ":", "[", "],", "h4", ":", "[", "],", "h5", ":", "[", "],", "h6", ":", "[", "],", "i", ":", "[", "],", "img", ":", "[", "'", "src", "'", ",", "'", "alt", "'", ",", "'", "title", "'", ",", "'", "width", "'", ",", "'", "height", "'", "],", "li", ":", "[", "],", "ol", ":", "[", "],", "p", ":", "[", "],", "pre", ":", "[", "],", "s", ":", "[", "],", "small", ":", "[", "],", "span", ":", "[", "],", "sub", ":", "[", "],", "sup", ":", "[", "],", "strong", ":", "[", "],", "u", ":", "[", "],", "ul", ":", "[", "]", "/", "**", "*", "A", "pattern", "that", "recognizes", "a", "commonly", "useful", "subset", "of", "URLs", "that", "are", "safe", ".", "*", "*", "Shoutout", "to", "Angular", "7", "https", ":", "//", "github", ".", "com", "/", "angular", "/", "angular", "/", "blob", "/", "7", ".", "2", ".", "4", "/", "packages", "/", "core", "/", "src", "/", "sanitization", "/", "url_sanitizer", ".", "ts", "*", "/", "}", ";", "var", "SAFE_URL_PATTERN", "=", "/", "^(", "?:", "(?", ":", "https", "?", "|", "mailto", "|", "ftp", "|", "tel", "|", "file", ")", ":|", "[^", "&:", "/?", "#]", "*(", "?:", "[/", "?#", "]|", "$)", ")/", "gi", ";", "/", "**", "*", "A", "pattern", "that", "matches", "safe", "data", "URLs", ".", "Only", "matches", "image", ",", "video", "and", "audio", "types", ".", "*", "*", "Shoutout", "to", "Angular", "7", "https", ":", "//", "github", ".", "com", "/", "angular", "/", "angular", "/", "blob", "/", "7", ".", "2", ".", "4", "/", "packages", "/", "core", "/", "src", "/", "sanitization", "/", "url_sanitizer", ".", "ts", "*", "/", "var", "DATA_URL_PATTERN", "=", "/", "^", "data", ":", "(?", ":", "image", "\\", "/(", "?:", "bmp", "|", "gif", "|", "jpeg", "|", "jpg", "|", "png", "|", "tiff", "|", "webp", ")", "|", "video", "\\", "/(", "?:", "mpeg", "|", "mp4", "|", "ogg", "|", "webm", ")", "|", "audio", "\\", "/(", "?:", "mp3", "|", "oga", "|", "ogg", "|", "opus", ")", ");", "base64", ",", "[", "a", "-", "z0", "-", "9", "+", "/]", "+=", "*$", "/", "i", ";", "function", "allowedAttribute", "(", "attr", ",", "allowedAttributeList", ")", "{", "var", "attrName", "=", "attr", ".", "nodeName", ".", "toLowerCase", "(", ");", "if", "(", "allowedAttributeList", ".", "indexOf", "(", "attrName", ")", "!", "==", "-", "1", ")", "{", "if", "(", "uriAttrs", ".", "indexOf", "(", "attrName", ")", "!", "==", "-", "1", ")", "{", "return", "Boolean", "(", "attr", ".", "nodeValue", ".", "match", "(", "SAFE_URL_PATTERN", ")", "|", "|", "attr", ".", "nodeValue", ".", "match", "(", "DATA_URL_PATTERN", ")", ");", "}", "return", "true", ";", "}", "var", "regExp", "=", "allowedAttributeList", ".", "filter", "(", "function", "(", "attrRegex", ")", "{", "return", "attrRegex", "instanceof", "RegExp", ";", "}", ");", "/", "/", "Check", "if", "a", "regular", "expression", "validates", "the", "attribute", ".", "for", "(", "var", "i", "=", "0", ",", "l", "=", "regExp", ".", "length", ";", "i", "<", "l", ";", "i", "+", "+)", "{", "if", "(", "attrName", ".", "match", "(", "regExp", "[", "i", "]", "))", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "function", "sanitizeHtml", "(", "unsafeHtml", ",", "whiteList", ",", "sanitizeFn", ")", "{", "if", "(", "unsafeHtml", ".", "length", "=", "==", "0", ")", "{", "return", "unsafeHtml", ";", "}", "if", "(", "sanitizeFn", "&", "&", "typeof", "sanitizeFn", "=", "==", "'", "function", "'", ")", "{", "return", "sanitizeFn", "(", "unsafeHtml", ")", ";", "}", "var", "domParser", "=", "new", "window", ".", "DOMParser", "(", ");", "var", "createdDocument", "=", "domParser", ".", "parseFromString", "(", "unsafeHtml", ",", "'", "text", "/", "html", "'", ");", "var", "whitelistKeys", "=", "Object", ".", "keys", "(", "whiteList", ")", ";", "var", "elements", "=", "[", "].", "slice", ".", "call", "(", "createdDocument", ".", "body", ".", "querySelectorAll", "(", "'*", "')", ");", "var", "_loop", "=", "function", "_loop", "(", "i", ",", "len", ")", "{", "var", "el", "=", "elements", "[", "i", "]", ";", "var", "elName", "=", "el", ".", "nodeName", ".", "toLowerCase", "(", ");", "if", "(", "whitelistKeys", ".", "indexOf", "(", "el", ".", "nodeName", ".", "toLowerCase", "(", "))", "=", "==", "-", "1", ")", "{", "el", ".", "parentNode", ".", "removeChild", "(", "el", ")", ";", "return", "\"", "continue", "\"", ";", "}", "var", "attributeList", "=", "[", "].", "slice", ".", "call", "(", "el", ".", "attributes", ")", ";", "var", "whitelistedAttributes", "=", "[", "].", "concat", "(", "whiteList", "[", "'*", "']", "|", "|", "[", "],", "whiteList", "[", "elName", "]", "|", "|", "[", "])", ";", "attributeList", ".", "forEach", "(", "function", "(", "attr", ")", "{", "if", "(", "!", "allowedAttribute", "(", "attr", ",", "whitelistedAttributes", ")", ")", "{", "el", ".", "removeAttribute", "(", "attr", ".", "nodeName", ")", ";", "}", "}", ");", "}", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "elements", ".", "length", ";", "i", "<", "len", ";", "i", "+", "+)", "{", "var", "_ret", "=", "_loop", "(", "i", ",", "len", ")", ";", "if", "(", "_ret", "=", "==", "\"", "continue", "\"", ")", "continue", ";", "}", "return", "createdDocument", ".", "body", ".", "innerHTML", ";", "}", "var", "VERSION", "$", "6", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "DISALLOWED_ATTRIBUTES", "=", "[", "'", "sanitize", "'", ",", "'", "whiteList", "'", ",", "'", "sanitizeFn", "'", "];", "boundary", ":", "'", "(", "string", "|", "element", ")", "',", "sanitize", ":", "'", "boolean", "'", ",", "sanitizeFn", ":", "'", "(", "null", "|", "function", ")", "',", "whiteList", ":", "'", "object", "'", "boundary", ":", "'", "scrollParent", "'", ",", "sanitize", ":", "true", ",", "sanitizeFn", ":", "null", ",", "whiteList", ":", "DefaultWhitelist", "if", "(", "this", ".", "config", ".", "html", ")", "{", "return", ";", "}", "if", "(", "this", ".", "config", ".", "html", ")", "{", "if", "(", "this", ".", "config", ".", "sanitize", ")", "{", "content", "=", "sanitizeHtml", "(", "content", ",", "this", ".", "config", ".", "whiteList", ",", "this", ".", "config", ".", "sanitizeFn", ")", ";", "}", "$", "element", ".", "html", "(", "content", ")", ";", "$", "element", ".", "text", "(", "content", ")", ";", "var", "dataAttributes", "=", "$", "(", "this", ".", "element", ")", ".", "data", "(", ");", "Object", ".", "keys", "(", "dataAttributes", ")", ".", "forEach", "(", "function", "(", "dataAttr", ")", "{", "if", "(", "DISALLOWED_ATTRIBUTES", ".", "indexOf", "(", "dataAttr", ")", "!", "==", "-", "1", ")", "{", "delete", "dataAttributes", "[", "dataAttr", "]", ";", "}", "}", ");", "config", "=", "_objectSpread", "(", "{}", ",", "this", ".", "constructor", ".", "Default", ",", "dataAttributes", ",", "typeof", "config", "=", "==", "'", "object", "'", "&", "&", "config", "?", "config", ":", "{", "})", ";", "if", "(", "config", ".", "sanitize", ")", "{", "config", ".", "template", "=", "sanitizeHtml", "(", "config", ".", "template", ",", "config", ".", "whiteList", ",", "config", ".", "sanitizeFn", ")", ";", "}", "var", "VERSION", "$", "7", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "8", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "9", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "VERSION", "$", "a", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "(", "v4", ".", "3", ".", "1", ")", ":", "index", ".", "js", "*", "Bootstrap", "alert", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "button", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "carousel", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "collapse", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "dropdown", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "modal", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "popover", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "scrollspy", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "tab", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "toast", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "*", "Bootstrap", "tooltip", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "/", "**", "*", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "-", "*", "Bootstrap", "(", "v4", ".", "3", ".", "1", ")", ":", "tools", "/", "sanitizer", ".", "js", "*", "Licensed", "under", "MIT", "(", "https", ":", "//", "github", ".", "com", "/", "twbs", "/", "bootstrap", "/", "blob", "/", "master", "/", "LICENSE", ")", "*", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "-", "*", "/", "var", "uriAttrs", "=", "[", "'", "background", "'", ",", "'", "cite", "'", ",", "'", "href", "'", ",", "'", "itemtype", "'", ",", "'", "longdesc", "'", ",", "'", "poster", "'", ",", "'", "src", "'", ",", "'", "xlink", ":", "href", "'", "];", "var", "ARIA_ATTRIBUTE_PATTERN", "=", "/", "^", "aria", "-", "[\\", "w", "-", "]*", "$/", "i", ";", "var", "DefaultWhitelist", "=", "{", "/", "/", "Global", "attributes", "allowed", "on", "any", "supplied", "element", "below", ".", "'", "*'", ":", "[", "'", "class", "'", ",", "'", "dir", "'", ",", "'", "id", "'", ",", "'", "lang", "'", ",", "'", "role", "'", ",", "ARIA_ATTRIBUTE_PATTERN", "]", ",", "a", ":", "[", "'", "target", "'", ",", "'", "href", "'", ",", "'", "title", "'", ",", "'", "rel", "'", "],", "area", ":", "[", "],", "b", ":", "[", "],", "br", ":", "[", "],", "col", ":", "[", "],", "code", ":", "[", "],", "div", ":", "[", "],", "em", ":", "[", "],", "hr", ":", "[", "],", "h1", ":", "[", "],", "h2", ":", "[", "],", "h3", ":", "[", "],", "h4", ":", "[", "],", "h5", ":", "[", "],", "h6", ":", "[", "],", "i", ":", "[", "],", "img", ":", "[", "'", "src", "'", ",", "'", "alt", "'", ",", "'", "title", "'", ",", "'", "width", "'", ",", "'", "height", "'", "],", "li", ":", "[", "],", "ol", ":", "[", "],", "p", ":", "[", "],", "pre", ":", "[", "],", "s", ":", "[", "],", "small", ":", "[", "],", "span", ":", "[", "],", "sub", ":", "[", "],", "sup", ":", "[", "],", "strong", ":", "[", "],", "u", ":", "[", "],", "ul", ":", "[", "]", "/", "**", "*", "A", "pattern", "that", "recognizes", "a", "commonly", "useful", "subset", "of", "URLs", "that", "are", "safe", ".", "*", "*", "Shoutout", "to", "Angular", "7", "https", ":", "//", "github", ".", "com", "/", "angular", "/", "angular", "/", "blob", "/", "7", ".", "2", ".", "4", "/", "packages", "/", "core", "/", "src", "/", "sanitization", "/", "url_sanitizer", ".", "ts", "*", "/", "}", ";", "var", "SAFE_URL_PATTERN", "=", "/", "^(", "?:", "(?", ":", "https", "?", "|", "mailto", "|", "ftp", "|", "tel", "|", "file", ")", ":|", "[^", "&:", "/?", "#]", "*(", "?:", "[/", "?#", "]|", "$)", ")/", "gi", ";", "/", "**", "*", "A", "pattern", "that", "matches", "safe", "data", "URLs", ".", "Only", "matches", "image", ",", "video", "and", "audio", "types", ".", "*", "*", "Shoutout", "to", "Angular", "7", "https", ":", "//", "github", ".", "com", "/", "angular", "/", "angular", "/", "blob", "/", "7", ".", "2", ".", "4", "/", "packages", "/", "core", "/", "src", "/", "sanitization", "/", "url_sanitizer", ".", "ts", "*", "/", "var", "DATA_URL_PATTERN", "=", "/", "^", "data", ":", "(?", ":", "image", "\\", "/(", "?:", "bmp", "|", "gif", "|", "jpeg", "|", "jpg", "|", "png", "|", "tiff", "|", "webp", ")", "|", "video", "\\", "/(", "?:", "mpeg", "|", "mp4", "|", "ogg", "|", "webm", ")", "|", "audio", "\\", "/(", "?:", "mp3", "|", "oga", "|", "ogg", "|", "opus", ")", ");", "base64", ",", "[", "a", "-", "z0", "-", "9", "+", "/]", "+=", "*$", "/", "i", ";", "function", "allowedAttribute", "(", "attr", ",", "allowedAttributeList", ")", "{", "var", "attrName", "=", "attr", ".", "nodeName", ".", "toLowerCase", "(", ");", "if", "(", "allowedAttributeList", ".", "indexOf", "(", "attrName", ")", "!", "==", "-", "1", ")", "{", "if", "(", "uriAttrs", ".", "indexOf", "(", "attrName", ")", "!", "==", "-", "1", ")", "{", "return", "Boolean", "(", "attr", ".", "nodeValue", ".", "match", "(", "SAFE_URL_PATTERN", ")", "|", "|", "attr", ".", "nodeValue", ".", "match", "(", "DATA_URL_PATTERN", ")", ");", "}", "return", "true", ";", "}", "var", "regExp", "=", "allowedAttributeList", ".", "filter", "(", "function", "(", "attrRegex", ")", "{", "return", "attrRegex", "instanceof", "RegExp", ";", "}", ");", "/", "/", "Check", "if", "a", "regular", "expression", "validates", "the", "attribute", ".", "for", "(", "var", "i", "=", "0", ",", "l", "=", "regExp", ".", "length", ";", "i", "<", "l", ";", "i", "+", "+)", "{", "if", "(", "attrName", ".", "match", "(", "regExp", "[", "i", "]", "))", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "function", "sanitizeHtml", "(", "unsafeHtml", ",", "whiteList", ",", "sanitizeFn", ")", "{", "if", "(", "unsafeHtml", ".", "length", "=", "==", "0", ")", "{", "return", "unsafeHtml", ";", "}", "if", "(", "sanitizeFn", "&", "&", "typeof", "sanitizeFn", "=", "==", "'", "function", "'", ")", "{", "return", "sanitizeFn", "(", "unsafeHtml", ")", ";", "}", "var", "domParser", "=", "new", "window", ".", "DOMParser", "(", ");", "var", "createdDocument", "=", "domParser", ".", "parseFromString", "(", "unsafeHtml", ",", "'", "text", "/", "html", "'", ");", "var", "whitelistKeys", "=", "Object", ".", "keys", "(", "whiteList", ")", ";", "var", "elements", "=", "[", "].", "slice", ".", "call", "(", "createdDocument", ".", "body", ".", "querySelectorAll", "(", "'*", "')", ");", "var", "_loop", "=", "function", "_loop", "(", "i", ",", "len", ")", "{", "var", "el", "=", "elements", "[", "i", "]", ";", "var", "elName", "=", "el", ".", "nodeName", ".", "toLowerCase", "(", ");", "if", "(", "whitelistKeys", ".", "indexOf", "(", "el", ".", "nodeName", ".", "toLowerCase", "(", "))", "=", "==", "-", "1", ")", "{", "el", ".", "parentNode", ".", "removeChild", "(", "el", ")", ";", "return", "\"", "continue", "\"", ";", "}", "var", "attributeList", "=", "[", "].", "slice", ".", "call", "(", "el", ".", "attributes", ")", ";", "var", "whitelistedAttributes", "=", "[", "].", "concat", "(", "whiteList", "[", "'*", "']", "|", "|", "[", "],", "whiteList", "[", "elName", "]", "|", "|", "[", "])", ";", "attributeList", ".", "forEach", "(", "function", "(", "attr", ")", "{", "if", "(", "!", "allowedAttribute", "(", "attr", ",", "whitelistedAttributes", ")", ")", "{", "el", ".", "removeAttribute", "(", "attr", ".", "nodeName", ")", ";", "}", "}", ");", "}", ";", "for", "(", "var", "i", "=", "0", ",", "len", "=", "elements", ".", "length", ";", "i", "<", "len", ";", "i", "+", "+)", "{", "var", "_ret", "=", "_loop", "(", "i", ",", "len", ")", ";", "if", "(", "_ret", "=", "==", "\"", "continue", "\"", ")", "continue", ";", "}", "return", "createdDocument", ".", "body", ".", "innerHTML", ";", "}", "var", "VERSION", "=", "'", "4", ".", "3", ".", "1", "'", ";", "var", "DISALLOWED_ATTRIBUTES", "=", "[", "'", "sanitize", "'", ",", "'", "whiteList", "'", ",", "'", "sanitizeFn", "'", "];", "boundary", ":", "'", "(", "string", "|", "element", ")", "',", "sanitize", ":", "'", "boolean", "'", ",", "sanitizeFn", ":", "'", "(", "null", "|", "function", ")", "',", "whiteList", ":", "'", "object", "'", "boundary", ":", "'", "scrollParent", "'", ",", "sanitize", ":", "true", ",", "sanitizeFn", ":", "null", ",", "whiteList", ":", "DefaultWhitelist", "if", "(", "this", ".", "config", ".", "html", ")", "{", "return", ";", "}", "if", "(", "this", ".", "config", ".", "html", ")", "{", "if", "(", "this", ".", "config", ".", "sanitize", ")", "{", "content", "=", "sanitizeHtml", "(", "content", ",", "this", ".", "config", ".", "whiteList", ",", "this", ".", "config", ".", "sanitizeFn", ")", ";", "}", "$", "element", ".", "html", "(", "content", ")", ";", "$", "element", ".", "text", "(", "content", ")", ";", "var", "dataAttributes", "=", "$", "(", "this", ".", "element", ")", ".", "data", "(", ");", "Object", ".", "keys", "(", "dataAttributes", ")", ".", "forEach", "(", "function", "(", "dataAttr", ")", "{", "if", "(", "DISALLOWED_ATTRIBUTES", ".", "indexOf", "(", "dataAttr", ")", "!", "==", "-", "1", ")", "{", "delete", "dataAttributes", "[", "dataAttr", "]", ";", "}", "}", ");", "config", "=", "_objectSpread", "(", "{}", ",", "this", ".", "constructor", ".", "Default", ",", "dataAttributes", ",", "typeof", "config", "=", "==", "'", "object", "'", "&", "&", "config", "?", "config", ":", "{", "})", ";", "if", "(", "config", ".", "sanitize", ")", "{", "config", ".", "template", "=", "sanitizeHtml", "(", "config", ".", "template", ",", "config", ".", "whiteList", ",", "config", ".", "sanitizeFn", ")", ";", "}", "*", "Bootstrap", "util", ".", "js", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "(", "v4", ".", "3", ".", "1", ")", ":", "util", ".", "js", "*", "Bootstrap", "Grid", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "Reboot", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "v4", ".", "3", ".", "1", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "BOOTSTRAP_SHA", "=", "'", "8fa0d3010112dca5dd6dd501173415856001ba8b", "'</s>*", "Bootstrap", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "(", "v4", ".", "3", ".", "0", ")", ":", "util", ".", "js", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "1", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "2", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "3", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "4", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "5", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "6", "=", "'", "4", ".", "3", ".", "0", "'", ";", "boundary", ":", "'", "(", "string", "|", "element", ")", "'", "boundary", ":", "'", "scrollParent", "'", "var", "html", "=", "this", ".", "config", ".", "html", ";", "if", "(", "html", ")", "{", "$", "element", "[", "html", "?", "'", "html", "'", ":", "'", "text", "'", "](", "content", ")", ";", "config", "=", "_objectSpread", "(", "{}", ",", "this", ".", "constructor", ".", "Default", ",", "$", "(", "this", ".", "element", ")", ".", "data", "(", "),", "typeof", "config", "=", "==", "'", "object", "'", "&", "&", "config", "?", "config", ":", "{", "})", ";", "var", "VERSION", "$", "7", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "8", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "9", "=", "'", "4", ".", "3", ".", "0", "'", ";", "var", "VERSION", "$", "a", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "(", "v4", ".", "3", ".", "0", ")", ":", "index", ".", "js", "*", "Bootstrap", "alert", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "button", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "carousel", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "collapse", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "dropdown", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "modal", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "popover", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "scrollspy", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "tab", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "toast", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "*", "Bootstrap", "tooltip", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "var", "VERSION", "=", "'", "4", ".", "3", ".", "0", "'", ";", "boundary", ":", "'", "(", "string", "|", "element", ")", "'", "boundary", ":", "'", "scrollParent", "'", "var", "html", "=", "this", ".", "config", ".", "html", ";", "if", "(", "html", ")", "{", "$", "element", "[", "html", "?", "'", "html", "'", ":", "'", "text", "'", "](", "content", ")", ";", "config", "=", "_objectSpread", "(", "{}", ",", "this", ".", "constructor", ".", "Default", ",", "$", "(", "this", ".", "element", ")", ".", "data", "(", "),", "typeof", "config", "=", "==", "'", "object", "'", "&", "&", "config", "?", "config", ":", "{", "})", ";", "*", "Bootstrap", "util", ".", "js", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "(", "v4", ".", "3", ".", "0", ")", ":", "util", ".", "js", "*", "Bootstrap", "Grid", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "Reboot", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "*", "Bootstrap", "v4", ".", "3", ".", "0", "(", "https", ":", "//", "getbootstrap", ".", "com", "/", ")", "$", "rfs", "-", "is", "-", "included", ":", "false", "!", "default", ";", "@", "if", "$", "rfs", "-", "is", "-", "included", "{", "@", "warn", "\"", "Watch", "out", ",", "RFS", "is", "included", "more", "than", "once", "!", "\";", "}", "$", "rfs", "-", "is", "-", "included", ":", "true", ";", "@", "@", "-", "2", ",", "5", "+", "2", ",", "5", "@", "@", "BOOTSTRAP_SHA", "=", "'", "1ded0d6a4eefb7daca62c44e4e735aec200f0b6f", "'"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["packet_len", "=", "min", "(", "count", ",", "socket_packet", "-", ">", "icmp_len", ")", ";", "error", "=", "copy_to_user", "(", "buf", ",", "&", "socket_packet", "-", ">", "icmp_packet", ",", "packet_len", ")", ";</s>error", "=", "copy_to_user", "(", "buf", ",", "&", "socket_packet", "-", ">", "icmp_packet", ",", "socket_packet", "-", ">", "icmp_len", ")", ";", "packet_len", "=", "socket_packet", "-", ">", "icmp_len", ";"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["int", "hdrincl", ";", "/", "*", "hdrincl", "should", "be", "READ_ONCE", "(", "inet", "-", ">", "hdrincl", ")", "*", "but", "READ_ONCE", "(", ")", "doesn", "'", "t", "work", "with", "bit", "fields", "*", "/", "hdrincl", "=", "inet", "-", ">", "hdrincl", ";", "if", "(", "hdrincl", ")", "hdrincl", "?", "IPPROTO_RAW", ":", "sk", "-", ">", "sk_protocol", ",", "(", "hdrincl", "?", "FLOWI_FLAG_KNOWN_NH", ":", "0", ")", ",", "if", "(", "!", "hdrincl", ")", "{", "if", "(", "hdrincl", ")</s>if", "(", "inet", "-", ">", "hdrincl", ")", "inet", "-", ">", "hdrincl", "?", "IPPROTO_RAW", ":", "sk", "-", ">", "sk_protocol", ",", "(", "inet", "-", ">", "hdrincl", "?", "FLOWI_FLAG_KNOWN_NH", ":", "0", ")", ",", "if", "(", "!", "inet", "-", ">", "hdrincl", ")", "{", "if", "(", "inet", "-", ">", "hdrincl", ")"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "newconntrack", "=", "=", "SCTP_CONNTRACK_NONE", "|", "|", "newconntrack", "=", "=", "SCTP_CONNTRACK_MAX", ")", "{</s>if", "(", "newconntrack", "=", "=", "SCTP_CONNTRACK_MAX", ")", "{"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["done", ":</s>done", ":"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "out", ",", "0", ",", "sizeof", "(", "out", ")", ");</s>"], "docstring_tokens": ["stack", "leak"]}
{"contents": ["empty"], "code_tokens": ["/", "/", "DASHBUILDE", "-", "113", ":", "SQL", "Injection", "on", "data", "set", "lookup", "filters", "String", "escapedParam", "=", "param", ".", "replaceAll", "(", "\"'", "\",", "\"", "''", "\")", ";", "return", "\"", "'\"", "+", "escapedParam", "+", "\"", "'\"", ";", "/", "*", "*", "Copyright", "2016", "Red", "Hat", ",", "Inc", ".", "and", "/", "or", "its", "affiliates", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "*", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "dashbuilder", ".", "dataprovider", ".", "sql", ";", "import", "org", ".", "dashbuilder", ".", "dataset", ".", "DataSet", ";", "import", "org", ".", "dashbuilder", ".", "dataset", ".", "DataSetGroupTest", ";", "import", "org", ".", "dashbuilder", ".", "dataset", ".", "DataSetLookupFactory", ";", "import", "org", ".", "dashbuilder", ".", "dataset", ".", "filter", ".", "FilterFactory", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "junit", ".", "runner", ".", "RunWith", ";", "import", "org", ".", "mockito", ".", "Mock", ";", "import", "org", ".", "mockito", ".", "runners", ".", "MockitoJUnitRunner", ";", "import", "org", ".", "slf4j", ".", "Logger", ";", "import", "static", "org", ".", "dashbuilder", ".", "dataset", ".", "ExpenseReportsData", ".", "*;", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "*;", "@", "RunWith", "(", "MockitoJUnitRunner", ".", "class", ")", "public", "class", "SQLInjectionAttacksTest", "extends", "SQLDataSetTestBase", "{", "@", "Mock", "Logger", "logger", ";", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "super", ".", "setUp", "(", ");", "sqlDataSetProvider", ".", "log", "=", "logger", ";", "doAnswer", "(", "invocationOnMock", "-", ">", "{", "String", "sql", "=", "(", "String", ")", "invocationOnMock", ".", "getArguments", "(", ")[", "0", "]", ";", "System", ".", "out", ".", "println", "(", "sql", ")", ";", "return", "null", ";", "}", ").", "when", "(", "logger", ")", ".", "debug", "(", "anyString", "(", "))", ";", "}", "@", "Override", "public", "void", "testAll", "(", ")", "throws", "Exception", "{", "testStringFilterInjection", "(", ");", "}", "public", "void", "testStringFilterInjection", "(", ")", "throws", "Exception", "{", "DataSet", "result", "=", "dataSetManager", ".", "lookupDataSet", "(", "DataSetLookupFactory", ".", "newDataSetLookupBuilder", "(", ")", ".", "dataset", "(", "DataSetGroupTest", ".", "EXPENSE_REPORTS", ")", ".", "filter", "(", "COLUMN_EMPLOYEE", ",", "FilterFactory", ".", "equalsTo", "(", "\"", "David", "'", "OR", "EMPLOYEE", "!", "=", "'", "Toni", "\"", "))", ".", "buildLookup", "(", "))", ";", "assertEquals", "(", "result", ".", "getRowCount", "(", "),", "0", ")", ";", "result", "=", "dataSetManager", ".", "lookupDataSet", "(", "DataSetLookupFactory", ".", "newDataSetLookupBuilder", "(", ")", ".", "dataset", "(", "DataSetGroupTest", ".", "EXPENSE_REPORTS", ")", ".", "filter", "(", "COLUMN_EMPLOYEE", ",", "FilterFactory", ".", "equalsTo", "(", "\"", "David", "\\", "\"", "OR", "EMPLOYEE", "!", "=", "\\", "\"", "Toni", "\"", "))", ".", "buildLookup", "(", "))", ";", "assertEquals", "(", "result", ".", "getRowCount", "(", "),", "0", ")", ";", "result", "=", "dataSetManager", ".", "lookupDataSet", "(", "DataSetLookupFactory", ".", "newDataSetLookupBuilder", "(", ")", ".", "dataset", "(", "DataSetGroupTest", ".", "EXPENSE_REPORTS", ")", ".", "filter", "(", "COLUMN_EMPLOYEE", ",", "FilterFactory", ".", "equalsTo", "(", "\"", "David", "`", "OR", "EMPLOYEE", "!", "=", "`", "Toni", "\"", "))", ".", "buildLookup", "(", "))", ";", "assertEquals", "(", "result", ".", "getRowCount", "(", "),", "0", ")", ";", "}", "@", "Test", "public", "void", "testDropTable", "(", ")", "throws", "Exception", "{", "DataSet", "result", "=", "dataSetManager", ".", "lookupDataSet", "(", "DataSetLookupFactory", ".", "newDataSetLookupBuilder", "(", ")", ".", "dataset", "(", "DataSetGroupTest", ".", "EXPENSE_REPORTS", ")", ".", "filter", "(", "COLUMN_EMPLOYEE", ",", "FilterFactory", ".", "equalsTo", "(", "\"", "David", "'", ";", "DROP", "TABLE", "'", "EXPENSE_REPORTS", ";", "SELECT", "'", "a", "'", "=", "'", "a", "\"", "))", ".", "buildLookup", "(", "))", ";", "result", "=", "dataSetManager", ".", "lookupDataSet", "(", "DataSetLookupFactory", ".", "newDataSetLookupBuilder", "(", ")", ".", "dataset", "(", "DataSetGroupTest", ".", "EXPENSE_REPORTS", ")", ".", "buildLookup", "(", "))", ";", "assertEquals", "(", "result", ".", "getRowCount", "(", "),", "50", ")", ";", "}", "}", "@", "@", "-", "37", ",", "6", "+", "37", ",", "7", "@", "@", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "sqlTestList", ".", "add", "(", "setUp", "(", "new", "SQLInjectionAttacksTest", "(", "))", ");</s>return", "\"", "'\"", "+", "param", "+", "\"", "'\"", ";"], "docstring_tokens": ["sql", "injection"]}
{"contents": ["empty"], "code_tokens": ["return", "ret", "<", "0", "?", "ret", ":", "-", "EIO", ";</s>return", "ret", "<", "=", "0", "?", "ret", ":", "-", "EIO", ";"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "be16_to_cpu", "(", "tmp", ".", "thread", ".", "nodeName", ".", "length", ")", ">", "255", ")", "{", "printk", "(", "KERN_ERR", "\"", "hfs", ":", "catalog", "name", "length", "corrupted", "\\", "n", "\"", ");", "return", "-", "EIO", ";", "}</s>"], "docstring_tokens": ["a", "buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "img", "src", "=", "\"", "images", "/", "NexusRepoMngr_horiz_white", "+", "color", "@", "2x", ".", "png", "\"", "alt", "=", "\"", "Sonatype", "Nexus", "\"", "class", "=", "\"", "nxrm", "-", "logo", "\"", ">", "#", "header", ".", "nxrm", "-", "logo", "{", "height", ":", "50px", ";", "padding", ":", "7px", "0", "0", "10px", ";", "}", ".", "welcome", "-", "logo", "{", "height", ":", "98px", ";", "width", ":", "650px", ";", "}", "msg", ":", "Ext", ".", "util", ".", "Format", ".", "htmlEncode", "(", "displayMessage", ")", ",", "style", ":", "'", "padding", "-", "top", ":", "15px", ";", "'", "var", "welcomeMsg", "=", "'", "<", "p", "style", "=", "\"", "text", "-", "align", ":", "center", ";", "\">", "<", "a", "href", "=", "\"", "http", ":", "//", "nexus", ".", "sonatype", ".", "org", "\"", "target", "=", "\"", "new", "\"", "><", "img", "src", "=", "\"", "images", "/", "NexusRepoMngr_withSonatype", "@", "3x", ".", "png", "\"", "alt", "=", "\"", "Welcome", "to", "the", "Nexus", "Repository", "Manager", "\"", "class", "=", "\"", "welcome", "-", "logo", "\"", "><", "/", "a", ">", "</", "p", ">", "';", "html", ":", "'", "<", "div", ">", "'", "+", "welcomeMsg", "+", "'", "</", "div", ">", "'", "html", ":", "'", "<", "div", ">", "<", "br", "/", "><", "p", ">", "You", "may", "browse", "the", "repositories", "using", "the", "options", "on", "the", "left", ".", "</", "p", ">", "</", "div", ">", "'", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "if", "(", "commandLineExecutor", ".", "exec", "(", "path", ",", "\"", "--", "version", "\"", ",", "baos", ",", "baos", ")", "=", "=", "0", ")", "{", "catch", "(", "IllegalAccessException", "e", ")", "{", "log", ".", "debug", "(", "\"", "path", "supplied", "{", "}", "not", "allowed", "to", "run", "\"", ",", "path", ",", "e", ")", ";", "message", ".", "append", "(", "and", ")", ".", "append", "(", "\"\\", "\"\"", ").", "append", "(", "type", ")", ".", "append", "(", "\"\\", "\"", "not", "allowed", "\"", ");", "verificationLog", ".", "append", "(", "new", "String", "(", "baos", ".", "toByteArray", "(", "))", ");", "verificationLog", ".", "append", "(", "e", ".", "getMessage", "(", "))", ".", "append", "(", "NL", ")", ";", "}", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "javax", ".", "inject", ".", "Inject", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "configuration", ".", "application", ".", "ApplicationDirectories", ";", "import", "static", "java", ".", "util", ".", "Arrays", ".", "stream", ";", "import", "static", "java", ".", "util", ".", "stream", ".", "Collectors", ".", "toSet", ";", "private", "final", "Set", "<", "String", ">", "allowedExecutables", "=", "new", "HashSet", "<", ">(", ");", "private", "final", "ApplicationDirectories", "applicationDirectories", ";", "@", "Inject", "public", "CommandLineExecutor", "(", "final", "ApplicationDirectories", "applicationDirectories", ",", "@", "Named", "(", "\"$", "{", "yum", ".", "cli", ".", "allowed", ":", "-", "createrepo", ",", "mergerepo", "}", "\")", "final", "String", "allowedExecutables", ")", "{", "this", ".", "applicationDirectories", "=", "applicationDirectories", ";", "this", ".", "allowedExecutables", ".", "addAll", "(", "stream", "(", "allowedExecutables", ".", "split", "(", "\",", "\")", ").", "map", "(", "String", ":", ":", "trim", ")", ".", "collect", "(", "toSet", "(", "))", ");", "}", "public", "int", "exec", "(", "String", "command", ",", "String", "params", ")", "throws", "IOException", ",", "IllegalAccessException", "params", ",", "public", "int", "exec", "(", "final", "String", "command", ",", "String", "params", ",", "OutputStream", "out", ",", "OutputStream", "err", ")", "throws", "IOException", ",", "IllegalAccessException", "String", "cleanCommand", "=", "getCleanCommand", "(", "command", ",", "params", ")", ";", "if", "(", "cleanCommand", "=", "=", "null", ")", "{", "throw", "new", "IllegalAccessException", "(", "\"", "Attempt", "to", "execute", "unsupported", "executable", "\"", "+", "command", ")", ";", "}", "LOG", ".", "debug", "(", "\"", "Execute", "command", ":", "{", "}\"", ",", "cleanCommand", ")", ";", "CommandLine", "cmdLine", "=", "CommandLine", ".", "parse", "(", "cleanCommand", ")", ";", "private", "String", "getCleanCommand", "(", "String", "command", ",", "String", "params", ")", "{", "if", "(", "allowedExecutables", ".", "contains", "(", "command", ")", ")", "{", "return", "command", "+", "\"", "\"", "+", "params", ";", "}", "File", "file", "=", "new", "File", "(", "command", ")", ";", "if", "(", "file", ".", "getAbsolutePath", "(", ").", "startsWith", "(", "applicationDirectories", ".", "getWorkDirectory", "(", ").", "getAbsolutePath", "(", "))", ")", "{", "LOG", ".", "debug", "(", "\"", "Attempt", "to", "execute", "command", "with", "illegal", "path", "{", "}\"", ",", "file", ".", "getAbsolutePath", "(", "))", ";", "return", "null", ";", "}", "if", "(", "!", "allowedExecutables", ".", "contains", "(", "file", ".", "getName", "(", "))", ")", "{", "LOG", ".", "debug", "(", "\"", "Attempt", "to", "execute", "illegal", "command", "{", "}\"", ",", "file", ".", "getAbsolutePath", "(", "))", ";", "return", "null", ";", "}", "return", "file", ".", "getAbsolutePath", "(", ")", "+", "\"", "\"", "+", "params", ";", "}", "import", "org", ".", "sonatype", ".", "nexus", ".", "proxy", ".", "ResourceStoreRequest", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "proxy", ".", "attributes", ".", "inspectors", ".", "DigestCalculatingInspector", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "proxy", ".", "item", ".", "StorageItem", ";", "private", "final", "DigestCalculatingInspector", "digestCalculatingInspector", ";", "final", "CommandLineExecutor", "commandLineExecutor", ",", "final", "DigestCalculatingInspector", "digestCalculatingInspector", ")", "this", ".", "digestCalculatingInspector", "=", "digestCalculatingInspector", ";", "commandLineExecutor", ".", "exec", "(", "yumRegistry", ".", "getCreaterepoPath", "(", "),", "buildCreateRepositoryParams", "(", "rpmListFile", ")", ");", "StorageItem", "item", "=", "repository", ".", "retrieveItem", "(", "new", "ResourceStoreRequest", "(", "\"/", "\"", "+", "PATH_OF_REPOMD_XML", ")", ");", "if", "(", "item", "!", "=", "null", ")", "{", "digestCalculatingInspector", ".", "processStorageItem", "(", "item", ")", ";", "repository", ".", "getAttributesHandler", "(", ").", "storeAttributes", "(", "item", ")", ";", "}", "}", "catch", "(", "IllegalAccessException", "e", ")", "{", "String", "msg", "=", "String", ".", "format", "(", "\"", "Yum", "metadata", "generation", "failed", ",", "createrepo", "path", "%", "s", "is", "using", "executable", "that", "is", "not", "allowed", ".", "\",", "yumRegistry", ".", "getCreaterepoPath", "(", "))", ";", "LOG", ".", "error", "(", "msg", ",", "e", ")", ";", "throw", "new", "IOException", "(", "\"", "Yum", "metadata", "generation", "failed", "\"", ",", "e", ")", ";", "private", "String", "buildCreateRepositoryParams", "(", "File", "packageList", ")", "{", "StringBuilder", "params", "=", "new", "StringBuilder", "(", ");", "params", ".", "append", "(", "\"", "-", "-", "update", "\"", ");", "params", ".", "append", "(", "\"", "-", "-", "verbose", "-", "-", "no", "-", "database", "\"", ");", "params", ".", "append", "(", "\"", "-", "-", "outputdir", "\"", ").", "append", "(", "getRepoDir", "(", ").", "getAbsolutePath", "(", "))", ";", "params", ".", "append", "(", "\"", "-", "-", "pkglist", "\"", ").", "append", "(", "packageList", ".", "getAbsolutePath", "(", "))", ";", "params", ".", "append", "(", "\"", "-", "-", "cachedir", "\"", ").", "append", "(", "createCacheDir", "(", ").", "getAbsolutePath", "(", "))", ";", "params", ".", "append", "(", "\"", "-", "-", "groupfile", "\"", ").", "append", "(", "path", ")", ";", "params", ".", "append", "(", "\"", "\"", ").", "append", "(", "getRpmDir", "(", "))", ";", "return", "params", ".", "toString", "(", ");", "try", "{", "commandLineExecutor", ".", "exec", "(", "yumRegistry", ".", "getMergerepoPath", "(", "),", "buildParams", "(", "repoBaseDir", ",", "memberReposBaseDirs", ")", ");", "MetadataProcessor", ".", "processMergedMetadata", "(", "groupRepository", ",", "memberReposBaseDirs", ")", ";", "log", ".", "debug", "(", "\"", "Group", "repository", "'", "{}", "'", "merged", "\"", ",", "groupRepository", ".", "getId", "(", "))", ";", "}", "catch", "(", "IllegalAccessException", "e", ")", "{", "String", "msg", "=", "String", ".", "format", "(", "\"", "Yum", "metadata", "merging", "failed", ",", "mergerepo", "path", "%", "s", "is", "using", "executable", "that", "is", "not", "allowed", ".", "\",", "yumRegistry", ".", "getMergerepoPath", "(", "))", ";", "log", ".", "error", "(", "msg", ",", "e", ")", ";", "throw", "new", "IOException", "(", "\"", "Yum", "metadata", "merging", "failed", "\"", ",", "e", ")", ";", "}", "private", "String", "buildParams", "(", "File", "repoBaseDir", ",", "List", "<", "File", ">", "memberRepoBaseDirs", ")", "return", "format", "(", "\"", "-", "-", "no", "-", "database", "%", "s", "-", "o", "%", "s", "\"", ",", "repos", ".", "toString", "(", "),", "repoBaseDir", ".", "getAbsolutePath", "(", "))", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "configuration", ".", "application", ".", "ApplicationDirectories", ";", "@", "Inject", "private", "ApplicationDirectories", "applicationDirectories", ";", "binder", ".", "bind", "(", "CommandLineExecutor", ".", "class", ")", ".", "toInstance", "(", "new", "CommandLineExecutor", "(", "applicationDirectories", ",", "\"", "createrepo", ",", "mergerepo", "\"", ")", "public", "int", "exec", "(", "final", "String", "command", ",", "final", "String", "params", ")", "throws", "IOException", "{", "/", "*", "*", "Sonatype", "Nexus", "(", "TM", ")", "Open", "Source", "Version", "*", "Copyright", "(", "c", ")", "2008", "-", "present", "Sonatype", ",", "Inc", ".", "*", "All", "rights", "reserved", ".", "Includes", "the", "third", "-", "party", "code", "listed", "at", "http", ":", "//", "links", ".", "sonatype", ".", "com", "/", "products", "/", "nexus", "/", "oss", "/", "attributions", ".", "*", "*", "This", "program", "and", "the", "accompanying", "materials", "are", "made", "available", "under", "the", "terms", "of", "the", "Eclipse", "Public", "License", "Version", "1", ".", "0", ",", "*", "which", "accompanies", "this", "distribution", "and", "is", "available", "at", "http", ":", "//", "www", ".", "eclipse", ".", "org", "/", "legal", "/", "epl", "-", "v10", ".", "html", ".", "*", "*", "Sonatype", "Nexus", "(", "TM", ")", "Professional", "Version", "is", "available", "from", "Sonatype", ",", "Inc", ".", "\"", "Sonatype", "\"", "and", "\"", "Sonatype", "Nexus", "\"", "are", "trademarks", "*", "of", "Sonatype", ",", "Inc", ".", "Apache", "Maven", "is", "a", "trademark", "of", "the", "Apache", "Software", "Foundation", ".", "M2eclipse", "is", "a", "trademark", "of", "the", "*", "Eclipse", "Foundation", ".", "All", "other", "trademarks", "are", "the", "property", "of", "their", "respective", "owners", ".", "*", "/", "package", "org", ".", "sonatype", ".", "nexus", ".", "yum", ".", "internal", ".", "task", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "configuration", ".", "application", ".", "ApplicationDirectories", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "yum", ".", "internal", ".", "support", ".", "YumNexusTestSupport", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "mock", ";", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "when", ";", "public", "class", "CommandLineExecutorTest", "extends", "YumNexusTestSupport", "{", "private", "CommandLineExecutor", "underTest", ";", "private", "ApplicationDirectories", "applicationDirectories", ";", "@", "Before", "public", "void", "setup", "(", ")", "{", "applicationDirectories", "=", "mock", "(", "ApplicationDirectories", ".", "class", ")", ";", "when", "(", "applicationDirectories", ".", "getWorkDirectory", "(", "))", ".", "thenReturn", "(", "new", "File", "(", "\"/", "a", "/", "dir", "\"", "))", ";", "underTest", "=", "new", "CommandLineExecutor", "(", "applicationDirectories", ",", "\"", "createrepo", ",", "mergerepo", "\"", ");", "}", "/", "/", "IOException", "should", "be", "thrown", "as", "validation", "will", "pass", ",", "but", "executable", "isn", "'", "t", "there", "@", "Test", "(", "expected", "=", "IOException", ".", "class", ")", "public", "void", "exec_createRepo", "(", ")", "throws", "Exception", "{", "underTest", ".", "exec", "(", "\"/", "fake", "/", "path", "/", "createrepo", "\"", ",", "\"", "--", "version", "\"", ");", "}", "/", "/", "IOException", "should", "be", "thrown", "as", "validation", "will", "pass", ",", "but", "executable", "isn", "'", "t", "there", "@", "Test", "(", "expected", "=", "IOException", ".", "class", ")", "public", "void", "exec_createRepoNoPath", "(", ")", "throws", "Exception", "{", "underTest", "=", "new", "CommandLineExecutor", "(", "applicationDirectories", ",", "\"", "createreposhouldntexist", ",", "mergereposhouldntexist", "\"", ");", "underTest", ".", "exec", "(", "\"", "createreposhouldntexist", "\"", ",", "\"", "--", "version", "\"", ");", "}", "/", "/", "IOException", "should", "be", "thrown", "as", "validation", "will", "pass", ",", "but", "executable", "isn", "'", "t", "there", "@", "Test", "(", "expected", "=", "IOException", ".", "class", ")", "public", "void", "exec_mergeRepo", "(", ")", "throws", "Exception", "{", "underTest", ".", "exec", "(", "\"/", "fake", "/", "path", "/", "mergerepo", "\"", ",", "\"", "--", "version", "\"", ");", "}", "/", "/", "IOException", "should", "be", "thrown", "as", "validation", "will", "pass", ",", "but", "executable", "isn", "'", "t", "there", "@", "Test", "(", "expected", "=", "IOException", ".", "class", ")", "public", "void", "exec_mergeRepoNoPath", "(", ")", "throws", "Exception", "{", "underTest", "=", "new", "CommandLineExecutor", "(", "applicationDirectories", ",", "\"", "createreposhouldntexist", ",", "mergereposhouldntexist", "\"", ");", "underTest", ".", "exec", "(", "\"", "mergereposhouldntexist", "\"", ",", "\"", "--", "version", "\"", ");", "}", "/", "/", "IllegalAccessException", "should", "be", "thrown", "as", "this", "executable", "isn", "'", "t", "allowed", "@", "Test", "(", "expected", "=", "IllegalAccessException", ".", "class", ")", "public", "void", "exec_notAllowed", "(", ")", "throws", "Exception", "{", "underTest", ".", "exec", "(", "\"/", "fake", "/", "path", "/", "somethingelse", "\"", ",", "\"", "--", "someotherflag", "\"", ");", "}", "/", "/", "IllegalAccessException", "should", "be", "thrown", "as", "commands", "launching", "things", "inside", "nexus", "are", "not", "allowed", "@", "Test", "(", "expected", "=", "IllegalAccessException", ".", "class", ")", "public", "void", "exec_pathNotAllowed", "(", ")", "throws", "Exception", "{", "underTest", ".", "exec", "(", "\"/", "a", "/", "dir", "/", "createrepo", "\"", ",", "\"", "--", "someotherflag", "\"", ");", "}", "@", "Test", "(", "expected", "=", "IllegalAccessException", ".", "class", ")", "public", "void", "exec_extraConfigNotAllowed", "(", ")", "throws", "Exception", "{", "underTest", ".", "exec", "(", "\"/", "fake", "/", "path", "/", "createrepo", "-", "-", "somethingbad", "\"", ",", "\"", "--", "someotherflag", "\"", ");", "}", "}", "@", "@", "-", "22", ",", "6", "+", "22", ",", "7", "@", "@", "import", "org", ".", "sonatype", ".", "nexus", ".", "proxy", ".", "attributes", ".", "inspectors", ".", "DigestCalculatingInspector", ";", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "import", "org", ".", "sonatype", ".", "nexus", ".", "proxy", ".", "attributes", ".", "inspectors", ".", "DigestCalculatingInspector", ";", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", ",", "mock", "(", "DigestCalculatingInspector", ".", "class", ")", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "nexus", ".", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "nexus", ".", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "b", "=", "release", "-", "2", ".", "14", ".", "14", ",", "r", "=", "37c24494ded9b6ce64d4bef5d2f81e8187d370a6", ",", "t", "=", "2019", "-", "08", "-", "07", "-", "1118", "-", "4244", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "import", "org", ".", "sonatype", ".", "nexus", ".", "maven", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "14", "-", "01", "<", "/", "version", "></s><", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "img", "src", "=", "\"", "images", "/", "header_branding", ".", "png", "\"", "alt", "=", "\"", "Sonatype", "Nexus", "\"", "/>", "msg", ":", "displayMessage", ",", "style", ":", "'", "padding", "-", "top", ":", "30px", ";", "'", "var", "welcomeMsg", "=", "'", "<", "p", "style", "=", "\"", "text", "-", "align", ":", "center", ";", "\">", "<", "a", "href", "=", "\"", "http", ":", "//", "nexus", ".", "sonatype", ".", "org", "\"", "target", "=", "\"", "new", "\"", ">'", "+", "'", "<", "img", "src", "=", "\"", "images", "/", "nexus650x55", ".", "png", "\"", "border", "=", "\"", "0", "\"", "alt", "=", "\"", "Welcome", "to", "the", "Nexus", "Repository", "Manager", "\"", "><", "/", "a", ">", "'", "+", "'", "</", "p", ">", "';", "html", ":", "'", "<", "div", "class", "=", "\"", "little", "-", "padding", "\"", ">'", "+", "welcomeMsg", "+", "'", "</", "div", ">", "'", "html", ":", "'", "<", "div", "class", "=", "\"", "little", "-", "padding", "\"", ">'", "+", "'", "<", "br", "/", "><", "p", ">", "You", "may", "browse", "the", "repositories", "using", "the", "options", "on", "the", "left", ".", "</", "p", ">", "'", "+", "'", "</", "div", ">", "'", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "if", "(", "commandLineExecutor", ".", "exec", "(", "path", "+", "\"", "-", "-", "version", "\"", ",", "baos", ",", "baos", ")", "=", "=", "0", ")", "{", "public", "int", "exec", "(", "String", "command", ")", "throws", "IOException", "public", "int", "exec", "(", "final", "String", "command", ",", "OutputStream", "out", ",", "OutputStream", "err", ")", "throws", "IOException", "LOG", ".", "debug", "(", "\"", "Execute", "command", ":", "{", "}\"", ",", "command", ")", ";", "CommandLine", "cmdLine", "=", "CommandLine", ".", "parse", "(", "command", ")", ";", "final", "CommandLineExecutor", "commandLineExecutor", ")", "commandLineExecutor", ".", "exec", "(", "buildCreateRepositoryCommand", "(", "rpmListFile", ")", ");", "private", "String", "buildCreateRepositoryCommand", "(", "File", "packageList", ")", "{", "StringBuilder", "commandLine", "=", "new", "StringBuilder", "(", ");", "commandLine", ".", "append", "(", "yumRegistry", ".", "getCreaterepoPath", "(", "))", ";", "commandLine", ".", "append", "(", "\"", "-", "-", "update", "\"", ");", "commandLine", ".", "append", "(", "\"", "-", "-", "verbose", "-", "-", "no", "-", "database", "\"", ");", "commandLine", ".", "append", "(", "\"", "-", "-", "outputdir", "\"", ").", "append", "(", "getRepoDir", "(", ").", "getAbsolutePath", "(", "))", ";", "commandLine", ".", "append", "(", "\"", "-", "-", "pkglist", "\"", ").", "append", "(", "packageList", ".", "getAbsolutePath", "(", "))", ";", "commandLine", ".", "append", "(", "\"", "-", "-", "cachedir", "\"", ").", "append", "(", "createCacheDir", "(", ").", "getAbsolutePath", "(", "))", ";", "commandLine", ".", "append", "(", "\"", "-", "-", "groupfile", "\"", ").", "append", "(", "path", ")", ";", "commandLine", ".", "append", "(", "\"", "\"", ").", "append", "(", "getRpmDir", "(", "))", ";", "return", "commandLine", ".", "toString", "(", ");", "commandLineExecutor", ".", "exec", "(", "buildCommand", "(", "repoBaseDir", ",", "memberReposBaseDirs", ")", ");", "MetadataProcessor", ".", "processMergedMetadata", "(", "groupRepository", ",", "memberReposBaseDirs", ")", ";", "log", ".", "debug", "(", "\"", "Group", "repository", "'", "{}", "'", "merged", "\"", ",", "groupRepository", ".", "getId", "(", "))", ";", "private", "String", "buildCommand", "(", "File", "repoBaseDir", ",", "List", "<", "File", ">", "memberRepoBaseDirs", ")", "return", "format", "(", "\"", "%", "s", "-", "-", "no", "-", "database", "%", "s", "-", "o", "%", "s", "\"", ",", "yumRegistry", ".", "getMergerepoPath", "(", "),", "repos", ".", "toString", "(", "),", "repoBaseDir", ".", "getAbsolutePath", "(", ")", ")", ";", "binder", ".", "bind", "(", "CommandLineExecutor", ".", "class", ")", ".", "toInstance", "(", "new", "CommandLineExecutor", "(", ")", "public", "int", "exec", "(", "final", "String", "command", ")", "throws", "IOException", "{", "mock", "(", "CommandLineExecutor", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", "mock", "(", "CommandLineExecutor", ".", "class", ")", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "-", "->", "<", "nexus", ".", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "nexus", ".", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "b", "=", "master", ",", "r", "=", "0c2b9538ad76348024a78b22f46d74741826e4bf", ",", "t", "=", "2019", "-", "04", "-", "19", "-", "1110", "-", "45721", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "import", "org", ".", "apache", ".", "maven", ".", "model", ".", "io", ".", "xpp3", ".", "MavenXpp3Reader", ";", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">", "<", "version", ">", "2", ".", "14", ".", "13", "-", "01", "<", "/", "version", ">"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["struct", "packet_rollover", "*", "rollover", "=", "NULL", ";", "mutex_lock", "(", "&", "fanout_mutex", ")", ";", "err", "=", "-", "EINVAL", ";", "goto", "out", ";", "err", "=", "-", "EALREADY", ";", "goto", "out", ";", "err", "=", "-", "ENOMEM", ";", "rollover", "=", "kzalloc", "(", "sizeof", "(", "*", "rollover", ")", ",", "GFP_KERNEL", ")", ";", "if", "(", "!", "rollover", ")", "goto", "out", ";", "atomic_long_set", "(", "&", "rollover", "-", ">", "num", ",", "0", ")", ";", "atomic_long_set", "(", "&", "rollover", "-", ">", "num_huge", ",", "0", ")", ";", "atomic_long_set", "(", "&", "rollover", "-", ">", "num_failed", ",", "0", ")", ";", "po", "-", ">", "rollover", "=", "rollover", ";", "if", "(", "err", "&", "&", "rollover", ")", "{", "kfree", "(", "rollover", ")", ";", "mutex_unlock", "(", "&", "fanout_mutex", ")", ";", "f", "=", "po", "-", ">", "fanout", ";", "if", "(", "f", ")", "{", "po", "-", ">", "fanout", "=", "NULL", ";", "if", "(", "atomic_dec_and_test", "(", "&", "f", "-", ">", "sk_ref", ")", ")", "{", "list_del", "(", "&", "f", "-", ">", "list", ")", ";", "dev_remove_pack", "(", "&", "f", "-", ">", "prot_hook", ")", ";", "fanout_release_data", "(", "f", ")", ";", "kfree", "(", "f", ")", ";", "}", "if", "(", "po", "-", ">", "rollover", ")", "kfree_rcu", "(", "po", "-", ">", "rollover", ",", "rcu", ")", ";</s>return", "-", "EINVAL", ";", "return", "-", "EALREADY", ";", "po", "-", ">", "rollover", "=", "kzalloc", "(", "sizeof", "(", "*", "po", "-", ">", "rollover", ")", ",", "GFP_KERNEL", ")", ";", "if", "(", "!", "po", "-", ">", "rollover", ")", "return", "-", "ENOMEM", ";", "atomic_long_set", "(", "&", "po", "-", ">", "rollover", "-", ">", "num", ",", "0", ")", ";", "atomic_long_set", "(", "&", "po", "-", ">", "rollover", "-", ">", "num_huge", ",", "0", ")", ";", "atomic_long_set", "(", "&", "po", "-", ">", "rollover", "-", ">", "num_failed", ",", "0", ")", ";", "mutex_lock", "(", "&", "fanout_mutex", ")", ";", "mutex_unlock", "(", "&", "fanout_mutex", ")", ";", "if", "(", "err", ")", "{", "kfree", "(", "po", "-", ">", "rollover", ")", ";", "f", "=", "po", "-", ">", "fanout", ";", "if", "(", "!", "f", ")", "return", ";", "po", "-", ">", "fanout", "=", "NULL", ";", "if", "(", "atomic_dec_and_test", "(", "&", "f", "-", ">", "sk_ref", ")", ")", "{", "list_del", "(", "&", "f", "-", ">", "list", ")", ";", "dev_remove_pack", "(", "&", "f", "-", ">", "prot_hook", ")", ";", "fanout_release_data", "(", "f", ")", ";", "kfree", "(", "f", ")", ";", "if", "(", "po", "-", ">", "rollover", ")", "kfree_rcu", "(", "po", "-", ">", "rollover", ",", "rcu", ")", ";"], "docstring_tokens": ["use-after-free", "error"]}
{"contents": ["empty"], "code_tokens": ["*", "Title", "is", "specified", "using", "{", "@", "link", "#", "setTitle", "(", "String", ")", "}.", "Pass", "<", "code", ">", "true", "<", "/", "code", ">", "to", "*", "<", "code", ">", "{@", "link", "#", "setEscapeModelStrings", "(", "boolean", ")", "}<", "/", "code", ">", "to", "use", "unencoded", "markup", "in", "the", "title", ".", "*", "<", "br", ">", "*", "If", "the", "content", "is", "a", "page", "(", "iframe", ")", ",", "the", "title", "can", "remain", "unset", ",", "in", "that", "case", "title", "from", "the", "page", "*", "inside", "window", "will", "be", "shown", ".", "String", "title", "=", "getTitle", "(", ")", "!", "=", "null", "?", "getTitle", "(", ").", "getObject", "(", ")", ":", "null", ";", "String", "escaped", "=", "getDefaultModelObjectAsString", "(", "title", ")", ";", "appendAssignment", "(", "buffer", ",", "\"", "settings", ".", "title", "\"", ",", "escaped", ")", ";</s>import", "org", ".", "apache", ".", "wicket", ".", "util", ".", "string", ".", "Strings", ";", "*", "Title", "is", "specified", "using", "{", "@", "link", "#", "setTitle", "(", "String", ")", "}.", "If", "the", "content", "is", "a", "page", "(", "iframe", ")", ",", "the", "title", "*", "can", "remain", "unset", ",", "in", "that", "case", "title", "from", "the", "page", "inside", "window", "will", "be", "shown", ".", "/", "**", "*", "Replaces", "all", "occurrences", "of", "\"", "in", "string", "with", "\\", "\".", "*", "*", "@", "param", "string", "*", "String", "to", "be", "escaped", ".", "*", "*", "@", "return", "escaped", "string", "*", "/", "private", "String", "escapeQuotes", "(", "String", "string", ")", "{", "if", "(", "string", ".", "indexOf", "(", "'\"", "')", "!", "=", "-", "1", ")", "{", "string", "=", "Strings", ".", "replaceAll", "(", "string", ",", "\"", "\\\"", "\",", "\"", "\\\\", "\\\"", "\")", ".", "toString", "(", ");", "}", "return", "string", ";", "}", "Object", "title", "=", "getTitle", "(", ")", "!", "=", "null", "?", "getTitle", "(", ").", "getObject", "(", ")", ":", "null", ";", "appendAssignment", "(", "buffer", ",", "\"", "settings", ".", "title", "\"", ",", "escapeQuotes", "(", "title", ".", "toString", "(", "))", ");"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
{"contents": ["empty"], "code_tokens": ["LOG", ".", "debug", "(", "\"", "Configuring", "SchemaFactory", "to", "not", "allow", "access", "to", "external", "DTD", "/", "Schema", "\"", ");", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "static", "org", ".", "apache", ".", "camel", ".", "processor", ".", "validation", ".", "SchemaReader", ".", "ACCESS_EXTERNAL_DTD", ";", "/", "/", "turn", "off", "access", "to", "external", "schema", "by", "default", "if", "(", "!", "Boolean", ".", "parseBoolean", "(", "exchange", ".", "getContext", "(", ").", "getGlobalOptions", "(", ").", "get", "(", "ACCESS_EXTERNAL_DTD", ")", "))", "{", "try", "{", "LOG", ".", "debug", "(", "\"", "Configuring", "Validator", "to", "not", "allow", "access", "to", "external", "DTD", "/", "Schema", "\"", ");", "validator", ".", "setProperty", "(", "XMLConstants", ".", "ACCESS_EXTERNAL_DTD", ",", "\"", "\")", ";", "validator", ".", "setProperty", "(", "XMLConstants", ".", "ACCESS_EXTERNAL_SCHEMA", ",", "\"", "\")", ";", "}", "catch", "(", "SAXException", "e", ")", "{", "LOG", ".", "warn", "(", "e", ".", "getMessage", "(", "),", "e", ")", ";", "}", "}</s>"], "docstring_tokens": ["xml", "external", "entity"]}
{"contents": ["empty"], "code_tokens": ["@", "XmlAttribute", "private", "Boolean", "allowUnmarshallType", ";", "public", "Boolean", "getAllowUnmarshallType", "(", ")", "{", "return", "allowUnmarshallType", ";", "}", "/", "**", "*", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "*", "<", "p", "/", ">", "*", "This", "should", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "*", "/", "public", "void", "setAllowUnmarshallType", "(", "Boolean", "allowUnmarshallType", ")", "{", "this", ".", "allowUnmarshallType", "=", "allowUnmarshallType", ";", "}", "if", "(", "allowUnmarshallType", "!", "=", "null", ")", "{", "setProperty", "(", "camelContext", ",", "dataFormat", ",", "\"", "allowUnmarshallType", "\"", ",", "allowUnmarshallType", ")", ";", "}", "private", "boolean", "allowUnmarshallType", ";", "String", "type", "=", "null", ";", "if", "(", "allowUnmarshallType", ")", "{", "type", "=", "exchange", ".", "getIn", "(", ").", "getHeader", "(", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "String", ".", "class", ")", ";", "}", "public", "boolean", "isAllowUnmarshallType", "(", ")", "{", "return", "allowUnmarshallType", ";", "}", "/", "**", "*", "If", "enabled", "then", "Jackson", "is", "allowed", "to", "attempt", "to", "use", "the", "CamelJacksonUnmarshalType", "header", "during", "the", "unmarshalling", ".", "*", "<", "p", "/", ">", "*", "This", "should", "only", "be", "enabled", "when", "desired", "to", "be", "used", ".", "*", "/", "public", "void", "setAllowUnmarshallType", "(", "boolean", "allowJacksonUnmarshallType", ")", "{", "this", ".", "allowUnmarshallType", "=", "allowJacksonUnmarshallType", ";", "}", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "camel", ".", "component", ".", "jacksonxml", ";", "import", "java", ".", "util", ".", "LinkedHashMap", ";", "import", "org", ".", "apache", ".", "camel", ".", "builder", ".", "RouteBuilder", ";", "import", "org", ".", "apache", ".", "camel", ".", "component", ".", "mock", ".", "MockEndpoint", ";", "import", "org", ".", "apache", ".", "camel", ".", "test", ".", "junit4", ".", "CamelTestSupport", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "JacksonMarshalUnmarshalTypeHeaderNotAllowedTest", "extends", "CamelTestSupport", "{", "@", "Test", "public", "void", "testUnmarshalPojo", "(", ")", "throws", "Exception", "{", "MockEndpoint", "mock", "=", "getMockEndpoint", "(", "\"", "mock", ":", "reversePojo", "\"", ");", "mock", ".", "expectedMessageCount", "(", "1", ")", ";", "String", "json", "=", "\"", "<", "pojo", "name", "=", "\\\"", "Camel", "\\", "\"/", ">\"", ";", "template", ".", "sendBodyAndHeader", "(", "\"", "direct", ":", "backPojo", "\"", ",", "json", ",", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "TestPojo", ".", "class", ".", "getName", "(", "))", ";", "assertMockEndpointsSatisfied", "(", ");", "}", "@", "Override", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "return", "new", "RouteBuilder", "(", ")", "{", "@", "Override", "public", "void", "configure", "(", ")", "throws", "Exception", "{", "JacksonXMLDataFormat", "format", "=", "new", "JacksonXMLDataFormat", "(", ");", "from", "(", "\"", "direct", ":", "backPojo", "\"", ").", "unmarshal", "(", "format", ")", ".", "to", "(", "\"", "mock", ":", "reversePojo", "\"", ");", "}", "}", ";", "}", "}", "@", "@", "-", "46", ",", "6", "+", "46", ",", "7", "@", "@", "protected", "RouteBuilder", "createRouteBuilder", "(", ")", "throws", "Exception", "{", "format", ".", "setAllowUnmarshallType", "(", "true", ")", ";</s>String", "type", "=", "exchange", ".", "getIn", "(", ").", "getHeader", "(", "JacksonXMLConstants", ".", "UNMARSHAL_TYPE", ",", "String", ".", "class", ")", ";"], "docstring_tokens": ["object", "de-serialization"]}
{"contents": ["empty"], "code_tokens": ["u64", "vmacache_seqnum", ";", "/", "*", "per", "-", "thread", "vmacache", "*", "/", "u64", "seqnum", ";", "pr_emerg", "(", "\"", "mm", "%", "px", "mmap", "%", "px", "seqnum", "%", "llu", "task_size", "%", "lu", "\\", "n", "\"", "mm", ",", "mm", "-", ">", "mmap", ",", "(", "long", "long", ")", "mm", "-", ">", "vmacache_seqnum", ",", "mm", "-", ">", "task_size", ",</s>u32", "vmacache_seqnum", ";", "/", "*", "per", "-", "thread", "vmacache", "*", "/", "u32", "seqnum", ";", "VMACACHE_FULL_FLUSHES", ",", "extern", "void", "vmacache_flush_all", "(", "struct", "mm_struct", "*", "mm", ")", ";", "/", "*", "deal", "with", "overflows", "*", "/", "if", "(", "unlikely", "(", "mm", "-", ">", "vmacache_seqnum", "=", "=", "0", ")", ")", "vmacache_flush_all", "(", "mm", ")", ";", "pr_emerg", "(", "\"", "mm", "%", "px", "mmap", "%", "px", "seqnum", "%", "d", "task_size", "%", "lu", "\\", "n", "\"", "mm", ",", "mm", "-", ">", "mmap", ",", "mm", "-", ">", "vmacache_seqnum", ",", "mm", "-", ">", "task_size", ",", "/", "*", "*", "Flush", "vma", "caches", "for", "threads", "that", "share", "a", "given", "mm", ".", "*", "*", "The", "operation", "is", "safe", "because", "the", "caller", "holds", "the", "mmap_sem", "*", "exclusively", "and", "other", "threads", "accessing", "the", "vma", "cache", "will", "*", "have", "mmap_sem", "held", "at", "least", "for", "read", ",", "so", "no", "extra", "locking", "*", "is", "required", "to", "maintain", "the", "vma", "cache", ".", "*", "/", "void", "vmacache_flush_all", "(", "struct", "mm_struct", "*", "mm", ")", "{", "struct", "task_struct", "*", "g", ",", "*", "p", ";", "count_vm_vmacache_event", "(", "VMACACHE_FULL_FLUSHES", ")", ";", "/", "*", "*", "Single", "threaded", "tasks", "need", "not", "iterate", "the", "entire", "*", "list", "of", "process", ".", "We", "can", "avoid", "the", "flushing", "as", "well", "*", "since", "the", "mm", "'", "s", "seqnum", "was", "increased", "and", "don", "'", "t", "have", "*", "to", "worry", "about", "other", "threads", "'", "seqnum", ".", "Current", "'", "s", "*", "flush", "will", "occur", "upon", "the", "next", "lookup", ".", "*", "/", "if", "(", "atomic_read", "(", "&", "mm", "-", ">", "mm_users", ")", "=", "=", "1", ")", "return", ";", "rcu_read_lock", "(", ");", "for_each_process_thread", "(", "g", ",", "p", ")", "{", "/", "*", "*", "Only", "flush", "the", "vmacache", "pointers", "as", "the", "*", "mm", "seqnum", "is", "already", "set", "and", "curr", "'", "s", "will", "*", "be", "set", "upon", "invalidation", "when", "the", "next", "*", "lookup", "is", "done", ".", "*", "/", "if", "(", "mm", "=", "=", "p", "-", ">", "mm", ")", "vmacache_flush", "(", "p", ")", ";", "}", "rcu_read_unlock", "(", ");", "}"], "docstring_tokens": ["use-after-free", "error"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "af", "=", "=", "NULL", ")", "break", ";</s>"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["u8", "*", "buf", ";", "buf", "=", "kmalloc", "(", "size", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "indx", ",", "buf", ",", "size", ",", "1000", ")", ";", "else", "if", "(", "ret", "<", "=", "size", ")", "memcpy", "(", "data", ",", "buf", ",", "ret", ")", ";", "kfree", "(", "buf", ")", ";", "static", "int", "set_registers", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u16", "size", ",", "const", "void", "*", "data", ")", "u8", "*", "buf", ";", "buf", "=", "kmemdup", "(", "data", ",", "size", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "indx", ",", "buf", ",", "size", ",", "100", ")", ";", "kfree", "(", "buf", ")", ";", "u8", "*", "buf", ";", "buf", "=", "kmemdup", "(", "&", "data", ",", "1", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "indx", ",", "buf", ",", "1", ",", "1000", ")", ";", "kfree", "(", "buf", ")", ";</s>indx", ",", "data", ",", "size", ",", "1000", ")", ";", "static", "int", "set_registers", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u16", "size", ",", "void", "*", "data", ")", "indx", ",", "data", ",", "size", ",", "100", ")", ";", "indx", ",", "&", "data", ",", "1", ",", "1000", ")", ";"], "docstring_tokens": ["memory", "corruption"]}
{"contents": ["empty"], "code_tokens": ["-", "IMAP", ":", ".", "Fixed", "bug", "#", "77153", "(", "imap_open", "allows", "to", "run", "arbitrary", "shell", "commands", "via", "mailbox", "parameter", ")", ".", "(", "Stas", ")", "-", "IMAP", ":", "Starting", "with", "7", ".", "1", ".", "25", ",", "rsh", "/", "ssh", "logins", "are", "disabled", "by", "default", ".", "Use", "imap", ".", "enable_insecure_rsh", "if", "you", "want", "to", "enable", "them", ".", "Note", "that", "the", "IMAP", "library", "does", "not", "filter", "mailbox", "names", "before", "passing", "them", "to", "rsh", "/", "ssh", "command", ",", "thus", "passing", "untrusted", "data", "to", "this", "function", "with", "rsh", "/", "ssh", "enabled", "is", "insecure", ".", "/", "*", "{", "{{", "PHP_INI", "*", "/", "PHP_INI_BEGIN", "(", ")", "STD_PHP_INI_BOOLEAN", "(", "\"", "imap", ".", "enable_insecure_rsh", "\"", ",", "\"", "0", "\"", ",", "PHP_INI_SYSTEM", ",", "OnUpdateBool", ",", "enable_rsh", ",", "zend_imap_globals", ",", "imap_globals", ")", "PHP_INI_END", "(", ")", "/", "*", "}", "}}", "*", "/", "REGISTER_INI_ENTRIES", "(", ");", "if", "(", "!", "IMAPG", "(", "enable_rsh", ")", ")", "{", "/", "*", "disable", "SSH", "and", "RSH", ",", "see", "https", ":", "//", "bugs", ".", "php", ".", "net", "/", "bug", ".", "php", "?", "id", "=", "77153", "*", "/", "mail_parameters", "(", "NIL", ",", "SET_RSHTIMEOUT", ",", "0", ")", ";", "mail_parameters", "(", "NIL", ",", "SET_SSHTIMEOUT", ",", "0", ")", ";", "}", "zend_bool", "enable_rsh", ";", "-", "-", "TEST", "-", "-", "Bug", "#", "77153", "(", "imap_open", "allows", "to", "run", "arbitrary", "shell", "commands", "via", "mailbox", "parameter", ")", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "imap", "\"", "))", "{", "die", "(", "\"", "skip", "imap", "extension", "not", "available", "\"", ");", "}", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "payload", "=", "\"", "echo", "'", "BUG", "'", ">", "\"", ".", "__DIR__", ".", "'", "/", "__bug", "'", ";", "$", "payloadb64", "=", "base64_encode", "(", "$", "payload", ")", ";", "$", "server", "=", "\"", "x", "-", "oProxyCommand", "=", "echo", "\\", "t", "$", "payloadb64", "|", "base64", "\\", "t", "-", "d", "|", "sh", "}", "\";", "@", "imap_open", "(", "'{", "'.", "$", "server", ".", "':", "143", "/", "imap", "}", "INBOX", "'", ",", "'", "',", "'", "')", ";", "/", "/", "clean", "imap_errors", "(", ");", "var_dump", "(", "file_exists", "(", "__DIR__", ".", "'", "/", "__bug", "'", "))", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "bool", "(", "false", ")", "-", "-", "CLEAN", "-", "-", "<", "?", "php", "if", "(", "file_exists", "(", "__DIR__", ".", "'", "/", "__bug", "'", "))", "unlink", "(", "__DIR__", ".", "'", "/", "__bug", "'", ");", "?", "></s>-", "ODBC", ":"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "frame_end", "-", "frame", "<", "width", "+", "4", ")</s>if", "(", "frame_end", "-", "frame", "<", "width", "+", "3", ")"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["writer", ".", "writeText", "(", "window", ".", "getId", "(", "),", "null", ")", ";</s>writer", ".", "write", "(", "window", ".", "getId", "(", "))", ";"], "docstring_tokens": ["cross-site", "scripting"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "!", "tty", ")", "return", ";</s>"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "pvc", ",", "0", ",", "sizeof", "(", "pvc", ")", ");</s>"], "docstring_tokens": ["info", "leaks"]}
{"contents": ["empty"], "code_tokens": ["import", "hudson", ".", "util", ".", "ListBoxModel", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "/", "**", "*", "Selects", "the", "SSL", "strategy", "to", "follow", "on", "the", "TLS", "connections", "*", "*", "<", "p", ">", "*", "Even", "if", "we", "are", "not", "using", "any", "of", "the", "TLS", "ports", "(", "3269", "/", "636", ")", "the", "plugin", "will", "try", "to", "establish", "a", "TLS", "channel", "*", "using", "startTLS", ".", "Because", "of", "this", ",", "we", "need", "to", "be", "able", "to", "specify", "the", "SSL", "strategy", "on", "the", "plugin", "*", "*", "<", "p", ">", "*", "For", "the", "moment", "there", "are", "two", "possible", "values", ":", "trustAllCertificates", "and", "trustStore", ".", "*", "/", "protected", "TlsConfiguration", "tlsConfiguration", ";", "@", "Deprecated", "this", "(", "name", ",", "servers", ",", "site", ",", "bindName", ",", "bindPassword", ",", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ")", ";", "}", "@", "DataBoundConstructor", "public", "ActiveDirectoryDomain", "(", "String", "name", ",", "String", "servers", ",", "String", "site", ",", "String", "bindName", ",", "String", "bindPassword", ",", "TlsConfiguration", "tlsConfiguration", ")", "{", "this", ".", "tlsConfiguration", "=", "tlsConfiguration", ";", "@", "Restricted", "(", "NoExternalUse", ".", "class", ")", "public", "TlsConfiguration", "getTlsConfiguration", "(", ")", "{", "return", "tlsConfiguration", ";", "}", "public", "ListBoxModel", "doFillTlsConfigurationItems", "(", ")", "{", "ListBoxModel", "model", "=", "new", "ListBoxModel", "(", ");", "for", "(", "TlsConfiguration", "tlsConfiguration", ":", "TlsConfiguration", ".", "values", "(", "))", "{", "model", ".", "add", "(", "tlsConfiguration", ".", "getDisplayName", "(", "),", "tlsConfiguration", ".", "name", "(", "))", ";", "}", "return", "model", ";", "}", "@", "QueryParameter", "(", "fixEmpty", "=", "true", ")", "String", "bindPassword", ",", "@", "QueryParameter", "(", "fixEmpty", "=", "true", ")", "TlsConfiguration", "tlsConfiguration", ")", "throws", "IOException", ",", "ServletException", ",", "NamingException", "{", "ActiveDirectoryDomain", "domain", "=", "new", "ActiveDirectoryDomain", "(", "name", ",", "servers", ",", "site", ",", "bindName", ",", "bindPassword", ",", "tlsConfiguration", ")", ";", "List", "<", "ActiveDirectoryDomain", ">", "domains", "=", "new", "ArrayList", "<", ">(", "1", ")", ";", "domains", ".", "add", "(", "domain", ")", ";", "ActiveDirectorySecurityRealm", "activeDirectorySecurityRealm", "=", "new", "ActiveDirectorySecurityRealm", "(", "null", ",", "domains", ",", "site", ",", "bindName", ",", "bindPassword", ",", "null", ",", "GroupLookupStrategy", ".", "AUTO", ",", "false", ",", "true", ",", "null", ",", "false", ",", "(", "ActiveDirectoryInternalUsersDatabase", ")", "null", ")", ";", "Hashtable", "<", "String", ",", "String", ">", "props", "=", "new", "Hashtable", "<", ">(", "0", ")", ";", "DirContext", "context", "=", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "bind", "(", "bindName", ",", "Secret", ".", "toString", "(", "password", ")", ",", "obtainerServers", ",", "props", ",", "tlsConfiguration", ")", ";", "@", "Deprecated", "protected", "transient", "TlsConfiguration", "tlsConfiguration", ";", "@", "Deprecated", "public", "ActiveDirectorySecurityRealm", "(", "String", "domain", ",", "List", "<", "ActiveDirectoryDomain", ">", "domains", ",", "String", "site", ",", "String", "bindName", ",", "String", "bindPassword", ",", "String", "server", ",", "GroupLookupStrategy", "groupLookupStrategy", ",", "boolean", "removeIrrelevantGroups", ",", "Boolean", "customDomain", ",", "CacheConfiguration", "cache", ",", "Boolean", "startTls", ",", "TlsConfiguration", "tlsConfiguration", ",", "ActiveDirectoryInternalUsersDatabase", "internalUsersDatabase", ")", "{", "this", "(", "domain", ",", "domains", ",", "site", ",", "bindName", ",", "bindPassword", ",", "server", ",", "groupLookupStrategy", ",", "removeIrrelevantGroups", ",", "customDomain", ",", "cache", ",", "startTls", ",", "(", "ActiveDirectoryInternalUsersDatabase", ")", "null", ")", ";", "}", "String", "bindPassword", ",", "String", "server", ",", "GroupLookupStrategy", "groupLookupStrategy", ",", "boolean", "removeIrrelevantGroups", ",", "Boolean", "customDomain", ",", "CacheConfiguration", "cache", ",", "Boolean", "startTls", ",", "ActiveDirectoryInternalUsersDatabase", "internalUsersDatabase", ")", "{", "@", "Deprecated", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "if", "(", "tlsConfiguration", "!", "=", "null", ")", "{", "for", "(", "ActiveDirectoryDomain", "activeDirectoryDomain", ":", "activeDirectoryDomains", ")", "{", "activeDirectoryDomain", ".", "tlsConfiguration", "=", "tlsConfiguration", ";", "}", "}", "return", "bind", "(", "principalName", ",", "password", ",", "ldapServers", ",", "props", ",", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ")", ";", "LdapContext", "context", "=", "bind", "(", "principalName", ",", "password", ",", "ldapServer", ",", "newProps", ",", "tlsConfiguration", ")", ";", "@", "SuppressFBWarnings", "(", "value", "=", "\"", "UPM_UNCALLED_PRIVATE_METHOD", "\"", ",", "justification", "=", "\"", "Deprecated", "method", ".", "It", "will", "removed", "at", "some", "point", "\"", ")", "for", "(", "ActiveDirectoryDomain", "activeDirectoryDomain", ":", "activeDirectorySecurityRealm", ".", "getDomains", "(", "))", "{", "/", "/", "AdministrativeMonitor", "if", "native", "authentication", ",", "using", "customDomains", "and", "tlsConfiguration", "not", "saved", "if", "(", "activeDirectoryDomain", ".", "tlsConfiguration", "=", "=", "null", "&", "&", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "canDoNativeAuth", "(", ")", "&", "&", "activeDirectorySecurityRealm", ".", "domains", "!", "=", "null", ")", "{", "return", "true", ";", "/", "/", "AdministrativeMonitor", "in", "Unix", "environment", "if", "tlsConfiguration", "not", "saved", "}", "else", "if", "(", "activeDirectoryDomain", ".", "tlsConfiguration", "=", "=", "null", "&", "&", "!", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "canDoNativeAuth", "(", "))", "{", "return", "true", ";", "}", "@", "Deprecated", "context", "=", "descriptor", ".", "bind", "(", "bindName", ",", "bindPassword", ",", "ldapServers", ",", "props", ",", "domain", ".", "getTlsConfiguration", "(", "))", ";", "context", "=", "descriptor", ".", "bind", "(", "userPrincipalName", ",", "anonymousBind", "?", "\"", "\"", ":", "password", ",", "ldapServers", ",", "props", ",", "domain", ".", "getTlsConfiguration", "(", "))", ";", "DirContext", "test", "=", "descriptor", ".", "bind", "(", "dnFormatted", ",", "password", ",", "ldapServers", ",", "props", ",", "domain", ".", "getTlsConfiguration", "(", "))", ";", "DirContext", "context", "=", "descriptor", ".", "bind", "(", "domain", ".", "getBindName", "(", "),", "domain", ".", "getBindPassword", "(", ").", "getPlainText", "(", "),", "obtainLDAPServers", "(", "domain", ")", ",", "props", ",", "domain", ".", "getTlsConfiguration", "(", "))", ";", "<", "f", ":", "entry", "field", "=", "\"", "tlsConfiguration", "\"", "title", "=", "\"$", "{%", "TLS", "Configuration", "}", "\">", "<", "f", ":", "select", "/", ">", "<", "/", "f", ":", "entry", ">", "<", "f", ":", "validateButton", "with", "=", "\"", "name", ",", "servers", ",", "site", ",", "bindName", ",", "bindPassword", ",", "tlsConfiguration", "\"", "title", "=", "\"$", "{%", "Test", "Domain", "}", "\"", "method", "=", "\"", "validateTest", "\"", "/>", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertNull", ";", "public", "final", "static", "String", "AD_DOMAIN", "=", "\"", "samdom", ".", "example", ".", "com", "\"", ";", "public", "final", "static", "String", "AD_MANAGER_DN", "=", "\"", "CN", "=", "Administrator", ",", "CN", "=", "Users", ",", "DC", "=", "samdom", ",", "DC", "=", "example", ",", "DC", "=", "com", "\"", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "Make", "tlsConfiguration", "independent", "of", "each", "domain", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertEquals", "(", "TlsConfiguration", ".", "TRUST_ALL_CERTIFICATES", ",", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "/", "/", "SECURITY", "-", "859", "If", "there", "is", "not", "tlsConfiguration", "saved", "on", "disk", ",", "keep", "it", "as", "null", "assertNull", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "}", "/", "/", "SECURITY", "-", "859", "If", "there", "is", "not", "tlsConfiguration", "saved", "on", "disk", ",", "keep", "it", "as", "null", "assertNull", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "))", ";", "assertNull", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "1", ")", ".", "getTlsConfiguration", "(", "))", ";", "@", "Issue", "(", "\"", "SECURITY", "-", "859", "\"", ")", "@", "LocalData", "@", "Test", "public", "void", "testReadResolveMultipleDomainsOneDomainEndToEnd", "(", ")", "throws", "Exception", "{", "ActiveDirectorySecurityRealm", "activeDirectorySecurityRealm", "=", "(", "ActiveDirectorySecurityRealm", ")", "jenkinsRule", ".", "jenkins", ".", "getSecurityRealm", "(", ");", "/", "/", "Check", "there", "is", "one", "domain", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "size", "(", "),", "1", ")", ";", "/", "/", "Check", "domain", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getName", "(", "),", "AD_DOMAIN", ")", ";", "/", "/", "Check", "bindName", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getBindName", "(", "),", "AD_MANAGER_DN", ")", ";", "/", "/", "Check", "groupLookupStrategy", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getGroupLookupStrategy", "(", "),", "GroupLookupStrategy", ".", "RECURSIVE", ")", ";", "/", "/", "Check", "removeIrrelevantGroups", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "removeIrrelevantGroups", ",", "true", ")", ";", "/", "/", "Check", "cache", "Size", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getCache", "(", ").", "getSize", "(", "),", "500", ")", ";", "/", "/", "Check", "cache", "TTLS", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getCache", "(", ").", "getTtl", "(", "),", "1800", ")", ";", "/", "/", "Check", "tlsConfiguration", "assertEquals", "(", "activeDirectorySecurityRealm", ".", "getDomains", "(", ").", "get", "(", "0", ")", ".", "getTlsConfiguration", "(", "),", "TlsConfiguration", ".", "JDK_TRUSTSTORE", ")", ";", "}", "import", "hudson", ".", "util", ".", "Secret", ";", "import", "javax", ".", "naming", ".", "CommunicationException", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "recipes", ".", "LocalData", ";", "public", "void", "dynamicSetUp", "(", ")", "throws", "Exception", "{", "public", "void", "manualSetUp", "(", ")", "throws", "Exception", "{", "TheFlintstones", "d", "=", "docker", ".", "get", "(", ");", "dockerIp", "=", "d", ".", "ipBound", "(", "3268", ")", ";", "dockerPort", "=", "d", ".", "port", "(", "3268", ")", ";", "ActiveDirectorySecurityRealm", "activeDirectorySecurityRealm", "=", "(", "ActiveDirectorySecurityRealm", ")", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ");", "for", "(", "ActiveDirectoryDomain", "activeDirectoryDomain", ":", "activeDirectorySecurityRealm", ".", "getDomains", "(", "))", "{", "activeDirectoryDomain", ".", "bindPassword", "=", "Secret", ".", "fromString", "(", "AD_MANAGER_DN_PASSWORD", ")", ";", "activeDirectoryDomain", ".", "servers", "=", "dockerIp", "+", "\"", ":\"", "+", "dockerPort", ";", "}", "while", "(", "!", "FileUtils", ".", "readFileToString", "(", "d", ".", "getLogfile", "(", "))", ".", "contains", "(", "\"", "custom", "(", "exit", "status", "0", ";", "expected", ")", "\")", ")", "{", "Thread", ".", "sleep", "(", "1000", ")", ";", "}", "UserDetails", "userDetails", "=", "null", ";", "int", "i", "=", "0", ";", "while", "(", "i", "<", "MAX_RETRIES", "&", "&", "userDetails", "=", "=", "null", ")", "{", "try", "{", "userDetails", "=", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Fred", "\"", ");", "}", "catch", "(", "AuthenticationServiceException", "e", ")", "{", "Thread", ".", "sleep", "(", "1000", ")", ";", "}", "i", "+", "+;", "}", "}", "dynamicSetUp", "(", ");", "dynamicSetUp", "(", ");", "dynamicSetUp", "(", ");", "public", "void", "validateCustomDomainController", "(", ")", "throws", "ServletException", ",", "NamingException", ",", "IOException", ",", "Exception", "{", "dynamicSetUp", "(", ");", "assertEquals", "(", "\"", "OK", ":", "Success", "\"", ",", "adDescriptor", ".", "doValidateTest", "(", "AD_DOMAIN", ",", "dockerIp", "+", "\"", ":\"", "+", "dockerPort", ",", "null", ",", "AD_MANAGER_DN", ",", "AD_MANAGER_DN_PASSWORD", ",", "null", ")", ".", "toString", "(", ").", "trim", "(", "))", ";", "public", "void", "validateDomain", "(", ")", "throws", "ServletException", ",", "NamingException", ",", "IOException", ",", "Exception", "{", "dynamicSetUp", "(", ");", "assertEquals", "(", "\"", "OK", ":", "Success", "\"", ",", "adDescriptor", ".", "doValidateTest", "(", "AD_DOMAIN", ",", "null", ",", "null", ",", "AD_MANAGER_DN", ",", "AD_MANAGER_DN_PASSWORD", ",", "null", ")", ".", "toString", "(", ").", "trim", "(", "))", ";", "dynamicSetUp", "(", ");", "dynamicSetUp", "(", ");", "/", "/", "ReadResolve", "tlsConfiguration", "migration", "tests", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginSuccessfulAfterReadResolveTlsConfigurationSingleDomain", "(", ")", "throws", "Exception", "{", "manualSetUp", "(", ");", "UserDetails", "userDetails", "=", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Fred", "\"", ");", "assertThat", "(", "userDetails", ".", "getUsername", "(", "),", "is", "(", "\"", "Fred", "\"", "))", ";", "}", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginFailsAfterReadResolveTlsConfigurationSingleDomain", "(", ")", "throws", "Exception", "{", "manualSetUp", "(", ");", "try", "{", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Homer", "\"", ");", "}", "catch", "(", "UsernameNotFoundException", "e", ")", "{", "assertTrue", "(", "e", ".", "getMessage", "(", ").", "contains", "(", "\"", "Authentication", "was", "successful", "but", "cannot", "locate", "the", "user", "information", "for", "Homer", "\"", "))", ";", "}", "}", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginSuccessAfterReadResolveTlsConfigurationMultipleDomainsOneDomain", "(", ")", "throws", "Exception", "{", "manualSetUp", "(", ");", "UserDetails", "userDetails", "=", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Fred", "\"", ");", "assertThat", "(", "userDetails", ".", "getUsername", "(", "),", "is", "(", "\"", "Fred", "\"", "))", ";", "}", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginFailsAfterReadResolveTlsConfigurationMultipleDomainsOneDomain", "(", ")", "throws", "Exception", "{", "manualSetUp", "(", ");", "try", "{", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Homer", "\"", ");", "}", "catch", "(", "UsernameNotFoundException", "e", ")", "{", "assertTrue", "(", "e", ".", "getMessage", "(", ").", "contains", "(", "\"", "Authentication", "was", "successful", "but", "cannot", "locate", "the", "user", "information", "for", "Homer", "\"", "))", ";", "}", "}", "/", "/", "TlsConfiguration", "tests", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginSuccessfulTrustingAllCertificates", "(", ")", "throws", "Exception", "{", "manualSetUp", "(", ");", "UserDetails", "userDetails", "=", "j", ".", "jenkins", ".", "getSecurityRealm", "(", ").", "loadUserByUsername", "(", "\"", "Fred", "\"", ");", "assertThat", "(", "userDetails", ".", "getUsername", "(", "),", "is", "(", "\"", "Fred", "\"", "))", ";", "}", "@", "LocalData", "@", "Test", "public", "void", "testSimpleLoginFailsTrustingJDKTrustStore", "(", ")", "throws", "Exception", "{", "try", "{", "manualSetUp", "(", ");", "}", "catch", "(", "CommunicationException", "e", ")", "{", "assertTrue", "(", "e", ".", "getMessage", "(", ").", "contains", "(", "\"", "simple", "bind", "failed", "\"", "))", ";", "}", "}</s>@", "DataBoundConstructor", "@", "QueryParameter", "(", "fixEmpty", "=", "true", ")", "String", "bindPassword", ")", "throws", "IOException", ",", "ServletException", ",", "NamingException", "{", "/", "/", "Create", "a", "fake", "ActiveDirectorySecurityRealm", "ActiveDirectorySecurityRealm", "activeDirectorySecurityRealm", "=", "new", "ActiveDirectorySecurityRealm", "(", "name", ",", "site", ",", "bindName", ",", "bindPassword", ",", "servers", ")", ";", "ActiveDirectoryDomain", "domain", "=", "activeDirectorySecurityRealm", ".", "getDomain", "(", "name", ")", ";", "DirContext", "context", "=", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "bind", "(", "bindName", ",", "Secret", ".", "toString", "(", "password", ")", ",", "obtainerServers", ")", ";", "protected", "TlsConfiguration", "tlsConfiguration", ";", "String", "bindPassword", ",", "String", "server", ",", "GroupLookupStrategy", "groupLookupStrategy", ",", "boolean", "removeIrrelevantGroups", ",", "Boolean", "customDomain", ",", "CacheConfiguration", "cache", ",", "Boolean", "startTls", ",", "TlsConfiguration", "tlsConfiguration", ",", "ActiveDirectoryInternalUsersDatabase", "internalUsersDatabase", ")", "{", "this", ".", "tlsConfiguration", "=", "tlsConfiguration", ";", "public", "ListBoxModel", "doFillTlsConfigurationItems", "(", ")", "{", "ListBoxModel", "model", "=", "new", "ListBoxModel", "(", ");", "for", "(", "TlsConfiguration", "tlsConfiguration", ":", "TlsConfiguration", ".", "values", "(", "))", "{", "model", ".", "add", "(", "tlsConfiguration", ".", "getDisplayName", "(", "),", "tlsConfiguration", ".", "name", "(", "))", ";", "}", "return", "model", ";", "}", "return", "bind", "(", "principalName", ",", "password", ",", "ldapServers", ",", "props", ",", "null", ")", ";", "LdapContext", "context", "=", "bind", "(", "principalName", ",", "password", ",", "ldapServer", ",", "newProps", ")", ";", "/", "/", "AdministrativeMonitor", "if", "native", "authentication", ",", "using", "customDomains", "and", "tlsConfiguration", "not", "saved", "if", "(", "activeDirectorySecurityRealm", ".", "tlsConfiguration", "=", "=", "null", "&", "&", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "canDoNativeAuth", "(", ")", "&", "&", "activeDirectorySecurityRealm", ".", "domains", "!", "=", "null", ")", "{", "return", "true", ";", "/", "/", "AdministrativeMonitor", "in", "Unix", "environment", "if", "tlsConfiguration", "not", "saved", "}", "else", "if", "(", "activeDirectorySecurityRealm", ".", "tlsConfiguration", "=", "=", "null", "&", "&", "!", "activeDirectorySecurityRealm", ".", "getDescriptor", "(", ").", "canDoNativeAuth", "(", "))", "{", "return", "true", ";", "this", ".", "tlsConfiguration", "=", "realm", ".", "tlsConfiguration", ";", "context", "=", "descriptor", ".", "bind", "(", "bindName", ",", "bindPassword", ",", "ldapServers", ",", "props", ",", "tlsConfiguration", ")", ";", "context", "=", "descriptor", ".", "bind", "(", "userPrincipalName", ",", "anonymousBind", "?", "\"", "\"", ":", "password", ",", "ldapServers", ",", "props", ")", ";", "DirContext", "test", "=", "descriptor", ".", "bind", "(", "dnFormatted", ",", "password", ",", "ldapServers", ",", "props", ",", "tlsConfiguration", ")", ";", "DirContext", "context", "=", "descriptor", ".", "bind", "(", "domain", ".", "getBindName", "(", "),", "domain", ".", "getBindPassword", "(", ").", "getPlainText", "(", "),", "obtainLDAPServers", "(", "domain", ")", ");", "<", "f", ":", "validateButton", "with", "=", "\"", "name", ",", "servers", ",", "site", ",", "site", ",", "bindName", ",", "bindPassword", "\"", "title", "=", "\"$", "{%", "Test", "Domain", "}", "\"", "method", "=", "\"", "validateTest", "\"", "/>", "<", "f", ":", "entry", "field", "=", "\"", "tlsConfiguration", "\"", "title", "=", "\"$", "{%", "TLS", "Configuration", "}", "\">", "<", "f", ":", "select", "/", ">", "<", "/", "f", ":", "entry", ">", "}", "import", "org", ".", "junit", ".", "Before", ";", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "public", "void", "validateCustomDomainController", "(", ")", "throws", "ServletException", ",", "NamingException", ",", "IOException", "{", "assertEquals", "(", "\"", "OK", ":", "Success", "\"", ",", "adDescriptor", ".", "doValidateTest", "(", "AD_DOMAIN", ",", "dockerIp", "+", "\"", ":\"", "+", "dockerPort", ",", "null", ",", "AD_MANAGER_DN", ",", "AD_MANAGER_DN_PASSWORD", ")", ".", "toString", "(", ").", "trim", "(", "))", ";", "public", "void", "validateDomain", "(", ")", "throws", "ServletException", ",", "NamingException", ",", "IOException", "{", "assertEquals", "(", "\"", "OK", ":", "Success", "\"", ",", "adDescriptor", ".", "doValidateTest", "(", "AD_DOMAIN", ",", "null", ",", "null", ",", "AD_MANAGER_DN", ",", "AD_MANAGER_DN_PASSWORD", ")", ".", "toString", "(", ").", "trim", "(", "))", ";"], "docstring_tokens": ["cross-site", "request", "forgery"]}
{"contents": ["empty"], "code_tokens": ["PropertyPath", "path", "=", "verifyPath", "(", "entityType", ")", ";", "return", "evaluate", "(", "path", "=", "=", "null", "?", "entityType", ":", "path", ".", "getType", "(", "))", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "org", ".", "springframework", ".", "data", ".", "mapping", ".", "PropertyPath", ";", "import", "org", ".", "springframework", ".", "data", ".", "mapping", ".", "PropertyReferenceException", ";", "import", "org", ".", "springframework", ".", "util", ".", "StringUtils", ";", "private", "static", "final", "String", "INVALID_PATH_REFERENCE", "=", "\"", "Invalid", "path", "reference", "%", "s", "on", "type", "%", "s", "(", "from", "source", "%", "s", ")", "!\"", ";", "verifyPath", "(", "entityType", ")", ";", "return", "evaluate", "(", "spelExpression", ".", "getValueType", "(", "targetObject", ")", ");", "}", "protected", "final", "<", "T", ">", "Object", "evaluate", "(", "Class", "<", "T", ">", "targetType", ")", "{", "return", "value", "instanceof", "LateObjectEvaluator", "?", "(", "(", "LateObjectEvaluator", ")", "value", ")", ".", "evaluate", "(", "targetType", ")", ":", "value", ";", "/", "**", "*", "Verifies", ",", "that", "the", "path", "for", "the", "current", "operation", "is", "a", "valid", "property", "path", "on", "the", "given", "target", "type", ".", "*", "*", "@", "param", "type", "must", "not", "be", "{", "@", "literal", "null", "}", ".", "*", "/", "protected", "PropertyPath", "verifyPath", "(", "Class", "<", "?>", "type", ")", "{", "List", "<", "String", ">", "segments", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "for", "(", "String", "segment", ":", "path", ".", "split", "(", "\"/", "\")", ")", "{", "if", "(", "!(", "segment", ".", "matches", "(", "\"\\", "\\", "d", "+", "\")", "|", "|", "segment", ".", "equals", "(", "\"-", "\")", "|", "|", "segment", ".", "isEmpty", "(", "))", ")", "{", "segments", ".", "add", "(", "segment", ")", ";", "}", "}", "if", "(", "segments", ".", "isEmpty", "(", "))", "{", "return", "null", ";", "}", "String", "pathSource", "=", "StringUtils", ".", "collectionToDelimitedString", "(", "segments", ",", "\"", ".\"", ");", "try", "{", "return", "PropertyPath", ".", "from", "(", "pathSource", ",", "type", ")", ";", "}", "catch", "(", "PropertyReferenceException", "o_O", ")", "{", "throw", "new", "PatchException", "(", "String", ".", "format", "(", "INVALID_PATH_REFERENCE", ",", "pathSource", ",", "type", ",", "path", ")", ",", "o_O", ")", ";", "}", "}", "@", "Test", "(", "expected", "=", "PatchException", ".", "class", ")", "/", "/", "DATAREST", "-", "1127", "public", "void", "rejectsInvalidPaths", "(", ")", "throws", "Exception", "{", "readJsonPatch", "(", "\"", "patch", "-", "invalid", "-", "path", ".", "json", "\"", ").", "apply", "(", "new", "Todo", "(", "),", "Todo", ".", "class", ")", ";", "}", "[", "{", "\"", "op", "\"", ":\"", "replace", "\"", ",", "\"", "path", "\"", ":\"", "/", "somethingInvalid", "\"", ",", "\"", "value", "\"", ":", "\"", "bar", "\"", "}", "]</s>import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "springframework", ".", "util", ".", "StringUtils", ";", "List", "<", "String", ">", "segments", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "for", "(", "String", "segment", ":", "path", ".", "split", "(", "\"/", "\")", ")", "{", "if", "(", "!(", "segment", ".", "matches", "(", "\"\\", "\\", "d", "+", "\")", "|", "|", "segment", ".", "equals", "(", "\"-", "\")", "|", "|", "segment", ".", "isEmpty", "(", "))", ")", "{", "segments", ".", "add", "(", "segment", ")", ";", "}", "}", "PropertyPath", "propertyPath", "=", "PropertyPath", ".", "from", "(", "StringUtils", ".", "collectionToDelimitedString", "(", "segments", ",", "\"", ".\"", "),", "entityType", ")", ";", "return", "value", "instanceof", "LateObjectEvaluator", "?", "(", "(", "LateObjectEvaluator", ")", "value", ")", ".", "evaluate", "(", "propertyPath", ".", "getType", "(", "))", ":", "value", ";", "return", "value", "instanceof", "LateObjectEvaluator", "?", "(", "(", "LateObjectEvaluator", ")", "value", ")", ".", "evaluate", "(", "spelExpression", ".", "getValueType", "(", "targetObject", ")", ")", ":", "value", ";"], "docstring_tokens": ["patch", "request", "remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["const", "SSL_METHOD", "*", "new_method", ";", "new_method", "=", "ssl23_get_server_method", "(", "s", "-", ">", "version", ")", ";", "if", "(", "new_method", "=", "=", "NULL", ")", "s", "-", ">", "method", "=", "new_method", ";</s>s", "-", ">", "method", "=", "ssl23_get_server_method", "(", "s", "-", ">", "version", ")", ";", "if", "(", "s", "-", ">", "method", "=", "=", "NULL", ")"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["*", ")", "Sanity", "check", "record", "length", "before", "skipping", "explicit", "IV", "in", "DTLS", "to", "fix", "DoS", "attack", ".", "Thanks", "to", "Codenomicon", "for", "discovering", "this", "issue", "using", "Fuzz", "-", "o", "-", "Matic", "fuzzing", "as", "a", "service", "testing", "platform", ".", "(", "CVE", "-", "2012", "-", "2333", ")", "[", "Steve", "Henson", "]", "if", "(", "i", "+", "bs", ">", "(", "int", ")", "rec", "-", ">", "length", ")</s>if", "(", "i", ">", "(", "int", ")", "rec", "-", ">", "length", ")"], "docstring_tokens": ["integer", "underflow"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "abstract", "class", "JdbcCliFunction", "<", "T1", ",", "T2", ">", "implements", "InternalFunction", "<", "T1", ">", "{", "functionStringMap", ".", "put", "(", "new", "AlterConnectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "AlterMappingFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateConnectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateMappingFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeConnectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeMappingFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyConnectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyMappingFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListConnectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListMappingFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "InheritsDefaultPermissionsJDBCFunction", "(", "),", "\"", "*\"", ");", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "private", "static", "class", "CollectDependencyFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "PRContainsValueFunction", "implements", "InternalFunction", "{", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "contributor", "license", "*", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "this", "work", "for", "additional", "information", "regarding", "*", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "You", "may", "obtain", "a", "*", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "distributed", "under", "the", "License", "*", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "*", "or", "implied", ".", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations", "under", "*", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ";", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "/", "**", "*", "Defines", "a", "marker", "interface", "to", "be", "used", "by", "all", "internal", "functions", "and", "expected", "to", "require", "*", "ResourcePermissions", ".", "ALL", "to", "execute", "the", "function", ".", "Internal", "Functions", "are", "functions", "that", "are", "*", "executed", "by", "members", "with", "in", "the", "distributed", "system", ",", "if", "a", "function", "is", "required", "by", "a", "client", "API", "*", "then", "it", "shouldn", "'", "t", "be", "an", "InternalFunction", ".", "*", "/", "public", "interface", "InternalFunction", "<", "T", ">", "extends", "Function", "<", "T", ">", ",", "InternalEntity", "{", "/", "**", "*", "InternalFunction", "do", "require", "ResourcePermissions", ".", "ALL", "so", "that", "it", "only", "allows", "super", "users", "to", "*", "invoke", "from", "Clients", ".", "So", "don", "'", "t", "override", "this", "in", "implementations", ".", "*", "/", "default", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "ALL", ")", ";", "}", "}", "@", "@", "-", "15", ",", "12", "+", "15", ",", "11", "@", "@", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "FindRestEnabledServersFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "static", "class", "ProxyExportFunction", "<", "K", ",", "V", ">", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "private", "static", "class", "ParallelExportFunction", "<", "K", ",", "V", ">", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "private", "static", "class", "WindowedExportFunction", "<", "K", ",", "V", ">", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "static", "class", "StartJmxManagerFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ManagementFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "private", "class", "LocalQueryFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "AlterRuntimeConfigFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ChangeLogLevelFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CloseDurableClientFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CloseDurableCqFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ContinuousQueryFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CreateAsyncEventQueueFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CreateDefinedIndexesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CreateDiskStoreFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "CreateIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DataCommandFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DeployFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DescribeDiskStoreFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DestroyAsyncEventQueueFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DestroyDiskStoreFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DestroyIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ExportConfigFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ExportDataFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ExportLogsFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "FetchRegionAttributesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "FetchSharedConfigurationStatusFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GarbageCollectionFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GatewayReceiverCreateFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GatewaySenderCreateFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GatewaySenderDestroyFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetMemberConfigInformationFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetMemberInformationFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetRegionDescriptionFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetRegionsFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetStackTracesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetSubscriptionQueueSizeFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ImportDataFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListAsyncEventQueuesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListDeployedFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListDiskStoresFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListDurableCqNamesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListFunctionFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ListIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "NetstatFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "RebalanceFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "RegionAlterFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "RegionCreateFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "RegionDestroyFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ShowMissingDiskStoresFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "ShutDownFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "SizeExportLogsFunction", "extends", "ExportLogsFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "UndeployFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "UnregisterFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "UserFunctionExecution", "implements", "InternalFunction", "<", "Object", "[", "]>", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DownloadJarFunction", "implements", "InternalFunction", "<", "Object", "[", "]>", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetClusterConfigurationFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "GetRegionNamesFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "RecreateCacheFunction", "implements", "InternalFunction", "{", "functionStringMap", ".", "put", "(", "new", "AlterRuntimeConfigFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ChangeLogLevelFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CloseDurableClientFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CloseDurableCqFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ContinuousQueryFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateAsyncEventQueueFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateDefinedIndexesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateDiskStoreFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DataCommandFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DeployFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeDiskStoreFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyAsyncEventQueueFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyDiskStoreFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportConfigFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportDataFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportLogsFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "FetchRegionAttributesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "FetchSharedConfigurationStatusFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GarbageCollectionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewayReceiverCreateFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewaySenderCreateFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewaySenderDestroyFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetMemberConfigInformationFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetMemberInformationFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionDescriptionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionsFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetStackTracesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetSubscriptionQueueSizeFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ImportDataFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListAsyncEventQueuesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDeployedFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDiskStoresFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDurableCqNamesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListFunctionFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ListIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "NetstatFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "RebalanceFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionAlterFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionCreateFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionDestroyFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ShowMissingDiskStoresFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "ShutDownFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "SizeExportLogsFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "UndeployFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "UnregisterFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionNamesFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "RecreateCacheFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "DownloadJarFunction", "(", "),", "\"", "*\"", ");", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneCreateIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneDescribeIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneDestroyIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneListIndexFunction", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "*;", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneSearchIndexFunction", "<", "K", ",", "V", ">", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "DumpDirectoryFiles", "implements", "InternalFunction", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneQueryFunction", "implements", "InternalFunction", "<", "LuceneFunctionContext", ">", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "WaitUntilFlushedFunction", "implements", "InternalFunction", "<", "Object", ">", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "InternalFunction", ";", "public", "class", "LuceneGetPageFunction", "implements", "InternalFunction", "<", "Object", ">", "{", "\"", "nopermissions", "not", "authorized", "for", "*", "\")", ",", "new", "LuceneCommandsSecurityDUnitTest", ".", "UserNameAndExpectedResponse", "(", "\"*", "\",", "false", ",", "null", ")", "};", "functionStringMap", ".", "put", "(", "new", "LuceneCreateIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneDescribeIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneDestroyIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneListIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneSearchIndexFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneQueryFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "WaitUntilFlushedFunction", "(", "),", "\"", "*\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneGetPageFunction", "(", "),", "\"", "*\"", ");", "public", "void", "dumpDirectoryFileRequiresAll_insufficientUser", "(", ")", "{", ".", "tableHasRowWithValues", "(", "RESULT_HEADER", ",", "\"", "Exception", ":", "clusterManage", "not", "authorized", "for", "*", "\")", "@", "ConnectionConfiguration", "(", "user", "=", "\"", "*\"", ",", "password", "=", "\"", "*\"", ")", "public", "void", "dumpDirectoryFileRequiresAll_validUser", "(", ")", "{</s>import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "abstract", "class", "JdbcCliFunction", "<", "T1", ",", "T2", ">", "implements", "Function", "<", "T1", ">", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "functionStringMap", ".", "put", "(", "new", "AlterConnectionFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "AlterMappingFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateConnectionFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateMappingFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeConnectionFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeMappingFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyConnectionFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyMappingFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListConnectionFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListMappingFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "InheritsDefaultPermissionsJDBCFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "private", "static", "class", "CollectDependencyFunction", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "FunctionAdapter", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "public", "class", "PRContainsValueFunction", "extends", "FunctionAdapter", "implements", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "public", "class", "FindRestEnabledServersFunction", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "static", "class", "ProxyExportFunction", "<", "K", ",", "V", ">", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "GemFireCacheImpl", ";", "private", "static", "class", "ParallelExportFunction", "<", "K", ",", "V", ">", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "private", "static", "class", "WindowedExportFunction", "<", "K", ",", "V", ">", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "public", "static", "class", "StartJmxManagerFunction", "implements", "Function", ",", "InternalEntity", "{", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "FunctionAdapter", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "public", "class", "ManagementFunction", "extends", "FunctionAdapter", "implements", "InternalEntity", "{", "private", "class", "LocalQueryFunction", "implements", "Function", ",", "InternalEntity", "{", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "AlterRuntimeConfigFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_WRITE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ChangeLogLevelFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_WRITE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CloseDurableClientFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CloseDurableCqFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ContinuousQueryFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CreateAsyncEventQueueFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DEPLOY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CreateDefinedIndexesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CreateDiskStoreFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DISK", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "CreateIndexFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DataCommandFunction", "implements", "Function", ",", "InternalEntity", "{", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_ALL", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DeployFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DEPLOY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DescribeDiskStoreFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DestroyAsyncEventQueueFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DestroyDiskStoreFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DISK", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DestroyIndexFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ExportConfigFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ExportDataFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ExportLogsFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "FetchRegionAttributesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "FunctionAdapter", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "FetchSharedConfigurationStatusFunction", "extends", "FunctionAdapter", "implements", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GarbageCollectionFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GatewayReceiverCreateFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_GATEWAY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GatewaySenderCreateFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_GATEWAY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GatewaySenderDestroyFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_GATEWAY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetMemberConfigInformationFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetMemberInformationFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetRegionDescriptionFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetRegionsFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetStackTracesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetSubscriptionQueueSizeFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ImportDataFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_WRITE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListAsyncEventQueuesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListDeployedFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListDiskStoresFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListDurableCqNamesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListFunctionFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ListIndexFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ_QUERY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "NetstatFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "RebalanceFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "RegionAlterFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "RegionCreateFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singletonList", "(", "ResourcePermissions", ".", "DATA_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "RegionDestroyFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "DATA_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ShowMissingDiskStoresFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "ShutDownFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "SizeExportLogsFunction", "extends", "ExportLogsFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "UndeployFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DEPLOY", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "UnregisterFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE_DEPLOY", ")", ";", "}", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "public", "class", "UserFunctionExecution", "implements", "Function", "<", "Object", "[", "]>", ",", "InternalEntity", "{", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "DownloadJarFunction", "implements", "Function", "<", "Object", "[", "]>", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetClusterConfigurationFunction", "implements", "Function", ",", "InternalEntity", "{", "/", "**", "*", "this", "function", "will", "return", "all", "cluster", "config", "which", "will", "potentially", "leak", "security", "information", ".", "*", "Thus", "we", "require", "all", "permissions", "to", "execute", "this", "function", "*", "*/", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "ALL", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "GetRegionNamesFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_READ", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "management", ".", "internal", ".", "security", ".", "ResourcePermissions", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "RecreateCacheFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "ResourcePermissions", ".", "CLUSTER_MANAGE", ")", ";", "}", "functionStringMap", ".", "put", "(", "new", "AlterRuntimeConfigFunction", "(", "),", "\"", "CLUSTER", ":", "WRITE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ChangeLogLevelFunction", "(", "),", "\"", "CLUSTER", ":", "WRITE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CloseDurableClientFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CloseDurableCqFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ContinuousQueryFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateAsyncEventQueueFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DEPLOY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateDefinedIndexesFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateDiskStoreFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DISK", "\"", ");", "functionStringMap", ".", "put", "(", "new", "CreateIndexFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DataCommandFunction", "(", "),", "\"", "DATA", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DeployFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DEPLOY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DescribeDiskStoreFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyAsyncEventQueueFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyDiskStoreFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DISK", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DestroyIndexFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportConfigFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportDataFunction", "(", "),", "\"", "DATA", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ExportLogsFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "FetchRegionAttributesFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "FetchSharedConfigurationStatusFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GarbageCollectionFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewayReceiverCreateFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "GATEWAY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewaySenderCreateFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "GATEWAY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GatewaySenderDestroyFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "GATEWAY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetMemberConfigInformationFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetMemberInformationFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionDescriptionFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionsFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetStackTracesFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetSubscriptionQueueSizeFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ImportDataFunction", "(", "),", "\"", "DATA", ":", "WRITE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListAsyncEventQueuesFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDeployedFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDiskStoresFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListDurableCqNamesFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListFunctionFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ListIndexFunction", "(", "),", "\"", "CLUSTER", ":", "READ", ":", "QUERY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "NetstatFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "RebalanceFunction", "(", "),", "\"", "DATA", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionAlterFunction", "(", "),", "\"", "DATA", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionCreateFunction", "(", "),", "\"", "DATA", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "RegionDestroyFunction", "(", "),", "\"", "DATA", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ShowMissingDiskStoresFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "ShutDownFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "SizeExportLogsFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "UndeployFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DEPLOY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "UnregisterFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "DEPLOY", "\"", ");", "functionStringMap", ".", "put", "(", "new", "GetRegionNamesFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "functionStringMap", ".", "put", "(", "new", "RecreateCacheFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "DownloadJarFunction", "(", "),", "\"", "CLUSTER", ":", "READ", "\"", ");", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "internal", ".", "security", ".", "LucenePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "internal", ".", "xml", ".", "LuceneXmlConstants", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "LuceneCreateIndexFunction", "implements", "InternalEntity", ",", "Function", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "new", "ResourcePermission", "(", "Resource", ".", "CLUSTER", ",", "Operation", ".", "MANAGE", ",", "LucenePermission", ".", "TARGET", ")", ");", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "internal", ".", "security", ".", "LucenePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "LuceneDescribeIndexFunction", "implements", "InternalEntity", ",", "Function", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "new", "ResourcePermission", "(", "Resource", ".", "CLUSTER", ",", "Operation", ".", "READ", ",", "LucenePermission", ".", "TARGET", ")", ");", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "internal", ".", "security", ".", "LucenePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "LuceneDestroyIndexFunction", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "new", "ResourcePermission", "(", "Resource", ".", "CLUSTER", ",", "Operation", ".", "MANAGE", ",", "LucenePermission", ".", "TARGET", ")", ");", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "internal", ".", "security", ".", "LucenePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "LuceneListIndexFunction", "implements", "InternalEntity", ",", "Function", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "new", "ResourcePermission", "(", "Resource", ".", "CLUSTER", ",", "Operation", ".", "READ", ",", "LucenePermission", ".", "TARGET", ")", ");", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "LuceneQuery", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "LuceneQueryException", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "LuceneResultStruct", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "LuceneService", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "LuceneServiceProvider", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "lucene", ".", "PageableLuceneQueryResults", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "LuceneSearchIndexFunction", "<", "K", ",", "V", ">", "implements", "InternalEntity", ",", "Function", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "return", "Collections", ".", "singleton", "(", "new", "ResourcePermission", "(", "Resource", ".", "DATA", ",", "Operation", ".", "READ", ",", "regionName", ")", ");", "}", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Operation", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ".", "Resource", ";", "public", "class", "DumpDirectoryFiles", "implements", "Function", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "Set", "<", "ResourcePermission", ">", "required", "=", "new", "HashSet", "<", ">(", ");", "required", ".", "add", "(", "new", "ResourcePermission", "(", "Resource", ".", "DATA", ",", "Operation", ".", "READ", ",", "regionName", ")", ");", "required", ".", "add", "(", "new", "ResourcePermission", "(", "Resource", ".", "CLUSTER", ",", "Operation", ".", "MANAGE", ")", ");", "return", "required", ";", "}", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "LuceneQueryFunction", "implements", "Function", "<", "LuceneFunctionContext", ">", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "ResourcePermission", "read", "=", "new", "ResourcePermission", "(", "ResourcePermission", ".", "Resource", ".", "DATA", ",", "ResourcePermission", ".", "Operation", ".", "READ", ",", "regionName", ")", ";", "return", "Collections", ".", "singleton", "(", "read", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "WaitUntilFlushedFunction", "implements", "Function", "<", "Object", ">", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "ResourcePermission", "read", "=", "new", "ResourcePermission", "(", "ResourcePermission", ".", "Resource", ".", "DATA", ",", "ResourcePermission", ".", "Operation", ".", "READ", ",", "regionName", ")", ";", "return", "Collections", ".", "singleton", "(", "read", ")", ";", "}", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "Function", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "InternalEntity", ";", "import", "org", ".", "apache", ".", "geode", ".", "security", ".", "ResourcePermission", ";", "public", "class", "LuceneGetPageFunction", "implements", "Function", "<", "Object", ">", ",", "InternalEntity", "{", "@", "Override", "public", "Collection", "<", "ResourcePermission", ">", "getRequiredPermissions", "(", "String", "regionName", ")", "{", "ResourcePermission", "read", "=", "new", "ResourcePermission", "(", "ResourcePermission", ".", "Resource", ".", "DATA", ",", "ResourcePermission", ".", "Operation", ".", "READ", ",", "regionName", ")", ";", "return", "Collections", ".", "singleton", "(", "read", ")", ";", "}", "\"", "nopermissions", "not", "authorized", "for", "DATA", ":", "READ", "\"", "),", "new", "LuceneCommandsSecurityDUnitTest", ".", "UserNameAndExpectedResponse", "(", "\"", "dataread", "\"", "+", "REGION_NAME", ",", "false", ",", "null", ")", "};", "functionStringMap", ".", "put", "(", "new", "LuceneCreateIndexFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "LUCENE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneDescribeIndexFunction", "(", "),", "\"", "CLUSTER", ":", "READ", ":", "LUCENE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneDestroyIndexFunction", "(", "),", "\"", "CLUSTER", ":", "MANAGE", ":", "LUCENE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneListIndexFunction", "(", "),", "\"", "CLUSTER", ":", "READ", ":", "LUCENE", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneSearchIndexFunction", "(", "),", "\"", "DATA", ":", "READ", ":", "testRegion", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneQueryFunction", "(", "),", "\"", "DATA", ":", "READ", ":", "testRegion", "\"", ");", "functionStringMap", ".", "put", "(", "new", "WaitUntilFlushedFunction", "(", "),", "\"", "DATA", ":", "READ", ":", "testRegion", "\"", ");", "functionStringMap", ".", "put", "(", "new", "LuceneGetPageFunction", "(", "),", "\"", "DATA", ":", "READ", ":", "testRegion", "\"", ");", "public", "void", "dumpDirectoryFileRequiresBoth_AsClusterManage", "(", ")", "{", "gfsh", ".", "executeAndAssertThat", "(", "\"", "execute", "function", "-", "-", "region", "=", "testRegion", "-", "-", "id", "=", "\"", "+", "DumpDirectoryFiles", ".", "ID", ")", ".", "tableHasRowCount", "(", "RESULT_HEADER", ",", "1", ")", ".", "tableHasRowWithValues", "(", "RESULT_HEADER", ",", "\"", "Exception", ":", "clusterManage", "not", "authorized", "for", "DATA", ":", "READ", ":", "testRegion", "\"", ")", ".", "statusIsError", "(", ");", "}", "@", "Test", "@", "ConnectionConfiguration", "(", "user", "=", "\"", "dataRead", "\"", ",", "password", "=", "\"", "dataRead", "\"", ")", "public", "void", "dumpDirectoryFileRequiresBoth_AsDataRead", "(", ")", "{", "gfsh", ".", "executeAndAssertThat", "(", "\"", "execute", "function", "-", "-", "region", "=", "testRegion", "-", "-", "id", "=", "\"", "+", "DumpDirectoryFiles", ".", "ID", ")", ".", "tableHasRowCount", "(", "RESULT_HEADER", ",", "1", ")", ".", "tableHasRowWithValues", "(", "RESULT_HEADER", ",", "\"", "Exception", ":", "dataRead", "not", "authorized", "for", "CLUSTER", ":", "MANAGE", "\"", ")", ".", "statusIsError", "(", ");", "}", "@", "Test", "@", "ConnectionConfiguration", "(", "user", "=", "\"", "clusterManage", ",", "dataReadRegionB", "\"", ",", "password", "=", "\"", "clusterManage", ",", "dataReadRegionB", "\"", ")", "public", "void", "dumpDirectoryFileRequiresBoth_dataReadAnotherRegion", "(", ")", "{", "gfsh", ".", "executeAndAssertThat", "(", "\"", "execute", "function", "-", "-", "region", "=", "testRegion", "-", "-", "id", "=", "\"", "+", "DumpDirectoryFiles", ".", "ID", ")", ".", "tableHasRowCount", "(", "RESULT_HEADER", ",", "1", ")", ".", "tableHasRowWithValues", "(", "RESULT_HEADER", ",", "\"", "Exception", ":", "clusterManage", ",", "dataReadRegionB", "not", "authorized", "for", "DATA", ":", "READ", ":", "testRegion", "\"", ")", ".", "statusIsError", "(", ");", "}", "@", "Test", "@", "ConnectionConfiguration", "(", "user", "=", "\"", "clusterManage", ",", "dataReadTestRegionA", "\"", ",", "password", "=", "\"", "clusterManage", ",", "dataReadTestRegionA", "\"", ")", "public", "void", "dumpDirectoryFileRequiresBoth_dataReadInsufficient", "(", ")", "{", ".", "tableHasRowWithValues", "(", "RESULT_HEADER", ",", "\"", "Exception", ":", "clusterManage", ",", "dataReadTestRegionA", "not", "authorized", "for", "DATA", ":", "READ", ":", "testRegion", "\"", ")", "@", "ConnectionConfiguration", "(", "user", "=", "\"", "clusterManage", ",", "dataReadTestRegion", "\"", ",", "password", "=", "\"", "clusterManage", ",", "dataReadTestRegion", "\"", ")", "public", "void", "dumpDirectoryFileRequiresBoth_validUser", "(", ")", "{"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["/", "*", "*", "We", "remove", "any", "OCSP_RESPIDs", "from", "a", "previous", "handshake", "*", "to", "prevent", "unbounded", "memory", "growth", "-", "CVE", "-", "2016", "-", "6304", "*", "/", "sk_OCSP_RESPID_pop_free", "(", "s", "-", ">", "tlsext_ocsp_ids", ",", "OCSP_RESPID_free", ")", ";", "if", "(", "dsize", ">", "0", ")", "{", "s", "-", ">", "tlsext_ocsp_ids", "=", "sk_OCSP_RESPID_new_null", "(", ");", "if", "(", "s", "-", ">", "tlsext_ocsp_ids", "=", "=", "NULL", ")", "{", "*", "al", "=", "SSL_AD_INTERNAL_ERROR", ";", "return", "0", ";", "}", "}", "else", "{", "s", "-", ">", "tlsext_ocsp_ids", "=", "NULL", ";", "}</s>if", "(", "!", "s", "-", ">", "tlsext_ocsp_ids", "&", "&", "!", "(", "s", "-", ">", "tlsext_ocsp_ids", "=", "sk_OCSP_RESPID_new_null", "(", "))", ")", "{", "OCSP_RESPID_free", "(", "id", ")", ";", "*", "al", "=", "SSL_AD_INTERNAL_ERROR", ";", "return", "0", ";", "}"], "docstring_tokens": ["memory", "leaks"]}
{"contents": ["empty"], "code_tokens": ["depends", "on", "TTY", "&", "&", "BROKEN</s>depends", "on", "TTY", "-", "--", "help"], "docstring_tokens": ["race", "condition"]}
{"contents": ["empty"], "code_tokens": ["#", "define", "PER_CLEAR_ON_SETID", "(", "READ_IMPLIES_EXEC", "|", "\\", "ADDR_NO_RANDOMIZE", "|", "\\", "ADDR_COMPAT_LAYOUT", "|", "\\", "MMAP_PAGE_ZERO", ")</s>#", "define", "PER_CLEAR_ON_SETID", "(", "READ_IMPLIES_EXEC", "|", "ADDR_NO_RANDOMIZE", ")"], "docstring_tokens": ["pointer", "dereference"]}
{"contents": ["empty"], "code_tokens": ["import", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "config", ".", "WebloggerConfig", ";", "import", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "config", ".", "WebloggerRuntimeConfig", ";", "import", "org", ".", "apache", ".", "xmlrpc", ".", "util", ".", "SAXParsers", ";", "import", "org", ".", "springframework", ".", "security", ".", "access", ".", "method", ".", "P", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXNotRecognizedException", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXNotSupportedException", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "ParserConfigurationException", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "SAXParserFactory", ";", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getThreadManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getIndexManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getThemeManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getUserManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getBookmarkManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getMediaFileManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getFileContentManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getWeblogEntryManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getWeblogManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getPropertiesManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getPluginManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "business", ".", "Weblogger", "#", "getOAuthManager", "(", ")", "/", "/", "Turn", "off", "External", "DTD", "support", "in", "SAXParser", "to", "protect", "Roller", "from", "vulnerability", ".", "SAXParserFactory", "spf", "=", "SAXParsers", ".", "getSAXParserFactory", "(", ");", "try", "{", "spf", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "spf", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "}", "catch", "(", "ParserConfigurationException", "|", "SAXNotRecognizedException", "|", "SAXNotSupportedException", "e", ")", "{", "String", "message", "=", "\"", "Unable", "to", "turn", "off", "External", "DTD", "support", "in", "SAXParser", ".", "XML", "-", "RLC", "is", "vulnerable", "\"", ";", "if", "(", "log", ".", "isDebugEnabled", "(", ")", ")", "{", "log", ".", "error", "(", "message", ",", "e", ")", ";", "}", "else", "{", "log", ".", "error", "(", "message", ")", ";", "}", "}</s>*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getThreadManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "model", ".", "Weblogger", "#", "getIndexManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getThemeManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getUserManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getBookmarkManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getMediaFileManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getFileContentManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getWeblogEntryManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getWeblogManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getPropertiesManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getPingTargetManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getPluginManager", "(", ")", "*", "@", "see", "org", ".", "apache", ".", "roller", ".", "weblogger", ".", "modelWebloggerr", "#", "getOauthManager", "(", ")"], "docstring_tokens": ["request", "forgery", "(ssrf", ")"]}
{"contents": ["empty"], "code_tokens": ["_ADMIN_", "permission", "also", "has", "a", "special", "role", "in", "terms", "of", "ACLs", ":", "in", "order", "to", "retrieve", "ACLs", "of", "a", "znode", "user", "has", "to", "have", "_READ_", "or", "_ADMIN_", "permission", ",", "but", "without", "_ADMIN_", "permission", ",", "digest", "hash", "values", "will", "be", "masked", "out", ".", "This", "operation", "returns", "a", "node", "\u2019", "s", "ACL", "info", ".", "The", "node", "must", "have", "READ", "or", "ADMIN", "permission", "set", ".", "Without", "ADMIN", "permission", ",", "the", "digest", "hash", "values", "will", "be", "masked", "out", ".", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "nio", ".", "ByteBuffer", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "common", ".", "Time", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "data", ".", "Id", ";", "import", "org", ".", "slf4j", ".", "Logger", ";", "import", "org", ".", "slf4j", ".", "LoggerFactory", ";", "DataNode", "n", "=", "zks", ".", "getZKDatabase", "(", ").", "getNode", "(", "path", ")", ";", "if", "(", "n", "=", "=", "null", ")", "{", "throw", "new", "KeeperException", ".", "NoNodeException", "(", ");", "}", "PrepRequestProcessor", ".", "checkACL", "(", "zks", ",", "request", ".", "cnxn", ",", "zks", ".", "getZKDatabase", "(", ").", "aclForNode", "(", "n", ")", ",", "ZooDefs", ".", "Perms", ".", "READ", "|", "ZooDefs", ".", "Perms", ".", "ADMIN", ",", "request", ".", "authInfo", ",", "path", ",", "null", ")", ";", "Stat", "stat", "=", "new", "Stat", "(", ");", "zks", ".", "getZKDatabase", "(", ").", "getACL", "(", "path", ",", "stat", ")", ";", "try", "{", "PrepRequestProcessor", ".", "checkACL", "(", "zks", ",", "request", ".", "cnxn", ",", "zks", ".", "getZKDatabase", "(", ").", "aclForNode", "(", "n", ")", ",", "ZooDefs", ".", "Perms", ".", "ADMIN", ",", "request", ".", "authInfo", ",", "path", ",", "null", ")", ";", "rsp", "=", "new", "GetACLResponse", "(", "acl", ",", "stat", ")", ";", "}", "catch", "(", "KeeperException", ".", "NoAuthException", "e", ")", "{", "List", "<", "ACL", ">", "acl1", "=", "new", "ArrayList", "<", "ACL", ">", "(", "acl", ".", "size", "(", "))", ";", "for", "(", "ACL", "a", ":", "acl", ")", "{", "if", "(", "\"", "digest", "\"", ".", "equals", "(", "a", ".", "getId", "(", ").", "getScheme", "(", "))", ")", "{", "Id", "id", "=", "a", ".", "getId", "(", ");", "Id", "id1", "=", "new", "Id", "(", "id", ".", "getScheme", "(", "),", "id", ".", "getId", "(", ").", "replaceAll", "(", "\":", ".*", "\",", "\"", ":", "x", "\"", "))", ";", "acl1", ".", "add", "(", "new", "ACL", "(", "a", ".", "getPerms", "(", "),", "id1", ")", ");", "}", "else", "{", "acl1", ".", "add", "(", "a", ")", ";", "}", "}", "rsp", "=", "new", "GetACLResponse", "(", "acl1", ",", "stat", ")", ";", "}", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "*", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "*", "distributed", "with", "this", "work", "for", "additional", "information", "*", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "*", "to", "you", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "zookeeper", ".", "server", ";", "import", "org", ".", "apache", ".", "jute", ".", "BinaryOutputArchive", ";", "import", "org", ".", "apache", ".", "jute", ".", "Record", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "KeeperException", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "ZooDefs", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "data", ".", "ACL", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "data", ".", "Id", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "data", ".", "Stat", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "proto", ".", "GetACLRequest", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "proto", ".", "GetACLResponse", ";", "import", "org", ".", "apache", ".", "zookeeper", ".", "proto", ".", "ReplyHeader", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "mockito", ".", "invocation", ".", "InvocationOnMock", ";", "import", "org", ".", "mockito", ".", "stubbing", ".", "Answer", ";", "import", "java", ".", "io", ".", "ByteArrayOutputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "nio", ".", "ByteBuffer", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "List", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "equalTo", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertThat", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "import", "static", "org", ".", "mockito", ".", "Matchers", ".", "any", ";", "import", "static", "org", ".", "mockito", ".", "Matchers", ".", "anyString", ";", "import", "static", "org", ".", "mockito", ".", "Matchers", ".", "eq", ";", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "doAnswer", ";", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "mock", ";", "import", "static", "org", ".", "mockito", ".", "Mockito", ".", "when", ";", "public", "class", "FinalRequestProcessorTest", "{", "private", "List", "<", "ACL", ">", "testACLs", "=", "new", "ArrayList", "<", "ACL", ">", "()", ";", "private", "final", "Record", "[", "]", "responseRecord", "=", "new", "Record", "[", "1", "]", ";", "private", "final", "ReplyHeader", "[", "]", "replyHeaders", "=", "new", "ReplyHeader", "[", "1", "]", ";", "private", "ServerCnxn", "cnxn", ";", "private", "ByteBuffer", "bb", ";", "private", "FinalRequestProcessor", "processor", ";", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "KeeperException", ".", "NoNodeException", ",", "IOException", "{", "testACLs", ".", "clear", "(", ");", "testACLs", ".", "addAll", "(", "Arrays", ".", "asList", "(", "new", "ACL", "(", "ZooDefs", ".", "Perms", ".", "ALL", ",", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "user", ":", "secrethash", "\"", "))", ",", "new", "ACL", "(", "ZooDefs", ".", "Perms", ".", "ADMIN", ",", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "adminuser", ":", "adminsecret", "\"", "))", ",", "new", "ACL", "(", "ZooDefs", ".", "Perms", ".", "READ", ",", "new", "Id", "(", "\"", "world", "\"", ",", "\"", "anyone", "\"", "))", ")", ");", "ZooKeeperServer", "zks", "=", "new", "ZooKeeperServer", "(", ");", "ZKDatabase", "db", "=", "mock", "(", "ZKDatabase", ".", "class", ")", ";", "String", "testPath", "=", "\"", "/", "testPath", "\"", ";", "when", "(", "db", ".", "getNode", "(", "eq", "(", "testPath", ")", "))", ".", "thenReturn", "(", "new", "DataNode", "(", "))", ";", "when", "(", "db", ".", "getACL", "(", "eq", "(", "testPath", ")", ",", "any", "(", "Stat", ".", "class", ")", "))", ".", "thenReturn", "(", "testACLs", ")", ";", "when", "(", "db", ".", "aclForNode", "(", "any", "(", "DataNode", ".", "class", ")", "))", ".", "thenReturn", "(", "testACLs", ")", ";", "zks", ".", "setZKDatabase", "(", "db", ")", ";", "processor", "=", "new", "FinalRequestProcessor", "(", "zks", ")", ";", "cnxn", "=", "mock", "(", "ServerCnxn", ".", "class", ")", ";", "doAnswer", "(", "new", "Answer", "(", ")", "{", "@", "Override", "public", "Object", "answer", "(", "InvocationOnMock", "invocationOnMock", ")", "{", "replyHeaders", "[", "0", "]", "=", "(", "ReplyHeader", ")", "invocationOnMock", ".", "getArguments", "(", ")[", "0", "]", ";", "responseRecord", "[", "0", "]", "=", "(", "Record", ")", "invocationOnMock", ".", "getArguments", "(", ")[", "1", "]", ";", "return", "null", ";", "}", "}", ").", "when", "(", "cnxn", ")", ".", "sendResponse", "(", "any", "(", "ReplyHeader", ".", "class", ")", ",", "any", "(", "Record", ".", "class", ")", ",", "anyString", "(", "))", ";", "GetACLRequest", "getACLRequest", "=", "new", "GetACLRequest", "(", ");", "getACLRequest", ".", "setPath", "(", "testPath", ")", ";", "ByteArrayOutputStream", "baos", "=", "new", "ByteArrayOutputStream", "(", ");", "BinaryOutputArchive", "boa", "=", "BinaryOutputArchive", ".", "getArchive", "(", "baos", ")", ";", "getACLRequest", ".", "serialize", "(", "boa", ",", "\"", "request", "\"", ");", "baos", ".", "close", "(", ");", "bb", "=", "ByteBuffer", ".", "wrap", "(", "baos", ".", "toByteArray", "(", "))", ";", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_NoAuth_WorldCanRead", "(", ")", "{", "/", "/", "Arrange", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "new", "ArrayList", "<", "Id", ">", "()", ");", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertMasked", "(", "true", ")", ";", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_NoAuth_NoWorld", "(", ")", "{", "/", "/", "Arrange", "testACLs", ".", "remove", "(", "2", ")", ";", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "new", "ArrayList", "<", "Id", ">", "()", ");", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertThat", "(", "KeeperException", ".", "Code", ".", "get", "(", "replyHeaders", "[", "0", "]", ".", "getErr", "(", "))", ",", "equalTo", "(", "KeeperException", ".", "Code", ".", "NOAUTH", ")", ");", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_UserCanRead", "(", ")", "{", "/", "/", "Arrange", "List", "<", "Id", ">", "authInfo", "=", "new", "ArrayList", "<", "Id", ">", "()", ";", "authInfo", ".", "add", "(", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "otheruser", ":", "somesecrethash", "\"", "))", ";", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "authInfo", ")", ";", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertMasked", "(", "true", ")", ";", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_UserCanAll", "(", ")", "{", "/", "/", "Arrange", "List", "<", "Id", ">", "authInfo", "=", "new", "ArrayList", "<", "Id", ">", "()", ";", "authInfo", ".", "add", "(", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "user", ":", "secrethash", "\"", "))", ";", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "authInfo", ")", ";", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertMasked", "(", "false", ")", ";", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_AdminUser", "(", ")", "{", "/", "/", "Arrange", "List", "<", "Id", ">", "authInfo", "=", "new", "ArrayList", "<", "Id", ">", "()", ";", "authInfo", ".", "add", "(", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "adminuser", ":", "adminsecret", "\"", "))", ";", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "authInfo", ")", ";", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertMasked", "(", "false", ")", ";", "}", "@", "Test", "public", "void", "testACLDigestHashHiding_OnlyAdmin", "(", ")", "{", "/", "/", "Arrange", "testACLs", ".", "clear", "(", ");", "testACLs", ".", "addAll", "(", "Arrays", ".", "asList", "(", "new", "ACL", "(", "ZooDefs", ".", "Perms", ".", "READ", ",", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "user", ":", "secrethash", "\"", "))", ",", "new", "ACL", "(", "ZooDefs", ".", "Perms", ".", "ADMIN", ",", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "adminuser", ":", "adminsecret", "\"", "))", ")", ");", "List", "<", "Id", ">", "authInfo", "=", "new", "ArrayList", "<", "Id", ">", "()", ";", "authInfo", ".", "add", "(", "new", "Id", "(", "\"", "digest", "\"", ",", "\"", "adminuser", ":", "adminsecret", "\"", "))", ";", "/", "/", "Act", "Request", "r", "=", "new", "Request", "(", "cnxn", ",", "0", ",", "0", ",", "ZooDefs", ".", "OpCode", ".", "getACL", ",", "bb", ",", "authInfo", ")", ";", "processor", ".", "processRequest", "(", "r", ")", ";", "/", "/", "Assert", "assertTrue", "(", "\"", "Not", "a", "GetACL", "response", ".", "Auth", "failed", "?", "\",", "responseRecord", "[", "0", "]", "instanceof", "GetACLResponse", ")", ";", "GetACLResponse", "rsp", "=", "(", "GetACLResponse", ")", "responseRecord", "[", "0", "]", ";", "assertThat", "(", "\"", "Number", "of", "ACLs", "in", "the", "response", "are", "different", "\"", ",", "rsp", ".", "getAcl", "(", ").", "size", "(", "),", "equalTo", "(", "2", ")", ");", "/", "/", "Verify", "ACLs", "in", "the", "response", "assertThat", "(", "\"", "Password", "hash", "mismatch", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "0", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "user", ":", "secrethash", "\"", "))", ";", "assertThat", "(", "\"", "Password", "hash", "mismatch", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "1", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "adminuser", ":", "adminsecret", "\"", "))", ";", "}", "private", "void", "assertMasked", "(", "boolean", "masked", ")", "{", "assertTrue", "(", "\"", "Not", "a", "GetACL", "response", ".", "Auth", "failed", "?", "\",", "responseRecord", "[", "0", "]", "instanceof", "GetACLResponse", ")", ";", "GetACLResponse", "rsp", "=", "(", "GetACLResponse", ")", "responseRecord", "[", "0", "]", ";", "assertThat", "(", "\"", "Number", "of", "ACLs", "in", "the", "response", "are", "different", "\"", ",", "rsp", ".", "getAcl", "(", ").", "size", "(", "),", "equalTo", "(", "3", ")", ");", "/", "/", "Verify", "ACLs", "in", "the", "response", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "0", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "ALL", ")", ");", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "0", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "digest", "\"", "))", ";", "if", "(", "masked", ")", "{", "assertThat", "(", "\"", "Password", "hash", "is", "not", "masked", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "0", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "user", ":", "x", "\"", "))", ";", "}", "else", "{", "assertThat", "(", "\"", "Password", "hash", "mismatch", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "0", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "user", ":", "secrethash", "\"", "))", ";", "}", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "1", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "ADMIN", ")", ");", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "1", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "digest", "\"", "))", ";", "if", "(", "masked", ")", "{", "assertThat", "(", "\"", "Password", "hash", "is", "not", "masked", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "1", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "adminuser", ":", "x", "\"", "))", ";", "}", "else", "{", "assertThat", "(", "\"", "Password", "hash", "mismatch", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "1", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "adminuser", ":", "adminsecret", "\"", "))", ";", "}", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "2", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "READ", ")", ");", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "2", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "world", "\"", "))", ";", "assertThat", "(", "\"", "Invalid", "ACL", "list", "in", "the", "response", "\"", ",", "rsp", ".", "getAcl", "(", ").", "get", "(", "2", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "anyone", "\"", "))", ";", "/", "/", "Verify", "that", "FinalRequestProcessor", "hasn", "'", "t", "changed", "the", "original", "ACL", "objects", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "0", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "ALL", ")", ");", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "0", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "digest", "\"", "))", ";", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "0", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "user", ":", "secrethash", "\"", "))", ";", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "1", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "ADMIN", ")", ");", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "1", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "digest", "\"", "))", ";", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "1", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "adminuser", ":", "adminsecret", "\"", "))", ";", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "2", ")", ".", "getPerms", "(", "),", "equalTo", "(", "ZooDefs", ".", "Perms", ".", "READ", ")", ");", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "2", ")", ".", "getId", "(", ").", "getScheme", "(", "),", "equalTo", "(", "\"", "world", "\"", "))", ";", "assertThat", "(", "\"", "Original", "ACL", "list", "has", "been", "modified", "\"", ",", "testACLs", ".", "get", "(", "2", ")", ".", "getId", "(", ").", "getId", "(", "),", "equalTo", "(", "\"", "anyone", "\"", "))", ";", "}", "}</s>This", "operation", "returns", "a", "node", "\u2019", "s", "ACL", "info", ".", "import", "org", ".", "apache", ".", "zookeeper", ".", "common", ".", "Time", ";", "Stat", "stat", "=", "new", "Stat", "(", ");", "zks", ".", "getZKDatabase", "(", ").", "getACL", "(", "path", ",", "stat", ")", ";", "rsp", "=", "new", "GetACLResponse", "(", "acl", ",", "stat", ")", ";"], "docstring_tokens": ["information", "disclosure"]}
{"contents": ["empty"], "code_tokens": ["memset", "(", "&", "tfrc", ",", "0", ",", "sizeof", "(", "tfrc", ")", ");</s>"], "docstring_tokens": ["info", "leaks"]}
{"contents": ["empty"], "code_tokens": ["/", "**", "*", "Factory", "class", "to", "instantiate", "factories", "for", "XML", "processing", ".", "*", "The", "default", "factory", "disables", "external", "entity", "processing", ".", "*", "Legacy", "behavior", "with", "external", "entity", "processing", "can", "be", "enabled", "by", "specifying", "a", "value", "of", "LEGACY_INSECURE", ".", "*", "Or", "specify", "a", "custom", "class", "that", "implements", "{", "@", "code", "org", ".", "postgresql", ".", "xml", ".", "PGXmlFactoryFactory", "}", ".", "*", "/", "XML_FACTORY_FACTORY", "(", "\"", "xmlFactoryFactory", "\"", ",", "\"", "\",", "\"", "Factory", "class", "to", "instantiate", "factories", "for", "XML", "processing", "\"", "),", "import", "org", ".", "postgresql", ".", "xml", ".", "PGXmlFactoryFactory", ";", "/", "**", "*", "Retrieve", "the", "factory", "to", "instantiate", "XML", "processing", "factories", ".", "*", "*", "@", "return", "The", "factory", "to", "use", "to", "instantiate", "XML", "processing", "factories", "*", "@", "throws", "SQLException", "if", "the", "class", "cannot", "be", "found", "or", "instantiated", ".", "*", "/", "PGXmlFactoryFactory", "getXmlFactoryFactory", "(", ")", "throws", "SQLException", ";", "public", "String", "getXmlFactoryFactory", "(", ")", "{", "return", "PGProperty", ".", "XML_FACTORY_FACTORY", ".", "get", "(", "properties", ")", ";", "}", "public", "void", "setXmlFactoryFactory", "(", "String", "xmlFactoryFactory", ")", "{", "PGProperty", ".", "XML_FACTORY_FACTORY", ".", "set", "(", "properties", ",", "xmlFactoryFactory", ")", ";", "}", "import", "org", ".", "postgresql", ".", "xml", ".", "DefaultPGXmlFactoryFactory", ";", "import", "org", ".", "postgresql", ".", "xml", ".", "LegacyInsecurePGXmlFactoryFactory", ";", "import", "org", ".", "postgresql", ".", "xml", ".", "PGXmlFactoryFactory", ";", "private", "final", "String", "xmlFactoryFactoryClass", ";", "private", "PGXmlFactoryFactory", "xmlFactoryFactory", ";", "xmlFactoryFactoryClass", "=", "PGProperty", ".", "XML_FACTORY_FACTORY", ".", "get", "(", "info", ")", ";", "@", "Override", "public", "PGXmlFactoryFactory", "getXmlFactoryFactory", "(", ")", "throws", "SQLException", "{", "if", "(", "xmlFactoryFactory", "=", "=", "null", ")", "{", "if", "(", "xmlFactoryFactoryClass", "=", "=", "null", "|", "|", "xmlFactoryFactoryClass", ".", "equals", "(", "\"\"", "))", "{", "xmlFactoryFactory", "=", "DefaultPGXmlFactoryFactory", ".", "INSTANCE", ";", "}", "else", "if", "(", "xmlFactoryFactoryClass", ".", "equals", "(", "\"", "LEGACY_INSECURE", "\"", "))", "{", "xmlFactoryFactory", "=", "LegacyInsecurePGXmlFactoryFactory", ".", "INSTANCE", ";", "}", "else", "{", "Class", "<", "?>", "clazz", ";", "try", "{", "clazz", "=", "Class", ".", "forName", "(", "xmlFactoryFactoryClass", ")", ";", "}", "catch", "(", "ClassNotFoundException", "ex", ")", "{", "throw", "new", "PSQLException", "(", "GT", ".", "tr", "(", "\"", "Could", "not", "instantiate", "xmlFactoryFactory", ":", "{", "0", "}", "\",", "xmlFactoryFactoryClass", ")", ",", "PSQLState", ".", "INVALID_PARAMETER_VALUE", ",", "ex", ")", ";", "}", "if", "(", "!", "clazz", ".", "isAssignableFrom", "(", "PGXmlFactoryFactory", ".", "class", ")", ")", "{", "throw", "new", "PSQLException", "(", "GT", ".", "tr", "(", "\"", "Connection", "property", "xmlFactoryFactory", "must", "implement", "PGXmlFactoryFactory", ":", "{", "0", "}", "\",", "xmlFactoryFactoryClass", ")", ",", "PSQLState", ".", "INVALID_PARAMETER_VALUE", ")", ";", "}", "try", "{", "xmlFactoryFactory", "=", "(", "PGXmlFactoryFactory", ")", "clazz", ".", "newInstance", "(", ");", "}", "catch", "(", "Exception", "ex", ")", "{", "throw", "new", "PSQLException", "(", "GT", ".", "tr", "(", "\"", "Could", "not", "instantiate", "xmlFactoryFactory", ":", "{", "0", "}", "\",", "xmlFactoryFactoryClass", ")", ",", "PSQLState", ".", "INVALID_PARAMETER_VALUE", ",", "ex", ")", ";", "}", "}", "}", "return", "xmlFactoryFactory", ";", "}", "import", "org", ".", "postgresql", ".", "xml", ".", "DefaultPGXmlFactoryFactory", ";", "import", "org", ".", "postgresql", ".", "xml", ".", "PGXmlFactoryFactory", ";", "import", "org", ".", "xml", ".", "sax", ".", "XMLReader", ";", "private", "PGXmlFactoryFactory", "getXmlFactoryFactory", "(", ")", "throws", "SQLException", "{", "if", "(", "conn", "!", "=", "null", ")", "{", "return", "conn", ".", "getXmlFactoryFactory", "(", ");", "}", "return", "DefaultPGXmlFactoryFactory", ".", "INSTANCE", ";", "}", "DocumentBuilder", "builder", "=", "getXmlFactoryFactory", "(", ").", "newDocumentBuilder", "(", ");", "XMLReader", "reader", "=", "getXmlFactoryFactory", "(", ").", "createXMLReader", "(", ");", "return", "(", "T", ")", "new", "SAXSource", "(", "reader", ",", "is", ")", ";", "XMLInputFactory", "xif", "=", "getXmlFactoryFactory", "(", ").", "newXMLInputFactory", "(", ");", "SAXTransformerFactory", "transformerFactory", "=", "getXmlFactoryFactory", "(", ").", "newSAXTransformerFactory", "(", ");", "XMLOutputFactory", "xof", "=", "getXmlFactoryFactory", "(", ").", "newXMLOutputFactory", "(", ");", "TransformerFactory", "factory", "=", "getXmlFactoryFactory", "(", ").", "newTransformerFactory", "(", ");", "/", "*", "*", "Copyright", "(", "c", ")", "2020", ",", "PostgreSQL", "Global", "Development", "Group", "*", "See", "the", "LICENSE", "file", "in", "the", "project", "root", "for", "more", "information", ".", "*", "/", "package", "org", ".", "postgresql", ".", "xml", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "import", "org", ".", "xml", ".", "sax", ".", "XMLReader", ";", "import", "org", ".", "xml", ".", "sax", ".", "helpers", ".", "XMLReaderFactory", ";", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "ParserConfigurationException", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLInputFactory", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLOutputFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "TransformerFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "sax", ".", "SAXTransformerFactory", ";", "/", "**", "*", "Default", "implementation", "of", "PGXmlFactoryFactory", "that", "configures", "each", "factory", "per", "OWASP", "recommendations", ".", "*", "*", "@", "see", "<", "a", "href", "=", "\"", "https", ":", "//", "cheatsheetseries", ".", "owasp", ".", "org", "/", "cheatsheets", "/", "XML_External_Entity_Prevention_Cheat_Sheet", ".", "html", "\"", ">", "https", ":", "//", "cheatsheetseries", ".", "owasp", ".", "org", "/", "cheatsheets", "/", "XML_External_Entity_Prevention_Cheat_Sheet", ".", "html", "<", "/", "a", ">", "*", "/", "public", "class", "DefaultPGXmlFactoryFactory", "implements", "PGXmlFactoryFactory", "{", "public", "static", "final", "DefaultPGXmlFactoryFactory", "INSTANCE", "=", "new", "DefaultPGXmlFactoryFactory", "(", ");", "private", "DefaultPGXmlFactoryFactory", "(", ")", "{", "}", "private", "DocumentBuilderFactory", "getDocumentBuilderFactory", "(", ")", "{", "DocumentBuilderFactory", "factory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "setFactoryProperties", "(", "factory", ")", ";", "factory", ".", "setXIncludeAware", "(", "false", ")", ";", "factory", ".", "setExpandEntityReferences", "(", "false", ")", ";", "return", "factory", ";", "}", "@", "Override", "public", "DocumentBuilder", "newDocumentBuilder", "(", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilder", "builder", "=", "getDocumentBuilderFactory", "(", ").", "newDocumentBuilder", "(", ");", "builder", ".", "setEntityResolver", "(", "EmptyStringEntityResolver", ".", "INSTANCE", ")", ";", "builder", ".", "setErrorHandler", "(", "NullErrorHandler", ".", "INSTANCE", ")", ";", "return", "builder", ";", "}", "@", "Override", "public", "TransformerFactory", "newTransformerFactory", "(", ")", "{", "TransformerFactory", "factory", "=", "TransformerFactory", ".", "newInstance", "(", ");", "setFactoryProperties", "(", "factory", ")", ";", "return", "factory", ";", "}", "@", "Override", "public", "SAXTransformerFactory", "newSAXTransformerFactory", "(", ")", "{", "SAXTransformerFactory", "factory", "=", "(", "SAXTransformerFactory", ")", "SAXTransformerFactory", ".", "newInstance", "(", ");", "setFactoryProperties", "(", "factory", ")", ";", "return", "factory", ";", "}", "@", "Override", "public", "XMLInputFactory", "newXMLInputFactory", "(", ")", "{", "XMLInputFactory", "factory", "=", "XMLInputFactory", ".", "newInstance", "(", ");", "setPropertyQuietly", "(", "factory", ",", "XMLInputFactory", ".", "SUPPORT_DTD", ",", "false", ")", ";", "setPropertyQuietly", "(", "factory", ",", "XMLInputFactory", ".", "IS_SUPPORTING_EXTERNAL_ENTITIES", ",", "false", ")", ";", "return", "factory", ";", "}", "@", "Override", "public", "XMLOutputFactory", "newXMLOutputFactory", "(", ")", "{", "XMLOutputFactory", "factory", "=", "XMLOutputFactory", ".", "newInstance", "(", ");", "return", "factory", ";", "}", "@", "Override", "public", "XMLReader", "createXMLReader", "(", ")", "throws", "SAXException", "{", "XMLReader", "factory", "=", "XMLReaderFactory", ".", "createXMLReader", "(", ");", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "factory", ".", "setErrorHandler", "(", "NullErrorHandler", ".", "INSTANCE", ")", ";", "return", "factory", ";", "}", "private", "static", "void", "setFeatureQuietly", "(", "Object", "factory", ",", "String", "name", ",", "boolean", "value", ")", "{", "try", "{", "if", "(", "factory", "instanceof", "DocumentBuilderFactory", ")", "{", "(", "(", "DocumentBuilderFactory", ")", "factory", ")", ".", "setFeature", "(", "name", ",", "value", ")", ";", "}", "else", "if", "(", "factory", "instanceof", "TransformerFactory", ")", "{", "(", "(", "TransformerFactory", ")", "factory", ")", ".", "setFeature", "(", "name", ",", "value", ")", ";", "}", "else", "if", "(", "factory", "instanceof", "XMLReader", ")", "{", "(", "(", "XMLReader", ")", "factory", ")", ".", "setFeature", "(", "name", ",", "value", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "\"", "Invalid", "factory", "class", ":", "\"", "+", "factory", ".", "getClass", "(", "))", ";", "}", "return", ";", "}", "catch", "(", "Exception", "ignore", ")", "{", "}", "}", "private", "static", "void", "setAttributeQuietly", "(", "Object", "factory", ",", "String", "name", ",", "Object", "value", ")", "{", "try", "{", "if", "(", "factory", "instanceof", "DocumentBuilderFactory", ")", "{", "(", "(", "DocumentBuilderFactory", ")", "factory", ")", ".", "setAttribute", "(", "name", ",", "value", ")", ";", "}", "else", "if", "(", "factory", "instanceof", "TransformerFactory", ")", "{", "(", "(", "TransformerFactory", ")", "factory", ")", ".", "setAttribute", "(", "name", ",", "value", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "\"", "Invalid", "factory", "class", ":", "\"", "+", "factory", ".", "getClass", "(", "))", ";", "}", "}", "catch", "(", "Exception", "ignore", ")", "{", "}", "}", "private", "static", "void", "setFactoryProperties", "(", "Object", "factory", ")", "{", "setFeatureQuietly", "(", "factory", ",", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "true", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "nonvalidating", "/", "load", "-", "external", "-", "dtd", "\"", ",", "false", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "setFeatureQuietly", "(", "factory", ",", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "/", "/", "Values", "from", "XMLConstants", "inlined", "for", "JDK", "1", ".", "6", "compatibility", "setAttributeQuietly", "(", "factory", ",", "\"", "http", ":", "//", "javax", ".", "xml", ".", "XMLConstants", "/", "property", "/", "accessExternalDTD", "\"", ",", "\"", "\")", ";", "setAttributeQuietly", "(", "factory", ",", "\"", "http", ":", "//", "javax", ".", "xml", ".", "XMLConstants", "/", "property", "/", "accessExternalSchema", "\"", ",", "\"", "\")", ";", "setAttributeQuietly", "(", "factory", ",", "\"", "http", ":", "//", "javax", ".", "xml", ".", "XMLConstants", "/", "property", "/", "accessExternalStylesheet", "\"", ",", "\"", "\")", ";", "}", "private", "static", "void", "setPropertyQuietly", "(", "Object", "factory", ",", "String", "name", ",", "Object", "value", ")", "{", "try", "{", "if", "(", "factory", "instanceof", "XMLReader", ")", "{", "(", "(", "XMLReader", ")", "factory", ")", ".", "setProperty", "(", "name", ",", "value", ")", ";", "}", "else", "if", "(", "factory", "instanceof", "XMLInputFactory", ")", "{", "(", "(", "XMLInputFactory", ")", "factory", ")", ".", "setProperty", "(", "name", ",", "value", ")", ";", "}", "else", "{", "throw", "new", "Error", "(", "\"", "Invalid", "factory", "class", ":", "\"", "+", "factory", ".", "getClass", "(", "))", ";", "}", "}", "catch", "(", "Exception", "ignore", ")", "{", "}", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "23", "@", "@", "/", "*", "*", "Copyright", "(", "c", ")", "2020", ",", "PostgreSQL", "Global", "Development", "Group", "*", "See", "the", "LICENSE", "file", "in", "the", "project", "root", "for", "more", "information", ".", "*", "/", "package", "org", ".", "postgresql", ".", "xml", ";", "import", "org", ".", "xml", ".", "sax", ".", "EntityResolver", ";", "import", "org", ".", "xml", ".", "sax", ".", "InputSource", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "StringReader", ";", "public", "class", "EmptyStringEntityResolver", "implements", "EntityResolver", "{", "public", "static", "final", "EmptyStringEntityResolver", "INSTANCE", "=", "new", "EmptyStringEntityResolver", "(", ");", "@", "Override", "public", "InputSource", "resolveEntity", "(", "String", "publicId", ",", "String", "systemId", ")", "throws", "SAXException", ",", "IOException", "{", "return", "new", "InputSource", "(", "new", "StringReader", "(", "\"\"", "))", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "57", "@", "@", "/", "*", "*", "Copyright", "(", "c", ")", "2020", ",", "PostgreSQL", "Global", "Development", "Group", "*", "See", "the", "LICENSE", "file", "in", "the", "project", "root", "for", "more", "information", ".", "*", "/", "package", "org", ".", "postgresql", ".", "xml", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "import", "org", ".", "xml", ".", "sax", ".", "XMLReader", ";", "import", "org", ".", "xml", ".", "sax", ".", "helpers", ".", "XMLReaderFactory", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "ParserConfigurationException", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLInputFactory", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLOutputFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "TransformerFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "sax", ".", "SAXTransformerFactory", ";", "public", "class", "LegacyInsecurePGXmlFactoryFactory", "implements", "PGXmlFactoryFactory", "{", "public", "static", "final", "LegacyInsecurePGXmlFactoryFactory", "INSTANCE", "=", "new", "LegacyInsecurePGXmlFactoryFactory", "(", ");", "private", "LegacyInsecurePGXmlFactoryFactory", "(", ")", "{", "}", "@", "Override", "public", "DocumentBuilder", "newDocumentBuilder", "(", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilder", "builder", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ").", "newDocumentBuilder", "(", ");", "builder", ".", "setErrorHandler", "(", "NullErrorHandler", ".", "INSTANCE", ")", ";", "return", "builder", ";", "}", "@", "Override", "public", "TransformerFactory", "newTransformerFactory", "(", ")", "{", "return", "TransformerFactory", ".", "newInstance", "(", ");", "}", "@", "Override", "public", "SAXTransformerFactory", "newSAXTransformerFactory", "(", ")", "{", "return", "(", "SAXTransformerFactory", ")", "SAXTransformerFactory", ".", "newInstance", "(", ");", "}", "@", "Override", "public", "XMLInputFactory", "newXMLInputFactory", "(", ")", "{", "return", "XMLInputFactory", ".", "newInstance", "(", ");", "}", "@", "Override", "public", "XMLOutputFactory", "newXMLOutputFactory", "(", ")", "{", "return", "XMLOutputFactory", ".", "newInstance", "(", ");", "}", "@", "Override", "public", "XMLReader", "createXMLReader", "(", ")", "throws", "SAXException", "{", "return", "XMLReaderFactory", ".", "createXMLReader", "(", ");", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "25", "@", "@", "/", "*", "*", "Copyright", "(", "c", ")", "2020", ",", "PostgreSQL", "Global", "Development", "Group", "*", "See", "the", "LICENSE", "file", "in", "the", "project", "root", "for", "more", "information", ".", "*", "/", "package", "org", ".", "postgresql", ".", "xml", ";", "import", "org", ".", "xml", ".", "sax", ".", "ErrorHandler", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXParseException", ";", "/", "**", "*", "Error", "handler", "that", "silently", "suppresses", "all", "errors", ".", "*", "/", "public", "class", "NullErrorHandler", "implements", "ErrorHandler", "{", "public", "static", "final", "NullErrorHandler", "INSTANCE", "=", "new", "NullErrorHandler", "(", ");", "public", "void", "error", "(", "SAXParseException", "e", ")", "{", "}", "public", "void", "fatalError", "(", "SAXParseException", "e", ")", "{", "}", "public", "void", "warning", "(", "SAXParseException", "e", ")", "{", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "30", "@", "@", "/", "*", "*", "Copyright", "(", "c", ")", "2020", ",", "PostgreSQL", "Global", "Development", "Group", "*", "See", "the", "LICENSE", "file", "in", "the", "project", "root", "for", "more", "information", ".", "*", "/", "package", "org", ".", "postgresql", ".", "xml", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "import", "org", ".", "xml", ".", "sax", ".", "XMLReader", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "ParserConfigurationException", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLInputFactory", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLOutputFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "TransformerFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "sax", ".", "SAXTransformerFactory", ";", "public", "interface", "PGXmlFactoryFactory", "{", "DocumentBuilder", "newDocumentBuilder", "(", ")", "throws", "ParserConfigurationException", ";", "TransformerFactory", "newTransformerFactory", "(", ");", "SAXTransformerFactory", "newSAXTransformerFactory", "(", ");", "XMLInputFactory", "newXMLInputFactory", "(", ");", "XMLOutputFactory", "newXMLOutputFactory", "(", ");", "XMLReader", "createXMLReader", "(", ")", "throws", "SAXException", ";", "}", "@", "@", "-", "7", ",", "37", "+", "7", ",", "55", "@", "@", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertThrows", ";", "import", "org", ".", "postgresql", ".", "PGProperty", ";", "import", "org", ".", "postgresql", ".", "core", ".", "BaseConnection", ";", "import", "java", ".", "io", ".", "StringWriter", ";", "import", "java", ".", "sql", ".", "Connection", ";", "import", "java", ".", "sql", ".", "SQLException", ";", "import", "java", ".", "util", ".", "Properties", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLStreamException", ";", "import", "javax", ".", "xml", ".", "stream", ".", "XMLStreamReader", ";", "import", "javax", ".", "xml", ".", "transform", ".", "Source", ";", "import", "javax", ".", "xml", ".", "transform", ".", "Transformer", ";", "import", "javax", ".", "xml", ".", "transform", ".", "TransformerException", ";", "import", "javax", ".", "xml", ".", "transform", ".", "TransformerFactory", ";", "import", "javax", ".", "xml", ".", "transform", ".", "dom", ".", "DOMSource", ";", "import", "javax", ".", "xml", ".", "transform", ".", "sax", ".", "SAXSource", ";", "import", "javax", ".", "xml", ".", "transform", ".", "stax", ".", "StAXSource", ";", "import", "javax", ".", "xml", ".", "transform", ".", "stream", ".", "StreamResult", ";", "TestUtil", ".", "createTempTable", "(", "con", ",", "\"", "xmltab", "\"", ",", "\"", "x", "xml", "\"", ");", "public", "void", "setCharacterStream", "(", ")", "throws", "Exception", "{", "preparedStatement", ".", "setSQLXML", "(", "1", ",", "pgSQLXML", ")", ";", "private", "static", "final", "String", "LICENSE_URL", "=", "PgSQLXMLTest", ".", "class", ".", "getClassLoader", "(", ").", "getResource", "(", "\"", "META", "-", "INF", "/", "LICENSE", "\"", ").", "toString", "(", ");", "private", "static", "final", "String", "XXE_EXAMPLE", "=", "\"", "<!", "DOCTYPE", "foo", "[", "<!", "ELEMENT", "foo", "ANY", ">", "\\", "n", "\"", "+", "\"", "<!", "ENTITY", "xxe", "SYSTEM", "\\", "\"\"", "+", "LICENSE_URL", "+", "\"", "\\\"", ">]", ">\"", "+", "\"", "<", "foo", ">", "&", "xxe", ";", "</", "foo", ">", "\";", "@", "Test", "public", "void", "testLegacyXxe", "(", ")", "throws", "Exception", "{", "Properties", "props", "=", "new", "Properties", "(", ");", "props", ".", "setProperty", "(", "PGProperty", ".", "XML_FACTORY_FACTORY", ".", "getName", "(", "),", "\"", "LEGACY_INSECURE", "\"", ");", "try", "(", "Connection", "conn", "=", "TestUtil", ".", "openDB", "(", "props", ")", ")", "{", "BaseConnection", "baseConn", "=", "conn", ".", "unwrap", "(", "BaseConnection", ".", "class", ")", ";", "PgSQLXML", "xml", "=", "new", "PgSQLXML", "(", "baseConn", ",", "XXE_EXAMPLE", ")", ";", "xml", ".", "getSource", "(", "null", ")", ";", "}", "}", "private", "static", "String", "sourceToString", "(", "Source", "source", ")", "throws", "TransformerException", "{", "StringWriter", "sw", "=", "new", "StringWriter", "(", ");", "Transformer", "transformer", "=", "TransformerFactory", ".", "newInstance", "(", ").", "newTransformer", "(", ");", "transformer", ".", "transform", "(", "source", ",", "new", "StreamResult", "(", "sw", ")", ");", "return", "sw", ".", "toString", "(", ");", "}", "private", "<", "T", "extends", "Source", ">", "void", "testGetSourceXxe", "(", "Class", "<", "T", ">", "clazz", ")", "{", "SQLException", "ex", "=", "assertThrows", "(", "SQLException", ".", "class", ",", "(", ")", "-", ">", "{", "PgSQLXML", "xml", "=", "new", "PgSQLXML", "(", "null", ",", "XXE_EXAMPLE", ")", ";", "xml", ".", "getSource", "(", "clazz", ")", ";", "}", ");", "String", "message", "=", "ex", ".", "getCause", "(", ").", "getMessage", "(", ");", "assertTrue", "(", "\"", "Expected", "to", "get", "a", "<", "<", "DOCTYPE", "disallowed", ">", ">", "SAXParseException", ".", "Actual", "message", "is", "\"", "+", "message", ",", "message", ".", "startsWith", "(", "\"", "DOCTYPE", "is", "disallowed", "\"", "))", ";", "}", "@", "Test", "public", "void", "testGetSourceXxeNull", "(", ")", "throws", "Exception", "{", "testGetSourceXxe", "(", "null", ")", ";", "}", "@", "Test", "public", "void", "testGetSourceXxeDOMSource", "(", ")", "throws", "Exception", "{", "testGetSourceXxe", "(", "DOMSource", ".", "class", ")", ";", "}", "@", "Test", "public", "void", "testGetSourceXxeSAXSource", "(", ")", "throws", "Exception", "{", "PgSQLXML", "xml", "=", "new", "PgSQLXML", "(", "null", ",", "XXE_EXAMPLE", ")", ";", "SAXSource", "source", "=", "xml", ".", "getSource", "(", "SAXSource", ".", "class", ")", ";", "TransformerException", "ex", "=", "assertThrows", "(", "TransformerException", ".", "class", ",", "(", ")", "-", ">", "{", "sourceToString", "(", "source", ")", ";", "}", ");", "String", "message", "=", "ex", ".", "getCause", "(", ").", "getMessage", "(", ");", "assertTrue", "(", "\"", "Expected", "to", "get", "a", "<", "<", "DOCTYPE", "disallowed", ">", ">", "TransformerException", ".", "Actual", "message", "is", "\"", "+", "message", ",", "message", ".", "startsWith", "(", "\"", "DOCTYPE", "is", "disallowed", "\"", "))", ";", "}", "@", "Test", "public", "void", "testGetSourceXxeStAXSource", "(", ")", "throws", "Exception", "{", "PgSQLXML", "xml", "=", "new", "PgSQLXML", "(", "null", ",", "XXE_EXAMPLE", ")", ";", "StAXSource", "source", "=", "xml", ".", "getSource", "(", "StAXSource", ".", "class", ")", ";", "XMLStreamReader", "reader", "=", "source", ".", "getXMLStreamReader", "(", ");", "/", "/", "STAX", "will", "not", "throw", "XXE", "error", "until", "we", "actually", "read", "the", "element", "assertThrows", "(", "XMLStreamException", ".", "class", ",", "(", ")", "-", ">", "{", "while", "(", "reader", ".", "hasNext", "(", "))", "{", "reader", ".", "next", "(", ");", "}", "}", ");", "}</s>import", "org", ".", "xml", ".", "sax", ".", "ErrorHandler", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXParseException", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "DocumentBuilderFactory", "factory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "DocumentBuilder", "builder", "=", "factory", ".", "newDocumentBuilder", "(", ");", "builder", ".", "setErrorHandler", "(", "new", "NonPrintingErrorHandler", "(", "))", ";", "return", "(", "T", ")", "new", "SAXSource", "(", "is", ")", ";", "XMLInputFactory", "xif", "=", "XMLInputFactory", ".", "newInstance", "(", ");", "SAXTransformerFactory", "transformerFactory", "=", "(", "SAXTransformerFactory", ")", "SAXTransformerFactory", ".", "newInstance", "(", ");", "XMLOutputFactory", "xof", "=", "XMLOutputFactory", ".", "newInstance", "(", ");", "TransformerFactory", "factory", "=", "TransformerFactory", ".", "newInstance", "(", ");", "/", "/", "Don", "'", "t", "clutter", "System", ".", "err", "with", "errors", "the", "user", "can", "'", "t", "silence", ".", "/", "/", "If", "something", "bad", "really", "happens", "an", "exception", "will", "be", "thrown", ".", "static", "class", "NonPrintingErrorHandler", "implements", "ErrorHandler", "{", "public", "void", "error", "(", "SAXParseException", "e", ")", "{", "}", "public", "void", "fatalError", "(", "SAXParseException", "e", ")", "{", "}", "public", "void", "warning", "(", "SAXParseException", "e", ")", "{", "}", "}", "TestUtil", ".", "createTempTable", "(", "con", ",", "\"", "xmltab", "\"", ",\"", "x", "xml", "\"", ");", "public", "void", "setCharacterStream", "(", ")", "throws", "Exception", "{", "preparedStatement", ".", "setSQLXML", "(", "1", ",", "pgSQLXML", ")", ";"], "docstring_tokens": ["xml", "external", "entity"]}
{"contents": ["empty"], "code_tokens": ["return", "!", "/", "__proto__", "/", ".", "test", "(", "path", ")", "&", "&", "(", "(", "path", "=", "path", ".", "split", "?", "path", ".", "split", "(", "'.", "')", ":", "path", ".", "slice", "(", "0", ")", ").", "slice", "(", "0", ",", "-", "1", ")", ".", "reduce", "(", "function", "(", "obj", ",", "p", ")", "{", "\"", "set", "(", "obj", ",", "'", "__proto__", "'", ",", "'", "foo", "'", ")\"", ":", "{", "key", ":", "\"", "__proto__", "\"", ",", "value", ":", "\"", "foo", "\"", ",", "expected", ":", "{", "}", "}", ",", "\"", "set", "(", "obj", ",", "'", "a", ".", "__proto__", "'", ",", "'", "foo", "'", ")\"", ":", "{", "key", ":", "\"", "__proto__", "\"", ",", "value", ":", "\"", "foo", "\"", ",", "expected", ":", "{", "a", ":", "undefined", "}", "}", ",</s>return", "(", "(", "path", "=", "path", ".", "split", "?", "path", ".", "split", "(", "'.", "')", ":", "path", ".", "slice", "(", "0", ")", ").", "slice", "(", "0", ",", "-", "1", ")", ".", "reduce", "(", "function", "(", "obj", ",", "p", ")", "{"], "docstring_tokens": ["remote", "code", "execution"]}
{"contents": ["empty"], "code_tokens": ["if", "(", "i", "+", "size", ">", "MAX_SKB_FRAGS", ")", "return", "-", "EMSGSIZE", ";", "if", "(", "num_pages", "!", "=", "size", ")", "{", "int", "copylen", "=", "0", ";", "err", "=", "-", "EMSGSIZE", ";", "if", "(", "unlikely", "(", "count", ">", "UIO_MAXIOV", ")", ")", "goto", "err", ";", "/", "*", "Userspace", "may", "produce", "vectors", "with", "count", "greater", "than", "*", "MAX_SKB_FRAGS", ",", "so", "we", "need", "to", "linearize", "parts", "of", "the", "skb", "*", "to", "let", "the", "rest", "of", "data", "to", "be", "fit", "in", "the", "frags", ".", "*", "/", "if", "(", "count", ">", "MAX_SKB_FRAGS", ")", "{", "copylen", "=", "iov_length", "(", "iv", ",", "count", "-", "MAX_SKB_FRAGS", ")", ";", "if", "(", "copylen", "<", "vnet_hdr_len", ")", "copylen", "=", "0", ";", "else", "copylen", "-", "=", "vnet_hdr_len", ";", "}", "if", "(", "copylen", "<", "vnet_hdr", ".", "hdr_len", ")", "copylen", "=", "vnet_hdr", ".", "hdr_len", ";</s>if", "(", "(", "num_pages", "!", "=", "size", ")", "|", "|", "(", "num_pages", ">", "MAX_SKB_FRAGS", "-", "skb_shinfo", "(", "skb", ")", "->", "nr_frags", ")", ")", "{", "int", "copylen", ";", "copylen", "=", "vnet_hdr", ".", "hdr_len", ";"], "docstring_tokens": ["buffer", "overflow"]}
{"contents": ["empty"], "code_tokens": ["static", "int", "isofs_read_inode", "(", "struct", "inode", "*", ",", "int", "relocated", ")", ";", "static", "int", "isofs_read_inode", "(", "struct", "inode", "*", "inode", ",", "int", "relocated", ")", "parse_rock_ridge_inode", "(", "de", ",", "inode", ",", "relocated", ")", ";", "struct", "inode", "*", "__isofs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ",", "int", "relocated", ")", "ret", "=", "isofs_read_inode", "(", "inode", ",", "relocated", ")", ";", "extern", "int", "parse_rock_ridge_inode", "(", "struct", "iso_directory_record", "*", ",", "struct", "inode", "*", ",", "int", "relocated", ")", ";", "struct", "inode", "*", "__isofs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ",", "int", "relocated", ")", ";", "static", "inline", "struct", "inode", "*", "isofs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ")", "{", "return", "__isofs_iget", "(", "sb", ",", "block", ",", "offset", ",", "0", ")", ";", "}", "static", "inline", "struct", "inode", "*", "isofs_iget_reloc", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ")", "{", "return", "__isofs_iget", "(", "sb", ",", "block", ",", "offset", ",", "1", ")", ";", "}", "#", "define", "RR_REGARD_XA", "1", "#", "define", "RR_RELOC_DE", "2", "struct", "inode", "*", "inode", ",", "int", "flags", ")", "unsigned", "int", "reloc_block", ";", "if", "(", "flags", "&", "RR_REGARD_XA", ")", "{", "if", "(", "flags", "&", "RR_RELOC_DE", ")", "{", "printk", "(", "KERN_ERR", "\"", "ISOFS", ":", "Recursive", "directory", "relocation", "\"", "\"", "is", "not", "supported", "\\", "n", "\"", ");", "goto", "eio", ";", "}", "reloc_block", "=", "isonum_733", "(", "rr", "-", ">", "u", ".", "CL", ".", "location", ")", ";", "if", "(", "reloc_block", "=", "=", "ISOFS_I", "(", "inode", ")", "->", "i_iget5_block", "&", "&", "ISOFS_I", "(", "inode", ")", "->", "i_iget5_offset", "=", "=", "0", ")", "{", "printk", "(", "KERN_ERR", "\"", "ISOFS", ":", "Directory", "relocation", "points", "to", "\"", "\"", "itself", "\\", "n", "\"", ");", "goto", "eio", ";", "}", "ISOFS_I", "(", "inode", ")", "->", "i_first_extent", "=", "reloc_block", ";", "reloc", "=", "isofs_iget_reloc", "(", "inode", "-", ">", "i_sb", ",", "reloc_block", ",", "0", ")", ";", "int", "parse_rock_ridge_inode", "(", "struct", "iso_directory_record", "*", "de", ",", "struct", "inode", "*", "inode", ",", "int", "relocated", ")", "int", "flags", "=", "relocated", "?", "RR_RELOC_DE", ":", "0", ";", "int", "result", "=", "parse_rock_ridge_inode_internal", "(", "de", ",", "inode", ",", "flags", ")", ";", "result", "=", "parse_rock_ridge_inode_internal", "(", "de", ",", "inode", ",", "flags", "|", "RR_REGARD_XA", ")", ";</s>static", "int", "isofs_read_inode", "(", "struct", "inode", "*", ");", "static", "int", "isofs_read_inode", "(", "struct", "inode", "*", "inode", ")", "parse_rock_ridge_inode", "(", "de", ",", "inode", ")", ";", "struct", "inode", "*", "isofs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ")", "ret", "=", "isofs_read_inode", "(", "inode", ")", ";", "extern", "int", "parse_rock_ridge_inode", "(", "struct", "iso_directory_record", "*", ",", "struct", "inode", "*", ");", "extern", "struct", "inode", "*", "isofs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "block", ",", "unsigned", "long", "offset", ")", ";", "struct", "inode", "*", "inode", ",", "int", "regard_xa", ")", "if", "(", "regard_xa", ")", "{", "ISOFS_I", "(", "inode", ")", "->", "i_first_extent", "=", "isonum_733", "(", "rr", "-", ">", "u", ".", "CL", ".", "location", ")", ";", "reloc", "=", "isofs_iget", "(", "inode", "-", ">", "i_sb", ",", "ISOFS_I", "(", "inode", ")", "->", "i_first_extent", ",", "0", ")", ";", "int", "parse_rock_ridge_inode", "(", "struct", "iso_directory_record", "*", "de", ",", "struct", "inode", "*", "inode", ")", "int", "result", "=", "parse_rock_ridge_inode_internal", "(", "de", ",", "inode", ",", "0", ")", ";", "result", "=", "parse_rock_ridge_inode_internal", "(", "de", ",", "inode", ",", "14", ")", ";"], "docstring_tokens": ["stack", "consumption"]}
{"contents": ["empty"], "code_tokens": ["(", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{", "(", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{", "(", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_TYPE_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{</s>(", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{", "(", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{", "(", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_BOOL", "|", "|", "Z_LVAL_PP", "(", "trace", ")", "=", "=", "IS_LONG", ")", "&", "&", "Z_LVAL_PP", "(", "trace", ")", "!", "=", "0", ")", "{"], "docstring_tokens": ["remote", "memory", "exfiltration"]}
{"contents": ["empty"], "code_tokens": ["import", "java", ".", "io", ".", "IOException", ";", "try", "{", "return", "Messages", ".", "Cause_RemoteCause_ShortDescriptionWithNote", "(", "addr", ",", "Jenkins", ".", "getInstance", "(", ").", "getMarkupFormatter", "(", ").", "translate", "(", "note", ")", ");", "}", "catch", "(", "IOException", "x", ")", "{", "/", "/", "ignore", "}", "return", "Messages", ".", "Cause_RemoteCause_ShortDescription", "(", "addr", ")", ";</s>return", "Messages", ".", "Cause_RemoteCause_ShortDescriptionWithNote", "(", "addr", ",", "note", ")", ";", "}", "else", "{", "return", "Messages", ".", "Cause_RemoteCause_ShortDescription", "(", "addr", ")", ";"], "docstring_tokens": ["cross-site", "scripting", "(xss", ")"]}
