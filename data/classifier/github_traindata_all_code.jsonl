{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1181", ",", "9", "+", "1181", ",", "11", "@", "@", "void", "__key_link_end", "(", "struct", "key", "*", "keyring", ",", "if", "(", "index_key", "-", ">", "type", "=", "=", "&", "key_type_keyring", ")", "up_write", "(", "&", "keyring_serialise_link_sem", ")", ";", "if", "(", "edit", "&", "&", "!", "edit", "-", ">", "dead_leaf", ")", "{", "key_payload_reserve", "(", "keyring", ",", "keyring", "-", ">", "datalen", "-", "KEYQUOTA_LINK_BYTES", ")", ";", "if", "(", "edit", ")", "{", "if", "(", "!", "edit", "-", ">", "dead_leaf", ")", "{", "key_payload_reserve", "(", "keyring", ",", "keyring", "-", ">", "datalen", "-", "KEYQUOTA_LINK_BYTES", ")", ";", "}", "assoc_array_cancel_edit", "(", "edit", ")", ";", "}", "up_write", "(", "&", "keyring", "-", ">", "sem", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "4", ",", "6", "+", "4", ",", "11", "@", "@", "Changes", "between", "1", ".", "0", ".", "1e", "and", "1", ".", "0", ".", "1f", "[", "xx", "XXX", "xxxx", "]", "*", ")", "Keep", "original", "DTLS", "digest", "and", "encryption", "contexts", "in", "retransmission", "structures", "so", "we", "can", "use", "the", "previous", "session", "parameters", "if", "they", "need", "to", "be", "resent", ".", "(", "CVE", "-", "2013", "-", "6450", ")", "[", "Steve", "Henson", "]", "*", ")", "Add", "option", "SSL_OP_SAFARI_ECDHE_ECDSA_BUG", "(", "part", "of", "SSL_OP_ALL", ")", "which", "avoids", "preferring", "ECDHE", "-", "ECDSA", "ciphers", "when", "the", "client", "appears", "to", "be", "Safari", "on", "OS", "X", ".", "Safari", "on", "OS", "X", "10", ".", "8", ".", ".", "10", ".", "8", ".", "3", "advertises", "support", "for", "@", "@", "-", "214", ",", "6", "+", "214", ",", "12", "@", "@", "dtls1_hm_fragment_new", "(", "unsigned", "long", "frag_len", ",", "int", "reassembly", ")", "static", "void", "dtls1_hm_fragment_free", "(", "hm_fragment", "*", "frag", ")", "{", "if", "(", "frag", "-", ">", "msg_header", ".", "is_ccs", ")", "{", "EVP_CIPHER_CTX_free", "(", "frag", "-", ">", "msg_header", ".", "saved_retransmit_state", ".", "enc_write_ctx", ")", ";", "EVP_MD_CTX_destroy", "(", "frag", "-", ">", "msg_header", ".", "saved_retransmit_state", ".", "write_hash", ")", ";", "}", "if", "(", "frag", "-", ">", "fragment", ")", "OPENSSL_free", "(", "frag", "-", ">", "fragment", ")", ";", "if", "(", "frag", "-", ">", "reassembly", ")", "OPENSSL_free", "(", "frag", "-", ">", "reassembly", ")", ";", "OPENSSL_free", "(", "frag", ")", ";", "@", "@", "-", "621", ",", "6", "+", "621", ",", "8", "@", "@", "extern", "SSL3_ENC_METHOD", "TLSv1_enc_data", ";", "extern", "SSL3_ENC_METHOD", "SSLv3_enc_data", ";", "extern", "SSL3_ENC_METHOD", "DTLSv1_enc_data", ";", "#", "define", "SSL_IS_DTLS", "(", "s", ")", "(", "s", "-", ">", "method", "-", ">", "version", "=", "=", "DTLS1_VERSION", ")", "#", "define", "IMPLEMENT_tls_meth_func", "(", "version", ",", "func_name", ",", "s_accept", ",", "s_connect", ",", "\\", "s_get_meth", ")", "\\", "const", "SSL_METHOD", "*", "func_name", "(", "void", ")", "\\", "@", "@", "-", "414", ",", "15", "+", "414", ",", "20", "@", "@", "int", "tls1_change_cipher_state", "(", "SSL", "*", "s", ",", "int", "which", ")", "s", "-", ">", "mac_flags", "|", "=", "SSL_MAC_FLAG_WRITE_MAC_STREAM", ";", "else", "s", "-", ">", "mac_flags", "&", "=", "~", "SSL_MAC_FLAG_WRITE_MAC_STREAM", ";", "if", "(", "s", "-", ">", "enc_write_ctx", "!", "=", "NULL", ")", "if", "(", "s", "-", ">", "enc_write_ctx", "!", "=", "NULL", "&", "&", "!", "SSL_IS_DTLS", "(", "s", ")", ")", "reuse_dd", "=", "1", ";", "else", "if", "(", "(", "s", "-", ">", "enc_write_ctx", "=", "OPENSSL_malloc", "(", "sizeof", "(", "EVP_CIPHER_CTX", ")", "))", "=", "=", "NULL", ")", "else", "if", "(", "(", "s", "-", ">", "enc_write_ctx", "=", "EVP_CIPHER_CTX_new", "(", "))", "=", "=", "NULL", ")", "goto", "err", ";", "else", "/", "*", "make", "sure", "it", "'", "s", "intialized", "in", "case", "we", "exit", "later", "with", "an", "error", "*", "/", "EVP_CIPHER_CTX_init", "(", "s", "-", ">", "enc_write_ctx", ")", ";", "dd", "=", "s", "-", ">", "enc_write_ctx", ";", "mac_ctx", "=", "ssl_replace_hash", "(", "&", "s", "-", ">", "write_hash", ",", "NULL", ")", ";", "if", "(", "SSL_IS_DTLS", "(", "s", ")", ")", "{", "mac_ctx", "=", "EVP_MD_CTX_create", "(", ");", "if", "(", "!", "mac_ctx", ")", "goto", "err", ";", "s", "-", ">", "write_hash", "=", "mac_ctx", ";", "}", "else", "mac_ctx", "=", "ssl_replace_hash", "(", "&", "s", "-", ">", "write_hash", ",", "NULL", ")", ";", "#", "ifndef", "OPENSSL_NO_COMP", "if", "(", "s", "-", ">", "compress", "!", "=", "NULL", ")", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1358", ",", "6", "+", "1358", ",", "10", "@", "@", "static", "int", "fuse_notify_inval_entry", "(", "struct", "fuse_conn", "*", "fc", ",", "unsigned", "int", "size", ",", "if", "(", "outarg", ".", "namelen", ">", "FUSE_NAME_MAX", ")", "goto", "err", ";", "err", "=", "-", "EINVAL", ";", "if", "(", "size", "!", "=", "sizeof", "(", "outarg", ")", "+", "outarg", ".", "namelen", "+", "1", ")", "goto", "err", ";", "name", ".", "name", "=", "buf", ";", "name", ".", "len", "=", "outarg", ".", "namelen", ";", "err", "=", "fuse_copy_one", "(", "cs", ",", "buf", ",", "outarg", ".", "namelen", "+", "1", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "834", ",", "6", "+", "834", ",", "12", "@", "@", "struct", "bio", "*", "bio_copy_user_iov", "(", "struct", "request_queue", "*", "q", ",", "end", "=", "(", "uaddr", "+", "iov", "[", "i", "]", ".", "iov_len", "+", "PAGE_SIZE", "-", "1", ")", ">", ">", "PAGE_SHIFT", ";", "start", "=", "uaddr", ">", ">", "PAGE_SHIFT", ";", "/", "*", "*", "Overflow", ",", "abort", "*", "/", "if", "(", "end", "<", "start", ")", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "nr_pages", "+", "=", "end", "-", "start", ";", "len", "+", "=", "iov", "[", "i", "]", ".", "iov_len", ";", "}", "@", "@", "-", "962", ",", "6", "+", "968", ",", "12", "@", "@", "static", "struct", "bio", "*", "__bio_map_user_iov", "(", "struct", "request_queue", "*", "q", ",", "unsigned", "long", "end", "=", "(", "uaddr", "+", "len", "+", "PAGE_SIZE", "-", "1", ")", ">", ">", "PAGE_SHIFT", ";", "unsigned", "long", "start", "=", "uaddr", ">", ">", "PAGE_SHIFT", ";", "/", "*", "*", "Overflow", ",", "abort", "*", "/", "if", "(", "end", "<", "start", ")", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "nr_pages", "+", "=", "end", "-", "start", ";", "/", "*", "*", "buffer", "must", "be", "aligned", "to", "at", "least", "hardsector", "size", "for", "now", "@", "@", "-", "989", ",", "7", "+", "1001", ",", "7", "@", "@", "static", "struct", "bio", "*", "__bio_map_user_iov", "(", "struct", "request_queue", "*", "q", ",", "unsigned", "long", "start", "=", "uaddr", ">", ">", "PAGE_SHIFT", ";", "const", "int", "local_nr_pages", "=", "end", "-", "start", ";", "const", "int", "page_limit", "=", "cur_page", "+", "local_nr_pages", ";", "ret", "=", "get_user_pages_fast", "(", "uaddr", ",", "local_nr_pages", ",", "write_to_vm", ",", "&", "pages", "[", "cur_page", "]", ");", "if", "(", "ret", "<", "local_nr_pages", ")", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "21", ",", "6", "+", "21", ",", "7", "@", "@", "import", "io", ".", "undertow", ".", "UndertowMessages", ";", "import", "io", ".", "undertow", ".", "UndertowOptions", ";", "import", "io", ".", "undertow", ".", "server", ".", "protocol", ".", "http", ".", "HttpServerConnection", ";", "import", "org", ".", "xnio", ".", "ChannelListener", ";", "import", "org", ".", "xnio", ".", "IoUtils", ";", "import", "org", ".", "xnio", ".", "Options", ";", "@", "@", "-", "160", ",", "21", "+", "161", ",", "29", "@", "@", "public", "void", "renegotiateBufferRequest", "(", "HttpServerExchange", "exchange", ",", "SslClientAuthM", "int", "allowedBuffers", "=", "(", "(", "maxSize", "+", "bufferSize", "-", "1", ")", "/", "bufferSize", ")", ";", "poolArray", "=", "new", "PooledByteBuffer", "[", "allowedBuffers", "]", ";", "poolArray", "[", "usedBuffers", "+", "+]", "=", "pooled", ";", "boolean", "overflow", "=", "false", ";", "try", "{", "int", "res", ";", "do", "{", "for", "(", ";;", ")", "{", "final", "ByteBuffer", "buf", "=", "pooled", ".", "getBuffer", "(", ");", "res", "=", "Channels", ".", "readBlocking", "(", "requestChannel", ",", "buf", ")", ";", "if", "(", "!", "buf", ".", "hasRemaining", "(", "))", "{", "buf", ".", "flip", "(", ");", "pooled", "=", "exchange", ".", "getConnection", "(", ").", "getByteBufferPool", "(", ").", "allocate", "(", ");", "poolArray", "[", "usedBuffers", "+", "+]", "=", "pooled", ";", "if", "(", "allowedBuffers", "=", "=", "usedBuffers", ")", "{", "overflow", "=", "true", ";", "break", ";", "}", "else", "{", "pooled", "=", "exchange", ".", "getConnection", "(", ").", "getByteBufferPool", "(", ").", "allocate", "(", ");", "poolArray", "[", "usedBuffers", "+", "+]", "=", "pooled", ";", "}", "}", "else", "if", "(", "res", "=", "=", "-", "1", ")", "{", "buf", ".", "flip", "(", ");", "break", ";", "}", "}", "while", "(", "res", "!", "=", "-", "1", "&", "&", "usedBuffers", "!", "=", "allowedBuffers", ")", ";", "}", "free", "=", "false", ";", "pooled", ".", "getBuffer", "(", ").", "flip", "(", ");", "Connectors", ".", "ungetRequestBytes", "(", "exchange", ",", "poolArray", ")", ";", "if", "(", "usedBuffers", "=", "=", "allowedBuffers", ")", "{", "if", "(", "overflow", ")", "{", "throw", "new", "SSLPeerUnverifiedException", "(", "\"", "Cannot", "renegotiate", "\"", ");", "}", "renegotiateNoRequest", "(", "exchange", ",", "newAuthMode", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "74", ",", "7", "+", "74", ",", "7", "@", "@", "@", "Inject", "public", "GroovyScriptEngineService", "(", "Settings", "settings", ")", "{", "super", "(", "settings", ")", ";", "this", ".", "sandboxed", "=", "settings", ".", "getAsBoolean", "(", "GROOVY_SCRIPT_SANDBOX_ENABLED", ",", "true", ")", ";", "this", ".", "sandboxed", "=", "settings", ".", "getAsBoolean", "(", "GROOVY_SCRIPT_SANDBOX_ENABLED", ",", "false", ")", ";", "this", ".", "blacklistAdditions", "=", "ImmutableSet", ".", "copyOf", "(", "settings", ".", "getAsArray", "(", "GROOVY_SCRIPT_BLACKLIST_PATCH", ",", "Strings", ".", "EMPTY_ARRAY", ")", ");", "reloadConfig", "(", ");", "}", "@", "@", "-", "34", ",", "11", "+", "34", ",", "18", "@", "@", "/", "**", "*", "Tests", "for", "the", "Groovy", "scripting", "sandbox", "*", "/", "@", "ElasticsearchIntegrationTest", ".", "ClusterScope", "(", "scope", "=", "ElasticsearchIntegrationTest", ".", "Scope", ".", "TEST", ")", "@", "ElasticsearchIntegrationTest", ".", "ClusterScope", "(", "scope", "=", "ElasticsearchIntegrationTest", ".", "Scope", ".", "TEST", ",", "numDataNodes", "=", "0", ")", "public", "class", "GroovySandboxScriptTests", "extends", "ElasticsearchIntegrationTest", "{", "@", "Test", "public", "void", "testSandboxedGroovyScript", "(", ")", "{", "public", "void", "testSandboxedGroovyScript", "(", ")", "throws", "Exception", "{", "int", "nodes", "=", "randomIntBetween", "(", "1", ",", "3", ")", ";", "Settings", "nodeSettings", "=", "ImmutableSettings", ".", "builder", "(", ")", ".", "put", "(", "GroovyScriptEngineService", ".", "GROOVY_SCRIPT_SANDBOX_ENABLED", ",", "true", ")", ".", "build", "(", ");", "internalCluster", "(", ").", "startNodesAsync", "(", "nodes", ",", "nodeSettings", ")", ".", "get", "(", ");", "client", "(", ").", "admin", "(", ").", "cluster", "(", ").", "prepareHealth", "(", ").", "setWaitForNodes", "(", "nodes", "+", "\"", "\")", ".", "get", "(", ");", "client", "(", ").", "prepareIndex", "(", "\"", "test", "\"", ",", "\"", "doc", "\"", ",", "\"", "1", "\"", ").", "setSource", "(", "\"", "foo", "\"", ",", "5", ")", ".", "setRefresh", "(", "true", ")", ".", "get", "(", ");", "/", "/", "Plain", "test", "@", "@", "-", "100", ",", "6", "+", "107", ",", "13", "@", "@", "public", "void", "testSandboxedGroovyScript", "(", ")", "{", "@", "Test", "public", "void", "testDynamicBlacklist", "(", ")", "throws", "Exception", "{", "int", "nodes", "=", "randomIntBetween", "(", "1", ",", "3", ")", ";", "Settings", "nodeSettings", "=", "ImmutableSettings", ".", "builder", "(", ")", ".", "put", "(", "GroovyScriptEngineService", ".", "GROOVY_SCRIPT_SANDBOX_ENABLED", ",", "true", ")", ".", "build", "(", ");", "internalCluster", "(", ").", "startNodesAsync", "(", "nodes", ",", "nodeSettings", ")", ".", "get", "(", ");", "client", "(", ").", "admin", "(", ").", "cluster", "(", ").", "prepareHealth", "(", ").", "setWaitForNodes", "(", "nodes", "+", "\"", "\")", ".", "get", "(", ");", "client", "(", ").", "prepareIndex", "(", "\"", "test", "\"", ",", "\"", "doc", "\"", ",", "\"", "1", "\"", ").", "setSource", "(", "\"", "foo", "\"", ",", "5", ")", ".", "setRefresh", "(", "true", ")", ".", "get", "(", ");", "testSuccess", "(", "\"[", "doc", "[", "'", "foo", "'", "].", "value", ",", "3", ",", "4", "]", ".", "isEmpty", "(", ")\"", ");", "@", "@", "-", "76", ",", "19", "+", "76", ",", "6", "@", "@", "public", "void", "testGroovyExceptionSerialization", "(", ")", "throws", "Exception", "{", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", ".", "contains", "(", "\"", "No", "such", "property", ":", "not_found", "\"", "),", "equalTo", "(", "true", ")", ");", "}", "try", "{", "client", "(", ").", "prepareSearch", "(", "\"", "test", "\"", ").", "setQuery", "(", "constantScoreQuery", "(", "scriptFilter", "(", "\"", "pr", "=", "Runtime", ".", "getRuntime", "(", ").", "exec", "(", "\\\"", "touch", "/", "tmp", "/", "gotcha", "\\", "\")", ";", "pr", ".", "waitFor", "(", ")\"", ").", "lang", "(", "\"", "groovy", "\"", "))", ").", "get", "(", ");", "fail", "(", "\"", "should", "have", "thrown", "an", "exception", "\"", ");", "}", "catch", "(", "SearchPhaseExecutionException", "e", ")", "{", "assertThat", "(", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", "+", "\"", "should", "not", "contained", "NotSerializableTransportException", "\"", ",", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", ".", "contains", "(", "\"", "NotSerializableTransportException", "\"", "),", "equalTo", "(", "false", ")", ");", "assertThat", "(", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", "+", "\"", "should", "have", "contained", "GroovyScriptCompilationException", "\"", ",", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", ".", "contains", "(", "\"", "GroovyScriptCompilationException", "\"", "),", "equalTo", "(", "true", ")", ");", "assertThat", "(", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", "+", "\"", "should", "have", "contained", "Method", "calls", "not", "allowed", "on", "[", "java", ".", "lang", ".", "Runtime", "]", "\",", "ExceptionsHelper", ".", "detailedMessage", "(", "e", ")", ".", "contains", "(", "\"", "Method", "calls", "not", "allowed", "on", "[", "java", ".", "lang", ".", "Runtime", "]", "\")", ",", "equalTo", "(", "true", ")", ");", "}", "try", "{", "client", "(", ").", "prepareSearch", "(", "\"", "test", "\"", ").", "setQuery", "(", "constantScoreQuery", "(", "scriptFilter", "(", "\"", "assert", "false", "\"", ").", "lang", "(", "\"", "groovy", "\"", "))", ").", "get", "(", ");", "@", "@", "-", "79", ",", "6", "+", "79", ",", "7", "@", "@", "private", "static", "Node", "newNode", "(", ")", "{", ".", "put", "(", "\"", "node", ".", "name", "\"", ",", "nodeName", "(", "))", ".", "put", "(", "IndexMetaData", ".", "SETTING_NUMBER_OF_SHARDS", ",", "1", ")", ".", "put", "(", "IndexMetaData", ".", "SETTING_NUMBER_OF_REPLICAS", ",", "0", ")", ".", "put", "(", "\"", "script", ".", "disable_dynamic", "\"", ",", "false", ")", ".", "put", "(", "EsExecutors", ".", "PROCESSORS", ",", "1", ")", "/", "/", "limit", "the", "number", "of", "threads", "created", ".", "put", "(", "\"", "http", ".", "enabled", "\"", ",", "false", ")", ".", "put", "(", "\"", "index", ".", "store", ".", "type", "\"", ",", "\"", "ram", "\"", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2190", ",", "20", "+", "2190", ",", "22", "@", "@", "static", "int", "adjust_scalar_min_max_vals", "(", "struct", "bpf_verifier_env", "*", "env", ",", "mark_reg_unknown", "(", "env", ",", "regs", ",", "insn", "-", ">", "dst_reg", ")", ";", "break", ";", "}", "/", "*", "BPF_RSH", "is", "an", "unsigned", "shift", ",", "so", "make", "the", "appropriate", "casts", "*", "/", "if", "(", "dst_reg", "-", ">", "smin_value", "<", "0", ")", "{", "if", "(", "umin_val", ")", "{", "/", "*", "Sign", "bit", "will", "be", "cleared", "*", "/", "dst_reg", "-", ">", "smin_value", "=", "0", ";", "}", "else", "{", "/", "*", "Lost", "sign", "bit", "information", "*", "/", "dst_reg", "-", ">", "smin_value", "=", "S64_MIN", ";", "dst_reg", "-", ">", "smax_value", "=", "S64_MAX", ";", "}", "}", "else", "{", "dst_reg", "-", ">", "smin_value", "=", "(", "u64", ")", "(", "dst_reg", "-", ">", "smin_value", ")", ">", ">", "umax_val", ";", "}", "/", "*", "BPF_RSH", "is", "an", "unsigned", "shift", ".", "If", "the", "value", "in", "dst_reg", "might", "*", "be", "negative", ",", "then", "either", ":", "*", "1", ")", "src_reg", "might", "be", "zero", ",", "so", "the", "sign", "bit", "of", "the", "result", "is", "*", "unknown", ",", "so", "we", "lose", "our", "signed", "bounds", "*", "2", ")", "it", "'", "s", "known", "negative", ",", "thus", "the", "unsigned", "bounds", "capture", "the", "*", "signed", "bounds", "*", "3", ")", "the", "signed", "bounds", "cross", "zero", ",", "so", "they", "tell", "us", "nothing", "*", "about", "the", "result", "*", "If", "the", "value", "in", "dst_reg", "is", "known", "nonnegative", ",", "then", "again", "the", "*", "unsigned", "bounts", "capture", "the", "signed", "bounds", ".", "*", "Thus", ",", "in", "all", "cases", "it", "suffices", "to", "blow", "away", "our", "signed", "bounds", "*", "and", "rely", "on", "inferring", "new", "ones", "from", "the", "unsigned", "bounds", "and", "*", "var_off", "of", "the", "result", ".", "*", "/", "dst_reg", "-", ">", "smin_value", "=", "S64_MIN", ";", "dst_reg", "-", ">", "smax_value", "=", "S64_MAX", ";", "if", "(", "src_known", ")", "dst_reg", "-", ">", "var_off", "=", "tnum_rshift", "(", "dst_reg", "-", ">", "var_off", ",", "umin_val", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "193", ",", "6", "+", "193", ",", "11", "@", "@", "<", "/", "dependency", ">", "<", "!-", "-", "Required", "Jenkins", "Plug", "-", "in", "Dependencies", "-", "->", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "jenkins", "-", "ci", ".", "plugins", "<", "/", "groupId", ">", "<", "artifactId", ">", "script", "-", "security", "<", "/", "artifactId", ">", "<", "version", ">", "1", ".", "50", "<", "/", "version", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "jenkins", "-", "ci", ".", "plugins", ".", "workflow", "<", "/", "groupId", ">", "<", "artifactId", ">", "workflow", "-", "step", "-", "api", "<", "/", "artifactId", ">", "@", "@", "-", "388", ",", "11", "+", "393", ",", "6", "@", "@", "<", "artifactId", ">", "scm", "-", "api", "<", "/", "artifactId", ">", "<", "version", ">", "2", ".", "2", ".", "0", "<", "/", "version", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "jenkins", "-", "ci", ".", "plugins", "<", "/", "groupId", ">", "<", "artifactId", ">", "script", "-", "security", "<", "/", "artifactId", ">", "<", "version", ">", "1", ".", "36", "<", "/", "version", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "commons", "-", "net", "<", "/", "groupId", ">", "<", "artifactId", ">", "commons", "-", "net", "<", "/", "artifactId", ">", "@", "@", "-", "11", ",", "6", "+", "11", ",", "7", "@", "@", "import", "org", ".", "codehaus", ".", "groovy", ".", "control", ".", "CompilationFailedException", ";", "import", "org", ".", "kohsuke", ".", "stapler", ".", "DataBoundConstructor", ";", "import", "org", ".", "kohsuke", ".", "stapler", ".", "QueryParameter", ";", "import", "org", ".", "kohsuke", ".", "stapler", ".", "interceptor", ".", "RequirePOST", ";", "import", "jenkins", ".", "model", ".", "Jenkins", ";", "@", "@", "-", "298", ",", "6", "+", "299", ",", "7", "@", "@", "public", "FormValidation", "doCheckRegexp", "(", "@", "QueryParameter", "(", "required", "=", "true", ")", "final", "Strin", "*", "the", "script", "*", "@", "return", "the", "validation", "result", "*", "/", "@", "RequirePOST", "public", "FormValidation", "doCheckScript", "(", "@", "QueryParameter", "(", "required", "=", "true", ")", "final", "String", "script", ")", "{", "if", "(", "!", "canRunScripts", "(", "))", "{", "return", "NO_RUN_SCRIPT_PERMISSION_WARNING", ";", "@", "@", "-", "6", ",", "6", "+", "6", ",", "7", "@", "@", "import", "java", ".", "util", ".", "regex", ".", "Matcher", ";", "import", "org", ".", "codehaus", ".", "groovy", ".", "control", ".", "CompilationFailedException", ";", "import", "org", ".", "jenkinsci", ".", "plugins", ".", "scriptsecurity", ".", "sandbox", ".", "groovy", ".", "GroovySandbox", ";", "import", "groovy", ".", "lang", ".", "Binding", ";", "import", "groovy", ".", "lang", ".", "GroovyShell", ";", "@", "@", "-", "63", ",", "7", "+", "64", ",", "8", "@", "@", "private", "void", "compileScriptIfNotYetDone", "(", ")", "{", "public", "Script", "compile", "(", ")", "throws", "CompilationFailedException", "{", "Binding", "binding", "=", "new", "Binding", "(", ");", "binding", ".", "setVariable", "(", "\"", "falsePositive", "\"", ",", "falsePositive", ")", ";", "GroovyShell", "shell", "=", "new", "GroovyShell", "(", "WarningsDescriptor", ".", "class", ".", "getClassLoader", "(", "),", "binding", ")", ";", "GroovyShell", "shell", "=", "new", "GroovyShell", "(", "GroovySandbox", ".", "createSecureClassLoader", "(", "WarningsDescriptor", ".", "class", ".", "getClassLoader", "(", "))", ",", "binding", ",", "GroovySandbox", ".", "createSecureCompilerConfiguration", "(", "))", ";", "return", "shell", ".", "parse", "(", "script", ")", ";", "}", "@", "@", "-", "11", ",", "6", "+", "11", ",", "7", "@", "@", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "Issue", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "JenkinsRule", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "*;", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "hudson", ".", "plugins", ".", "analysis", ".", "util", ".", "model", ".", "FileAnnotation", ";", "@", "@", "-", "228", ",", "6", "+", "229", ",", "26", "@", "@", "public", "void", "testMultiLineExpressionWillMatch", "(", ")", "throws", "IOException", "{", "assertOk", "(", "descriptor", ".", "doCheckExample", "(", "MULTI_LINE_EXAMPLE", ",", "MULTI_LINE_REGEXP", ",", "MULTILINE_SCRIPT", ")", ");", "}", "@", "Issue", "(", "\"", "SECURITY", "-", "1295", "\"", ")", "@", "Test", "public", "void", "blockASTTest", "(", ")", "throws", "Exception", "{", "DescriptorImpl", "d", "=", "createDescriptor", "(", ");", "assertThat", "(", "d", ".", "doCheckScript", "(", "\"", "import", "groovy", ".", "transform", ".", "*\\", "n", "\"", "\"", "import", "jenkins", ".", "model", ".", "Jenkins", "\\", "n", "\"", "\"", "import", "hudson", ".", "model", ".", "FreeStyleProject", "\\", "n", "\"", "\"", "@", "ASTTest", "(", "value", "=", "{", "assert", "Jenkins", ".", "getInstance", "(", ").", "createProject", "(", "FreeStyleProject", ".", "class", ",", "\\", "\"", "should", "-", "not", "-", "exist", "\\", "\")", "}", ")\\", "n", "\"", "\"", "@", "Field", "int", "x", "\\", "n", "\"", "\"", "echo", "'", "hello", "'", "\\", "n", "\"", ").", "toString", "(", "),", "containsString", "(", "\"", "Annotation", "ASTTest", "cannot", "be", "used", "in", "the", "sandbox", "\"", "))", ";", "}", "@", "Issue", "(", "\"", "SECURITY", "-", "1295", "\"", ")", "@", "Test", "public", "void", "blockGrab", "(", ")", "throws", "Exception", "{", "DescriptorImpl", "d", "=", "createDescriptor", "(", ");", "assertThat", "(", "d", ".", "doCheckScript", "(", "\"@", "Grab", "(", "group", "=", "'", "foo", "'", ",", "module", "=", "'", "bar", "'", ",", "version", "=", "'", "1", ".", "0", "'", ")\\", "ndef", "foo", "\\", "n", "\"", ").", "toString", "(", "),", "containsString", "(", "\"", "Annotation", "Grab", "cannot", "be", "used", "in", "the", "sandbox", "\"", "))", ";", "}", "private", "DescriptorImpl", "createDescriptor", "(", ")", "{", "return", "new", "DescriptorImpl", "(", ");", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "427", ",", "13", "+", "427", ",", "13", "@", "@", "protected", "String", "invokeAction", "(", "Object", "action", ",", "ActionConfig", "actionConfig", ")", "throws", "E", "Object", "methodResult", ";", "try", "{", "methodResult", "=", "ognlUtil", ".", "getValue", "(", "methodName", "+", "\"", "()", "\",", "getStack", "(", ").", "getContext", "(", "),", "action", ")", ";", "methodResult", "=", "ognlUtil", ".", "callMethod", "(", "methodName", "+", "\"", "()", "\",", "getStack", "(", ").", "getContext", "(", "),", "action", ")", ";", "}", "catch", "(", "MethodFailedException", "e", ")", "{", "/", "/", "if", "reason", "is", "missing", "method", ",", "try", "find", "version", "with", "\"", "do", "\"", "prefix", "if", "(", "e", ".", "getReason", "(", ")", "instanceof", "NoSuchMethodException", ")", "{", "try", "{", "String", "altMethodName", "=", "\"", "do", "\"", "+", "methodName", ".", "substring", "(", "0", ",", "1", ")", ".", "toUpperCase", "(", ")", "+", "methodName", ".", "substring", "(", "1", ")", "+", "\"", "()", "\";", "methodResult", "=", "ognlUtil", ".", "getValue", "(", "altMethodName", ",", "getStack", "(", ").", "getContext", "(", "),", "action", ")", ";", "methodResult", "=", "ognlUtil", ".", "callMethod", "(", "altMethodName", ",", "getStack", "(", ").", "getContext", "(", "),", "action", ")", ";", "}", "catch", "(", "MethodFailedException", "e1", ")", "{", "/", "/", "if", "still", "method", "doesn", "'", "t", "exist", ",", "try", "checking", "UnknownHandlers", "if", "(", "e1", ".", "getReason", "(", ")", "instanceof", "NoSuchMethodException", ")", "{", "@", "@", "-", "290", ",", "6", "+", "290", ",", "9", "@", "@", "public", "Void", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "if", "(", "isEvalExpression", "(", "tree", ",", "context", ")", ")", "{", "throw", "new", "OgnlException", "(", "\"", "Eval", "expression", "/", "chained", "expressions", "cannot", "be", "used", "as", "parameter", "name", "\"", ");", "}", "if", "(", "isArithmeticExpression", "(", "tree", ",", "context", ")", ")", "{", "throw", "new", "OgnlException", "(", "\"", "Arithmetic", "expressions", "cannot", "be", "used", "as", "parameter", "name", "\"", ");", "}", "Ognl", ".", "setValue", "(", "tree", ",", "context", ",", "root", ",", "value", ")", ";", "return", "null", ";", "}", "@", "@", "-", "309", ",", "6", "+", "312", ",", "32", "@", "@", "private", "boolean", "isEvalExpression", "(", "Object", "tree", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "throw", "return", "false", ";", "}", "private", "boolean", "isArithmeticExpression", "(", "Object", "tree", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "throws", "OgnlException", "{", "if", "(", "tree", "instanceof", "SimpleNode", ")", "{", "SimpleNode", "node", "=", "(", "SimpleNode", ")", "tree", ";", "OgnlContext", "ognlContext", "=", "null", ";", "if", "(", "context", "!", "=", "null", "&", "&", "context", "instanceof", "OgnlContext", ")", "{", "ognlContext", "=", "(", "OgnlContext", ")", "context", ";", "}", "return", "node", ".", "isOperation", "(", "ognlContext", ")", ";", "}", "return", "false", ";", "}", "private", "boolean", "isSimpleMethod", "(", "Object", "tree", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "throws", "OgnlException", "{", "if", "(", "tree", "instanceof", "SimpleNode", ")", "{", "SimpleNode", "node", "=", "(", "SimpleNode", ")", "tree", ";", "OgnlContext", "ognlContext", "=", "null", ";", "if", "(", "context", "!", "=", "null", "&", "&", "context", "instanceof", "OgnlContext", ")", "{", "ognlContext", "=", "(", "OgnlContext", ")", "context", ";", "}", "return", "node", ".", "isSimpleMethod", "(", "ognlContext", ")", "&", "&", "!", "node", ".", "isChain", "(", "ognlContext", ")", ";", "}", "return", "false", ";", "}", "public", "Object", "getValue", "(", "final", "String", "name", ",", "final", "Map", "<", "String", ",", "Object", ">", "context", ",", "final", "Object", "root", ")", "throws", "OgnlException", "{", "return", "compileAndExecute", "(", "name", ",", "context", ",", "new", "OgnlTask", "<", "Object", ">", "()", "{", "public", "Object", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "@", "@", "-", "317", ",", "6", "+", "346", ",", "14", "@", "@", "public", "Object", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "}", ");", "}", "public", "Object", "callMethod", "(", "final", "String", "name", ",", "final", "Map", "<", "String", ",", "Object", ">", "context", ",", "final", "Object", "root", ")", "throws", "OgnlException", "{", "return", "compileAndExecuteMethod", "(", "name", ",", "context", ",", "new", "OgnlTask", "<", "Object", ">", "()", "{", "public", "Object", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "return", "Ognl", ".", "getValue", "(", "tree", ",", "context", ",", "root", ")", ";", "}", "}", ");", "}", "public", "Object", "getValue", "(", "final", "String", "name", ",", "final", "Map", "<", "String", ",", "Object", ">", "context", ",", "final", "Object", "root", ",", "final", "Class", "resultType", ")", "throws", "OgnlException", "{", "return", "compileAndExecute", "(", "name", ",", "context", ",", "new", "OgnlTask", "<", "Object", ">", "()", "{", "public", "Object", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "@", "@", "-", "351", ",", "6", "+", "388", ",", "27", "@", "@", "public", "Object", "compile", "(", "String", "expression", ")", "throws", "OgnlException", "{", "return", "exec", ";", "}", "private", "<", "T", ">", "Object", "compileAndExecuteMethod", "(", "String", "expression", ",", "Map", "<", "String", ",", "Object", ">", "context", ",", "OgnlTask", "<", "T", ">", "task", ")", "throws", "OgnlException", "{", "Object", "tree", ";", "if", "(", "enableExpressionCache", ")", "{", "tree", "=", "expressions", ".", "get", "(", "expression", ")", ";", "if", "(", "tree", "=", "=", "null", ")", "{", "tree", "=", "Ognl", ".", "parseExpression", "(", "expression", ")", ";", "checkSimpleMethod", "(", "tree", ",", "context", ")", ";", "}", "}", "else", "{", "tree", "=", "Ognl", ".", "parseExpression", "(", "expression", ")", ";", "checkSimpleMethod", "(", "tree", ",", "context", ")", ";", "}", "final", "T", "exec", "=", "task", ".", "execute", "(", "tree", ")", ";", "/", "/", "if", "cache", "is", "enabled", "and", "it", "'", "s", "a", "valid", "expression", ",", "puts", "it", "in", "if", "(", "enableExpressionCache", ")", "{", "expressions", ".", "putIfAbsent", "(", "expression", ",", "tree", ")", ";", "}", "return", "exec", ";", "}", "public", "Object", "compile", "(", "String", "expression", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "throws", "OgnlException", "{", "return", "compileAndExecute", "(", "expression", ",", "context", ",", "new", "OgnlTask", "<", "Object", ">", "()", "{", "public", "Object", "execute", "(", "Object", "tree", ")", "throws", "OgnlException", "{", "@", "@", "-", "365", ",", "6", "+", "423", ",", "12", "@", "@", "private", "void", "checkEnableEvalExpression", "(", "Object", "tree", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "}", "}", "private", "void", "checkSimpleMethod", "(", "Object", "tree", ",", "Map", "<", "String", ",", "Object", ">", "context", ")", "throws", "OgnlException", "{", "if", "(", "!", "isSimpleMethod", "(", "tree", ",", "context", ")", ")", "{", "throw", "new", "OgnlException", "(", "\"", "It", "isn", "'", "t", "a", "simple", "method", "which", "can", "be", "called", "!", "\")", ";", "}", "}", "/", "**", "*", "Copies", "the", "properties", "in", "the", "object", "\"", "from", "\"", "and", "sets", "them", "in", "the", "object", "\"", "to", "\"", "*", "using", "specified", "type", "converter", ",", "or", "{", "@", "link", "com", ".", "opensymphony", ".", "xwork2", ".", "conversion", ".", "impl", ".", "XWorkConverter", "}", "if", "none", "@", "@", "-", "765", ",", "6", "+", "765", ",", "21", "@", "@", "public", "void", "testBlockSequenceOfExpressions", "(", ")", "throws", "Exception", "{", "assertEquals", "(", "expected", ".", "getMessage", "(", "),", "\"", "Eval", "expressions", "/", "chained", "expressions", "have", "been", "disabled", "!", "\")", ";", "}", "public", "void", "testCallMethod", "(", ")", "throws", "Exception", "{", "Foo", "foo", "=", "new", "Foo", "(", ");", "Exception", "expected", "=", "null", ";", "try", "{", "ognlUtil", ".", "callMethod", "(", "\"#", "booScope", "=", "@", "myclass", "@", "DEFAULT_SCOPE", ",", "#", "bootScope", ".", "init", "(", ")\"", ",", "ognlUtil", ".", "createDefaultContext", "(", "foo", ")", ",", "foo", ")", ";", "fail", "(", ");", "}", "catch", "(", "OgnlException", "e", ")", "{", "expected", "=", "e", ";", "}", "assertNotNull", "(", "expected", ")", ";", "assertSame", "(", "OgnlException", ".", "class", ",", "expected", ".", "getClass", "(", "))", ";", "assertEquals", "(", "expected", ".", "getMessage", "(", "),", "\"", "It", "isn", "'", "t", "a", "simple", "method", "which", "can", "be", "called", "!", "\")", ";", "}", "public", "static", "class", "Email", "{", "String", "address", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2374", ",", "4", "+", "2374", ",", "9", "@", "@", "public", "RuntimeException", "cannotSetMaxPoolSizeToNegative", "(", "String", "max", ")", "{", "return", "new", "RuntimeException", "(", "\"", "Cannot", "set", "maximum", "STS", "client", "pool", "size", "to", "negative", "number", "(", "\"", "+", "max", "+", "\"", ")\"", ");", "}", "@", "Override", "public", "RuntimeException", "parserFeatureNotSupported", "(", "String", "feature", ")", "{", "return", "new", "RuntimeException", "(", "\"", "Parser", "feature", "\"", "+", "feature", "+", "\"", "not", "supported", ".", "\")", ";", "}", "}", "@", "@", "-", "1215", ",", "4", "+", "1215", ",", "6", "@", "@", "RuntimeException", "cannotSetMaxPoolSizeToNegative", "(", "String", "max", ")", ";", "RuntimeException", "parserFeatureNotSupported", "(", "String", "feature", ")", ";", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "66", ",", "6", "+", "66", ",", "10", "@", "@", "private", "static", "DocumentBuilderFactory", "documentBuilderFactory", ";", "public", "static", "final", "String", "feature_external_general_entities", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ";", "public", "static", "final", "String", "feature_external_parameter_entities", "=", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ";", "public", "static", "final", "String", "feature_disallow_doctype_decl", "=", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ";", "/", "**", "*", "Check", "whether", "a", "node", "belongs", "to", "a", "document", "*", "@", "@", "-", "517", ",", "6", "+", "521", ",", "17", "@", "@", "private", "static", "DocumentBuilderFactory", "getDocumentBuilderFactory", "(", ")", "{", "documentBuilderFactory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "documentBuilderFactory", ".", "setNamespaceAware", "(", "true", ")", ";", "documentBuilderFactory", ".", "setXIncludeAware", "(", "true", ")", ";", "String", "feature", "=", "\"", "\";", "try", "{", "feature", "=", "feature_disallow_doctype_decl", ";", "documentBuilderFactory", ".", "setFeature", "(", "feature", ",", "true", ")", ";", "feature", "=", "feature_external_general_entities", ";", "documentBuilderFactory", ".", "setFeature", "(", "feature", ",", "false", ")", ";", "feature", "=", "feature_external_parameter_entities", ";", "documentBuilderFactory", ".", "setFeature", "(", "feature", ",", "false", ")", ";", "}", "catch", "(", "ParserConfigurationException", "e", ")", "{", "throw", "logger", ".", "parserFeatureNotSupported", "(", "feature", ")", ";", "}", "}", "finally", "{", "if", "(", "tccl_jaxp", ")", "{", "SecurityActions", ".", "setTCCL", "(", "prevTCCL", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "526", ",", "9", "+", "526", ",", "8", "@", "@", "struct", "key", "*", "find_keyring_by_name", "(", "const", "char", "*", "name", ",", "bool", "skip_perm_check", ")", "struct", "key", "*", "keyring", ";", "int", "bucket", ";", "keyring", "=", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "if", "(", "!", "name", ")", "goto", "error", ";", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "bucket", "=", "keyring_hash", "(", "name", ")", ";", "@", "@", "-", "555", ",", "17", "+", "554", ",", "18", "@", "@", "struct", "key", "*", "find_keyring_by_name", "(", "const", "char", "*", "name", ",", "bool", "skip_perm_check", ")", "KEY_SEARCH", ")", "<", "0", ")", "continue", ";", "/", "*", "we", "'", "ve", "got", "a", "match", "*", "/", "atomic_inc", "(", "&", "keyring", "-", ">", "usage", ")", ";", "read_unlock", "(", "&", "keyring_name_lock", ")", ";", "goto", "error", ";", "/", "*", "we", "'", "ve", "got", "a", "match", "but", "we", "might", "end", "up", "racing", "with", "*", "key_cleanup", "(", ")", "if", "the", "keyring", "is", "currently", "'", "dead", "'", "*", "(", "ie", ".", "it", "has", "a", "zero", "usage", "count", ")", "*", "/", "if", "(", "!", "atomic_inc_not_zero", "(", "&", "keyring", "-", ">", "usage", ")", ")", "continue", ";", "goto", "out", ";", "}", "}", "read_unlock", "(", "&", "keyring_name_lock", ")", ";", "keyring", "=", "ERR_PTR", "(", "-", "ENOKEY", ")", ";", "error", ":", "out", ":", "read_unlock", "(", "&", "keyring_name_lock", ")", ";", "return", "keyring", ";", "}", "/", "*", "end", "find_keyring_by_name", "(", ")", "*", "/"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "910", ",", "10", "+", "910", ",", "18", "@", "@", "static", "int", "futex_lock_pi_atomic", "(", "u32", "__user", "*", "uaddr", ",", "struct", "futex_hash_bucket", "*", "hb", ",", "return", "-", "EDEADLK", ";", "/", "*", "*", "Surprise", "-", "we", "got", "the", "lock", ".", "Just", "return", "to", "userspace", ":", "*", "Surprise", "-", "we", "got", "the", "lock", ",", "but", "we", "do", "not", "trust", "user", "space", "at", "all", ".", "*", "/", "if", "(", "unlikely", "(", "!", "curval", ")", ")", "return", "1", ";", "if", "(", "unlikely", "(", "!", "curval", ")", ")", "{", "/", "*", "*", "We", "verify", "whether", "there", "is", "kernel", "state", "for", "this", "*", "futex", ".", "If", "not", ",", "we", "can", "safely", "assume", ",", "that", "the", "0", "-", ">", "*", "TID", "transition", "is", "correct", ".", "If", "state", "exists", ",", "we", "do", "*", "not", "bother", "to", "fixup", "the", "user", "space", "state", "as", "it", "was", "*", "corrupted", "already", ".", "*", "/", "return", "futex_top_waiter", "(", "hb", ",", "key", ")", "?", "-", "EINVAL", ":", "1", ";", "}", "uval", "=", "curval", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "4609", ",", "6", "+", "4609", ",", "7", "@", "@", "static", "int", "snd_hdsp_hwdep_ioctl", "(", "struct", "snd_hwdep", "*", "hw", ",", "struct", "file", "*", "file", ",", "unsigne", "if", "(", "err", "<", "0", ")", "return", "err", ";", "memset", "(", "&", "info", ",", "0", ",", "sizeof", "(", "info", ")", ");", "spin_lock_irqsave", "(", "&", "hdsp", "-", ">", "lock", ",", "flags", ")", ";", "info", ".", "pref_sync_ref", "=", "(", "unsigned", "char", ")", "hdsp_pref_sync_ref", "(", "hdsp", ")", ";", "info", ".", "wordclock_sync_check", "=", "(", "unsigned", "char", ")", "hdsp_wc_sync_check", "(", "hdsp", ")", ";", "@", "@", "-", "4127", ",", "6", "+", "4127", ",", "7", "@", "@", "static", "int", "snd_hdspm_hwdep_ioctl", "(", "struct", "snd_hwdep", "*", "hw", ",", "struct", "file", "*", "file", ",", "case", "SNDRV_HDSPM_IOCTL_GET_CONFIG_INFO", ":", "memset", "(", "&", "info", ",", "0", ",", "sizeof", "(", "info", ")", ");", "spin_lock_irq", "(", "&", "hdspm", "-", ">", "lock", ")", ";", "info", ".", "pref_sync_ref", "=", "hdspm_pref_sync_ref", "(", "hdspm", ")", ";", "info", ".", "wordclock_sync_check", "=", "hdspm_wc_sync_check", "(", "hdspm", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "239", ",", "7", "+", "239", ",", "8", "@", "@", "static", "int", "rds_iw_laddr_check", "(", "__be32", "addr", ")", "ret", "=", "rdma_bind_addr", "(", "cm_id", ",", "(", "struct", "sockaddr", "*", ")&", "sin", ")", ";", "/", "*", "due", "to", "this", ",", "we", "will", "claim", "to", "support", "IB", "devices", "unless", "we", "check", "node_type", ".", "*", "/", "if", "(", "ret", "|", "|", "cm_id", "-", ">", "device", "-", ">", "node_type", "!", "=", "RDMA_NODE_RNIC", ")", "if", "(", "ret", "|", "|", "!", "cm_id", "-", ">", "device", "|", "|", "cm_id", "-", ">", "device", "-", ">", "node_type", "!", "=", "RDMA_NODE_RNIC", ")", "ret", "=", "-", "EADDRNOTAVAIL", ";", "rdsdebug", "(", "\"", "addr", "%", "pI4", "ret", "%", "d", "node", "type", "%", "d", "\\", "n", "\"", ","], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "13", ",", "6", "+", "13", ",", "9", "@", "@", "parameter", "to", "allow", "user", "to", "disable", "sending", "the", "(", "slow", ")", "SMB", "flush", "on", "fsync", "if", "desired", "(", "fsync", "still", "flushes", "all", "cached", "write", "data", "to", "the", "server", ")", ".", "Posix", "file", "open", "support", "added", "(", "turned", "off", "after", "one", "attempt", "if", "server", "fails", "to", "support", "it", "properly", ",", "as", "with", "Samba", "server", "versions", "prior", "to", "3", ".", "3", ".", "2", ")", "Fix", "\"", "redzone", "overwritten", "\"", "bug", "in", "cifs_put_tcon", "(", "CIFSTcon", "may", "allocate", "too", "little", "memory", "for", "the", "\"", "nativeFileSystem", "\"", "field", "returned", "by", "the", "server", "during", "mount", ")", ".", "Version", "1", ".", "56", "-", "--", "--", "--", "--", "--", "-", "@", "@", "-", "3674", ",", "7", "+", "3674", ",", "7", "@", "@", "CIFSTCon", "(", "unsigned", "int", "xid", ",", "struct", "cifsSesInfo", "*", "ses", ",", "BCC", "(", "smb_buffer_response", ")", ")", "{", "kfree", "(", "tcon", "-", ">", "nativeFileSystem", ")", ";", "tcon", "-", ">", "nativeFileSystem", "=", "kzalloc", "(", "length", "+", "2", ",", "GFP_KERNEL", ")", ";", "kzalloc", "(", "2", "*", "(", "length", "+", "1", ")", ",", "GFP_KERNEL", ")", ";", "if", "(", "tcon", "-", ">", "nativeFileSystem", ")", "cifs_strfromUCS_le", "(", "tcon", "-", ">", "nativeFileSystem", ","], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "9", ",", "6", "+", "9", ",", "7", "@", "@", "extern", "void", "unix_inflight", "(", "struct", "file", "*", "fp", ")", ";", "extern", "void", "unix_notinflight", "(", "struct", "file", "*", "fp", ")", ";", "extern", "void", "unix_gc", "(", "void", ")", ";", "extern", "void", "wait_for_unix_gc", "(", "void", ")", ";", "#", "define", "UNIX_HASH_SIZE", "256", "@", "@", "-", "1343", ",", "6", "+", "1343", ",", "7", "@", "@", "static", "int", "unix_dgram_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "if", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "siocb", "-", ">", "scm", "=", "&", "tmp_scm", ";", "wait_for_unix_gc", "(", ");", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "if", "(", "err", "<", "0", ")", "return", "err", ";", "@", "@", "-", "1493", ",", "6", "+", "1494", ",", "7", "@", "@", "static", "int", "unix_stream_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "if", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "siocb", "-", ">", "scm", "=", "&", "tmp_scm", ";", "wait_for_unix_gc", "(", ");", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "if", "(", "err", "<", "0", ")", "return", "err", ";", "@", "@", "-", "80", ",", "6", "+", "80", ",", "7", "@", "@", "#", "include", "<", "linux", "/", "file", ".", "h", ">", "#", "include", "<", "linux", "/", "proc_fs", ".", "h", ">", "#", "include", "<", "linux", "/", "mutex", ".", "h", ">", "#", "include", "<", "linux", "/", "wait", ".", "h", ">", "#", "include", "<", "net", "/", "sock", ".", "h", ">", "#", "include", "<", "net", "/", "af_unix", ".", "h", ">", "@", "@", "-", "91", ",", "6", "+", "92", ",", "7", "@", "@", "static", "LIST_HEAD", "(", "gc_inflight_list", ")", ";", "static", "LIST_HEAD", "(", "gc_candidates", ")", ";", "static", "DEFINE_SPINLOCK", "(", "unix_gc_lock", ")", ";", "static", "DECLARE_WAIT_QUEUE_HEAD", "(", "unix_gc_wait", ")", ";", "unsigned", "int", "unix_tot_inflight", ";", "@", "@", "-", "266", ",", "12", "+", "268", ",", "16", "@", "@", "static", "void", "inc_inflight_move_tail", "(", "struct", "unix_sock", "*", "u", ")", "list_move_tail", "(", "&", "u", "-", ">", "link", ",", "&", "gc_candidates", ")", ";", "}", "/", "*", "The", "external", "entry", "point", ":", "unix_gc", "(", ")", "*", "/", "static", "bool", "gc_in_progress", "=", "false", ";", "void", "unix_gc", "(", "void", ")", "void", "wait_for_unix_gc", "(", "void", ")", "{", "static", "bool", "gc_in_progress", "=", "false", ";", "wait_event", "(", "unix_gc_wait", ",", "gc_in_progress", "=", "=", "false", ")", ";", "}", "/", "*", "The", "external", "entry", "point", ":", "unix_gc", "(", ")", "*", "/", "void", "unix_gc", "(", "void", ")", "{", "struct", "unix_sock", "*", "u", ";", "struct", "unix_sock", "*", "next", ";", "struct", "sk_buff_head", "hitlist", ";", "@", "@", "-", "376", ",", "6", "+", "382", ",", "7", "@", "@", "void", "unix_gc", "(", "void", ")", "/", "*", "All", "candidates", "should", "have", "been", "detached", "by", "now", ".", "*", "/", "BUG_ON", "(", "!", "list_empty", "(", "&", "gc_candidates", ")", ");", "gc_in_progress", "=", "false", ";", "wake_up", "(", "&", "unix_gc_wait", ")", ";", "out", ":", "spin_unlock", "(", "&", "unix_gc_lock", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "122", ",", "7", "+", "122", ",", "7", "@", "@", "int", "sbusfb_ioctl_helper", "(", "unsigned", "long", "cmd", ",", "unsigned", "long", "arg", ",", "unsigned", "char", "__user", "*", "ured", ";", "unsigned", "char", "__user", "*", "ugreen", ";", "unsigned", "char", "__user", "*", "ublue", ";", "int", "index", ",", "count", ",", "i", ";", "unsigned", "int", "index", ",", "count", ",", "i", ";", "if", "(", "get_user", "(", "index", ",", "&", "c", "-", ">", "index", ")", "|", "|", "__get_user", "(", "count", ",", "&", "c", "-", ">", "count", ")", "|", "|", "@", "@", "-", "161", ",", "7", "+", "161", ",", "7", "@", "@", "int", "sbusfb_ioctl_helper", "(", "unsigned", "long", "cmd", ",", "unsigned", "long", "arg", ",", "unsigned", "char", "__user", "*", "ugreen", ";", "unsigned", "char", "__user", "*", "ublue", ";", "struct", "fb_cmap", "*", "cmap", "=", "&", "info", "-", ">", "cmap", ";", "int", "index", ",", "count", ",", "i", ";", "unsigned", "int", "index", ",", "count", ",", "i", ";", "u8", "red", ",", "green", ",", "blue", ";", "if", "(", "get_user", "(", "index", ",", "&", "c", "-", ">", "index", ")", "|", "|"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "3", ",", "3", "+", "3", ",", "4", "@", "@", "target", ".", "metadata", ".", "project", "doc", "*", ".", "class", "@", "@", "-", "185", ",", "10", "+", "185", ",", "11", "@", "@", "public", "int", "encryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "!", "haskey", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "plaintext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "214", ",", "16", "+", "215", ",", "15", "@", "@", "public", "int", "decryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", ",", "BadPaddingException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "length", ">", "space", ")", "throw", "new", "ShortBufferException", "(", ");", "if", "(", "plaintextOffset", ">", "plaintext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "!", "haskey", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "ciphertext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "218", ",", "10", "+", "218", ",", "11", "@", "@", "public", "int", "encryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "keySpec", "=", "=", "null", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "plaintext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "262", ",", "16", "+", "263", ",", "15", "@", "@", "public", "int", "decryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", ",", "BadPaddingException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "length", ">", "space", ")", "throw", "new", "ShortBufferException", "(", ");", "if", "(", "plaintextOffset", ">", "plaintext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "keySpec", "=", "=", "null", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "ciphertext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "214", ",", "10", "+", "214", ",", "11", "@", "@", "private", "void", "encrypt", "(", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "public", "int", "encryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "!", "haskey", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "plaintext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "241", ",", "16", "+", "242", ",", "15", "@", "@", "public", "int", "decryptWithAd", "(", "byte", "[", "]", "ad", ",", "byte", "[", "]", "ciphertext", ",", "int", "ciphertextOffset", ",", "byte", "[", "]", "plaintext", ",", "int", "plaintextOffset", ",", "int", "length", ")", "throws", "ShortBufferException", ",", "BadPaddingException", "{", "int", "space", ";", "if", "(", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "space", "=", "0", ";", "if", "(", "ciphertextOffset", "<", "0", "|", "|", "ciphertextOffset", ">", "ciphertext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "else", "space", "=", "ciphertext", ".", "length", "-", "ciphertextOffset", ";", "if", "(", "length", ">", "space", ")", "throw", "new", "ShortBufferException", "(", ");", "if", "(", "plaintextOffset", ">", "plaintext", ".", "length", ")", "space", "=", "0", ";", "else", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "length", "<", "0", "|", "|", "plaintextOffset", "<", "0", "|", "|", "plaintextOffset", ">", "plaintext", ".", "length", ")", "throw", "new", "IllegalArgumentException", "(", ");", "space", "=", "plaintext", ".", "length", "-", "plaintextOffset", ";", "if", "(", "!", "haskey", ")", "{", "/", "/", "The", "key", "is", "not", "set", "yet", "-", "return", "the", "ciphertext", "as", "-", "is", ".", "if", "(", "length", ">", "space", ")", "@", "@", "-", "100", ",", "6", "+", "100", ",", "8", "@", "@", "*", "*", "@", "throws", "IllegalStateException", "The", "nonce", "has", "wrapped", "around", ".", "*", "*", "@", "throws", "IllegalArgumentException", "One", "of", "the", "parameters", "is", "out", "of", "range", ".", "*", "*", "The", "plaintext", "and", "ciphertext", "buffers", "can", "be", "the", "same", "for", "in", "-", "place", "*", "encryption", ".", "In", "that", "case", ",", "plaintextOffset", "must", "be", "identical", "to", "*", "ciphertextOffset", ".", "@", "@", "-", "130", ",", "6", "+", "132", ",", "8", "@", "@", "*", "*", "@", "throws", "IllegalStateException", "The", "nonce", "has", "wrapped", "around", ".", "*", "*", "@", "throws", "IllegalArgumentException", "One", "of", "the", "parameters", "is", "out", "of", "range", ".", "*", "*", "The", "plaintext", "and", "ciphertext", "buffers", "can", "be", "the", "same", "for", "in", "-", "place", "*", "decryption", ".", "In", "that", "case", ",", "ciphertextOffset", "must", "be", "identical", "to", "*", "plaintextOffset", "."], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "362", ",", "6", "+", "362", ",", "7", "@", "@", "public", "synchronized", "AbstractXMPPConnection", "connect", "(", ")", "throws", "SmackException", ",", "IOEx", "/", "/", "Perform", "the", "actual", "connection", "to", "the", "XMPP", "service", "connectInternal", "(", ");", "return", "this", ";", "}", "@", "@", "-", "28", ",", "10", "+", "28", ",", "9", "@", "@", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "AlreadyLoggedInException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "NoResponseException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "NotConnectedException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "ConnectionException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "SecurityRequiredByClientException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "ConnectionException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "SecurityRequiredByServerException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SmackException", ".", "SecurityRequiredException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "SynchronizationPoint", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "XMPPException", ".", "StreamErrorException", ";", "import", "org", ".", "jivesoftware", ".", "smack", ".", "XMPPConnection", ";", "@", "@", "-", "857", ",", "6", "+", "856", ",", "14", "@", "@", "protected", "void", "connectInternal", "(", ")", "throws", "SmackException", ",", "IOException", ",", "XMPPExcepti", "/", "/", "Wait", "with", "SASL", "auth", "until", "the", "SASL", "mechanisms", "have", "been", "received", "saslFeatureReceived", ".", "checkIfSuccessOrWaitOrThrow", "(", ");", "/", "/", "If", "TLS", "is", "required", "but", "the", "server", "doesn", "'", "t", "offer", "it", ",", "disconnect", "/", "/", "from", "the", "server", "and", "throw", "an", "error", ".", "First", "check", "if", "we", "'", "ve", "already", "negotiated", "TLS", "/", "/", "and", "are", "secure", ",", "however", "(", "features", "get", "parsed", "a", "second", "time", "after", "TLS", "is", "established", ")", ".", "if", "(", "!", "isSecureConnection", "(", ")", "&", "&", "getConfiguration", "(", ").", "getSecurityMode", "(", ")", "=", "=", "SecurityMode", ".", "required", ")", "{", "shutdown", "(", ");", "throw", "new", "SecurityRequiredByClientException", "(", ");", "}", "/", "/", "Make", "note", "of", "the", "fact", "that", "we", "'", "re", "now", "connected", ".", "connected", "=", "true", ";", "callConnectionConnectedListener", "(", ");", "@", "@", "-", "897", ",", "7", "+", "904", ",", "7", "@", "@", "protected", "void", "setWriter", "(", "Writer", "writer", ")", "{", "}", "@", "Override", "protected", "void", "afterFeaturesReceived", "(", ")", "throws", "SecurityRequiredException", ",", "NotConnectedException", "{", "protected", "void", "afterFeaturesReceived", "(", ")", "throws", "NotConnectedException", "{", "StartTls", "startTlsFeature", "=", "getFeature", "(", "StartTls", ".", "ELEMENT", ",", "StartTls", ".", "NAMESPACE", ")", ";", "if", "(", "startTlsFeature", "!", "=", "null", ")", "{", "if", "(", "startTlsFeature", ".", "required", "(", ")", "&", "&", "config", ".", "getSecurityMode", "(", ")", "=", "=", "SecurityMode", ".", "disabled", ")", "{", "@", "@", "-", "909", ",", "13", "+", "916", ",", "6", "@", "@", "protected", "void", "afterFeaturesReceived", "(", ")", "throws", "SecurityRequiredException", ",", "NotConn", "send", "(", "new", "StartTls", "(", "))", ";", "}", "}", "/", "/", "If", "TLS", "is", "required", "but", "the", "server", "doesn", "'", "t", "offer", "it", ",", "disconnect", "/", "/", "from", "the", "server", "and", "throw", "an", "error", ".", "First", "check", "if", "we", "'", "ve", "already", "negotiated", "TLS", "/", "/", "and", "are", "secure", ",", "however", "(", "features", "get", "parsed", "a", "second", "time", "after", "TLS", "is", "established", ")", ".", "if", "(", "!", "isSecureConnection", "(", ")", "&", "&", "startTlsFeature", "=", "=", "null", "&", "&", "getConfiguration", "(", ").", "getSecurityMode", "(", ")", "=", "=", "SecurityMode", ".", "required", ")", "{", "throw", "new", "SecurityRequiredByClientException", "(", ");", "}", "if", "(", "getSASLAuthentication", "(", ").", "authenticationSuccessful", "(", "))", "{", "/", "/", "If", "we", "have", "received", "features", "after", "the", "SASL", "has", "been", "successfully", "completed", ",", "then", "we"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "35", ",", "7", "+", "35", ",", "10", "@", "@", "*", "*", "Internally", ",", "the", "pool", "is", "stored", "in", "a", "java", ".", "util", ".", "concurrent", ".", "LinkedBlockingDeque", "*", "instance", ".", "*", "*", "@", "deprecated", "This", "class", "is", "no", "longer", "in", "use", "in", "Santuario", "2", ".", "1", ".", "4", "*", "/", "@", "Deprecated", "public", "abstract", "class", "WeakObjectPool", "<", "T", ",", "E", "extends", "Throwable", ">", "{", "private", "static", "final", "Integer", "MARKER_VALUE", "=", "Integer", ".", "MAX_VALUE", ";", "//", "once", "here", "rather", "than", "auto", "-", "box", "it", "?", "@", "@", "-", "18", ",", "7", "+", "18", ",", "6", "@", "@", "*", "/", "package", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "@", "@", "-", "27", ",", "30", "+", "26", ",", "30", "@", "@", "import", "java", ".", "security", ".", "PrivilegedAction", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Base64", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Queue", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "java", ".", "util", ".", "WeakHashMap", ";", "import", "java", ".", "util", ".", "concurrent", ".", "ArrayBlockingQueue", ";", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "ParserConfigurationException", ";", "import", "javax", ".", "xml", ".", "validation", ".", "Schema", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "c14n", ".", "CanonicalizationException", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "c14n", ".", "Canonicalizer", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "c14n", ".", "InvalidCanonicalizerException", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Attr", ";", "import", "org", ".", "w3c", ".", "dom", ".", "DOMImplementation", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Document", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Element", ";", "import", "org", ".", "w3c", ".", "dom", ".", "NamedNodeMap", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Node", ";", "import", "org", ".", "w3c", ".", "dom", ".", "NodeList", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Text", ";", "import", "org", ".", "xml", ".", "sax", ".", "EntityResolver", ";", "import", "org", ".", "xml", ".", "sax", ".", "ErrorHandler", ";", "import", "org", ".", "xml", ".", "sax", ".", "InputSource", ";", "import", "org", ".", "xml", ".", "sax", ".", "SAXException", ";", "@", "@", "-", "64", ",", "12", "+", "63", ",", "9", "@", "@", "AccessController", ".", "doPrivileged", "(", "(", "PrivilegedAction", "<", "Boolean", ">", ")", "(", ")", "-", ">", "Boolean", ".", "getBoolean", "(", "\"", "org", ".", "apache", ".", "xml", ".", "security", ".", "ignoreLineBreaks", "\"", "))", ";", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "private", "static", "final", "WeakObjectPool", "<", "DocumentBuilder", ",", "ParserConfigurationException", ">", "pools", "[", "]", "=", "new", "WeakObjectPool", "[", "2", "]", ";", "static", "{", "pools", "[", "0", "]", "=", "new", "DocumentBuilderPool", "(", "false", ")", ";", "pools", "[", "1", "]", "=", "new", "DocumentBuilderPool", "(", "true", ")", ";", "}", "private", "static", "int", "parserPoolSize", "=", "AccessController", ".", "doPrivileged", "(", "(", "PrivilegedAction", "<", "Integer", ">", ")", "(", ")", "-", ">", "Integer", ".", "getInteger", "(", "\"", "org", ".", "apache", ".", "xml", ".", "security", ".", "parser", ".", "pool", "-", "size", "\"", ",", "20", ")", ");", "private", "static", "volatile", "String", "dsPrefix", "=", "\"", "ds", "\"", ";", "private", "static", "volatile", "String", "ds11Prefix", "=", "\"", "dsig11", "\"", ";", "@", "@", "-", "79", ",", "6", "+", "75", ",", "11", "@", "@", "private", "static", "final", "org", ".", "slf4j", ".", "Logger", "LOG", "=", "org", ".", "slf4j", ".", "LoggerFactory", ".", "getLogger", "(", "XMLUtils", ".", "class", ")", ";", "private", "static", "final", "Map", "<", "ClassLoader", ",", "Queue", "<", "DocumentBuilder", ">", ">", "DOCUMENT_BUILDERS", "=", "Collections", ".", "synchronizedMap", "(", "new", "WeakHashMap", "<", "ClassLoader", ",", "Queue", "<", "DocumentBuilder", ">", ">(", "))", ";", "private", "static", "final", "Map", "<", "ClassLoader", ",", "Queue", "<", "DocumentBuilder", ">", ">", "DOCUMENT_BUILDERS_DISALLOW_DOCTYPE", "=", "Collections", ".", "synchronizedMap", "(", "new", "WeakHashMap", "<", "ClassLoader", ",", "Queue", "<", "DocumentBuilder", ">", ">(", "))", ";", "/", "**", "*", "Constructor", "XMLUtils", "@", "@", "-", "159", ",", "7", "+", "160", ",", "7", "@", "@", "private", "static", "void", "getSetRec", "(", "final", "Node", "rootNode", ",", "final", "Set", "<", "Node", ">", "result", ",", "if", "(", "rootNode", "=", "=", "exclude", ")", "{", "return", ";", "}", "switch", "(", "rootNode", ".", "getNodeType", "(", "))", "{", "switch", "(", "rootNode", ".", "getNodeType", "(", "))", "{", "/", "/", "NOPMD", "case", "Node", ".", "ELEMENT_NODE", ":", "result", ".", "add", "(", "rootNode", ")", ";", "Element", "el", "=", "(", "Element", ")", "rootNode", ";", "@", "@", "-", "184", ",", "14", "+", "185", ",", "14", "@", "@", "private", "static", "void", "getSetRec", "(", "final", "Node", "rootNode", ",", "final", "Set", "<", "Node", ">", "result", ",", "}", "getSetRec", "(", "r", ",", "result", ",", "exclude", ",", "com", ")", ";", "}", "return", ";", "break", ";", "case", "Node", ".", "COMMENT_NODE", ":", "if", "(", "com", ")", "{", "result", ".", "add", "(", "rootNode", ")", ";", "}", "return", ";", "break", ";", "case", "Node", ".", "DOCUMENT_TYPE_NODE", ":", "return", ";", "break", ";", "default", ":", "result", ".", "add", "(", "rootNode", ")", ";", "}", "@", "@", "-", "729", ",", "7", "+", "730", ",", "6", "@", "@", "public", "static", "Element", "selectXencNode", "(", "Node", "sibling", ",", "String", "nodeName", ",", "int", "number", ")", "return", "null", ";", "}", "/", "**", "*", "@", "param", "sibling", "*", "@", "param", "nodeName", "@", "@", "-", "1070", ",", "9", "+", "1070", ",", "14", "@", "@", "public", "static", "boolean", "protectAgainstWrappingAttack", "(", "}", "public", "static", "Document", "newDocument", "(", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilder", "documentBuilder", "=", "createDocumentBuilder", "(", "true", ")", ";", "ClassLoader", "loader", "=", "getContextClassLoader", "(", ");", "if", "(", "loader", "=", "=", "null", ")", "{", "loader", "=", "getClassLoader", "(", "XMLUtils", ".", "class", ")", ";", "}", "DocumentBuilder", "documentBuilder", "=", "getDocumentBuilder", "(", "true", ",", "loader", ")", ";", "Document", "doc", "=", "documentBuilder", ".", "newDocument", "(", ");", "repoolDocumentBuilder", "(", "documentBuilder", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ",", "true", ",", "loader", ")", ";", "return", "doc", ";", "}", "@", "@", "-", "1081", ",", "17", "+", "1086", ",", "27", "@", "@", "public", "static", "Document", "read", "(", "InputStream", "inputStream", ")", "throws", "ParserConfigurationE", "}", "public", "static", "Document", "read", "(", "InputStream", "inputStream", ",", "boolean", "disAllowDocTypeDeclarations", ")", "throws", "ParserConfigurationException", ",", "SAXException", ",", "IOException", "{", "DocumentBuilder", "documentBuilder", "=", "createDocumentBuilder", "(", "disAllowDocTypeDeclarations", ")", ";", "ClassLoader", "loader", "=", "getContextClassLoader", "(", ");", "if", "(", "loader", "=", "=", "null", ")", "{", "loader", "=", "getClassLoader", "(", "XMLUtils", ".", "class", ")", ";", "}", "DocumentBuilder", "documentBuilder", "=", "getDocumentBuilder", "(", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "Document", "doc", "=", "documentBuilder", ".", "parse", "(", "inputStream", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ",", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "return", "doc", ";", "}", "public", "static", "Document", "read", "(", "String", "uri", ",", "boolean", "disAllowDocTypeDeclarations", ")", "throws", "ParserConfigurationException", ",", "SAXException", ",", "IOException", "{", "DocumentBuilder", "documentBuilder", "=", "createDocumentBuilder", "(", "disAllowDocTypeDeclarations", ")", ";", "ClassLoader", "loader", "=", "getContextClassLoader", "(", ");", "if", "(", "loader", "=", "=", "null", ")", "{", "loader", "=", "getClassLoader", "(", "XMLUtils", ".", "class", ")", ";", "}", "DocumentBuilder", "documentBuilder", "=", "getDocumentBuilder", "(", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "Document", "doc", "=", "documentBuilder", ".", "parse", "(", "uri", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ",", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "return", "doc", ";", "}", "@", "@", "-", "1101", ",", "28", "+", "1116", ",", "34", "@", "@", "public", "static", "Document", "read", "(", "InputSource", "inputSource", ")", "throws", "ParserConfigurationE", "public", "static", "Document", "read", "(", "InputSource", "inputSource", ",", "boolean", "disAllowDocTypeDeclarations", ")", "throws", "ParserConfigurationException", ",", "SAXException", ",", "IOException", "{", "DocumentBuilder", "documentBuilder", "=", "createDocumentBuilder", "(", "disAllowDocTypeDeclarations", ")", ";", "ClassLoader", "loader", "=", "getContextClassLoader", "(", ");", "if", "(", "loader", "=", "=", "null", ")", "{", "loader", "=", "getClassLoader", "(", "XMLUtils", ".", "class", ")", ";", "}", "DocumentBuilder", "documentBuilder", "=", "getDocumentBuilder", "(", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "Document", "doc", "=", "documentBuilder", ".", "parse", "(", "inputSource", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ")", ";", "repoolDocumentBuilder", "(", "documentBuilder", ",", "disAllowDocTypeDeclarations", ",", "loader", ")", ";", "return", "doc", ";", "}", "/", "**", "*", "@", "deprecated", "Use", "XMLUtils", ".", "read", "instead", "to", "directly", "read", "a", "document", ".", "*", "/", "@", "Deprecated", "public", "static", "DocumentBuilder", "createDocumentBuilder", "(", "boolean", "validating", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilderFactory", "dfactory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "dfactory", ".", "setFeature", "(", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "Boolean", ".", "TRUE", ")", ";", "dfactory", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "dfactory", ".", "setValidating", "(", "validating", ")", ";", "dfactory", ".", "setNamespaceAware", "(", "true", ")", ";", "return", "dfactory", ".", "newDocumentBuilder", "(", ");", "return", "createDocumentBuilder", "(", "validating", ",", "true", ")", ";", "}", "/", "**", "*", "@", "deprecated", "Use", "XMLUtils", ".", "read", "instead", "to", "directly", "read", "a", "document", ".", "*", "/", "@", "Deprecated", "public", "static", "DocumentBuilder", "createDocumentBuilder", "(", "boolean", "validating", ",", "boolean", "disAllowDocTypeDeclarations", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilderFactory", "dfactory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "dfactory", ".", "setFeature", "(", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "Boolean", ".", "TRUE", ")", ";", "dfactory", ".", "setFeature", "(", "javax", ".", "xml", ".", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "Boolean", ".", "TRUE", ")", ";", "if", "(", "disAllowDocTypeDeclarations", ")", "{", "dfactory", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "}", "@", "@", "-", "1132", ",", "11", "+", "1153", ",", "9", "@", "@", "public", "static", "DocumentBuilder", "createDocumentBuilder", "(", "}", "/", "**", "*", "Return", "this", "document", "builder", "to", "be", "reused", "*", "@", "param", "db", "DocumentBuilder", "returned", "from", "any", "of", "{", "@", "link", "#", "createDocumentBuilder", "}", "methods", ".", "*", "@", "return", "whether", "it", "was", "successfully", "returned", "to", "the", "pool", "*", "@", "Deprecated", "*", "@", "deprecated", "This", "method", "has", "no", "effect", "in", "Santuario", "2", ".", "1", ".", "4", "*", "/", "@", "Deprecated", "public", "static", "boolean", "repoolDocumentBuilder", "(", "DocumentBuilder", "db", ")", "{", "return", "true", ";", "}", "@", "@", "-", "1186", ",", "119", "+", "1205", ",", "67", "@", "@", "public", "static", "boolean", "repoolDocumentBuilder", "(", "DocumentBuilder", "db", ")", "{", "return", "resizedBytes", ";", "}", "/", "**", "*", "We", "need", "this", "proxy", "wrapping", "DocumentBuilder", "to", "record", "the", "value", "*", "passed", "to", "disAllowDoctypeDeclarations", ".", "It", "'", "s", "needed", "to", "figure", "out", "*", "on", "which", "pool", "to", "return", ".", "*", "/", "private", "static", "class", "DocumentBuilderProxy", "extends", "DocumentBuilder", "{", "private", "final", "DocumentBuilder", "delegate", ";", "private", "final", "boolean", "disAllowDocTypeDeclarations", ";", "private", "DocumentBuilderProxy", "(", "DocumentBuilder", "actual", ",", "boolean", "disAllowDocTypeDeclarations", ")", "{", "delegate", "=", "actual", ";", "this", ".", "disAllowDocTypeDeclarations", "=", "disAllowDocTypeDeclarations", ";", "}", "boolean", "disAllowDocTypeDeclarations", "(", ")", "{", "return", "disAllowDocTypeDeclarations", ";", "}", "public", "void", "reset", "(", ")", "{", "delegate", ".", "reset", "(", ");", "}", "public", "Document", "parse", "(", "InputStream", "is", ")", "throws", "SAXException", ",", "IOException", "{", "return", "delegate", ".", "parse", "(", "is", ")", ";", "}", "public", "Document", "parse", "(", "InputStream", "is", ",", "String", "systemId", ")", "throws", "SAXException", ",", "IOException", "{", "return", "delegate", ".", "parse", "(", "is", ",", "systemId", ")", ";", "}", "public", "Document", "parse", "(", "String", "uri", ")", "throws", "SAXException", ",", "IOException", "{", "return", "delegate", ".", "parse", "(", "uri", ")", ";", "}", "public", "Document", "parse", "(", "File", "f", ")", "throws", "SAXException", ",", "IOException", "{", "return", "delegate", ".", "parse", "(", "f", ")", ";", "}", "public", "Schema", "getSchema", "(", ")", "{", "return", "delegate", ".", "getSchema", "(", ");", "}", "public", "boolean", "isXIncludeAware", "(", ")", "{", "return", "delegate", ".", "isXIncludeAware", "(", ");", "}", "@", "Override", "public", "Document", "parse", "(", "InputSource", "is", ")", "throws", "SAXException", ",", "IOException", "{", "return", "delegate", ".", "parse", "(", "is", ")", ";", "}", "@", "Override", "public", "boolean", "isNamespaceAware", "(", ")", "{", "return", "delegate", ".", "isNamespaceAware", "(", ");", "}", "@", "Override", "public", "boolean", "isValidating", "(", ")", "{", "return", "delegate", ".", "isValidating", "(", ");", "}", "@", "Override", "public", "void", "setEntityResolver", "(", "EntityResolver", "er", ")", "{", "delegate", ".", "setEntityResolver", "(", "er", ")", ";", "}", "@", "Override", "public", "void", "setErrorHandler", "(", "ErrorHandler", "eh", ")", "{", "delegate", ".", "setErrorHandler", "(", "eh", ")", ";", "private", "static", "DocumentBuilder", "getDocumentBuilder", "(", "boolean", "disAllowDocTypeDeclarations", ",", "ClassLoader", "loader", ")", "throws", "ParserConfigurationException", "{", "if", "(", "loader", "=", "=", "null", ")", "{", "return", "buildDocumentBuilder", "(", "disAllowDocTypeDeclarations", ")", ";", "}", "@", "Override", "public", "Document", "newDocument", "(", ")", "{", "return", "delegate", ".", "newDocument", "(", ");", "Map", "<", "ClassLoader", ",", "Queue", "<", "DocumentBuilder", ">", ">", "docBuilderCache", "=", "disAllowDocTypeDeclarations", "?", "DOCUMENT_BUILDERS_DISALLOW_DOCTYPE", ":", "DOCUMENT_BUILDERS", ";", "Queue", "<", "DocumentBuilder", ">", "queue", "=", "docBuilderCache", ".", "get", "(", "loader", ")", ";", "if", "(", "queue", "=", "=", "null", ")", "{", "queue", "=", "new", "ArrayBlockingQueue", "<", ">(", "parserPoolSize", ")", ";", "docBuilderCache", ".", "put", "(", "loader", ",", "queue", ")", ";", "}", "@", "Override", "public", "DOMImplementation", "getDOMImplementation", "(", ")", "{", "return", "delegate", ".", "getDOMImplementation", "(", ");", "DocumentBuilder", "db", "=", "queue", ".", "poll", "(", ");", "if", "(", "db", "=", "=", "null", ")", "{", "db", "=", "buildDocumentBuilder", "(", "disAllowDocTypeDeclarations", ")", ";", "}", "return", "db", ";", "}", "private", "static", "final", "class", "DocumentBuilderPool", "extends", "WeakObjectPool", "<", "DocumentBuilder", ",", "ParserConfigurationException", ">", "{", "private", "final", "boolean", "disAllowDocTypeDeclarations", ";", "private", "static", "DocumentBuilder", "buildDocumentBuilder", "(", "boolean", "disAllowDocTypeDeclarations", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilderFactory", "f", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "f", ".", "setNamespaceAware", "(", "true", ")", ";", "f", ".", "setFeature", "(", "javax", ".", "xml", ".", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "true", ")", ";", "f", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "disAllowDocTypeDeclarations", ")", ";", "return", "f", ".", "newDocumentBuilder", "(", ");", "}", "public", "DocumentBuilderPool", "(", "boolean", "disAllowDocTypeDeclarations", ")", "{", "this", ".", "disAllowDocTypeDeclarations", "=", "disAllowDocTypeDeclarations", ";", "private", "static", "void", "repoolDocumentBuilder", "(", "DocumentBuilder", "db", ",", "boolean", "disAllowDocTypeDeclarations", ",", "ClassLoader", "loader", ")", "{", "if", "(", "loader", "!", "=", "null", ")", "{", "Queue", "<", "DocumentBuilder", ">", "queue", "=", "disAllowDocTypeDeclarations", "?", "DOCUMENT_BUILDERS_DISALLOW_DOCTYPE", ".", "get", "(", "loader", ")", ":", "DOCUMENT_BUILDERS", ".", "get", "(", "loader", ")", ";", "if", "(", "queue", "!", "=", "null", ")", "{", "db", ".", "reset", "(", ");", "queue", ".", "offer", "(", "db", ")", ";", "}", "}", "}", "@", "Override", "protected", "DocumentBuilder", "createObject", "(", ")", "throws", "ParserConfigurationException", "{", "DocumentBuilderFactory", "dfactory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "dfactory", ".", "setFeature", "(", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "Boolean", ".", "TRUE", ")", ";", "if", "(", "disAllowDocTypeDeclarations", ")", "{", "dfactory", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "}", "dfactory", ".", "setNamespaceAware", "(", "true", ")", ";", "return", "new", "DocumentBuilderProxy", "(", "dfactory", ".", "newDocumentBuilder", "(", "),", "disAllowDocTypeDeclarations", ")", ";", "private", "static", "ClassLoader", "getContextClassLoader", "(", ")", "{", "final", "SecurityManager", "sm", "=", "System", ".", "getSecurityManager", "(", ");", "if", "(", "sm", "!", "=", "null", ")", "{", "return", "AccessController", ".", "doPrivileged", "(", "new", "PrivilegedAction", "<", "ClassLoader", ">", "()", "{", "public", "ClassLoader", "run", "(", ")", "{", "return", "Thread", ".", "currentThread", "(", ").", "getContextClassLoader", "(", ");", "}", "}", ");", "}", "return", "Thread", ".", "currentThread", "(", ").", "getContextClassLoader", "(", ");", "}", "/", "**", "*", "Maps", "the", "two", "boolean", "configuration", "options", "for", "the", "factories", "to", "the", "array", "index", "for", "the", "WeakObjectPool", "*", "@", "param", "validating", "*", "@", "param", "disAllowDocTypeDeclarations", "*", "@", "return", "the", "index", "to", "the", "{", "@", "link", "#", "pools", "}", "*", "/", "private", "static", "int", "getPoolsIndex", "(", "boolean", "disAllowDocTypeDeclarations", ")", "{", "return", "(", "disAllowDocTypeDeclarations", "?", "1", ":", "0", ")", ";", "private", "static", "ClassLoader", "getClassLoader", "(", "final", "Class", "<", "?>", "clazz", ")", "{", "final", "SecurityManager", "sm", "=", "System", ".", "getSecurityManager", "(", ");", "if", "(", "sm", "!", "=", "null", ")", "{", "return", "AccessController", ".", "doPrivileged", "(", "new", "PrivilegedAction", "<", "ClassLoader", ">", "()", "{", "public", "ClassLoader", "run", "(", ")", "{", "return", "clazz", ".", "getClassLoader", "(", ");", "}", "}", ");", "}", "return", "clazz", ".", "getClassLoader", "(", ");", "}", "}", "@", "@", "-", "48", ",", "7", "+", "48", ",", "6", "@", "@", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "c14n", ".", "Canonicalizer", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "c14n", ".", "InvalidCanonicalizerException", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "test", ".", "dom", ".", "DSNamespaceContext", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "IgnoreAllErrorHandler", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "JavaUtils", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "XMLUtils", ";", "import", "org", ".", "w3c", ".", "dom", ".", "Document", ";", "@", "@", "-", "1", ",", "175", "+", "0", ",", "0", "@", "@", "/", "**", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "*", "or", "more", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "*", "distributed", "with", "this", "work", "for", "additional", "information", "*", "regarding", "copyright", "ownership", ".", "The", "ASF", "licenses", "this", "file", "*", "to", "you", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "*", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "*", "with", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "*", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "*", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "*", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "*", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "xml", ".", "security", ".", "test", ".", "dom", ".", "utils", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "WeakObjectPool", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "XMLUtils", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "java", ".", "lang", ".", "ref", ".", "WeakReference", ";", "import", "java", ".", "lang", ".", "reflect", ".", "Field", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "java", ".", "util", ".", "concurrent", ".", "*;", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "public", "class", "DocumentBuilderPoolingTest", "{", "private", "static", "final", "String", "DOCUMENTBUILDERPROXY_CLASSNAME", "=", "\"", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "XMLUtils", "$", "DocumentBuilderProxy", "\"", ";", "@", "Test", "public", "void", "testEquals", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "true", ")", ";", "assertEquals", "(", "documentBuilder", ",", "documentBuilder", ")", ";", "}", "@", "Test", "public", "void", "testGetValidatingDocumentBuilder", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "true", ")", ";", "assertTrue", "(", "documentBuilder", ".", "isValidating", "(", "))", ";", "}", "@", "Test", "public", "void", "testGetNonValidatingDocumentBuilder", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "false", ")", ";", "assertFalse", "(", "documentBuilder", ".", "isValidating", "(", "))", ";", "}", "@", "Test", "public", "void", "testGetValidatingAndAllowDocTypeDeclarationsDocumentBuilder", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "true", ",", "false", ")", ";", "assertTrue", "(", "documentBuilder", ".", "isValidating", "(", "))", ";", "assertEquals", "(", "documentBuilder", ".", "getClass", "(", ").", "getName", "(", "),", "DOCUMENTBUILDERPROXY_CLASSNAME", ")", ";", "assertAllowDocTypeDeclarations", "(", "documentBuilder", ",", "false", ")", ";", "}", "@", "Test", "public", "void", "testGetValidatingAndDisAllowDocTypeDeclarationsDocumentBuilder", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "true", ",", "true", ")", ";", "assertTrue", "(", "documentBuilder", ".", "isValidating", "(", "))", ";", "assertEquals", "(", "documentBuilder", ".", "getClass", "(", ").", "getName", "(", "),", "DOCUMENTBUILDERPROXY_CLASSNAME", ")", ";", "assertAllowDocTypeDeclarations", "(", "documentBuilder", ",", "true", ")", ";", "}", "private", "void", "assertAllowDocTypeDeclarations", "(", "DocumentBuilder", "documentBuilder", ",", "boolean", "allow", ")", "throws", "Exception", "{", "Field", "field", "=", "documentBuilder", ".", "getClass", "(", ").", "getDeclaredField", "(", "\"", "disAllowDocTypeDeclarations", "\"", ");", "field", ".", "setAccessible", "(", "true", ")", ";", "assertEquals", "(", "allow", ",", "field", ".", "get", "(", "documentBuilder", ")", ");", "}", "@", "Test", "public", "void", "testNewDocumentBuilderInstances", "(", ")", "throws", "Exception", "{", "int", "count", "=", "4", ";", "/", "/", "get", "all", "possible", "combinations", "of", "DocumentBuilders", ":", "DocumentBuilder", "[", "]", "documentBuilders", "=", "new", "DocumentBuilder", "[", "count", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "count", ";", "i", "+", "+)", "{", "documentBuilders", "[", "i", "]", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "i", "/", "2", ">", "0", ",", "i", "%", "2", "=", "=", "1", ")", ";", "}", "/", "/", "test", "that", "we", "got", "always", "a", "new", "instance", ":", "for", "(", "int", "i", "=", "0", ";", "i", "<", "count", ";", "i", "+", "+)", "{", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "count", ";", "j", "+", "+)", "{", "assertNotEquals", "(", "documentBuilders", "[", "i", "]", ",", "documentBuilders", "[", "j", "]", ");", "assertNotSame", "(", "documentBuilders", "[", "i", "]", ",", "documentBuilders", "[", "j", "]", ");", "}", "}", "}", "@", "Test", "public", "void", "testRepoolingTwice", "(", ")", "throws", "Exception", "{", "DocumentBuilder", "documentBuilder", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "true", ")", ";", "assertTrue", "(", "XMLUtils", ".", "repoolDocumentBuilder", "(", "documentBuilder", ")", ");", "assertFalse", "(", "\"", "can", "'", "t", "repool", "the", "same", "object", "twice", "!", "\",", "XMLUtils", ".", "repoolDocumentBuilder", "(", "documentBuilder", ")", ");", "}", "@", "Test", "(", "timeout", "=", "30000", ")", "public", "void", "testPooling", "(", ")", "throws", "Exception", "{", "int", "nThreads", "=", "8", ";", "ExecutorService", "exec", "=", "Executors", ".", "newFixedThreadPool", "(", "nThreads", ")", ";", "Future", "<", "?>", "[]", "results", "=", "new", "Future", "[", "nThreads", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nThreads", "-", "1", ";", "i", "+", "+)", "{", "results", "[", "i", "]", "=", "exec", ".", "submit", "(", "new", "Runnable", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "try", "{", "while", "(", "true", ")", "{", "/", "/", "retrieve", "some", "DocumentBuilders", ".", "..", "DocumentBuilder", "documentBuilders", "[", "]", "=", "new", "DocumentBuilder", "[", "10", "]", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "documentBuilders", ".", "length", ";", "j", "+", "+)", "{", "documentBuilders", "[", "j", "]", "=", "XMLUtils", ".", "createDocumentBuilder", "(", "false", ")", ";", "assertNotNull", "(", "documentBuilders", "[", "j", "]", ");", "}", "/", "/", ".", "..", "then", "repool", "them", "so", "that", "another", "thread", "may", "pickup", "them", "again", "for", "(", "int", "j", "=", "0", ";", "j", "<", "documentBuilders", ".", "length", ";", "j", "+", "+)", "{", "assertTrue", "(", "XMLUtils", ".", "repoolDocumentBuilder", "(", "documentBuilders", "[", "j", "]", "))", ";", "}", "}", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "}", "}", ");", "}", "/", "/", "more", "or", "less", "mimic", "gc", "results", "[", "nThreads", "-", "1", "]", "=", "exec", ".", "submit", "(", "new", "Runnable", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "try", "{", "final", "Field", "poolField", "=", "XMLUtils", ".", "class", ".", "getDeclaredField", "(", "\"", "pools", "\"", ");", "poolField", ".", "setAccessible", "(", "true", ")", ";", "final", "WeakObjectPool", "[", "]", "weakObjectPools", "=", "(", "WeakObjectPool", "[", "])", "poolField", ".", "get", "(", "null", ")", ";", "final", "Field", "availableField", "=", "WeakObjectPool", ".", "class", ".", "getDeclaredField", "(", "\"", "available", "\"", ");", "availableField", ".", "setAccessible", "(", "true", ")", ";", "while", "(", "true", ")", "{", "final", "BlockingDeque", "blockingDeque", "=", "(", "BlockingDeque", ")", "availableField", ".", "get", "(", "weakObjectPools", "[", "1", "]", ");", "Iterator", "iterator", "=", "blockingDeque", ".", "iterator", "(", ");", "while", "(", "iterator", ".", "hasNext", "(", "))", "{", "(", "(", "WeakReference", ")", "iterator", ".", "next", "(", "))", ".", "clear", "(", ");", "}", "Thread", ".", "sleep", "(", "200", ")", ";", "}", "}", "catch", "(", "InterruptedException", "e", ")", "{", "return", ";", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "}", "}", ");", "exec", ".", "shutdown", "(", ");", "exec", ".", "awaitTermination", "(", "5", ",", "TimeUnit", ".", "SECONDS", ")", ";", "for", "(", "Future", "<", "?>", "f", ":", "results", ")", "{", "if", "(", "!", "f", ".", "isDone", "(", "))", "{", "f", ".", "cancel", "(", "false", ")", ";", "}", "try", "{", "assertNull", "(", "f", ".", "get", "(", "1000", ",", "TimeUnit", ".", "MILLISECONDS", ")", ");", "}", "catch", "(", "CancellationException", "ce", ")", "{", "/", "/", "expected", "since", "we", "did", "cancel", "it", "}", "catch", "(", "TimeoutException", "e", ")", "{", "fail", "(", "f", "+", "\"", "didn", "'", "t", "cancel", "after", "timeout", "?", "\")", ";", "}", "}", "}", "}", "@", "@", "-", "20", ",", "6", "+", "20", ",", "10", "@", "@", "import", "java", ".", "io", ".", "StringReader", ";", "import", "javax", ".", "xml", ".", "XMLConstants", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilder", ";", "import", "javax", ".", "xml", ".", "parsers", ".", "DocumentBuilderFactory", ";", "import", "org", ".", "apache", ".", "xml", ".", "security", ".", "utils", ".", "XMLUtils", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "xml", ".", "sax", ".", "InputSource", ";", "@", "@", "-", "34", ",", "9", "+", "38", ",", "22", "@", "@", "@", "BenchmarkOptions", "(", "callgc", "=", "false", ",", "benchmarkRounds", "=", "100000", ",", "warmupRounds", "=", "100", ")", "@", "Test", "public", "void", "testCreateDocumentBuilder", "(", ")", "throws", "Exception", "{", "public", "void", "testXMLUtils", "(", ")", "throws", "Exception", "{", "InputSource", "inputSource", "=", "new", "InputSource", "(", "new", "StringReader", "(", "\"<", "xml", ">", "123", "<", "/", "xml", ">", "\")", ");", "XMLUtils", ".", "read", "(", "inputSource", ",", "false", ")", ";", "}", "@", "BenchmarkOptions", "(", "callgc", "=", "false", ",", "benchmarkRounds", "=", "100000", ",", "warmupRounds", "=", "100", ")", "@", "Test", "public", "void", "testCreateDocumentBuilder", "(", ")", "throws", "Exception", "{", "DocumentBuilderFactory", "dfactory", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "dfactory", ".", "setFeature", "(", "XMLConstants", ".", "FEATURE_SECURE_PROCESSING", ",", "Boolean", ".", "TRUE", ")", ";", "dfactory", ".", "setFeature", "(", "\"", "http", ":", "//", "apache", ".", "org", "/", "xml", "/", "features", "/", "disallow", "-", "doctype", "-", "decl", "\"", ",", "true", ")", ";", "dfactory", ".", "setNamespaceAware", "(", "true", ")", ";", "DocumentBuilder", "documentBuilder", "=", "dfactory", ".", "newDocumentBuilder", "(", ");", "InputSource", "inputSource", "=", "new", "InputSource", "(", "new", "StringReader", "(", "\"<", "xml", ">", "123", "<", "/", "xml", ">", "\")", ");", "documentBuilder", ".", "parse", "(", "inputSource", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "36", ",", "6", "+", "36", ",", "8", "@", "@", "protected", "void", "applyAuthentication", "(", "LdapContext", "ctx", ",", "String", "userDn", ",", "String", "passwo", "ctx", ".", "addToEnvironment", "(", "Context", ".", "SECURITY_AUTHENTICATION", ",", "SIMPLE_AUTHENTICATION", ")", ";", "ctx", ".", "addToEnvironment", "(", "Context", ".", "SECURITY_PRINCIPAL", ",", "userDn", ")", ";", "ctx", ".", "addToEnvironment", "(", "Context", ".", "SECURITY_CREDENTIALS", ",", "password", ")", ";", "/", "/", "Force", "reconnect", "with", "user", "credentials", "ctx", ".", "reconnect", "(", "null", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "155", ",", "8", "+", "155", ",", "26", "@", "@", "int", "ptrace_attach", "(", "struct", "task_struct", "*", "task", ")", "if", "(", "task", "-", ">", "tgid", "=", "=", "current", "-", ">", "tgid", ")", "goto", "out", ";", "write_lock_irq", "(", "&", "tasklist_lock", ")", ";", "repeat", ":", "/", "*", "*", "Nasty", ",", "nasty", ".", "*", "*", "We", "want", "to", "hold", "both", "the", "task", "-", "lock", "and", "the", "*", "tasklist_lock", "for", "writing", "at", "the", "same", "time", ".", "*", "But", "that", "'", "s", "against", "the", "rules", "(", "tasklist_lock", "*", "is", "taken", "for", "reading", "by", "interrupts", "on", "other", "*", "cpu", "'", "s", "that", "may", "have", "task_lock", ")", ".", "*", "/", "task_lock", "(", "task", ")", ";", "local_irq_disable", "(", ");", "if", "(", "!", "write_trylock", "(", "&", "tasklist_lock", ")", ")", "{", "local_irq_enable", "(", ");", "task_unlock", "(", "task", ")", ";", "do", "{", "cpu_relax", "(", ");", "}", "while", "(", "!", "write_can_lock", "(", "&", "tasklist_lock", ")", ");", "goto", "repeat", ";", "}", "/", "*", "the", "same", "process", "cannot", "be", "attached", "many", "times", "*", "/", "if", "(", "task", "-", ">", "ptrace", "&", "PT_PTRACED", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "635", ",", "6", "+", "635", ",", "11", "@", "@", "<", "artifactId", ">", "jaxb", "-", "api", "<", "/", "artifactId", ">", "<", "version", ">", "${", "version", ".", "javax", ".", "xml", ".", "bind", ".", "api", "}", "</", "version", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "ws", "<", "/", "groupId", ">", "<", "artifactId", ">", "jaxws", "-", "rt", "<", "/", "artifactId", ">", "<", "version", ">", "${", "version", ".", "javax", ".", "xml", ".", "ws", ".", "jaxws", ".", "rt", "}", "</", "version", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "hibernate", "<", "/", "groupId", ">", "@", "@", "-", "1142", ",", "6", "+", "1147", ",", "7", "@", "@", "<", "version", ".", "javax", ".", "annotation", ".", "api", ">", "1", ".", "3", ".", "2", "<", "/", "version", ".", "javax", ".", "annotation", ".", "api", ">", "<", "version", ".", "javax", ".", "inject", ">", "2", ".", "4", ".", "0", "<", "/", "version", ".", "javax", ".", "inject", ">", "<", "version", ".", "javax", ".", "xml", ".", "bind", ".", "api", ">", "2", ".", "3", ".", "1", "<", "/", "version", ".", "javax", ".", "xml", ".", "bind", ".", "api", ">", "<", "version", ".", "javax", ".", "xml", ".", "ws", ".", "jaxws", ".", "rt", ">", "2", ".", "2", "<", "/", "version", ".", "javax", ".", "xml", ".", "ws", ".", "jaxws", ".", "rt", ">", "<!", "--", "Java", "5", "-", "->", "<", "version", ".", "jmock", ">", "1", ".", "0", ".", "1", "<", "/", "version", ".", "jmock", ">", "<", "version", ".", "joda", "-", "time", ">", "1", ".", "6", "<", "/", "version", ".", "joda", "-", "time", ">", "<", "version", ".", "junit", ">", "3", ".", "8", ".", "1", "<", "/", "version", ".", "junit", ">", "@", "@", "-", "1155", ",", "7", "+", "1161", ",", "7", "@", "@", "<", "version", ".", "org", ".", "jdom2", ">", "2", ".", "0", ".", "5", "<", "/", "version", ".", "org", ".", "jdom2", ">", "<", "version", ".", "org", ".", "json", ">", "20080701", "<", "/", "version", ".", "org", ".", "json", ">", "<", "version", ".", "org", ".", "openjdk", ".", "jmh", ">", "1", ".", "21", "<", "/", "version", ".", "org", ".", "openjdk", ".", "jmh", ">", "<", "version", ".", "org", ".", "ops4j", ".", "pax", ".", "exam", ">", "3", ".", "5", ".", "0", "<", "/", "version", ".", "org", ".", "ops4j", ".", "pax", ".", "exam", ">", "<!", "--", "java", "6", "-", "->", "<", "version", ".", "org", ".", "ops4j", ".", "pax", ".", "exam", ">", "3", ".", "5", ".", "0", "<", "/", "version", ".", "org", ".", "ops4j", ".", "pax", ".", "exam", ">", "<!", "--", "Java", "6", "-", "->", "<", "version", ".", "org", ".", "slf4j", ">", "1", ".", "6", ".", "1", "<", "/", "version", ".", "org", ".", "slf4j", ">", "<", "version", ".", "stax", ">", "1", ".", "2", ".", "0", "<", "/", "version", ".", "stax", ">", "<", "version", ".", "stax", ".", "api", ">", "1", ".", "0", ".", "1", "<", "/", "version", ".", "stax", ".", "api", ">", "@", "@", "-", "0", ",", "0", "+", "1", ",", "118", "@", "@", "<", "html", ">", "<", "!-", "-", "Copyright", "(", "C", ")", "2020", "XStream", "committers", ".", "All", "rights", "reserved", ".", "The", "software", "in", "this", "package", "is", "published", "under", "the", "terms", "of", "the", "BSD", "style", "license", "a", "copy", "of", "which", "has", "been", "included", "with", "this", "distribution", "in", "the", "LICENSE", ".", "txt", "file", ".", "Created", "on", "06", ".", "December", "2020", "by", "Joerg", "Schaible", "-", "->", "<", "head", ">", "<", "title", ">", "CVE", "-", "2020", "-", "26259", "<", "/", "title", ">", "<", "/", "head", ">", "<", "body", ">", "<", "h2", "id", "=", "\"", "vulnerability", "\"", ">", "Vulnerability", "<", "/", "h2", ">", "<", "p", ">", "CVE", "-", "2020", "-", "26259", ":", "XStream", "is", "vulnerable", "to", "an", "Arbitrary", "File", "Deletion", "on", "the", "local", "host", "when", "unmarshalling", "as", "long", "as", "the", "executing", "process", "has", "sufficient", "rights", ".", "</", "p", ">", "<", "h2", "id", "=", "\"", "affected_versions", "\"", ">", "Affected", "Versions", "<", "/", "h2", ">", "<", "p", ">", "All", "versions", "until", "and", "including", "version", "1", ".", "4", ".", "14", "are", "affected", "running", "in", "a", "Java", "environment", "containing", "the", "JAX", "-", "WS", "runtime", ",", "if", "using", "the", "version", "out", "of", "the", "box", ".", "No", "user", "is", "affected", ",", "who", "followed", "the", "recommendation", "to", "setup", "<", "a", "href", "=", "\"", "security", ".", "html", "#", "framework", "\"", ">", "XStream", "'", "s", "security", "framework", "<", "/", "a", ">", "with", "a", "whitelist", ".", "</", "p", ">", "<", "h2", "id", "=", "\"", "description", "\"", ">", "Description", "<", "/", "h2", ">", "<", "p", ">", "The", "processed", "stream", "at", "unmarshalling", "time", "contains", "type", "information", "to", "recreate", "the", "formerly", "written", "objects", ".", "XStream", "creates", "therefore", "new", "instances", "based", "on", "these", "type", "information", ".", "An", "attacker", "can", "manipulate", "the", "processed", "input", "stream", "and", "replace", "or", "inject", "objects", ",", "that", "result", "in", "a", "server", "-", "side", "forgery", "request", ".", "</", "p", ">", "<", "h2", "id", "=", "\"", "reproduction", "\"", ">", "Steps", "to", "Reproduce", "<", "/", "h2", ">", "<", "p", ">", "Create", "a", "simple", "HashMap", "and", "use", "XStream", "to", "marshal", "it", "to", "XML", ".", "Replace", "the", "XML", "with", "following", "snippet", "and", "unmarshal", "it", "again", "with", "XStream", ":", "</", "p", ">", "<", "div", "class", "=", "\"", "Source", "XML", "\"", "><", "pre", ">", "&", "lt", ";", "map", "&", "gt", ";", "&", "lt", ";", "entry", "&", "gt", ";", "&", "lt", ";", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "&", "gt", ";", "&", "lt", ";", "flags", "&", "gt", ";", "0", "&", "lt", ";", "/", "flags", "&", "gt", ";", "&", "lt", ";", "value", "class", "=", "'", "com", ".", "sun", ".", "xml", ".", "internal", ".", "bind", ".", "v2", ".", "runtime", ".", "unmarshaller", ".", "Base64Data", "'", "&", "gt", ";", "&", "lt", ";", "dataHandler", "&", "gt", ";", "&", "lt", ";", "dataSource", "class", "=", "'", "com", ".", "sun", ".", "xml", ".", "internal", ".", "ws", ".", "encoding", ".", "xml", ".", "XMLMessage", "$", "XmlDataSource", "'", "&", "gt", ";", "&", "lt", ";", "contentType", "&", "gt", ";", "text", "/", "plain", "&", "lt", ";", "/", "contentType", "&", "gt", ";", "&", "lt", ";", "is", "class", "=", "'", "com", ".", "sun", ".", "xml", ".", "internal", ".", "ws", ".", "util", ".", "ReadAllStream", "$", "FileStream", "'", "&", "gt", ";", "&", "lt", ";", "tempFile", "&", "gt", ";", "/", "etc", "/", "hosts", "&", "lt", ";", "/", "tempFile", "&", "gt", ";", "&", "lt", ";", "/", "is", "&", "gt", ";", "&", "lt", ";", "/", "dataSource", "&", "gt", ";", "&", "lt", ";", "transferFlavors", "/", "&", "gt", ";", "&", "lt", ";", "/", "dataHandler", "&", "gt", ";", "&", "lt", ";", "dataLen", "&", "gt", ";", "0", "&", "lt", ";", "/", "dataLen", "&", "gt", ";", "&", "lt", ";", "/", "value", "&", "gt", ";", "&", "lt", ";", "/", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "&", "gt", ";", "&", "lt", ";", "string", "&", "gt", ";", "test", "&", "lt", ";", "/", "string", "&", "gt", ";", "&", "lt", ";", "/", "entry", "&", "gt", ";", "&", "lt", ";", "/", "map", "&", "gt", ";", "<", "/", "pre", ">", "</", "div", ">", "<", "div", "class", "=", "\"", "Source", "Java", "\"", "><", "pre", ">", "XStream", "xstream", "=", "new", "XStream", "(", ");", "xstream", ".", "fromXML", "(", "xml", ")", ";", "<", "/", "pre", ">", "</", "div", ">", "<", "p", ">", "As", "soon", "as", "the", "XML", "gets", "unmarshalled", ",", "the", "payload", "gets", "executed", "and", "the", "references", "file", "is", "deleted", ".", "</", "p", ">", "<", "p", ">", "Note", ",", "this", "example", "uses", "XML", ",", "but", "the", "attack", "can", "be", "performed", "for", "any", "supported", "format", ",", "e", ".", "g", ".", "JSON", ".", "</", "p", ">", "<", "h2", "id", "=", "\"", "impact", "\"", ">", "Impact", "<", "/", "h2", ">", "<", "p", ">", "The", "vulnerability", "may", "allow", "a", "remote", "attacker", "to", "delete", "arbitrary", "know", "files", "on", "the", "host", "as", "log", "as", "the", "executing", "process", "has", "sufficient", "rights", "only", "by", "manipulating", "the", "processed", "input", "stream", ".", "</", "p", ">", "<", "h2", "id", "=", "\"", "workaround", "\"", ">", "Workaround", "<", "/", "h2", ">", "<", "p", ">", "As", "recommended", ",", "use", "XStream", "'", "s", "security", "framework", "to", "implement", "a", "whitelist", "for", "the", "allowed", "types", ".", "</", "p", ">", "<", "p", ">", "Users", "of", "XStream", "1", ".", "4", ".", "14", "who", "insist", "to", "use", "XStream", "default", "blacklist", "-", "despite", "that", "clear", "recommendation", "-", "can", "simply", "add", "two", "lines", "to", "XStream", "'", "s", "setup", "code", ":", "</", "p", ">", "<", "div", "class", "=", "\"", "Source", "Java", "\"", "><", "pre", ">", "xstream", ".", "denyTypes", "(", "new", "String", "[", "]{", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", "}", ");", "xstream", ".", "denyTypesByRegExp", "(", "new", "String", "[", "]{", "\"", ".*", "\\\\", ".", "ReadAllStream", "\\", "\\$", "FileStream", "\"", "}", ");", "<", "/", "pre", ">", "</", "div", ">", "<", "p", ">", "Users", "of", "XStream", "1", ".", "4", ".", "13", "who", "want", "to", "use", "XStream", "default", "blacklist", "can", "simply", "add", "three", "lines", "to", "XStream", "'", "s", "setup", "code", ":", "</", "p", ">", "<", "div", "class", "=", "\"", "Source", "Java", "\"", "><", "pre", ">", "xstream", ".", "denyTypes", "(", "new", "String", "[", "]{", "\"", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "\"", ",", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", "}", ");", "xstream", ".", "denyTypes", "(", "new", "Class", "[", "]{", "java", ".", "lang", ".", "ProcessBuilder", ".", "class", "}", ");", "xstream", ".", "denyTypesByRegExp", "(", "new", "String", "[", "]{", "\"", ".*", "\\\\", ".", "ReadAllStream", "\\", "\\$", "FileStream", "\"", "}", ");", "<", "/", "pre", ">", "</", "div", ">", "<", "p", ">", "Users", "of", "XStream", "1", ".", "4", ".", "12", "to", "1", ".", "4", ".", "7", "who", "want", "to", "use", "XStream", "with", "a", "blacklist", "will", "have", "to", "setup", "such", "a", "list", "from", "scratch", "and", "deny", "at", "least", "the", "following", "types", ":", "<", "em", ">", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "<", "/", "em", ">", ",", "<", "em", ">", "java", ".", "beans", ".", "EventHandler", "<", "/", "em", ">", ",", "<", "em", ">", "java", ".", "lang", ".", "ProcessBuilder", "<", "/", "em", ">", ",", "<", "em", ">", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "<", "/", "em", ">", ",", "<", "em", ">", "java", ".", "lang", ".", "Void", "<", "/", "em", ">", "and", "<", "em", ">", "void", "<", "/", "em", ">", "and", "deny", "several", "types", "by", "name", "pattern", ".", "</", "p", ">", "<", "div", "class", "=", "\"", "Source", "Java", "\"", "><", "pre", ">", "xstream", ".", "denyTypes", "(", "new", "String", "[", "]{", "\"", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "\"", ",", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", "}", ");", "xstream", ".", "denyTypes", "(", "new", "Class", "[", "]{", "java", ".", "lang", ".", "ProcessBuilder", ".", "class", ",", "java", ".", "beans", ".", "EventHandler", ".", "class", ",", "java", ".", "lang", ".", "ProcessBuilder", ".", "class", ",", "java", ".", "lang", ".", "Void", ".", "class", ",", "void", ".", "class", "}", ");", "xstream", ".", "denyTypesByRegExp", "(", "new", "String", "[", "]{", "\"", ".*", "\\\\", "$", "LazyIterator", "\"", ",", "\"", "javax", "\\", "\\.", "crypto", "\\", "\\.", ".*", "\",", "\"", ".*", "\\\\", ".", "ReadAllStream", "\\", "\\$", "FileStream", "\"", "}", ");", "<", "/", "pre", ">", "</", "div", ">", "<", "p", ">", "Users", "of", "XStream", "1", ".", "4", ".", "6", "or", "below", "can", "register", "an", "own", "converter", "to", "prevent", "the", "unmarshalling", "of", "the", "currently", "know", "critical", "types", "of", "the", "Java", "runtime", ".", "It", "is", "in", "fact", "an", "updated", "version", "of", "the", "workaround", "for", "CVE", "-", "2013", "-", "7285", ":", "</", "p", ">", "<", "div", "class", "=", "\"", "Source", "Java", "\"", "><", "pre", ">", "xstream", ".", "registerConverter", "(", "new", "Converter", "(", ")", "{", "public", "boolean", "canConvert", "(", "Class", "type", ")", "{", "return", "type", "!", "=", "null", "&", "amp", ";", "&", "amp", ";", "(", "type", "=", "=", "java", ".", "beans", ".", "EventHandler", ".", "class", "|", "|", "type", "=", "=", "java", ".", "lang", ".", "ProcessBuilder", ".", "class", "|", "|", "type", ".", "getName", "(", ").", "equals", "(", "\"", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "\"", ")", "|", "|", "type", ".", "getName", "(", ").", "equals", "(", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", ")", "|", "|", "type", "=", "=", "java", ".", "lang", ".", "Void", ".", "class", "|", "|", "void", ".", "class", "|", "|", "Proxy", ".", "isProxy", "(", "type", ")", "|", "|", "type", ".", "getName", "(", ").", "startsWith", "(", "\"", "javax", ".", "crypto", ".", "\")", "|", "|", "type", ".", "getName", "(", ").", "endsWith", "(", "\"$", "LazyIterator", "\"", ")", "|", "|", "type", ".", "getName", "(", ").", "endsWith", "(", "\".", "ReadAllStream", "$", "FileStream", "\"", "))", ";", "}", "public", "Object", "unmarshal", "(", "HierarchicalStreamReader", "reader", ",", "UnmarshallingContext", "context", ")", "{", "throw", "new", "ConversionException", "(", "\"", "Unsupported", "type", "due", "to", "security", "reasons", ".", "\")", ";", "}", "public", "void", "marshal", "(", "Object", "source", ",", "HierarchicalStreamWriter", "writer", ",", "MarshallingContext", "context", ")", "{", "throw", "new", "ConversionException", "(", "\"", "Unsupported", "type", "due", "to", "security", "reasons", ".", "\")", ";", "}", "}", ",", "XStream", ".", "PRIORITY_LOW", ")", ";", "<", "/", "pre", ">", "</", "div", ">", "<", "h2", "id", "=", "\"", "credits", "\"", ">", "Credits", "<", "/", "h2", ">", "<", "p", ">", "\u949f\u6f66", "\u8d35", "(", "Liaogui", "Zhong", ")", "found", "and", "reported", "the", "issue", "to", "XStream", "and", "provided", "the", "required", "information", "to", "reproduce", "it", ".", "</", "p", ">", "<", "/", "body", ">", "<", "/", "html", ">", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "32", ",", "9", "+", "32", ",", "9", "@", "@", "<", "h1", "id", "=", "\"", "upcoming", "-", "1", ".", "4", ".", "x", "\"", ">", "Upcoming", "1", ".", "4", ".", "x", "maintenance", "release", "<", "/", "h1", ">", "<", "p", ">", "Not", "yet", "released", ".", "</", "p", ">", "<", "p", "class", "=", "\"", "highlight", "\"", ">", "This", "maintenance", "release", "addresses", "the", "security", "vulnerability", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26258", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26258", "<", "/", "a", ">", ",", "when", "unmarshalling", "for", "XStream", "instances", "with", "uninitialized", "security", "framework", "in", "a", "Java", "runtime", "below", "Java", "15", ".", "</", "p", ">", "<", "p", "class", "=", "\"", "highlight", "\"", ">", "This", "maintenance", "release", "addresses", "the", "security", "vulnerabilities", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26258", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26258", "<", "/", "a", ">", "and", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26259", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26259", "<", "/", "a", ">", ",", "when", "unmarshalling", "for", "XStream", "instances", "with", "uninitialized", "security", "framework", ".", "</", "p", ">", "<", "h2", ">", "Minor", "changes", "<", "/", "h2", ">", "<", "ul", ">", "@", "@", "-", "44", ",", "9", "+", "44", ",", "9", "@", "@", "<", "h2", ">", "Minor", "changes", "<", "/", "h2", ">", "<", "h2", ">", "Stream", "compatibility", "<", "/", "h2", ">", "<", "ul", ">", "<", "li", ">", "The", "type", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "id", "now", "part", "of", "the", "default", "blacklist", "and", "the", "deserialization", "of", "XML", "containing", "one", "of", "the", "two", "types", "will", "fail", ".", "You", "will", "must", "enable", "these", "types", "by", "explicit", "configuration", ",", "if", "you", "need", "them", ".", "</", "li", ">", "<", "li", ">", "The", "type", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "and", "the", "internal", "JAX", "-", "WS", "type", "ReadAllStream", ".", "FileStream", "are", "now", "part", "of", "the", "default", "blacklist", "and", "the", "deserialization", "of", "XML", "containing", "one", "of", "the", "two", "types", "will", "fail", ".", "You", "will", "have", "to", "enable", "these", "types", "by", "explicit", "configuration", ",", "if", "you", "need", "them", ".", "</", "li", ">", "<", "/", "ul", ">", "<", "h2", ">", "Delivery", "<", "/", "h2", ">", "@", "@", "-", "77", ",", "8", "+", "77", ",", "8", "@", "@", "<", "h2", ">", "Stream", "compatibility", "<", "/", "h2", ">", "<", "ul", ">", "<", "li", ">", "The", "types", "java", ".", "lang", ".", "ProcessBuilder", "and", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "are", "now", "part", "of", "the", "default", "blacklist", "and", "the", "deserialization", "of", "XML", "containing", "one", "of", "the", "two", "types", "will", "fail", ".", "You", "will", "must", "enable", "these", "types", "by", "explicit", "configuration", ",", "if", "you", "need", "them", ".", "</", "li", ">", "blacklist", "and", "the", "deserialization", "of", "XML", "containing", "one", "of", "the", "two", "types", "will", "fail", ".", "You", "will", "have", "to", "enable", "these", "types", "by", "explicit", "configuration", ",", "if", "you", "need", "them", ".", "</", "li", ">", "<", "/", "ul", ">", "<", "h1", "id", "=", "\"", "1", ".", "4", ".", "13", "\"", ">", "1", ".", "4", ".", "13", "<", "/", "h1", ">", "@", "@", "-", "29", ",", "9", "+", "29", ",", "10", "@", "@", "<", "p", ">", "The", "provided", "XML", "data", "is", "used", "by", "XStream", "to", "unmarshal", "Java", "objects", ".", "This", "data", "can", "be", "manipulated", "by", "injecting", "the", "XML", "representation", "of", "other", "objects", ",", "that", "were", "not", "present", "at", "marshalling", "time", ".", "An", "attacker", "could", "take", "advantage", "of", "this", "to", "access", "private", "data", ",", "execute", "arbitrary", "code", "or", "shell", "commands", "in", "the", "context", "of", "the", "server", "running", "the", "XStream", "process", ".", "Concrete", "cases", "are", "described", "in", "<", "a", "href", "=", "\"", "CVE", "-", "2013", "-", "7285", ".", "html", "\"", ">", "CVE", "-", "2013", "-", "7285", "<", "/", "a", ">", ",", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26217", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26217", "<", "/", "a", ">", ",", "and", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26258", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26258", "<", "/", "a", ">", ".<", "/", "p", ">", "advantage", "of", "this", "to", "access", "private", "data", ",", "delete", "local", "files", ",", "execute", "arbitrary", "code", "or", "shell", "commands", "in", "the", "context", "of", "the", "server", "running", "the", "XStream", "process", ".", "Concrete", "cases", "are", "described", "in", "<", "a", "href", "=", "\"", "CVE", "-", "2013", "-", "7285", ".", "html", "\"", ">", "CVE", "-", "2013", "-", "7285", "<", "/", "a", ">", ",", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26217", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26217", "<", "/", "a", ">", ",", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26258", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26258", "<", "/", "a", ">", ",", "and", "<", "a", "href", "=", "\"", "CVE", "-", "2020", "-", "26259", ".", "html", "\"", ">", "CVE", "-", "2020", "-", "26259", "<", "/", "a", ">", ".<", "/", "p", ">", "<", "p", ">", "Note", ",", "that", "the", "XML", "data", "can", "be", "manipulated", "on", "different", "levels", ".", "For", "example", ",", "manipulating", "values", "on", "existing", "objects", "(", "such", "as", "a", "price", "value", ")", ",", "accessing", "private", "data", ",", "or", "breaking", "the", "format", "and", "causing", "the", "XML", "parser", "to", "fail", ".", "@", "@", "-", "45", ",", "6", "+", "45", ",", "7", "@", "@", "<", "/", "section", ">", "<", "section", ">", "<", "name", ">", "Vulnerabilities", "<", "/", "name", ">", "<", "page", ">", "CVE", "-", "2020", "-", "26259", ".", "html", "<", "/", "page", ">", "<", "page", ">", "CVE", "-", "2020", "-", "26258", ".", "html", "<", "/", "page", ">", "<", "page", ">", "CVE", "-", "2020", "-", "26217", ".", "html", "<", "/", "page", ">", "<", "page", ">", "CVE", "-", "2017", "-", "7957", ".", "html", "<", "/", "page", ">", "@", "@", "-", "143", ",", "6", "+", "143", ",", "54", "@", "@", "<", "artifactId", ">", "commons", "-", "lang", "<", "/", "artifactId", ">", "<", "scope", ">", "test", "<", "/", "scope", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "ws", "<", "/", "groupId", ">", "<", "artifactId", ">", "jaxws", "-", "rt", "<", "/", "artifactId", ">", "<", "scope", ">", "test", "<", "/", "scope", ">", "<", "exclusions", ">", "<", "exclusion", ">", "<", "groupId", ">", "javax", ".", "xml", ".", "ws", "<", "/", "groupId", ">", "<", "artifactId", ">", "jaxws", "-", "api", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "istack", "<", "/", "groupId", ">", "<", "artifactId", ">", "istack", "-", "commons", "-", "runtime", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "bind", "<", "/", "groupId", ">", "<", "artifactId", ">", "jaxb", "-", "impl", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "messaging", ".", "saaj", "<", "/", "groupId", ">", "<", "artifactId", ">", "saaj", "-", "impl", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "stream", ".", "buffer", "<", "/", "groupId", ">", "<", "artifactId", ">", "streambuffer", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "xml", ".", "ws", "<", "/", "groupId", ">", "<", "artifactId", ">", "policy", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "com", ".", "sun", ".", "org", ".", "apache", ".", "xml", ".", "internal", "<", "/", "groupId", ">", "<", "artifactId", ">", "resolver", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "org", ".", "glassfish", ".", "gmbal", "<", "/", "groupId", ">", "<", "artifactId", ">", "gmbal", "-", "api", "-", "only", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "org", ".", "jvnet", "<", "/", "groupId", ">", "<", "artifactId", ">", "mimepull", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "exclusion", ">", "<", "groupId", ">", "org", ".", "jvnet", ".", "staxex", "<", "/", "groupId", ">", "<", "artifactId", ">", "stax", "-", "ex", "<", "/", "artifactId", ">", "<", "/", "exclusion", ">", "<", "/", "exclusions", ">", "<", "/", "dependency", ">", "<", "/", "dependencies", ">", "<", "build", ">", "@", "@", "-", "337", ",", "6", "+", "337", ",", "7", "@", "@", "private", "static", "final", "Pattern", "IGNORE_ALL", "=", "Pattern", ".", "compile", "(", "\".", "*\"", ");", "private", "static", "final", "Pattern", "LAZY_ITERATORS", "=", "Pattern", ".", "compile", "(", "\".", "*\\", "\\$", "LazyIterator", "\"", ");", "private", "static", "final", "Pattern", "JAVAX_CRYPTO", "=", "Pattern", ".", "compile", "(", "\"", "javax", "\\", "\\.", "crypto", "\\", "\\.", ".*", "\")", ";", "private", "static", "final", "Pattern", "JAXWS_FILE_STREAM", "=", "Pattern", ".", "compile", "(", "\".", "*\\", "\\.", "ReadAllStream", "\\", "\\$", "FileStream", "\"", ");", "/", "**", "*", "Constructs", "a", "default", "XStream", ".", "@", "@", "-", "646", ",", "8", "+", "647", ",", "8", "@", "@", "protected", "void", "setupSecurity", "(", ")", "{", "\"", "java", ".", "beans", ".", "EventHandler", "\"", ",", "/", "/", "\"", "java", ".", "lang", ".", "ProcessBuilder", "\"", ",", "/", "/", "\"", "javax", ".", "imageio", ".", "ImageIO", "$", "ContainsFilter", "\"", ",", "/", "/", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", "})", ";", "denyTypesByRegExp", "(", "new", "Pattern", "[", "]{", "LAZY_ITERATORS", ",", "JAVAX_CRYPTO", "}", ");", "\"", "jdk", ".", "nashorn", ".", "internal", ".", "objects", ".", "NativeString", "\"", "}", ");", "denyTypesByRegExp", "(", "new", "Pattern", "[", "]{", "LAZY_ITERATORS", ",", "JAVAX_CRYPTO", ",", "JAXWS_FILE_STREAM", "}", ");", "allowTypeHierarchy", "(", "Exception", ".", "class", ")", ";", "securityInitialized", "=", "false", ";", "}", "@", "@", "-", "11", ",", "6", "+", "11", ",", "11", "@", "@", "package", "com", ".", "thoughtworks", ".", "acceptance", ";", "import", "java", ".", "beans", ".", "EventHandler", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "FileOutputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "com", ".", "thoughtworks", ".", "xstream", ".", "XStream", ";", "@", "@", "-", "213", ",", "4", "+", "218", ",", "68", "@", "@", "public", "void", "testInstanceOfLazyIterator", "(", ")", "{", "/", "/", "OK", "}", "}", "public", "void", "testCannotUseJaxwsInputStreamToDeleteFile", "(", ")", "{", "if", "(", "JVM", ".", "isVersion", "(", "5", ")", ")", "{", "final", "String", "xml", "=", "\"", "\"", "+", "\"", "<", "is", "class", "=", "'", "com", ".", "sun", ".", "xml", ".", "ws", ".", "util", ".", "ReadAllStream", "$", "FileStream", "'", ">\\", "n", "\"", "+", "\"", "<", "tempFile", ">", "target", "/", "junit", "/", "test", ".", "txt", "<", "/", "tempFile", ">", "\\", "n", "\"", "+", "\"", "</", "is", ">", "\";", "xstream", ".", "aliasType", "(", "\"", "is", "\"", ",", "InputStream", ".", "class", ")", ";", "try", "{", "xstream", ".", "fromXML", "(", "xml", ")", ";", "fail", "(", "\"", "Thrown", "\"", "+", "ConversionException", ".", "class", ".", "getName", "(", ")", "+", "\"", "expected", "\"", ");", "}", "catch", "(", "final", "ForbiddenClassException", "e", ")", "{", "/", "/", "OK", "}", "}", "}", "public", "void", "testExplicitlyUseJaxwsInputStreamToDeleteFile", "(", ")", "throws", "IOException", "{", "if", "(", "JVM", ".", "isVersion", "(", "5", ")", ")", "{", "final", "File", "testDir", "=", "new", "File", "(", "\"", "target", "/", "junit", "\"", ");", "final", "File", "testFile", "=", "new", "File", "(", "testDir", ",", "\"", "test", ".", "txt", "\"", ");", "try", "{", "testDir", ".", "mkdirs", "(", ");", "final", "OutputStream", "out", "=", "new", "FileOutputStream", "(", "testFile", ")", ";", "out", ".", "write", "(", "\"", "JUnit", "\"", ".", "getBytes", "(", "))", ";", "out", ".", "flush", "(", ");", "out", ".", "close", "(", ");", "assertTrue", "(", "\"", "Test", "file", "\"", "+", "testFile", ".", "getPath", "(", ")", "+", "\"", "does", "not", "exist", ".", "\",", "testFile", ".", "exists", "(", "))", ";", "final", "String", "xml", "=", "\"", "\"", "+", "\"", "<", "is", "class", "=", "'", "com", ".", "sun", ".", "xml", ".", "ws", ".", "util", ".", "ReadAllStream", "$", "FileStream", "'", ">\\", "n", "\"", "+", "\"", "<", "tempFile", ">", "target", "/", "junit", "/", "test", ".", "txt", "<", "/", "tempFile", ">", "\\", "n", "\"", "+", "\"", "</", "is", ">", "\";", "xstream", ".", "addPermission", "(", "AnyTypePermission", ".", "ANY", ")", ";", "/", "/", "clear", "out", "defaults", "xstream", ".", "aliasType", "(", "\"", "is", "\"", ",", "InputStream", ".", "class", ")", ";", "InputStream", "is", "=", "null", ";", "try", "{", "is", "=", "(", "InputStream", ")", "xstream", ".", "fromXML", "(", "xml", ")", ";", "}", "catch", "(", "final", "ForbiddenClassException", "e", ")", "{", "/", "/", "OK", "}", "assertTrue", "(", "\"", "Test", "file", "\"", "+", "testFile", ".", "getPath", "(", ")", "+", "\"", "no", "longer", "exists", ".", "\",", "testFile", ".", "exists", "(", "))", ";", "byte", "[", "]", "data", "=", "new", "byte", "[", "10", "]", ";", "is", ".", "read", "(", "data", ")", ";", "is", ".", "close", "(", ");", "assertFalse", "(", "\"", "Test", "file", "\"", "+", "testFile", ".", "getPath", "(", ")", "+", "\"", "still", "exists", "exist", ".", "\",", "testFile", ".", "exists", "(", "))", ";", "}", "finally", "{", "if", "(", "testFile", ".", "exists", "(", "))", "{", "testFile", ".", "delete", "(", ");", "}", "if", "(", "testDir", ".", "exists", "(", "))", "{", "testDir", ".", "delete", "(", ");", "}", "}", "}", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "66", ",", "12", "+", "66", ",", "12", "@", "@", "else", "if", "(", "\"", "https", "\"", ".", "equals", "(", "scheme", ")", "|", "|", "\"", "wss", "\"", ".", "equals", "(", "scheme", ")", ")", "{", "}", "/", "**", "*", "Returns", "{", "@", "code", "true", "}", "if", "the", "request", "is", "a", "valid", "CORS", "pre", "-", "flight", "one", ".", "*", "To", "be", "used", "in", "combination", "with", "{", "@", "link", "#", "isCorsRequest", "(", "HttpServletRequest", ")", "}", "since", "*", "regular", "CORS", "checks", "are", "not", "invoked", "here", "for", "performance", "reasons", ".", "*", "Returns", "{", "@", "code", "true", "}", "if", "the", "request", "is", "a", "valid", "CORS", "pre", "-", "flight", "one", "by", "checking", "{", "code", "OPTIONS", "}", "method", "with", "*", "{", "@", "code", "Origin", "}", "and", "{", "@", "code", "Access", "-", "Control", "-", "Request", "-", "Method", "}", "headers", "presence", ".", "*", "/", "public", "static", "boolean", "isPreFlightRequest", "(", "HttpServletRequest", "request", ")", "{", "return", "(", "HttpMethod", ".", "OPTIONS", ".", "matches", "(", "request", ".", "getMethod", "(", "))", "&", "&", "request", ".", "getHeader", "(", "HttpHeaders", ".", "ORIGIN", ")", "!", "=", "null", "&", "&", "request", ".", "getHeader", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ")", "!", "=", "null", ")", ";", "}", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "45", ",", "12", "+", "45", ",", "14", "@", "@", "public", "static", "boolean", "isCorsRequest", "(", "ServerHttpRequest", "request", ")", "{", "}", "/", "**", "*", "Returns", "{", "@", "code", "true", "}", "if", "the", "request", "is", "a", "valid", "CORS", "pre", "-", "flight", "one", ".", "*", "To", "be", "used", "in", "combination", "with", "{", "@", "link", "#", "isCorsRequest", "(", "ServerHttpRequest", ")", "}", "since", "*", "regular", "CORS", "checks", "are", "not", "invoked", "here", "for", "performance", "reasons", ".", "*", "Returns", "{", "@", "code", "true", "}", "if", "the", "request", "is", "a", "valid", "CORS", "pre", "-", "flight", "one", "by", "checking", "{", "code", "OPTIONS", "}", "method", "with", "*", "{", "@", "code", "Origin", "}", "and", "{", "@", "code", "Access", "-", "Control", "-", "Request", "-", "Method", "}", "headers", "presence", ".", "*", "/", "public", "static", "boolean", "isPreFlightRequest", "(", "ServerHttpRequest", "request", ")", "{", "return", "(", "request", ".", "getMethod", "(", ")", "=", "=", "HttpMethod", ".", "OPTIONS", "&", "&", "request", ".", "getHeaders", "(", ").", "containsKey", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ")", ");", "HttpHeaders", "headers", "=", "request", ".", "getHeaders", "(", ");", "return", "(", "request", ".", "getMethod", "(", ")", "=", "=", "HttpMethod", ".", "OPTIONS", "&", "&", "headers", ".", "containsKey", "(", "HttpHeaders", ".", "ORIGIN", ")", "&", "&", "headers", ".", "containsKey", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ")", ");", "}", "/", "**", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "182", ",", "8", "+", "182", ",", "8", "@", "@", "protected", "String", "formatMappingName", "(", ")", "{", "if", "(", "logger", ".", "isDebugEnabled", "(", "))", "{", "logger", ".", "debug", "(", "exchange", ".", "getLogPrefix", "(", ")", "+", "\"", "Mapped", "to", "\"", "+", "handler", ")", ";", "}", "if", "(", "hasCorsConfigurationSource", "(", "handler", ")", ")", "{", "ServerHttpRequest", "request", "=", "exchange", ".", "getRequest", "(", ");", "ServerHttpRequest", "request", "=", "exchange", ".", "getRequest", "(", ");", "if", "(", "hasCorsConfigurationSource", "(", "handler", ")", "|", "|", "CorsUtils", ".", "isPreFlightRequest", "(", "request", ")", ")", "{", "CorsConfiguration", "config", "=", "(", "this", ".", "corsConfigurationSource", "!", "=", "null", "?", "this", ".", "corsConfigurationSource", ".", "getCorsConfiguration", "(", "exchange", ")", ":", "null", ")", ";", "CorsConfiguration", "handlerConfig", "=", "getCorsConfiguration", "(", "handler", ",", "exchange", ")", ";", "config", "=", "(", "config", "!", "=", "null", "?", "config", ".", "combine", "(", "handlerConfig", ")", ":", "handlerConfig", ")", ";", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "374", ",", "8", "+", "374", ",", "7", "@", "@", "protected", "HandlerMethod", "handleNoMatch", "(", "Set", "<", "T", ">", "mappings", ",", "ServerWebExchange", "exchang", "@", "Override", "protected", "boolean", "hasCorsConfigurationSource", "(", "Object", "handler", ")", "{", "return", "super", ".", "hasCorsConfigurationSource", "(", "handler", ")", "|", "|", "(", "handler", "instanceof", "HandlerMethod", "&", "&", "this", ".", "mappingRegistry", ".", "getCorsConfiguration", "(", "(", "HandlerMethod", ")", "handler", ")", "!", "=", "null", ")", "|", "|", "handler", ".", "equals", "(", "PREFLIGHT_AMBIGUOUS_MATCH", ")", ";", "(", "handler", "instanceof", "HandlerMethod", "&", "&", "this", ".", "mappingRegistry", ".", "getCorsConfiguration", "(", "(", "HandlerMethod", ")", "handler", ")", "!", "=", "null", ")", ";", "}", "@", "Override", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "70", ",", "7", "+", "70", ",", "7", "@", "@", "public", "void", "preflightRequestWithoutCorsConfigurationProvider", "(", ")", "throws", "Exception", "Object", "actual", "=", "this", ".", "handlerMapping", ".", "getHandler", "(", "exchange", ")", ".", "block", "(", ");", "assertThat", "(", "actual", ")", ".", "isNotNull", "(", ");", "assertThat", "(", "actual", ")", ".", "isSameAs", "(", "this", ".", "welcomeController", ")", ";", "assertThat", "(", "actual", ")", ".", "isNotSameAs", "(", "this", ".", "welcomeController", ")", ";", "}", "@", "Test", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "35", ",", "11", "+", "35", ",", "13", "@", "@", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "RequestMapping", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "RequestMethod", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "RestController", ";", "import", "org", ".", "springframework", ".", "web", ".", "client", ".", "HttpClientErrorException", ";", "import", "org", ".", "springframework", ".", "web", ".", "client", ".", "RestTemplate", ";", "import", "org", ".", "springframework", ".", "web", ".", "reactive", ".", "config", ".", "EnableWebFlux", ";", "import", "org", ".", "springframework", ".", "web", ".", "testfixture", ".", "http", ".", "server", ".", "reactive", ".", "bootstrap", ".", "HttpServer", ";", "import", "static", "org", ".", "assertj", ".", "core", ".", "api", ".", "Assertions", ".", "assertThat", ";", "import", "static", "org", ".", "assertj", ".", "core", ".", "api", ".", "Assertions", ".", "fail", ";", "/", "**", "*", "Integration", "tests", "with", "{", "@", "code", "@", "CrossOrigin", "}", "and", "{", "@", "code", "@", "RequestMapping", "}", "@", "@", "-", "89", ",", "6", "+", "91", ",", "28", "@", "@", "void", "actualGetRequestWithoutAnnotation", "(", "HttpServer", "httpServer", ")", "throws", "Exception", "{", "assertThat", "(", "entity", ".", "getBody", "(", "))", ".", "isEqualTo", "(", "\"", "no", "\"", ");", "}", "@", "ParameterizedHttpServerTest", "void", "optionsRequestWithAccessControlRequestMethod", "(", "HttpServer", "httpServer", ")", "throws", "Exception", "{", "startServer", "(", "httpServer", ")", ";", "this", ".", "headers", ".", "clear", "(", ");", "this", ".", "headers", ".", "add", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ",", "\"", "GET", "\"", ");", "ResponseEntity", "<", "String", ">", "entity", "=", "performOptions", "(", "\"/", "no", "\"", ",", "this", ".", "headers", ",", "String", ".", "class", ")", ";", "assertThat", "(", "entity", ".", "getBody", "(", "))", ".", "isNull", "(", ");", "}", "@", "ParameterizedHttpServerTest", "void", "preflightRequestWithoutAnnotation", "(", "HttpServer", "httpServer", ")", "throws", "Exception", "{", "startServer", "(", "httpServer", ")", ";", "this", ".", "headers", ".", "add", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ",", "\"", "GET", "\"", ");", "try", "{", "performOptions", "(", "\"/", "no", "\"", ",", "this", ".", "headers", ",", "Void", ".", "class", ")", ";", "fail", "(", "\"", "Preflight", "request", "without", "CORS", "configuration", "should", "fail", "\"", ");", "}", "catch", "(", "HttpClientErrorException", "ex", ")", "{", "assertThat", "(", "ex", ".", "getStatusCode", "(", "))", ".", "isEqualTo", "(", "HttpStatus", ".", "FORBIDDEN", ")", ";", "}", "}", "@", "ParameterizedHttpServerTest", "void", "actualPostRequestWithoutAnnotation", "(", "HttpServer", "httpServer", ")", "throws", "Exception", "{", "startServer", "(", "httpServer", ")", ";", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "414", ",", "7", "+", "414", ",", "7", "@", "@", "else", "if", "(", "logger", ".", "isDebugEnabled", "(", ")", "&", "&", "!", "request", ".", "getDispatcherType", "(", ").", "equals", "(", "Dispatch", "logger", ".", "debug", "(", "\"", "Mapped", "to", "\"", "+", "executionChain", ".", "getHandler", "(", "))", ";", "}", "if", "(", "hasCorsConfigurationSource", "(", "handler", ")", ")", "{", "if", "(", "hasCorsConfigurationSource", "(", "handler", ")", "|", "|", "CorsUtils", ".", "isPreFlightRequest", "(", "request", ")", ")", "{", "CorsConfiguration", "config", "=", "(", "this", ".", "corsConfigurationSource", "!", "=", "null", "?", "this", ".", "corsConfigurationSource", ".", "getCorsConfiguration", "(", "request", ")", ":", "null", ")", ";", "CorsConfiguration", "handlerConfig", "=", "getCorsConfiguration", "(", "handler", ",", "request", ")", ";", "config", "=", "(", "config", "!", "=", "null", "?", "config", ".", "combine", "(", "handlerConfig", ")", ":", "handlerConfig", ")", ";", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "458", ",", "8", "+", "458", ",", "7", "@", "@", "protected", "HandlerMethod", "handleNoMatch", "(", "Set", "<", "T", ">", "mappings", ",", "String", "lookupPath", ",", "HttpSe", "@", "Override", "protected", "boolean", "hasCorsConfigurationSource", "(", "Object", "handler", ")", "{", "return", "super", ".", "hasCorsConfigurationSource", "(", "handler", ")", "|", "|", "(", "handler", "instanceof", "HandlerMethod", "&", "&", "this", ".", "mappingRegistry", ".", "getCorsConfiguration", "(", "(", "HandlerMethod", ")", "handler", ")", "!", "=", "null", ")", "|", "|", "handler", ".", "equals", "(", "PREFLIGHT_AMBIGUOUS_MATCH", ")", ";", "(", "handler", "instanceof", "HandlerMethod", "&", "&", "this", ".", "mappingRegistry", ".", "getCorsConfiguration", "(", "(", "HandlerMethod", ")", "handler", ")", "!", "=", "null", ")", ";", "}", "@", "Override", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "86", ",", "7", "+", "86", ",", "8", "@", "@", "void", "preflightRequestWithoutCorsConfigurationProvider", "(", ")", "throws", "Exception", "{", "HandlerExecutionChain", "chain", "=", "this", ".", "handlerMapping", ".", "getHandler", "(", "this", ".", "request", ")", ";", "assertThat", "(", "chain", ")", ".", "isNotNull", "(", ");", "assertThat", "(", "chain", ".", "getHandler", "(", "))", ".", "isInstanceOf", "(", "SimpleHandler", ".", "class", ")", ";", "assertThat", "(", "chain", ".", "getHandler", "(", "))", ".", "isNotNull", "(", ");", "assertThat", "(", "chain", ".", "getHandler", "(", ").", "getClass", "(", ").", "getSimpleName", "(", "))", ".", "isEqualTo", "(", "\"", "PreFlightHandler", "\"", ");", "}", "@", "Test", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2019", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2020", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "@", "@", "-", "69", ",", "6", "+", "69", ",", "10", "@", "@", "private", "final", "MockHttpServletRequest", "request", "=", "new", "MockHttpServletRequest", "(", ");", "private", "final", "String", "optionsHandler", "=", "\"", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "mvc", ".", "method", ".", "RequestMappingInfoHandlerMapping", "$", "HttpOptionsHandler", "#", "handle", "(", ")\"", ";", "private", "final", "String", "corsPreflightHandler", "=", "\"", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "handler", ".", "AbstractHandlerMapping", "$", "PreFlightHandler", "\"", ";", "@", "BeforeEach", "@", "SuppressWarnings", "(", "\"", "resource", "\"", ")", "@", "@", "-", "96", ",", "6", "+", "100", ",", "25", "@", "@", "public", "void", "noAnnotationWithoutOrigin", "(", ")", "throws", "Exception", "{", "assertThat", "(", "getCorsConfiguration", "(", "chain", ",", "false", ")", ").", "isNull", "(", ");", "}", "@", "Test", "public", "void", "noAnnotationWithAccessControlRequestMethod", "(", ")", "throws", "Exception", "{", "this", ".", "handlerMapping", ".", "registerHandler", "(", "new", "MethodLevelController", "(", "))", ";", "MockHttpServletRequest", "request", "=", "new", "MockHttpServletRequest", "(", "\"", "OPTIONS", "\"", ",", "\"", "/", "no", "\"", ");", "request", ".", "addHeader", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ",", "\"", "GET", "\"", ");", "HandlerExecutionChain", "chain", "=", "this", ".", "handlerMapping", ".", "getHandler", "(", "request", ")", ";", "assertThat", "(", "chain", ".", "getHandler", "(", ").", "toString", "(", "))", ".", "isEqualTo", "(", "optionsHandler", ")", ";", "}", "@", "Test", "public", "void", "noAnnotationWithPreflightRequest", "(", ")", "throws", "Exception", "{", "this", ".", "handlerMapping", ".", "registerHandler", "(", "new", "MethodLevelController", "(", "))", ";", "MockHttpServletRequest", "request", "=", "new", "MockHttpServletRequest", "(", "\"", "OPTIONS", "\"", ",", "\"", "/", "no", "\"", ");", "request", ".", "addHeader", "(", "HttpHeaders", ".", "ORIGIN", ",", "\"", "https", ":", "//", "domain", ".", "com", "/", "\")", ";", "request", ".", "addHeader", "(", "HttpHeaders", ".", "ACCESS_CONTROL_REQUEST_METHOD", ",", "\"", "GET", "\"", ");", "HandlerExecutionChain", "chain", "=", "this", ".", "handlerMapping", ".", "getHandler", "(", "request", ")", ";", "assertThat", "(", "chain", ".", "getHandler", "(", ").", "getClass", "(", ").", "getName", "(", "))", ".", "isEqualTo", "(", "corsPreflightHandler", ")", ";", "}", "@", "Test", "/", "/", "SPR", "-", "12931", "public", "void", "noAnnotationWithOrigin", "(", ")", "throws", "Exception", "{", "this", ".", "handlerMapping", ".", "registerHandler", "(", "new", "MethodLevelController", "(", "))", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1425", ",", "6", "+", "1425", ",", "7", "@", "@", "static", "int", "copy_to_user_tmpl", "(", "struct", "xfrm_policy", "*", "xp", ",", "struct", "sk_buff", "*", "skb", ")", "struct", "xfrm_user_tmpl", "*", "up", "=", "&", "vec", "[", "i", "]", ";", "struct", "xfrm_tmpl", "*", "kp", "=", "&", "xp", "-", ">", "xfrm_vec", "[", "i", "]", ";", "memset", "(", "up", ",", "0", ",", "sizeof", "(", "*", "up", ")", ");", "memcpy", "(", "&", "up", "-", ">", "id", ",", "&", "kp", "-", ">", "id", ",", "sizeof", "(", "up", "-", ">", "id", ")", ");", "up", "-", ">", "family", "=", "kp", "-", ">", "encap_family", ";", "memcpy", "(", "&", "up", "-", ">", "saddr", ",", "&", "kp", "-", ">", "saddr", ",", "sizeof", "(", "up", "-", ">", "saddr", ")", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "459", ",", "7", "+", "459", ",", "7", "@", "@", "if", "(", "errors", ".", "size", "(", ")", ">", "0", ")", "{", "%", ">", "%", ">", "<", "tr", "valign", "=", "\"", "top", "\"", ">", "<", "td", ">", "<", "%=", "JID", ".", "unescapeNode", "(", "authJID", ".", "getNode", "(", ")", ")", "%>", "<", "%=", "StringUtils", ".", "escapeForXML", "(", "JID", ".", "unescapeNode", "(", "authJID", ".", "getNode", "(", ")", ")", ")%", ">", "<", "/", "td", ">", "<", "td", "width", "=", "\"", "1", "%", "\"", "align", "=", "\"", "center", "\"", ">", "<", "a", "href", "=", "\"", "setup", "-", "admin", "-", "settings", ".", "jsp", "?", "ldap", "=", "true", "&", "test", "=", "true", "&", "username", "=", "<%", "=", "URLEncoder", ".", "encode", "(", "authJID", ".", "getNode", "(", "),", "\"", "UTF", "-", "8", "\"", ")", "%", ">\"", "@", "@", "-", "43", ",", "6", "+", "43", ",", "11", "@", "@", "e", ".", "printStackTrace", "(", ");", "}", "}", "pageContext", ".", "setAttribute", "(", "\"", "errorDetail", "\"", ",", "errorDetail", ")", ";", "pageContext", ".", "setAttribute", "(", "\"", "success", "\"", ",", "success", ")", ";", "pageContext", ".", "setAttribute", "(", "\"", "hasPassword", "\"", ",", "password", "!", "=", "null", ")", ";", "pageContext", ".", "setAttribute", "(", "\"", "username", "\"", ",", "JID", ".", "unescapeNode", "(", "username", ")", ")", ";", "%", ">", "<", "!-", "-", "BEGIN", "connection", "settings", "test", "panel", "-", "->", "<", "div", "class", "=", "\"", "jive", "-", "testPanel", "\"", ">", "@", "@", "-", "53", ",", "18", "+", "58", ",", "20", "@", "@", "<", "/", "div", ">", "<", "h2", ">", "<", "fmt", ":", "message", "key", "=", "\"", "global", ".", "test", "\"", "/", ">:", "<", "span", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "title", "-", "desc", "\"", "/", "><", "/", "span", ">", "</", "h2", ">", "<", "%", "if", "(", "password", "!", "=", "null", ")", "{", "%", ">", "<", "%", "if", "(", "success", ")", "{", "%", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testSuccess", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", "\"", "/", "><", "/", "h4", ">", "<", "c", ":", "if", "test", "=", "\"$", "{", "hasPassword", "}", "\">", "<", "c", ":", "choose", ">", "<", "c", ":", "when", "test", "=", "\"$", "{", "success", "}", "\">", "<", "h4", "class", "=", "\"", "jive", "-", "testSuccess", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", ".", "detail", "\"", "/", "><", "/", "p", ">", "<", "/", "c", ":", "when", ">", "<", "c", ":", "otherwise", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testError", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "error", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<", "c", ":", "out", "value", "=", "\"$", "{", "errorDetail", "}", "\"/", "><", "/", "p", ">", "<", "/", "c", ":", "otherwise", ">", "<", "/", "c", ":", "choose", ">", "<", "/", "c", ":", "if", ">", "<", "p", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", ".", "detail", "\"", "/", "><", "/", "p", ">", "<", "%", "}", "else", "{", "%", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testError", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "error", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<%", "=", "errorDetail", "%", "><", "/", "p", ">", "<", "%", "}", "}", "if", "(", "!", "success", ")", "{", "%", ">", "<", "c", ":", "if", "test", "=", "\"$", "{", "not", "success", "}", "\">", "<", "form", "action", "=", "\"", "setup", "-", "admin", "-", "settings", ".", "jsp", "\"", "name", "=", "\"", "testform", "\"", "method", "=", "\"", "post", "\"", ">", "<", "input", "type", "=", "\"", "hidden", "\"", "name", "=", "\"", "ldap", "\"", "value", "=", "\"", "true", "\"", ">", "<", "input", "type", "=", "\"", "hidden", "\"", "name", "=", "\"", "test", "\"", "value", "=", "\"", "true", "\"", ">", "@", "@", "-", "74", ",", "8", "+", "81", ",", "8", "@", "@", "<", "td", "class", "=", "\"", "jive", "-", "label", "\"", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "administrator", "\"", "/", ">:", "<", "/", "td", ">", "<", "td", ">", "<", "%=", "JID", ".", "unescapeNode", "(", "username", ")", "%", ">", "<", "td", ">", "<", "c", ":", "out", "value", "=", "\"$", "{", "username", "}", "\"/", ">", "<", "/", "td", ">", "<", "td", ">", "&", "nbsp", ";", "@", "@", "-", "94", ",", "7", "+", "101", ",", "7", "@", "@", "<", "/", "tr", ">", "<", "/", "table", ">", "<", "/", "form", ">", "<", "%", "}", "%", ">", "<", "/", "c", ":", "if", ">", "<", "/", "div", ">", "<", "/", "div", ">", "<", "!-", "-", "END", "connection", "settings", "test", "panel", "-", "->", "@", "@", "-", "104", ",", "17", "+", "111", ",", "18", "@", "@", "<", "div", "class", "=", "\"", "jive", "-", "testPanel", "-", "content", "\"", ">", "<", "h2", ">", "<", "fmt", ":", "message", "key", "=", "\"", "global", ".", "test", "\"", "/", ">:", "<", "span", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "title", "-", "desc", "\"", "/", "><", "/", "span", ">", "</", "h2", ">", "<", "%", "if", "(", "password", "!", "=", "null", ")", "{", "%", ">", "<", "%", "if", "(", "success", ")", "{", "%", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testSuccess", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", ".", "detail", "\"", "/", "><", "/", "p", ">", "<", "%", "}", "else", "{", "%", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testError", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "error", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<%", "=", "errorDetail", "%", "><", "/", "p", ">", "<", "%", "}", "}", "%", ">", "<", "c", ":", "if", "test", "=", "\"$", "{", "hasPassword", "}", "\">", "<", "c", ":", "choose", ">", "<", "c", ":", "when", "test", "=", "\"$", "{", "success", "}", "\">", "<", "h4", "class", "=", "\"", "jive", "-", "testSuccess", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "success", ".", "detail", "\"", "/", "><", "/", "p", ">", "<", "/", "c", ":", "when", ">", "<", "c", ":", "otherwise", ">", "<", "h4", "class", "=", "\"", "jive", "-", "testError", "\"", "><", "fmt", ":", "message", "key", "=", "\"", "setup", ".", "admin", ".", "settings", ".", "test", ".", "status", "-", "error", "\"", "/", "><", "/", "h4", ">", "<", "p", ">", "<", "c", ":", "out", "value", "=", "\"$", "{", "errorDetail", "}", "\"/", "><", "/", "p", ">", "<", "/", "c", ":", "otherwise", ">", "<", "/", "c", ":", "choose", ">", "<", "/", "c", ":", "if", ">", "<", "/", "div", ">", "<", "/", "div", ">", "<", "!-", "-", "END", "connection", "settings", "test", "panel", "-", "->"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "16", ",", "7", "+", "16", ",", "6", "@", "@", "import", "java", ".", "awt", ".", "Graphics2D", ";", "import", "java", ".", "awt", ".", "image", ".", "BufferedImage", ";", "import", "java", ".", "io", ".", "ByteArrayOutputStream", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "nio", ".", "charset", ".", "StandardCharsets", ";", "import", "java", ".", "util", ".", "EnumMap", ";", "import", "java", ".", "util", ".", "stream", ".", "IntStream", ";", "@", "@", "-", "38", ",", "15", "+", "37", ",", "15", "@", "@", "/", "**", "*", "Generate", "qr", "code", ".", "*", "*", "@", "param", "stream", "the", "stream", "*", "@", "param", "key", "the", "key", "*", "@", "param", "width", "the", "width", "*", "@", "param", "height", "the", "height", "*", "@", "return", "the", "string", "*", "/", "@", "SneakyThrows", "public", "static", "void", "generateQRCode", "(", "final", "OutputStream", "stream", ",", "final", "String", "key", ",", "final", "int", "width", ",", "final", "int", "height", ")", "{", "val", "hintMap", "=", "new", "EnumMap", "<", "EncodeHintType", ",", "Object", ">", "(", "EncodeHintType", ".", "class", ")", ";", "public", "static", "String", "generateQRCode", "(", "final", "String", "key", ",", "final", "int", "width", ",", "final", "int", "height", ")", "{", "val", "hintMap", "=", "new", "EnumMap", "<", ">(", "EncodeHintType", ".", "class", ")", ";", "hintMap", ".", "put", "(", "EncodeHintType", ".", "CHARACTER_SET", ",", "StandardCharsets", ".", "UTF_8", ".", "name", "(", "))", ";", "hintMap", ".", "put", "(", "EncodeHintType", ".", "MARGIN", ",", "2", ")", ";", "hintMap", ".", "put", "(", "EncodeHintType", ".", "ERROR_CORRECTION", ",", "ErrorCorrectionLevel", ".", "L", ")", ";", "@", "@", "-", "71", ",", "9", "+", "70", ",", "7", "@", "@", "public", "static", "void", "generateQRCode", "(", "final", "OutputStream", "stream", ",", "final", "String", "key", ",", "val", "out", "=", "new", "ByteArrayOutputStream", "(", ");", "ImageIO", ".", "write", "(", "image", ",", "\"", "PNG", "\"", ",", "out", ")", ";", "byte", "[", "]", "bytes", "=", "out", ".", "toByteArray", "(", ");", "val", "base64bytes", "=", "EncodingUtils", ".", "encodeBase64", "(", "bytes", ")", ";", "stream", ".", "write", "(", "base64bytes", ".", "getBytes", "(", "\"", "UTF", "-", "8", "\"", "))", ";", "val", "bytes", "=", "out", ".", "toByteArray", "(", ");", "return", "EncodingUtils", ".", "encodeBase64", "(", "bytes", ")", ";", "}", "}", "@", "@", "-", "13", ",", "7", "+", "13", ",", "6", "@", "@", "import", "org", ".", "springframework", ".", "webflow", ".", "action", ".", "EventFactorySupport", ";", "import", "org", ".", "springframework", ".", "webflow", ".", "execution", ".", "Event", ";", "import", "org", ".", "springframework", ".", "webflow", ".", "execution", ".", "RequestContext", ";", "import", "java", ".", "io", ".", "ByteArrayOutputStream", ";", "/", "**", "*", "This", "is", "{", "@", "link", "OneTimeTokenAccountCheckRegistrationAction", "}", ".", "@", "@", "-", "48", ",", "9", "+", "47", ",", "7", "@", "@", "protected", "Event", "doExecute", "(", "final", "RequestContext", "requestContext", ")", "{", "if", "(", "acct", "=", "=", "null", "|", "|", "StringUtils", ".", "isBlank", "(", "acct", ".", "getSecretKey", "(", "))", ")", "{", "val", "keyAccount", "=", "this", ".", "repository", ".", "create", "(", "uid", ")", ";", "val", "keyUri", "=", "\"", "otpauth", ":", "//", "totp", "/", "\"", "+", "this", ".", "label", "+", "'", ":'", "+", "uid", "+", "\"", "?", "secret", "=", "\"", "+", "keyAccount", ".", "getSecretKey", "(", ")", "+", "\"", "&", "issuer", "=", "\"", "+", "this", ".", "issuer", ";", "val", "qrCodeBase64", "=", "new", "ByteArrayOutputStream", "(", ");", "QRUtils", ".", "generateQRCode", "(", "qrCodeBase64", ",", "keyUri", ",", "QRUtils", ".", "WIDTH_LARGE", ",", "QRUtils", ".", "WIDTH_LARGE", ")", ";", "val", "qrCodeBase64", "=", "QRUtils", ".", "generateQRCode", "(", "keyUri", ",", "QRUtils", ".", "WIDTH_LARGE", ",", "QRUtils", ".", "WIDTH_LARGE", ")", ";", "val", "flowScope", "=", "requestContext", ".", "getFlowScope", "(", ");", "flowScope", ".", "put", "(", "FLOW_SCOPE_ATTR_ACCOUNT", ",", "keyAccount", ")", ";", "flowScope", ".", "put", "(", "FLOW_SCOPE_ATTR_QR_IMAGE_BASE64", ",", "qrCodeBase64", ")", ";", "@", "@", "-", "18", ",", "7", "+", "18", ",", "7", "@", "@", "<", "h3", "th", ":", "text", "=", "\"#", "{", "screen", ".", "authentication", ".", "gauth", ".", "register", "}", "\">", "Your", "account", "is", "not", "regist", "<", "form", "method", "=", "\"", "post", "\"", "id", "=", "\"", "fm1", "\"", "class", "=", "\"", "fm", "-", "v", "clearfix", "\"", "th", ":", "action", "=", "\"@", "{/", "login", "}", "\">", "<", "div", "class", "=", "\"", "d", "-", "flex", "flex", "-", "column", "align", "-", "items", "-", "center", "\"", ">", "<", "img", "th", ":", "src", "=", "\"", "data", ":", "image", "/", "png", ";", "base64", ",", "${", "QRcode", "}", "\"", "/", ">", "<", "img", "th", ":", "src", "=", "\"@", "{'", "data", ":", "image", "/", "jpeg", ";", "base64", ",", "'", "+", "$", "{", "QRcode", "}", "}\"", "/", ">", "<", "div", "class", "=", "\"", "my", "-", "2", "\"", ">", "<", "p", "th", ":", "utext", "=", "\"#", "{", "screen", ".", "authentication", ".", "gauth", ".", "key", "(", "${", "key", ".", "getSecretKey", "(", ")}", ")}", "\">", "Secret", "key", "to", "register", "is", ".", "..", "</", "p", ">", "@", "@", "-", "52", ",", "4", "+", "52", ",", "4", "@", "@", "<", "h3", "th", ":", "text", "=", "\"#", "{", "screen", ".", "authentication", ".", "gauth", ".", "register", "}", "\">", "Your", "account", "is", "not", "regist", "<", "/", "main", ">", "<", "/", "body", ">", "<", "/", "html", ">", "\\", "No", "newline", "at", "end", "of", "file", "<", "/", "html", ">"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "51", ",", "6", "+", "51", ",", "7", "@", "@", "function", "commandsFromBin", "(", "bin", ":", "PackageBin", ",", "pkgName", ":", "string", ",", "pkgPath", ":", "string", ")", "{", "]", "}", "return", "Object", ".", "keys", "(", "bin", ")", ".", "filter", "(", "(", "commandName", ")", "=", ">", "encodeURIComponent", "(", "commandName", ")", "=", "==", "commandName", ")", ".", "map", "(", "(", "commandName", ")", "=", ">", "(", "{", "name", ":", "commandName", ",", "path", ":", "path", ".", "join", "(", "pkgPath", ",", "bin", "[", "commandName", "]", "),", "@", "@", "-", "31", ",", "3", "+", "31", ",", "25", "@", "@", "test", "(", "'", "get", "bin", "of", "scoped", "package", "'", ",", "async", "(", "t", ")", "=", ">", "{", ")", "t", ".", "end", "(", ")", "}", ")", "test", "(", "\"", "skip", "dangerous", "bin", "names", "\"", ",", "async", "(", "t", ")", "=", ">", "{", "t", ".", "deepEqual", "(", "await", "getBinsFromPkg", "(", "{", "name", ":", "'", "foo", "'", ",", "version", ":", "'", "1", ".", "0", ".", "0", "'", ",", "bin", ":", "{", "'", "good", "'", ":", "'", "./", "good", "'", ",", "'", "..", "/", "bad", "'", ":", "'", "./", "bad", "'", ",", "'", "~/", "bad", "'", ":", "'", "./", "bad", "'", ",", "'", "..", "\\\\", "bad", "'", ":", "'", "./", "bad", "'", ",", "}", ",", "}", ",", "process", ".", "cwd", "(", "))", ",", "[", "{", "name", ":", "'", "good", "'", ",", "path", ":", "path", ".", "resolve", "(", "'", "good", "'", "),", "}", ",", "]", ")", "t", ".", "end", "(", ")", "}", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "4", ",", "7", "+", "4", ",", "9", "@", "@", "Changes", "between", "1", ".", "0", ".", "0", "and", "1", ".", "0", ".", "0a", "[", "xx", "XXX", "xxxx", "]", "*", ")", "*", ")", "Check", "return", "value", "of", "int_rsa_verify", "in", "pkey_rsa_verifyrecover", "(", "CVE", "-", "2010", "-", "1633", ")", "[", "Steve", "Henson", ",", "Peter", "-", "Michael", "Hager", "<", "hager", "@", "dortmund", ".", "net", ">", "]", "Changes", "between", "0", ".", "9", ".", "8n", "and", "1", ".", "0", ".", "0", "[", "29", "Mar", "2010", "]", "@", "@", "-", "849", ",", "6", "+", "851", ",", "10", "@", "@", "Changes", "between", "0", ".", "9", ".", "8n", "and", "0", ".", "9", ".", "8o", "[", "xx", "XXX", "xxxx", "]", "*", ")", "Correct", "a", "typo", "in", "the", "CMS", "ASN1", "module", "which", "can", "result", "in", "invalid", "memory", "access", "or", "freeing", "data", "twice", "(", "CVE", "-", "2010", "-", "0742", ")", "[", "Steve", "Henson", ",", "Ronald", "Moesbergen", "<", "intercommit", "@", "gmail", ".", "com", ">", "]", "*", ")", "Add", "SHA2", "algorithms", "to", "SSL_library_init", "(", ").", "SHA2", "is", "becoming", "far", "more", "common", "in", "certificates", "and", "some", "applications", "which", "only", "call", "SSL_library_init", "and", "not", "OpenSSL_add_all_algorithms", "(", ")", "will", "fail", ".", "@", "@", "-", "7", ",", "6", "+", "7", ",", "7", "@", "@", "Major", "changes", "between", "OpenSSL", "1", ".", "0", ".", "0", "and", "OpenSSL", "1", ".", "0", ".", "0a", ":", "o", "Fix", "for", "security", "issue", "CVE", "-", "2010", "-", "1633", ".", "o", "GOST", "MAC", "and", "CFB", "fixes", ".", "Major", "changes", "between", "OpenSSL", "0", ".", "9", ".", "8n", "and", "OpenSSL", "1", ".", "0", ":", "@", "@", "-", "34", ",", "6", "+", "35", ",", "7", "@", "@", "Major", "changes", "between", "OpenSSL", "0", ".", "9", ".", "8n", "and", "OpenSSL", "0", ".", "9", ".", "8o", ":", "o", "Fix", "for", "security", "issue", "CVE", "-", "2010", "-", "0742", ".", "o", "Various", "DTLS", "fixes", ".", "o", "Recognise", "SHA2", "certificates", "if", "only", "SSL", "algorithms", "added", ".", "o", "Fix", "for", "no", "-", "rc4", "compilation", ".", "@", "@", "-", "131", ",", "8", "+", "131", ",", "8", "@", "@", "ASN1_NDEF_SEQUENCE", "(", "CMS_SignedData", ")", "=", "{", "}", "ASN1_NDEF_SEQUENCE_END", "(", "CMS_SignedData", ")", "ASN1_SEQUENCE", "(", "CMS_OriginatorInfo", ")", "=", "{", "ASN1_IMP_SET_OF_OPT", "(", "CMS_SignedData", ",", "certificates", ",", "CMS_CertificateChoices", ",", "0", ")", ",", "ASN1_IMP_SET_OF_OPT", "(", "CMS_SignedData", ",", "crls", ",", "CMS_RevocationInfoChoice", ",", "1", ")", "ASN1_IMP_SET_OF_OPT", "(", "CMS_OriginatorInfo", ",", "certificates", ",", "CMS_CertificateChoices", ",", "0", ")", ",", "ASN1_IMP_SET_OF_OPT", "(", "CMS_OriginatorInfo", ",", "crls", ",", "CMS_RevocationInfoChoice", ",", "1", ")", "}", "ASN1_SEQUENCE_END", "(", "CMS_OriginatorInfo", ")", "ASN1_NDEF_SEQUENCE", "(", "CMS_EncryptedContentInfo", ")", "=", "{", "@", "@", "-", "246", ",", "6", "+", "246", ",", "8", "@", "@", "static", "int", "pkey_rsa_verifyrecover", "(", "EVP_PKEY_CTX", "*", "ctx", ",", "ret", "=", "int_rsa_verify", "(", "EVP_MD_type", "(", "rctx", "-", ">", "md", ")", ",", "NULL", ",", "0", ",", "rout", ",", "&", "sltmp", ",", "sig", ",", "siglen", ",", "ctx", "-", ">", "pkey", "-", ">", "pkey", ".", "rsa", ")", ";", "if", "(", "ret", "<", "=", "0", ")", "return", "0", ";", "ret", "=", "sltmp", ";", "}", "else"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "923", ",", "7", "+", "923", ",", "7", "@", "@", "init_cifs", "(", "void", ")", "goto", "out_unregister_filesystem", ";", "#", "endif", "#", "ifdef", "CONFIG_CIFS_DFS_UPCALL", "rc", "=", "register_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "rc", "=", "cifs_init_dns_resolver", "(", ");", "if", "(", "rc", ")", "goto", "out_unregister_key_type", ";", "#", "endif", "@", "@", "-", "935", ",", "7", "+", "935", ",", "7", "@", "@", "init_cifs", "(", "void", ")", "out_unregister_resolver_key", ":", "#", "ifdef", "CONFIG_CIFS_DFS_UPCALL", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "cifs_exit_dns_resolver", "(", ");", "out_unregister_key_type", ":", "#", "endif", "#", "ifdef", "CONFIG_CIFS_UPCALL", "@", "@", "-", "961", ",", "7", "+", "961", ",", "7", "@", "@", "exit_cifs", "(", "void", ")", "cifs_proc_clean", "(", ");", "#", "ifdef", "CONFIG_CIFS_DFS_UPCALL", "cifs_dfs_release_automount_timer", "(", ");", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "cifs_exit_dns_resolver", "(", ");", "#", "endif", "#", "ifdef", "CONFIG_CIFS_UPCALL", "unregister_key_type", "(", "&", "cifs_spnego_key_type", ")", ";", "@", "@", "-", "24", ",", "12", "+", "24", ",", "16", "@", "@", "*", "/", "#", "include", "<", "linux", "/", "slab", ".", "h", ">", "#", "include", "<", "linux", "/", "keyctl", ".", "h", ">", "#", "include", "<", "linux", "/", "key", "-", "type", ".", "h", ">", "#", "include", "<", "keys", "/", "user", "-", "type", ".", "h", ">", "#", "include", "\"", "dns_resolve", ".", "h", "\"", "#", "include", "\"", "cifsglob", ".", "h", "\"", "#", "include", "\"", "cifsproto", ".", "h", "\"", "#", "include", "\"", "cifs_debug", ".", "h", "\"", "static", "const", "struct", "cred", "*", "dns_resolver_cache", ";", "/", "*", "Checks", "if", "supplied", "name", "is", "IP", "address", "*", "returns", ":", "*", "1", "-", "name", "is", "IP", "@", "@", "-", "94", ",", "6", "+", "98", ",", "7", "@", "@", "struct", "key_type", "key_type_dns_resolver", "=", "{", "int", "dns_resolve_server_name_to_ip", "(", "const", "char", "*", "unc", ",", "char", "*", "*", "ip_addr", ")", "{", "const", "struct", "cred", "*", "saved_cred", ";", "int", "rc", "=", "-", "EAGAIN", ";", "struct", "key", "*", "rkey", "=", "ERR_PTR", "(", "-", "EAGAIN", ")", ";", "char", "*", "name", ";", "@", "@", "-", "133", ",", "8", "+", "138", ",", "15", "@", "@", "dns_resolve_server_name_to_ip", "(", "const", "char", "*", "unc", ",", "char", "*", "*", "ip_addr", ")", "goto", "skip_upcall", ";", "}", "saved_cred", "=", "override_creds", "(", "dns_resolver_cache", ")", ";", "rkey", "=", "request_key", "(", "&", "key_type_dns_resolver", ",", "name", ",", "\"", "\")", ";", "revert_creds", "(", "saved_cred", ")", ";", "if", "(", "!", "IS_ERR", "(", "rkey", ")", ")", "{", "if", "(", "!(", "rkey", "-", ">", "perm", "&", "KEY_USR_VIEW", ")", ")", "{", "down_read", "(", "&", "rkey", "-", ">", "sem", ")", ";", "rkey", "-", ">", "perm", "|", "=", "KEY_USR_VIEW", ";", "up_read", "(", "&", "rkey", "-", ">", "sem", ")", ";", "}", "len", "=", "rkey", "-", ">", "type_data", ".", "x", "[", "0", "]", ";", "data", "=", "rkey", "-", ">", "payload", ".", "data", ";", "}", "else", "{", "@", "@", "-", "165", ",", "4", "+", "177", ",", "61", "@", "@", "dns_resolve_server_name_to_ip", "(", "const", "char", "*", "unc", ",", "char", "*", "*", "ip_addr", ")", "return", "rc", ";", "}", "int", "__init", "cifs_init_dns_resolver", "(", "void", ")", "{", "struct", "cred", "*", "cred", ";", "struct", "key", "*", "keyring", ";", "int", "ret", ";", "printk", "(", "KERN_NOTICE", "\"", "Registering", "the", "%", "s", "key", "type", "\\", "n", "\"", ",", "key_type_dns_resolver", ".", "name", ")", ";", "/", "*", "create", "an", "override", "credential", "set", "with", "a", "special", "thread", "keyring", "in", "*", "which", "DNS", "requests", "are", "cached", "*", "*", "this", "is", "used", "to", "prevent", "malicious", "redirections", "from", "being", "installed", "*", "with", "add_key", "(", ").", "*", "/", "cred", "=", "prepare_kernel_cred", "(", "NULL", ")", ";", "if", "(", "!", "cred", ")", "return", "-", "ENOMEM", ";", "keyring", "=", "key_alloc", "(", "&", "key_type_keyring", ",", "\"", ".", "dns_resolver", "\"", ",", "0", ",", "0", ",", "cred", ",", "(", "KEY_POS_ALL", "&", "~", "KEY_POS_SETATTR", ")", "|", "KEY_USR_VIEW", "|", "KEY_USR_READ", ",", "KEY_ALLOC_NOT_IN_QUOTA", ")", ";", "if", "(", "IS_ERR", "(", "keyring", ")", ")", "{", "ret", "=", "PTR_ERR", "(", "keyring", ")", ";", "goto", "failed_put_cred", ";", "}", "ret", "=", "key_instantiate_and_link", "(", "keyring", ",", "NULL", ",", "0", ",", "NULL", ",", "NULL", ")", ";", "if", "(", "ret", "<", "0", ")", "goto", "failed_put_key", ";", "ret", "=", "register_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "if", "(", "ret", "<", "0", ")", "goto", "failed_put_key", ";", "/", "*", "instruct", "request_key", "(", ")", "to", "use", "this", "special", "keyring", "as", "a", "cache", "for", "*", "the", "results", "it", "looks", "up", "*", "/", "cred", "-", ">", "thread_keyring", "=", "keyring", ";", "cred", "-", ">", "jit_keyring", "=", "KEY_REQKEY_DEFL_THREAD_KEYRING", ";", "dns_resolver_cache", "=", "cred", ";", "return", "0", ";", "failed_put_key", ":", "key_put", "(", "keyring", ")", ";", "failed_put_cred", ":", "put_cred", "(", "cred", ")", ";", "return", "ret", ";", "}", "void", "__exit", "cifs_exit_dns_resolver", "(", "void", ")", "{", "key_revoke", "(", "dns_resolver_cache", "-", ">", "thread_keyring", ")", ";", "unregister_key_type", "(", "&", "key_type_dns_resolver", ")", ";", "put_cred", "(", "dns_resolver_cache", ")", ";", "printk", "(", "KERN_NOTICE", "\"", "Unregistered", "%", "s", "key", "type", "\\", "n", "\"", ",", "key_type_dns_resolver", ".", "name", ")", ";", "}", "@", "@", "-", "24", ",", "8", "+", "24", ",", "8", "@", "@", "#", "define", "_DNS_RESOLVE_H", "#", "ifdef", "__KERNEL__", "#", "include", "<", "linux", "/", "key", "-", "type", ".", "h", ">", "extern", "struct", "key_type", "key_type_dns_resolver", ";", "extern", "int", "__init", "cifs_init_dns_resolver", "(", "void", ")", ";", "extern", "void", "__exit", "cifs_exit_dns_resolver", "(", "void", ")", ";", "extern", "int", "dns_resolve_server_name_to_ip", "(", "const", "char", "*", "unc", ",", "char", "*", "*", "ip_addr", ")", ";", "#", "endif", "/", "*", "KERNEL", "*", "/"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1592", ",", "6", "+", "1592", ",", "11", "@", "@", "struct", "sk_buff", "*", "sock_alloc_send_pskb", "(", "struct", "sock", "*", "sk", ",", "unsigned", "long", "header_len", ",", "gfp_t", "gfp_mask", ";", "long", "timeo", ";", "int", "err", ";", "int", "npages", "=", "(", "data_len", "+", "(", "PAGE_SIZE", "-", "1", ")", ")", ">", ">", "PAGE_SHIFT", ";", "err", "=", "-", "EMSGSIZE", ";", "if", "(", "npages", ">", "MAX_SKB_FRAGS", ")", "goto", "failure", ";", "gfp_mask", "=", "sk", "-", ">", "sk_allocation", ";", "if", "(", "gfp_mask", "&", "__GFP_WAIT", ")", "@", "@", "-", "1610", ",", "14", "+", "1615", ",", "12", "@", "@", "struct", "sk_buff", "*", "sock_alloc_send_pskb", "(", "struct", "sock", "*", "sk", ",", "unsigned", "long", "header_len", ",", "if", "(", "atomic_read", "(", "&", "sk", "-", ">", "sk_wmem_alloc", ")", "<", "sk", "-", ">", "sk_sndbuf", ")", "{", "skb", "=", "alloc_skb", "(", "header_len", ",", "gfp_mask", ")", ";", "if", "(", "skb", ")", "{", "int", "npages", ";", "int", "i", ";", "/", "*", "No", "pages", ",", "we", "'", "re", "done", ".", "..", "*", "/", "if", "(", "!", "data_len", ")", "break", ";", "npages", "=", "(", "data_len", "+", "(", "PAGE_SIZE", "-", "1", ")", ")", ">", ">", "PAGE_SHIFT", ";", "skb", "-", ">", "truesize", "+", "=", "data_len", ";", "skb_shinfo", "(", "skb", ")", "->", "nr_frags", "=", "npages", ";", "for", "(", "i", "=", "0", ";", "i", "<", "npages", ";", "i", "+", "+)", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "0", ",", "0", "+", "1", ",", "34", "@", "@", "-", "-", "TEST", "-", "-", "Bug", "#", "72749", ":", "wddx_deserialize", "allows", "illegal", "memory", "access", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "'", "wddx", "'", "))", "{", "die", "(", "'", "skip", ".", "wddx", "not", "available", "'", ");", "}", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "xml", "=", "<", "<<", "XML", "<", "?", "xml", "version", "=", "'", "1", ".", "0", "'", "?>", "<", "!", "DOCTYPE", "wddxPacket", "SYSTEM", "'", "wddx_0100", ".", "dtd", "'", ">", "<", "wddxPacket", "version", "=", "'", "1", ".", "0", "'", ">", "<", "header", "/", ">", "<", "data", ">", "<", "struct", ">", "<", "var", "name", "=", "'", "aDateTime3", "'", ">", "<", "dateTime", ">", "2", "\\", "r2004", "-", "09", "-", "10T05", ":", "52", ":", "49", "+", "00", "<", "/", "dateTime", ">", "<", "/", "var", ">", "<", "/", "struct", ">", "<", "/", "data", ">", "<", "/", "wddxPacket", ">", "XML", ";", "$", "array", "=", "wddx_deserialize", "(", "$", "xml", ")", ";", "var_dump", "(", "$", "array", ")", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "array", "(", "1", ")", "{", "[", "\"", "aDateTime3", "\"", "]=", ">", "string", "(", "24", ")", "\"", "2", "2004", "-", "09", "-", "10T05", ":", "52", ":", "49", "+", "00", "\"", "}", "@", "@", "-", "1123", ",", "18", "+", "1123", ",", "26", "@", "@", "static", "void", "php_wddx_process_data", "(", "void", "*", "user_data", ",", "const", "XML_Char", "*", "s", ",", "int", "len", ")", "case", "ST_DATETIME", ":", "{", "char", "*", "tmp", ";", "tmp", "=", "emalloc", "(", "len", "+", "1", ")", ";", "memcpy", "(", "tmp", ",", "s", ",", "len", ")", ";", "if", "(", "Z_TYPE_P", "(", "ent", "-", ">", "data", ")", "=", "=", "IS_STRING", ")", "{", "tmp", "=", "safe_emalloc", "(", "Z_STRLEN_P", "(", "ent", "-", ">", "data", ")", ",", "1", ",", "(", "size_t", ")", "len", "+", "1", ")", ";", "memcpy", "(", "tmp", ",", "Z_STRVAL_P", "(", "ent", "-", ">", "data", ")", ",", "Z_STRLEN_P", "(", "ent", "-", ">", "data", ")", ");", "memcpy", "(", "tmp", "+", "Z_STRLEN_P", "(", "ent", "-", ">", "data", ")", ",", "s", ",", "len", ")", ";", "len", "+", "=", "Z_STRLEN_P", "(", "ent", "-", ">", "data", ")", ";", "efree", "(", "Z_STRVAL_P", "(", "ent", "-", ">", "data", ")", ");", "Z_TYPE_P", "(", "ent", "-", ">", "data", ")", "=", "IS_LONG", ";", "}", "else", "{", "tmp", "=", "emalloc", "(", "len", "+", "1", ")", ";", "memcpy", "(", "tmp", ",", "s", ",", "len", ")", ";", "}", "tmp", "[", "len", "]", "=", "'", "\\", "0", "'", ";", "Z_LVAL_P", "(", "ent", "-", ">", "data", ")", "=", "php_parse_date", "(", "tmp", ",", "NULL", ")", ";", "/", "*", "date", "out", "of", "range", "<", "1969", "or", ">", "2038", "*", "/", "if", "(", "Z_LVAL_P", "(", "ent", "-", ">", "data", ")", "=", "=", "-", "1", ")", "{", "Z_TYPE_P", "(", "ent", "-", ">", "data", ")", "=", "IS_STRING", ";", "Z_STRLEN_P", "(", "ent", "-", ">", "data", ")", "=", "len", ";", "Z_STRVAL_P", "(", "ent", "-", ">", "data", ")", "=", "estrndup", "(", "s", ",", "len", ")", ";", "ZVAL_STRINGL", "(", "ent", "-", ">", "data", ",", "tmp", ",", "len", ",", "0", ")", ";", "}", "else", "{", "efree", "(", "tmp", ")", ";", "}", "efree", "(", "tmp", ")", ";", "}", "break", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1", ",", "80", "+", "0", ",", "0", "@", "@", "/", "*", "*", "Copyright", "2013", "-", "2014", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "distributed", "under", "the", "License", "is", "distributed", "on", "*", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletResponse", ";", "import", "org", ".", "springframework", ".", "context", ".", "expression", ".", "MapAccessor", ";", "import", "org", ".", "springframework", ".", "expression", ".", "Expression", ";", "import", "org", ".", "springframework", ".", "expression", ".", "spel", ".", "standard", ".", "SpelExpressionParser", ";", "import", "org", ".", "springframework", ".", "expression", ".", "spel", ".", "support", ".", "StandardEvaluationContext", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "util", ".", "RandomValueStringGenerator", ";", "import", "org", ".", "springframework", ".", "util", ".", "PropertyPlaceholderHelper", ";", "import", "org", ".", "springframework", ".", "util", ".", "PropertyPlaceholderHelper", ".", "PlaceholderResolver", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "View", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "support", ".", "ServletUriComponentsBuilder", ";", "/", "**", "*", "Simple", "String", "template", "renderer", ".", "*", "*", "/", "class", "SpelView", "implements", "View", "{", "private", "final", "String", "template", ";", "private", "final", "String", "prefix", ";", "private", "final", "SpelExpressionParser", "parser", "=", "new", "SpelExpressionParser", "(", ");", "private", "final", "StandardEvaluationContext", "context", "=", "new", "StandardEvaluationContext", "(", ");", "private", "PlaceholderResolver", "resolver", ";", "public", "SpelView", "(", "String", "template", ")", "{", "this", ".", "template", "=", "template", ";", "this", ".", "prefix", "=", "new", "RandomValueStringGenerator", "(", ").", "generate", "(", ")", "+", "\"", "{\"", ";", "this", ".", "context", ".", "addPropertyAccessor", "(", "new", "MapAccessor", "(", "))", ";", "this", ".", "resolver", "=", "new", "PlaceholderResolver", "(", ")", "{", "public", "String", "resolvePlaceholder", "(", "String", "name", ")", "{", "Expression", "expression", "=", "parser", ".", "parseExpression", "(", "name", ")", ";", "Object", "value", "=", "expression", ".", "getValue", "(", "context", ")", ";", "return", "value", "=", "=", "null", "?", "null", ":", "value", ".", "toString", "(", ");", "}", "}", ";", "}", "public", "String", "getContentType", "(", ")", "{", "return", "\"", "text", "/", "html", "\"", ";", "}", "public", "void", "render", "(", "Map", "<", "String", ",", "?", ">", "model", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Exception", "{", "Map", "<", "String", ",", "Object", ">", "map", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "(", "model", ")", ";", "String", "path", "=", "ServletUriComponentsBuilder", ".", "fromContextPath", "(", "request", ")", ".", "build", "(", ")", ".", "getPath", "(", ");", "map", ".", "put", "(", "\"", "path", "\"", ",", "(", "Object", ")", "path", "=", "=", "null", "?", "\"", "\"", ":", "path", ")", ";", "context", ".", "setRootObject", "(", "map", ")", ";", "String", "maskedTemplate", "=", "template", ".", "replace", "(", "\"$", "{\"", ",", "prefix", ")", ";", "PropertyPlaceholderHelper", "helper", "=", "new", "PropertyPlaceholderHelper", "(", "prefix", ",", "\"", "}\"", ");", "String", "result", "=", "helper", ".", "replacePlaceholders", "(", "maskedTemplate", ",", "resolver", ")", ";", "result", "=", "result", ".", "replace", "(", "prefix", ",", "\"", "${", "\")", ";", "response", ".", "setContentType", "(", "getContentType", "(", "))", ";", "response", ".", "getWriter", "(", ").", "append", "(", "result", ")", ";", "}", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "1", ",", "12", "+", "1", ",", "17", "@", "@", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "AuthorizationRequest", ";", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "csrf", ".", "CsrfToken", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "RequestMapping", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "SessionAttributes", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "ModelAndView", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "View", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "support", ".", "ServletUriComponentsBuilder", ";", "import", "org", ".", "springframework", ".", "web", ".", "util", ".", "HtmlUtils", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletResponse", ";", "import", "java", ".", "util", ".", "Map", ";", "/", "**", "*", "Controller", "for", "displaying", "the", "approval", "page", "for", "the", "authorization", "server", ".", "@", "@", "-", "19", ",", "56", "+", "24", ",", "91", "@", "@", "@", "RequestMapping", "(", "\"/", "oauth", "/", "confirm_access", "\"", ")", "public", "ModelAndView", "getAccessConfirmation", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "HttpServletRequest", "request", ")", "throws", "Exception", "{", "String", "template", "=", "createTemplate", "(", "model", ",", "request", ")", ";", "final", "String", "approvalContent", "=", "createTemplate", "(", "model", ",", "request", ")", ";", "if", "(", "request", ".", "getAttribute", "(", "\"", "_csrf", "\"", ")", "!", "=", "null", ")", "{", "model", ".", "put", "(", "\"", "_csrf", "\"", ",", "request", ".", "getAttribute", "(", "\"", "_csrf", "\"", "))", ";", "}", "return", "new", "ModelAndView", "(", "new", "SpelView", "(", "template", ")", ",", "model", ")", ";", "View", "approvalView", "=", "new", "View", "(", ")", "{", "@", "Override", "public", "String", "getContentType", "(", ")", "{", "return", "\"", "text", "/", "html", "\"", ";", "}", "@", "Override", "public", "void", "render", "(", "Map", "<", "String", ",", "?", ">", "model", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Exception", "{", "response", ".", "setContentType", "(", "getContentType", "(", "))", ";", "response", ".", "getWriter", "(", ").", "append", "(", "approvalContent", ")", ";", "}", "}", ";", "return", "new", "ModelAndView", "(", "approvalView", ",", "model", ")", ";", "}", "protected", "String", "createTemplate", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "HttpServletRequest", "request", ")", "{", "String", "template", "=", "TEMPLATE", ";", "if", "(", "model", ".", "containsKey", "(", "\"", "scopes", "\"", ")", "|", "|", "request", ".", "getAttribute", "(", "\"", "scopes", "\"", ")", "!", "=", "null", ")", "{", "template", "=", "template", ".", "replace", "(", "\"%", "scopes", "%", "\",", "createScopes", "(", "model", ",", "request", ")", ").", "replace", "(", "\"%", "denial", "%", "\",", "\"", "\")", ";", "AuthorizationRequest", "authorizationRequest", "=", "(", "AuthorizationRequest", ")", "model", ".", "get", "(", "\"", "authorizationRequest", "\"", ");", "String", "clientId", "=", "authorizationRequest", ".", "getClientId", "(", ");", "StringBuilder", "builder", "=", "new", "StringBuilder", "(", ");", "builder", ".", "append", "(", "\"<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Approval", "<", "/", "h1", ">", "\")", ";", "builder", ".", "append", "(", "\"<", "p", ">", "Do", "you", "authorize", "\\", "\"\"", ").", "append", "(", "HtmlUtils", ".", "htmlEscape", "(", "clientId", ")", ");", "builder", ".", "append", "(", "\"\\", "\"", "to", "access", "your", "protected", "resources", "?", "</", "p", ">", "\")", ";", "builder", ".", "append", "(", "\"<", "form", "id", "=", "\\\"", "confirmationForm", "\\", "\"", "name", "=", "\\\"", "confirmationForm", "\\", "\"", "action", "=", "\\\"", "\")", ";", "String", "requestPath", "=", "ServletUriComponentsBuilder", ".", "fromContextPath", "(", "request", ")", ".", "build", "(", ").", "getPath", "(", ");", "if", "(", "requestPath", "=", "=", "null", ")", "{", "requestPath", "=", "\"", "\";", "}", "else", "{", "template", "=", "template", ".", "replace", "(", "\"%", "scopes", "%", "\",", "\"", "\")", ".", "replace", "(", "\"%", "denial", "%", "\",", "DENIAL", ")", ";", "builder", ".", "append", "(", "requestPath", ")", ".", "append", "(", "\"/", "oauth", "/", "authorize", "\\", "\"", "method", "=", "\\\"", "post", "\\", "\">", "\")", ";", "builder", ".", "append", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"", "value", "=", "\\\"", "true", "\\", "\"", "type", "=", "\\\"", "hidden", "\\", "\"/", ">\"", ");", "String", "csrfTemplate", "=", "null", ";", "CsrfToken", "csrfToken", "=", "(", "CsrfToken", ")", "(", "model", ".", "containsKey", "(", "\"", "_csrf", "\"", ")", "?", "model", ".", "get", "(", "\"", "_csrf", "\"", ")", ":", "request", ".", "getAttribute", "(", "\"", "_csrf", "\"", "))", ";", "if", "(", "csrfToken", "!", "=", "null", ")", "{", "csrfTemplate", "=", "\"", "<", "input", "type", "=", "\\\"", "hidden", "\\", "\"", "name", "=", "\\\"", "\"", "+", "HtmlUtils", ".", "htmlEscape", "(", "csrfToken", ".", "getParameterName", "(", "))", "\"", "\\\"", "value", "=", "\\\"", "\"", "+", "HtmlUtils", ".", "htmlEscape", "(", "csrfToken", ".", "getToken", "(", "))", "+", "\"", "\\\"", "/", ">\"", ";", "}", "if", "(", "model", ".", "containsKey", "(", "\"", "_csrf", "\"", ")", "|", "|", "request", ".", "getAttribute", "(", "\"", "_csrf", "\"", ")", "!", "=", "null", ")", "{", "template", "=", "template", ".", "replace", "(", "\"%", "csrf", "%", "\",", "CSRF", ")", ";", "if", "(", "csrfTemplate", "!", "=", "null", ")", "{", "builder", ".", "append", "(", "csrfTemplate", ")", ";", "}", "else", "{", "template", "=", "template", ".", "replace", "(", "\"%", "csrf", "%", "\",", "\"", "\")", ";", "String", "authorizeInputTemplate", "=", "\"", "<", "label", ">", "<", "input", "name", "=", "\\\"", "authorize", "\\", "\"", "value", "=", "\\\"", "Authorize", "\\", "\"", "type", "=", "\\\"", "submit", "\\", "\"/", "><", "/", "label", ">", "</", "form", ">", "\";", "if", "(", "model", ".", "containsKey", "(", "\"", "scopes", "\"", ")", "|", "|", "request", ".", "getAttribute", "(", "\"", "scopes", "\"", ")", "!", "=", "null", ")", "{", "builder", ".", "append", "(", "createScopes", "(", "model", ",", "request", ")", ");", "builder", ".", "append", "(", "authorizeInputTemplate", ")", ";", "}", "else", "{", "builder", ".", "append", "(", "authorizeInputTemplate", ")", ";", "builder", ".", "append", "(", "\"<", "form", "id", "=", "\\\"", "denialForm", "\\", "\"", "name", "=", "\\\"", "denialForm", "\\", "\"", "action", "=", "\\\"", "\")", ";", "builder", ".", "append", "(", "requestPath", ")", ".", "append", "(", "\"/", "oauth", "/", "authorize", "\\", "\"", "method", "=", "\\\"", "post", "\\", "\">", "\")", ";", "builder", ".", "append", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"", "value", "=", "\\\"", "false", "\\", "\"", "type", "=", "\\\"", "hidden", "\\", "\"/", ">\"", ");", "if", "(", "csrfTemplate", "!", "=", "null", ")", "{", "builder", ".", "append", "(", "csrfTemplate", ")", ";", "}", "builder", ".", "append", "(", "\"<", "label", ">", "<", "input", "name", "=", "\\\"", "deny", "\\", "\"", "value", "=", "\\\"", "Deny", "\\", "\"", "type", "=", "\\\"", "submit", "\\", "\"/", "><", "/", "label", ">", "</", "form", ">", "\")", ";", "}", "return", "template", ";", "builder", ".", "append", "(", "\"<", "/", "body", ">", "</", "html", ">", "\")", ";", "return", "builder", ".", "toString", "(", ");", "}", "private", "CharSequence", "createScopes", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "HttpServletRequest", "request", ")", "{", "StringBuilder", "builder", "=", "new", "StringBuilder", "(", "\"<", "ul", ">", "\")", ";", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "Map", "<", "String", ",", "String", ">", "scopes", "=", "(", "Map", "<", "String", ",", "String", ">", ")", "(", "model", ".", "containsKey", "(", "\"", "scopes", "\"", ")", "?", "model", ".", "get", "(", "\"", "scopes", "\"", ")", ":", "request", ".", "getAttribute", "(", "\"", "scopes", "\"", "))", ";", "Map", "<", "String", ",", "String", ">", "scopes", "=", "(", "Map", "<", "String", ",", "String", ">", ")", "(", "model", ".", "containsKey", "(", "\"", "scopes", "\"", ")", "?", "model", ".", "get", "(", "\"", "scopes", "\"", ")", ":", "request", ".", "getAttribute", "(", "\"", "scopes", "\"", "))", ";", "for", "(", "String", "scope", ":", "scopes", ".", "keySet", "(", "))", "{", "String", "approved", "=", "\"", "true", "\"", ".", "equals", "(", "scopes", ".", "get", "(", "scope", ")", ")", "?", "\"", "checked", "\"", ":", "\"", "\";", "String", "denied", "=", "!", "\"", "true", "\"", ".", "equals", "(", "scopes", ".", "get", "(", "scope", ")", ")", "?", "\"", "checked", "\"", ":", "\"", "\";", "String", "value", "=", "SCOPE", ".", "replace", "(", "\"%", "scope", "%", "\",", "scope", ")", ".", "replace", "(", "\"%", "key", "%", "\",", "scope", ")", ".", "replace", "(", "\"%", "approved", "%", "\",", "approved", ")", ".", "replace", "(", "\"%", "denied", "%", "\",", "denied", ")", ";", "builder", ".", "append", "(", "value", ")", ";", "scope", "=", "HtmlUtils", ".", "htmlEscape", "(", "scope", ")", ";", "builder", ".", "append", "(", "\"<", "li", ">", "<", "div", "class", "=", "\\\"", "form", "-", "group", "\\", "\">", "\")", ";", "builder", ".", "append", "(", "scope", ")", ".", "append", "(", "\":", "<", "input", "type", "=", "\\\"", "radio", "\\", "\"", "name", "=", "\\\"", "\")", ";", "builder", ".", "append", "(", "scope", ")", ".", "append", "(", "\"\\", "\"", "value", "=", "\\\"", "true", "\\", "\"\"", ").", "append", "(", "approved", ")", ".", "append", "(", "\">", "Approve", "<", "/", "input", ">", "\"", ");", "builder", ".", "append", "(", "\"<", "input", "type", "=", "\\\"", "radio", "\\", "\"", "name", "=", "\\\"", "\")", ".", "append", "(", "scope", ")", ".", "append", "(", "\"\\", "\"", "value", "=", "\\\"", "false", "\\", "\"\"", ");", "builder", ".", "append", "(", "denied", ")", ".", "append", "(", "\">", "Deny", "<", "/", "input", ">", "</", "div", ">", "</", "li", ">", "\")", ";", "}", "builder", ".", "append", "(", "\"<", "/", "ul", ">", "\")", ";", "return", "builder", ".", "toString", "(", ");", "}", "private", "static", "String", "CSRF", "=", "\"", "<", "input", "type", "=", "'", "hidden", "'", "name", "=", "'$", "{", "_csrf", ".", "parameterName", "}", "'", "value", "=", "'$", "{", "_csrf", ".", "token", "}", "'", "/", ">\"", ";", "private", "static", "String", "DENIAL", "=", "\"", "<", "form", "id", "=", "'", "denialForm", "'", "name", "=", "'", "denialForm", "'", "action", "=", "'$", "{", "path", "}", "/", "oauth", "/", "authorize", "'", "method", "=", "'", "post", "'", "><", "input", "name", "=", "'", "user_oauth_approval", "'", "value", "=", "'", "false", "'", "type", "=", "'", "hidden", "'", "/>", "%", "csrf", "%", "<", "label", ">", "<", "input", "name", "=", "'", "deny", "'", "value", "=", "'", "Deny", "'", "type", "=", "'", "submit", "'", "/>", "</", "label", ">", "</", "form", ">", "\";", "private", "static", "String", "TEMPLATE", "=", "\"", "<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Approval", "<", "/", "h1", ">", "\"", "+", "\"", "<", "p", ">", "Do", "you", "authorize", "'", "${", "authorizationRequest", ".", "clientId", "}", "'", "to", "access", "your", "protected", "resources", "?", "</", "p", ">", "\"", "+", "\"", "<", "form", "id", "=", "'", "confirmationForm", "'", "name", "=", "'", "confirmationForm", "'", "action", "=", "'$", "{", "path", "}", "/", "oauth", "/", "authorize", "'", "method", "=", "'", "post", "'", "><", "input", "name", "=", "'", "user_oauth_approval", "'", "value", "=", "'", "true", "'", "type", "=", "'", "hidden", "'", "/>", "%", "csrf", "%", "%", "scopes", "%", "<", "label", ">", "<", "input", "name", "=", "'", "authorize", "'", "value", "=", "'", "Authorize", "'", "type", "=", "'", "submit", "'", "/>", "</", "label", ">", "</", "form", ">", "\"", "+", "\"", "%", "denial", "%", "</", "body", ">", "</", "html", ">", "\";", "private", "static", "String", "SCOPE", "=", "\"", "<", "li", ">", "<", "div", "class", "=", "'", "form", "-", "group", "'", ">%", "scope", "%", ":", "<", "input", "type", "=", "'", "radio", "'", "name", "=", "'%", "key", "%", "'\"", "+", "\"", "value", "=", "'", "true", "'", "%", "approved", "%", ">", "Approve", "<", "/", "input", ">", "<", "input", "type", "=", "'", "radio", "'", "name", "=", "'%", "key", "%", "'", "value", "=", "'", "false", "'", "%", "denied", "%", ">", "Deny", "<", "/", "input", ">", "</", "div", ">", "</", "li", ">", "\";", "}", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "1", ",", "15", "+", "1", ",", "16", "@", "@", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "exceptions", ".", "OAuth2Exception", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "RequestMapping", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "ModelAndView", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "View", ";", "import", "org", ".", "springframework", ".", "web", ".", "util", ".", "HtmlUtils", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletRequest", ";", "import", "javax", ".", "servlet", ".", "http", ".", "HttpServletResponse", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "/", "**", "*", "Controller", "for", "displaying", "the", "error", "page", "for", "the", "authorization", "server", ".", "*", "@", "@", "-", "18", ",", "7", "+", "19", ",", "7", "@", "@", "@", "FrameworkEndpoint", "public", "class", "WhitelabelErrorEndpoint", "{", "private", "static", "final", "String", "ERROR", "=", "\"", "<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Error", "<", "/", "h1", ">", "<", "p", ">", "${", "errorSummary", "}", "</", "p", ">", "</", "body", ">", "</", "html", ">", "\";", "private", "static", "final", "String", "ERROR", "=", "\"", "<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Error", "<", "/", "h1", ">", "<", "p", ">", "%", "errorSummary", "%", "</", "p", ">", "</", "body", ">", "</", "html", ">", "\";", "@", "RequestMapping", "(", "\"/", "oauth", "/", "error", "\"", ")", "public", "ModelAndView", "handleError", "(", "HttpServletRequest", "request", ")", "{", "@", "@", "-", "34", ",", "7", "+", "35", ",", "19", "@", "@", "public", "ModelAndView", "handleError", "(", "HttpServletRequest", "request", ")", "{", "else", "{", "errorSummary", "=", "\"", "Unknown", "error", "\"", ";", "}", "model", ".", "put", "(", "\"", "errorSummary", "\"", ",", "errorSummary", ")", ";", "return", "new", "ModelAndView", "(", "new", "SpelView", "(", "ERROR", ")", ",", "model", ")", ";", "final", "String", "errorContent", "=", "ERROR", ".", "replace", "(", "\"%", "errorSummary", "%", "\",", "errorSummary", ")", ";", "View", "errorView", "=", "new", "View", "(", ")", "{", "@", "Override", "public", "String", "getContentType", "(", ")", "{", "return", "\"", "text", "/", "html", "\"", ";", "}", "@", "Override", "public", "void", "render", "(", "Map", "<", "String", ",", "?", ">", "model", ",", "HttpServletRequest", "request", ",", "HttpServletResponse", "response", ")", "throws", "Exception", "{", "response", ".", "setContentType", "(", "getContentType", "(", "))", ";", "response", ".", "getWriter", "(", ").", "append", "(", "errorContent", ")", ";", "}", "}", ";", "return", "new", "ModelAndView", "(", "errorView", ",", "model", ")", ";", "}", "}", "@", "@", "-", "1", ",", "67", "+", "0", ",", "0", "@", "@", "/", "*", "*", "Copyright", "2012", "-", "2015", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "*", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License", ".", "*", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertEquals", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "springframework", ".", "mock", ".", "web", ".", "MockHttpServletRequest", ";", "import", "org", ".", "springframework", ".", "mock", ".", "web", ".", "MockHttpServletResponse", ";", "/", "**", "*", "@", "author", "Dave", "Syer", "*", "*", "/", "public", "class", "SpelViewTests", "{", "private", "SpelView", "view", ";", "private", "MockHttpServletResponse", "response", "=", "new", "MockHttpServletResponse", "(", ");", "private", "MockHttpServletRequest", "request", "=", "new", "MockHttpServletRequest", "(", ");", "@", "Test", "public", "void", "sunnyDay", "(", ")", "throws", "Exception", "{", "view", "=", "new", "SpelView", "(", "\"$", "{", "hit", "}", "\")", ";", "view", ".", "render", "(", "Collections", ".", "singletonMap", "(", "\"", "hit", "\"", ",", "\"", "Ouch", "\"", "),", "request", ",", "response", ")", ";", "assertEquals", "(", "\"", "Ouch", "\"", ",", "response", ".", "getContentAsString", "(", "))", ";", "}", "@", "Test", "public", "void", "nonRecursive", "(", ")", "throws", "Exception", "{", "view", "=", "new", "SpelView", "(", "\"$", "{", "hit", "}", "\")", ";", "view", ".", "render", "(", "Collections", ".", "singletonMap", "(", "\"", "hit", "\"", ",", "\"", "${", "ouch", "}", "\")", ",", "request", ",", "response", ")", ";", "/", "/", "Expressions", "embedded", "in", "resolved", "values", "do", "not", "resolve", "recursively", "assertEquals", "(", "\"$", "{", "ouch", "}", "\",", "response", ".", "getContentAsString", "(", "))", ";", "}", "@", "Test", "public", "void", "recursive", "(", ")", "throws", "Exception", "{", "/", "/", "Recursive", "expressions", "in", "the", "template", "resolve", "view", "=", "new", "SpelView", "(", "\"$", "{$", "{", "hit", "}", "}\"", ");", "Map", "<", "String", ",", "Object", ">", "map", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "()", ";", "map", ".", "put", "(", "\"", "hit", "\"", ",", "\"", "me", "\"", ");", "map", ".", "put", "(", "\"", "me", "\"", ",", "\"", "${", "ouch", "}", "\")", ";", "view", ".", "render", "(", "map", ",", "request", ",", "response", ")", ";", "/", "/", "But", "expressions", "embedded", "in", "resolved", "values", "do", "not", "assertEquals", "(", "\"$", "{", "ouch", "}", "\",", "response", ".", "getContentAsString", "(", "))", ";", "}", "}", "@", "@", "-", "14", ",", "12", "+", "14", ",", "6", "@", "@", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "springframework", ".", "mock", ".", "web", ".", "MockHttpServletRequest", ";", "import", "org", ".", "springframework", ".", "mock", ".", "web", ".", "MockHttpServletResponse", ";", "@", "@", "-", "28", ",", "6", "+", "22", ",", "12", "@", "@", "import", "org", ".", "springframework", ".", "security", ".", "web", ".", "csrf", ".", "DefaultCsrfToken", ";", "import", "org", ".", "springframework", ".", "web", ".", "servlet", ".", "ModelAndView", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "/", "**", "*", "@", "author", "Dave", "Syer", "*", "@", "@", "-", "98", ",", "4", "+", "98", ",", "60", "@", "@", "public", "void", "testApprovalPageWithCsrf", "(", ")", "throws", "Exception", "{", "assertTrue", "(", "\"", "Wrong", "content", ":", "\"", "+", "content", ",", "!", "content", ".", "contains", "(", "\"$", "{\"", "))", ";", "}", "}", "/", "/", "gh", "-", "1340", "@", "Test", "public", "void", "testApprovalPageWithSuspectScope", "(", ")", "throws", "Exception", "{", "request", ".", "setContextPath", "(", "\"/", "foo", "\"", ");", "parameters", ".", "put", "(", "\"", "client_id", "\"", ",", "\"", "client", "\"", ");", "HashMap", "<", "String", ",", "Object", ">", "model", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "()", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "createFromParameters", "(", "parameters", ")", ");", "String", "scope", "=", "\"", "${", "T", "(", "java", ".", "lang", ".", "Runtime", ")", ".", "getRuntime", "(", ").", "exec", "(", "\\\"", "cd", ".", ".\\", "\")", "}\"", ";", "String", "escapedScope", "=", "\"", "T", "(", "java", ".", "lang", ".", "Runtime", ")", ".", "getRuntime", "(", ").", "exec", "(", "&", "quot", ";", "cd", ".", ".&", "quot", ";", ")\"", ";", "model", ".", "put", "(", "\"", "scopes", "\"", ",", "Collections", ".", "singletonMap", "(", "scope", ",", "\"", "true", "\"", "))", ";", "ModelAndView", "result", "=", "endpoint", ".", "getAccessConfirmation", "(", "model", ",", "request", ")", ";", "result", ".", "getView", "(", ").", "render", "(", "result", ".", "getModel", "(", "),", "request", ",", "response", ")", ";", "String", "content", "=", "response", ".", "getContentAsString", "(", ");", "assertTrue", "(", "\"", "Wrong", "content", ":", "\"", "+", "content", ",", "!", "content", ".", "contains", "(", "scope", ")", ");", "assertTrue", "(", "\"", "Wrong", "content", ":", "\"", "+", "content", ",", "content", ".", "contains", "(", "escapedScope", ")", ");", "}", "@", "Test", "public", "void", "testApprovalPageWithScopesInForm", "(", ")", "throws", "Exception", "{", "String", "expectedContent", "=", "\"", "<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Approval", "<", "/", "h1", ">", "<", "p", ">", "Do", "you", "authorize", "\\", "\"", "client", "\\", "\"", "to", "access", "your", "protected", "resources", "?", "</", "p", ">", "\"", "\"", "<", "form", "id", "=", "\\\"", "confirmationForm", "\\", "\"", "name", "=", "\\\"", "confirmationForm", "\\", "\"", "action", "=", "\\\"", "/", "foo", "/", "oauth", "/", "authorize", "\\", "\"", "method", "=", "\\\"", "post", "\\", "\">", "\"", "\"", "<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"", "value", "=", "\\\"", "true", "\\", "\"", "type", "=", "\\\"", "hidden", "\\", "\"/", "><", "input", "type", "=", "\\\"", "hidden", "\\", "\"", "name", "=", "\\\"", "_csrf", "\\", "\"", "value", "=", "\\\"", "FOO", "\\", "\"", "/", "><", "ul", ">", "\"", "\"", "<", "li", ">", "<", "div", "class", "=", "\\\"", "form", "-", "group", "\\", "\">", "scope", ".", "read", ":", "<", "input", "type", "=", "\\\"", "radio", "\\", "\"", "name", "=", "\\\"", "scope", ".", "read", "\\", "\"", "value", "=", "\\\"", "true", "\\", "\"", "checked", ">", "Approve", "<", "/", "input", ">", "\"", "\"", "<", "input", "type", "=", "\\\"", "radio", "\\", "\"", "name", "=", "\\\"", "scope", ".", "read", "\\", "\"", "value", "=", "\\\"", "false", "\\", "\">", "Deny", "<", "/", "input", ">", "</", "div", ">", "</", "li", ">", "</", "ul", ">", "<", "label", ">", "\"", "\"", "<", "input", "name", "=", "\\\"", "authorize", "\\", "\"", "value", "=", "\\\"", "Authorize", "\\", "\"", "type", "=", "\\\"", "submit", "\\", "\"/", "><", "/", "label", ">", "</", "form", ">", "</", "body", ">", "</", "html", ">", "\";", "request", ".", "setContextPath", "(", "\"/", "foo", "\"", ");", "request", ".", "setAttribute", "(", "\"", "_csrf", "\"", ",", "new", "DefaultCsrfToken", "(", "\"", "X", "-", "CSRF", "-", "TOKEN", "\"", ",", "\"", "_csrf", "\"", ",", "\"", "FOO", "\"", "))", ";", "parameters", ".", "put", "(", "\"", "client_id", "\"", ",", "\"", "client", "\"", ");", "HashMap", "<", "String", ",", "Object", ">", "model", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "()", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "createFromParameters", "(", "parameters", ")", ");", "model", ".", "put", "(", "\"", "scopes", "\"", ",", "Collections", ".", "singletonMap", "(", "\"", "scope", ".", "read", "\"", ",", "\"", "true", "\"", "))", ";", "ModelAndView", "result", "=", "endpoint", ".", "getAccessConfirmation", "(", "model", ",", "request", ")", ";", "result", ".", "getView", "(", ").", "render", "(", "result", ".", "getModel", "(", "),", "request", ",", "response", ")", ";", "String", "content", "=", "response", ".", "getContentAsString", "(", ");", "assertTrue", "(", "\"", "Wrong", "content", ":", "\"", "+", "content", ",", "content", ".", "equals", "(", "expectedContent", ")", ");", "}", "@", "Test", "public", "void", "testApprovalPageWithoutScopesInForm", "(", ")", "throws", "Exception", "{", "String", "expectedContent", "=", "\"", "<", "html", ">", "<", "body", ">", "<", "h1", ">", "OAuth", "Approval", "<", "/", "h1", ">", "<", "p", ">", "Do", "you", "authorize", "\\", "\"", "client", "\\", "\"", "to", "access", "your", "protected", "resources", "?", "</", "p", ">", "\"", "\"", "<", "form", "id", "=", "\\\"", "confirmationForm", "\\", "\"", "name", "=", "\\\"", "confirmationForm", "\\", "\"", "action", "=", "\\\"", "/", "foo", "/", "oauth", "/", "authorize", "\\", "\"", "method", "=", "\\\"", "post", "\\", "\">", "\"", "\"", "<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"", "value", "=", "\\\"", "true", "\\", "\"", "type", "=", "\\\"", "hidden", "\\", "\"/", "><", "input", "type", "=", "\\\"", "hidden", "\\", "\"", "name", "=", "\\\"", "_csrf", "\\", "\"", "value", "=", "\\\"", "FOO", "\\", "\"", "/", "><", "label", ">", "\"", "\"", "<", "input", "name", "=", "\\\"", "authorize", "\\", "\"", "value", "=", "\\\"", "Authorize", "\\", "\"", "type", "=", "\\\"", "submit", "\\", "\"/", "><", "/", "label", ">", "</", "form", ">", "\"", "\"", "<", "form", "id", "=", "\\\"", "denialForm", "\\", "\"", "name", "=", "\\\"", "denialForm", "\\", "\"", "action", "=", "\\\"", "/", "foo", "/", "oauth", "/", "authorize", "\\", "\"", "method", "=", "\\\"", "post", "\\", "\">", "\"", "\"", "<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"", "value", "=", "\\\"", "false", "\\", "\"", "type", "=", "\\\"", "hidden", "\\", "\"/", "><", "input", "type", "=", "\\\"", "hidden", "\\", "\"", "name", "=", "\\\"", "_csrf", "\\", "\"", "value", "=", "\\\"", "FOO", "\\", "\"", "/", "><", "label", ">", "\"", "\"", "<", "input", "name", "=", "\\\"", "deny", "\\", "\"", "value", "=", "\\\"", "Deny", "\\", "\"", "type", "=", "\\\"", "submit", "\\", "\"/", "><", "/", "label", ">", "</", "form", ">", "</", "body", ">", "</", "html", ">", "\";", "request", ".", "setContextPath", "(", "\"/", "foo", "\"", ");", "request", ".", "setAttribute", "(", "\"", "_csrf", "\"", ",", "new", "DefaultCsrfToken", "(", "\"", "X", "-", "CSRF", "-", "TOKEN", "\"", ",", "\"", "_csrf", "\"", ",", "\"", "FOO", "\"", "))", ";", "parameters", ".", "put", "(", "\"", "client_id", "\"", ",", "\"", "client", "\"", ");", "HashMap", "<", "String", ",", "Object", ">", "model", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "()", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "createFromParameters", "(", "parameters", ")", ");", "ModelAndView", "result", "=", "endpoint", ".", "getAccessConfirmation", "(", "model", ",", "request", ")", ";", "result", ".", "getView", "(", ").", "render", "(", "result", ".", "getModel", "(", "),", "request", ",", "response", ")", ";", "String", "content", "=", "response", ".", "getContentAsString", "(", ");", "assertTrue", "(", "\"", "Wrong", "content", ":", "\"", "+", "content", ",", "content", ".", "equals", "(", "expectedContent", ")", ");", "}", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "22", ",", "9", "+", "22", ",", "9", "@", "@", "public", "class", "AuthorizationCodeProviderTests", "extends", "AbstractAuthorizationCodeProviderTests", "{", "protected", "void", "verifyAuthorizationPage", "(", "String", "page", ")", "{", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "'/", "oauth", "/", "authorize", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "'", "user_oauth_approval", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"", "type", "=", "'", "radio", "\"", "))", ";", "/", "/", "approval", "store", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "\\\"", "/", "oauth", "/", "authorize", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"", "type", "=", "\\\"", "radio", "\"", "))", ";", "/", "/", "approval", "store", "}", "}", "@", "@", "-", "34", ",", "8", "+", "34", ",", "8", "@", "@", "protected", "String", "getUsername", "(", ")", "{", "}", "protected", "void", "verifyAuthorizationPage", "(", "String", "page", ")", "{", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "'/", "oauth", "/", "authorize", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "'", "user_oauth_approval", "'", "\")", ");", "assertFalse", "(", "page", ".", "contains", "(", "\"", "type", "=", "'", "radio", "\"", "))", ";", "/", "/", "no", "approval", "store", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "\\\"", "/", "oauth", "/", "authorize", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"\"", "))", ";", "assertFalse", "(", "page", ".", "contains", "(", "\"", "type", "=", "\\\"", "radio", "\"", "))", ";", "/", "/", "no", "approval", "store", "}", "}", "@", "@", "-", "25", ",", "9", "+", "25", ",", "9", "@", "@", "public", "class", "AuthorizationCodeProviderTests", "extends", "AbstractAuthorizationCodeProviderTests", "{", "protected", "void", "verifyAuthorizationPage", "(", "String", "page", ")", "{", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "'/", "oauth", "/", "authorize", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "'", "user_oauth_approval", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"", "type", "=", "'", "radio", "\"", "))", ";", "/", "/", "approval", "store", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "\\\"", "/", "oauth", "/", "authorize", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"", "type", "=", "\\\"", "radio", "\"", "))", ";", "/", "/", "approval", "store", "}", "}", "@", "@", "-", "26", ",", "8", "+", "26", ",", "8", "@", "@", "public", "class", "AuthorizationCodeProviderTests", "extends", "AbstractAuthorizationCodeProviderTests", "{", "protected", "void", "verifyAuthorizationPage", "(", "String", "page", ")", "{", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "'/", "oauth", "/", "authorize", "'", "\")", ");", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "'", "user_oauth_approval", "'", "\")", ");", "assertFalse", "(", "page", ".", "contains", "(", "\"", "type", "=", "'", "radio", "\"", "))", ";", "/", "/", "no", "approval", "store", "assertTrue", "(", "page", ".", "contains", "(", "\"", "action", "=", "\\\"", "/", "oauth", "/", "authorize", "\\", "\"\"", "))", ";", "assertTrue", "(", "page", ".", "contains", "(", "\"<", "input", "name", "=", "\\\"", "user_oauth_approval", "\\", "\"\"", "))", ";", "assertFalse", "(", "page", ".", "contains", "(", "\"", "type", "=", "\\\"", "radio", "\"", "))", ";", "/", "/", "no", "approval", "store", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "28", ",", "7", "+", "28", ",", "6", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "configuration", ".", "DataStorageConfiguration", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "client", ".", "GridClient", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "StreamTransformer", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "Nullable", ";", "@", "@", "-", "221", ",", "11", "+", "220", ",", "6", "@", "@", "*", "/", "public", "static", "final", "String", "IGNITE_MAX_COMPLETED_TX_COUNT", "=", "\"", "IGNITE_MAX_COMPLETED_TX_COUNT", "\"", ";", "/", "**", "*", "Concurrency", "level", "for", "all", "concurrent", "hash", "maps", "created", "by", "Ignite", ".", "*", "/", "public", "static", "final", "String", "IGNITE_MAP_CONCURRENCY_LEVEL", "=", "\"", "IGNITE_MAP_CONCURRENCY_LEVEL", "\"", ";", "/", "**", "*", "Transactions", "that", "take", "more", "time", ",", "than", "value", "of", "this", "property", ",", "will", "be", "output", "to", "log", "*", "with", "warning", "level", ".", "{", "@", "code", "0", "}", "(", "default", "value", ")", "disables", "warning", "on", "slow", "transactions", ".", "@", "@", "-", "320", ",", "13", "+", "314", ",", "6", "@", "@", "/", "**", "Ttl", "of", "removed", "cache", "entries", "(", "ms", ")", ".", "*", "/", "public", "static", "final", "String", "IGNITE_CACHE_REMOVED_ENTRIES_TTL", "=", "\"", "IGNITE_CACHE_REMOVED_ENTRIES_TTL", "\"", ";", "/", "**", "Maximum", "amount", "of", "concurrent", "updates", "per", "system", "thread", "in", "atomic", "caches", "in", "case", "of", "PRIMARY_SYNC", "or", "FULL_ASYNC", "*", "write", "synchronization", "mode", ".", "If", "this", "limit", "is", "exceeded", "then", "update", "will", "be", "performed", "with", "FULL_SYNC", "*", "synchronization", "mode", ".", "If", "value", "is", "{", "@", "code", "0", "}", "then", "limit", "is", "unbounded", ".", "*", "/", "public", "static", "final", "String", "IGNITE_ATOMIC_CACHE_MAX_CONCURRENT_DHT_UPDATES", "=", "\"", "IGNITE_ATOMIC_CACHE_MAX_CONCURRENT_DHT_UPDATES", "\"", ";", "/", "**", "*", "Comma", "separated", "list", "of", "addresses", "in", "format", "\"", "10", ".", "100", ".", "22", ".", "100", ":", "45000", ",", "10", ".", "100", ".", "22", ".", "101", ":", "45000", "\"", ".", "*", "Makes", "sense", "only", "for", "{", "@", "link", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "ipfinder", ".", "vm", ".", "TcpDiscoveryVmIpFinder", "}", ".", "@", "@", "-", "479", ",", "9", "+", "466", ",", "6", "@", "@", "/", "**", "Number", "of", "cache", "operation", "retries", "in", "case", "of", "topology", "exceptions", ".", "*", "/", "public", "static", "final", "String", "IGNITE_CACHE_RETRIES_COUNT", "=", "\"", "IGNITE_CACHE_RETRIES_COUNT", "\"", ";", "/", "**", "Number", "of", "times", "pending", "cache", "objects", "will", "be", "dumped", "to", "the", "log", "in", "case", "of", "partition", "exchange", "timeout", ".", "*", "/", "public", "static", "final", "String", "IGNITE_DUMP_PENDING_OBJECTS_THRESHOLD", "=", "\"", "IGNITE_DUMP_PENDING_OBJECTS_THRESHOLD", "\"", ";", "/", "**", "If", "this", "property", "is", "set", "to", "{", "@", "code", "true", "}", "then", "Ignite", "will", "log", "thread", "dump", "in", "case", "of", "partition", "exchange", "timeout", ".", "*", "/", "public", "static", "final", "String", "IGNITE_THREAD_DUMP_ON_EXCHANGE_TIMEOUT", "=", "\"", "IGNITE_THREAD_DUMP_ON_EXCHANGE_TIMEOUT", "\"", ";", "@", "@", "-", "524", ",", "6", "+", "508", ",", "12", "@", "@", "public", "static", "final", "String", "IGNITE_BINARY_MARSHALLER_USE_STRING_SERIALIZATION_VER_2", "=", "\"", "IGNITE_BINARY_MARSHALLER_USE_STRING_SERIALIZATION_VER_2", "\"", ";", "/", "**", "Defines", "path", "to", "the", "file", "that", "contains", "list", "of", "classes", "allowed", "to", "safe", "deserialization", ".", "*/", "public", "static", "final", "String", "IGNITE_MARSHALLER_WHITELIST", "=", "\"", "IGNITE_MARSHALLER_WHITELIST", "\"", ";", "/", "**", "Defines", "path", "to", "the", "file", "that", "contains", "list", "of", "classes", "disallowed", "to", "safe", "deserialization", ".", "*/", "public", "static", "final", "String", "IGNITE_MARSHALLER_BLACKLIST", "=", "\"", "IGNITE_MARSHALLER_BLACKLIST", "\"", ";", "/", "**", "*", "If", "set", "to", "{", "@", "code", "true", "}", ",", "then", "default", "selected", "keys", "set", "is", "used", "inside", "*", "{", "@", "code", "GridNioServer", "}", "which", "lead", "to", "some", "extra", "garbage", "generation", "when", "@", "@", "-", "689", ",", "16", "+", "679", ",", "7", "@", "@", "*", "/", "public", "static", "final", "String", "IGNITE_FORCE_START_JAVA7", "=", "\"", "IGNITE_FORCE_START_JAVA7", "\"", ";", "/", "**", "Returns", "true", "for", "system", "properties", "only", "avoiding", "sending", "sensitive", "information", ".", "*", "/", "private", "static", "final", "IgnitePredicate", "<", "Map", ".", "Entry", "<", "String", ",", "String", ">", ">", "PROPS_FILTER", "=", "new", "IgnitePredicate", "<", "Map", ".", "Entry", "<", "String", ",", "String", ">", ">(", ")", "{", "@", "Override", "public", "boolean", "apply", "(", "final", "Map", ".", "Entry", "<", "String", ",", "String", ">", "entry", ")", "{", "final", "String", "key", "=", "entry", ".", "getKey", "(", ");", "return", "key", ".", "startsWith", "(", "\"", "java", ".", "\")", "|", "|", "key", ".", "startsWith", "(", "\"", "os", ".", "\")", "|", "|", "key", ".", "startsWith", "(", "\"", "user", ".", "\")", ";", "}", "}", ";", "/", "**", "/", "**", "*", "When", "set", "to", "{", "@", "code", "true", "}", ",", "Ignite", "switches", "to", "compatibility", "mode", "with", "versions", "that", "don", "'", "t", "*", "support", "service", "security", "permissions", ".", "In", "this", "case", "security", "permissions", "will", "be", "ignored", "*", "(", "if", "they", "set", ")", ".", "@", "@", "-", "739", ",", "11", "+", "720", ",", "6", "@", "@", "*", "/", "public", "static", "final", "String", "IGNITE_ENABLE_FORCIBLE_NODE_KILL", "=", "\"", "IGNITE_ENABLE_FORCIBLE_NODE_KILL", "\"", ";", "/", "**", "*", "*", "/", "public", "static", "final", "String", "IGNITE_WAL_ARCHIVE_COMPACT_SKIP_DELTA_RECORD", "=", "\"", "IGNITE_WAL_ARCHIVE_COMPACT_SKIP_DELTA_RECORD", "\"", ";", "/", "**", "*", "Tasks", "stealing", "will", "be", "started", "if", "tasks", "queue", "size", "per", "data", "-", "streamer", "thread", "exceeds", "this", "threshold", ".", "*", "<", "p", ">", "@", "@", "-", "1023", ",", "26", "+", "999", ",", "4", "@", "@", "public", "static", "Properties", "snapshot", "(", ")", "{", "return", "sysProps", ";", "}", "/", "**", "*", "Does", "the", "same", "as", "{", "@", "link", "#", "snapshot", "(", ")}", "but", "filters", "out", "*", "possible", "sensitive", "user", "data", ".", "*", "*", "@", "return", "Snapshot", "of", "system", "properties", ".", "*", "/", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "public", "static", "Properties", "safeSnapshot", "(", ")", "{", "final", "Properties", "props", "=", "snapshot", "(", ");", "final", "Iterator", "<", "Map", ".", "Entry", "<", "Object", ",", "Object", ">", ">", "iter", "=", "props", ".", "entrySet", "(", ").", "iterator", "(", ");", "while", "(", "iter", ".", "hasNext", "(", "))", "{", "final", "Map", ".", "Entry", "entry", "=", "iter", ".", "next", "(", ");", "if", "(", "!", "PROPS_FILTER", ".", "apply", "(", "entry", ")", ")", "iter", ".", "remove", "(", ");", "}", "return", "props", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "108", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "ignite", ".", "internal", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "IllegalFormatException", ";", "import", "java", ".", "util", ".", "Map", ";", "/", "**", "*", "Set", "of", "classes", "represented", "as", "prefix", "tree", ".", "*", "{", "@", "code", "*", "}", "symbol", "is", "allowed", "and", "indicates", "that", "all", "packages", "and", "classes", "are", "included", ".", "*", "/", "public", "class", "ClassSet", "{", "/", "**", "Corresponds", "to", "{", "@", "code", "*", "}", "symbol", ".", "*", "/", "private", "static", "final", "Map", "<", "String", ",", "Node", ">", "ALL", "=", "Collections", ".", "emptyMap", "(", ");", "/", "**", "Root", ".", "*", "/", "private", "Node", "root", "=", "new", "Node", "(", ");", "/", "**", "*", "Adds", "class", "name", "to", "the", "set", ".", "*", "*", "@", "param", "clsName", "Class", "name", ".", "*", "/", "public", "void", "add", "(", "String", "clsName", ")", "{", "String", "[", "]", "tokens", "=", "clsName", ".", "split", "(", "\"\\", "\\.", "\")", ";", "Node", "cur", "=", "root", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "tokens", ".", "length", ";", "i", "+", "+)", "{", "if", "(", "cur", ".", "children", "=", "=", "ALL", ")", "return", ";", "if", "(", "tokens", "[", "i", "]", ".", "equals", "(", "\"*", "\")", ")", "{", "if", "(", "i", "!", "=", "tokens", ".", "length", "-", "1", ")", "throw", "new", "IllegalArgumentException", "(", "\"", "Incorrect", "class", "name", "format", ".", "\")", ";", "cur", ".", "children", "=", "ALL", ";", "return", ";", "}", "if", "(", "cur", ".", "children", "=", "=", "null", ")", "cur", ".", "children", "=", "new", "HashMap", "<", ">(", ");", "Node", "n", "=", "cur", ".", "children", ".", "get", "(", "tokens", "[", "i", "]", ");", "if", "(", "n", "=", "=", "null", ")", "{", "n", "=", "new", "Node", "(", ");", "cur", ".", "children", ".", "put", "(", "tokens", "[", "i", "]", ",", "n", ")", ";", "}", "cur", "=", "n", ";", "}", "}", "/", "**", "*", "@", "param", "clsName", "Class", "name", ".", "*", "/", "public", "boolean", "contains", "(", "String", "clsName", ")", "{", "String", "[", "]", "tokens", "=", "clsName", ".", "split", "(", "\"\\", "\\.", "\")", ";", "Node", "cur", "=", "root", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "tokens", ".", "length", ";", "i", "+", "+)", "{", "if", "(", "cur", ".", "children", "=", "=", "ALL", ")", "return", "true", ";", "if", "(", "cur", ".", "children", "=", "=", "null", ")", "return", "false", ";", "Node", "n", "=", "cur", ".", "children", ".", "get", "(", "tokens", "[", "i", "]", ");", "if", "(", "n", "=", "=", "null", ")", "return", "false", ";", "if", "(", "i", "=", "=", "tokens", ".", "length", "-", "1", ")", "return", "true", ";", "cur", "=", "n", ";", "}", "return", "false", ";", "}", "/", "**", "*", "/", "private", "static", "class", "Node", "{", "/", "**", "Children", ".", "*", "/", "private", "Map", "<", "String", ",", "Node", ">", "children", ";", "}", "}", "@", "@", "-", "91", ",", "6", "+", "91", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "X", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "S", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "plugin", ".", "PluginNotFoundException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "plugin", ".", "PluginProvider", ";", "import", "org", ".", "apache", ".", "ignite", ".", "thread", ".", "IgniteStripedThreadPoolExecutor", ";", "@", "@", "-", "441", ",", "7", "+", "442", ",", "8", "@", "@", "protected", "GridKernalContextImpl", "(", "ExecutorService", "qryExecSvc", ",", "ExecutorService", "schemaExecSvc", ",", "@", "Nullable", "Map", "<", "String", ",", "?", "extends", "ExecutorService", ">", "customExecSvcs", ",", "List", "<", "PluginProvider", ">", "plugins", "List", "<", "PluginProvider", ">", "plugins", ",", "IgnitePredicate", "<", "String", ">", "clsFilter", ")", "{", "assert", "grid", "!", "=", "null", ";", "assert", "cfg", "!", "=", "null", ";", "@", "@", "-", "467", ",", "7", "+", "469", ",", "7", "@", "@", "protected", "GridKernalContextImpl", "(", "this", ".", "schemaExecSvc", "=", "schemaExecSvc", ";", "this", ".", "customExecSvcs", "=", "customExecSvcs", ";", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "plugins", ")", ";", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "plugins", ",", "clsFilter", ")", ";", "try", "{", "spring", "=", "SPRING", ".", "create", "(", "false", ")", ";", "@", "@", "-", "17", ",", "10", "+", "17", ",", "14", "@", "@", "package", "org", ".", "apache", ".", "ignite", ".", "internal", ";", "import", "java", ".", "io", ".", "BufferedReader", ";", "import", "java", ".", "io", ".", "Externalizable", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "FileInputStream", ";", "import", "java", ".", "io", ".", "FileNotFoundException", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "InputStreamReader", ";", "import", "java", ".", "io", ".", "InvalidObjectException", ";", "import", "java", ".", "io", ".", "ObjectInput", ";", "import", "java", ".", "io", ".", "ObjectOutput", ";", "@", "@", "-", "259", ",", "6", "+", "263", ",", "8", "@", "@", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "IgniteVersionUtils", ".", "VER_STR", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "lifecycle", ".", "LifecycleEventType", ".", "AFTER_NODE_START", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "lifecycle", ".", "LifecycleEventType", ".", "BEFORE_NODE_START", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerUtils", ".", "CLS_NAMES_FILE", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerUtils", ".", "JDK_CLS_NAMES_FILE", ";", "/", "**", "*", "Ignite", "kernal", ".", "@", "@", "-", "834", ",", "7", "+", "840", ",", "8", "@", "@", "public", "void", "start", "(", "qryExecSvc", ",", "schemaExecSvc", ",", "customExecSvcs", ",", "plugins", "plugins", ",", "classNameFilter", "(", ")", ")", ";", "cfg", ".", "getMarshaller", "(", ").", "setContext", "(", "ctx", ".", "marshallerContext", "(", "))", ";", "@", "@", "-", "1684", ",", "6", "+", "1691", ",", "104", "@", "@", "private", "void", "startProcessor", "(", "GridProcessor", "proc", ")", "throws", "IgniteCheckedException", "{", "}", "}", "/", "**", "*", "Returns", "class", "name", "filter", "for", "marshaller", ".", "*", "@", "return", "Class", "name", "filter", "for", "marshaller", ".", "*", "/", "private", "IgnitePredicate", "<", "String", ">", "classNameFilter", "(", ")", "throws", "IgniteCheckedException", "{", "ClassSet", "whiteList", "=", "classWhiteList", "(", ");", "ClassSet", "blackList", "=", "classBlackList", "(", ");", "return", "new", "IgnitePredicate", "<", "String", ">", "()", "{", "@", "Override", "public", "boolean", "apply", "(", "String", "s", ")", "{", "/", "/", "Allows", "all", "primitive", "arrays", "and", "checks", "arrays", "'", "type", ".", "if", "(", "(", "blackList", "!", "=", "null", "|", "|", "whiteList", "!", "=", "null", ")", "&", "&", "s", ".", "charAt", "(", "0", ")", "=", "=", "'", "['", ")", "{", "if", "(", "s", ".", "charAt", "(", "1", ")", "=", "=", "'", "L", "'", "&", "&", "s", ".", "length", "(", ")", ">", "2", ")", "s", "=", "s", ".", "substring", "(", "2", ",", "s", ".", "length", "(", ")", "-", "1", ")", ";", "else", "return", "true", ";", "}", "return", "(", "blackList", "=", "=", "null", "|", "|", "!", "blackList", ".", "contains", "(", "s", ")", ")", "&", "&", "(", "whiteList", "=", "=", "null", "|", "|", "whiteList", ".", "contains", "(", "s", ")", ");", "}", "}", ";", "}", "/", "**", "*", "@", "return", "White", "list", "of", "classes", ".", "*", "/", "private", "ClassSet", "classWhiteList", "(", ")", "throws", "IgniteCheckedException", "{", "ClassSet", "clsSet", "=", "null", ";", "String", "fileName", "=", "IgniteSystemProperties", ".", "getString", "(", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_WHITELIST", ")", ";", "if", "(", "fileName", "!", "=", "null", ")", "{", "clsSet", "=", "new", "ClassSet", "(", ");", "addClassNames", "(", "JDK_CLS_NAMES_FILE", ",", "clsSet", ")", ";", "addClassNames", "(", "CLS_NAMES_FILE", ",", "clsSet", ")", ";", "addClassNames", "(", "fileName", ",", "clsSet", ")", ";", "}", "return", "clsSet", ";", "}", "/", "**", "*", "@", "return", "Black", "list", "of", "classes", ".", "*", "/", "private", "ClassSet", "classBlackList", "(", ")", "throws", "IgniteCheckedException", "{", "ClassSet", "clsSet", "=", "null", ";", "String", "blackListFileName", "=", "IgniteSystemProperties", ".", "getString", "(", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_BLACKLIST", ")", ";", "if", "(", "blackListFileName", "!", "=", "null", ")", "addClassNames", "(", "blackListFileName", ",", "clsSet", "=", "new", "ClassSet", "(", "))", ";", "return", "clsSet", ";", "}", "/", "**", "*", "Reads", "class", "names", "from", "resource", "referred", "by", "given", "system", "property", "name", "and", "returns", "set", "of", "classes", ".", "*", "@", "param", "fileName", "File", "name", "containing", "list", "of", "classes", ".", "*", "@", "param", "clsSet", "Class", "set", "for", "update", ".", "*", "@", "return", "Set", "of", "classes", ".", "*", "/", "private", "void", "addClassNames", "(", "String", "fileName", ",", "ClassSet", "clsSet", ")", "throws", "IgniteCheckedException", "{", "InputStream", "is", "=", "this", ".", "getClass", "(", ").", "getClassLoader", "(", ").", "getResourceAsStream", "(", "fileName", ")", ";", "if", "(", "is", "=", "=", "null", ")", "{", "try", "{", "is", "=", "new", "FileInputStream", "(", "new", "File", "(", "fileName", ")", ");", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "throw", "new", "IgniteCheckedException", "(", "\"", "File", "\"", "+", "fileName", "+", "\"", "not", "found", ".", "\")", ";", "}", "}", "try", "(", "BufferedReader", "reader", "=", "new", "BufferedReader", "(", "new", "InputStreamReader", "(", "is", ")", "))", "{", "String", "line", ";", "for", "(", "int", "i", "=", "1", ";", "(", "line", "=", "reader", ".", "readLine", "(", "))", "!", "=", "null", ";", "i", "+", "+)", "{", "String", "s", "=", "line", ".", "trim", "(", ");", "if", "(", "!", "s", ".", "isEmpty", "(", ")", "&", "&", "s", ".", "charAt", "(", "0", ")", "!", "=", "'", "#'", "&", "&", "s", ".", "charAt", "(", "0", ")", "!", "=", "'", "['", ")", "{", "try", "{", "clsSet", ".", "add", "(", "s", ")", ";", "}", "catch", "(", "IllegalArgumentException", "e", ")", "{", "throw", "new", "IgniteCheckedException", "(", "\"", "Exception", "occurred", "while", "reading", "list", "of", "classes", "\"", "\"", "[", "path", "=", "\"", "+", "fileName", "+", "\"", ",", "row", "=", "\"", "+", "i", "+", "\"", ",", "line", "=", "\"", "+", "s", "+", "'", "]'", ",", "e", ")", ";", "}", "}", "}", "}", "catch", "(", "IOException", "e", ")", "{", "throw", "new", "IgniteCheckedException", "(", "\"", "Exception", "occurred", "while", "reading", "and", "creating", "list", "of", "classes", "\"", "\"", "[", "path", "=", "\"", "+", "fileName", "+", "'", "]'", ",", "e", ")", ";", "}", "}", "/", "**", "*", "Add", "helper", ".", "*", "@", "@", "-", "50", ",", "24", "+", "50", ",", "22", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "future", ".", "GridFutureAdapter", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "CU", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerContext", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "plugin", ".", "PluginProvider", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "NotNull", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "Nullable", ";", "import", "org", ".", "jsr166", ".", "ConcurrentHashMap8", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "MarshallerPlatformIds", ".", "JAVA_ID", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerUtils", ".", "CLS_NAMES_FILE", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerUtils", ".", "JDK_CLS_NAMES_FILE", ";", "/", "**", "*", "Marshaller", "context", "implementation", ".", "*", "/", "public", "class", "MarshallerContextImpl", "implements", "MarshallerContext", "{", "/", "**", "*", "/", "private", "static", "final", "String", "CLS_NAMES_FILE", "=", "\"", "META", "-", "INF", "/", "classnames", ".", "properties", "\"", ";", "/", "**", "*", "/", "private", "static", "final", "String", "JDK_CLS_NAMES_FILE", "=", "\"", "META", "-", "INF", "/", "classnames", "-", "jdk", ".", "properties", "\"", ";", "/", "**", "*", "/", "private", "final", "Map", "<", "Integer", ",", "MappedName", ">", "sysTypesMap", "=", "new", "HashMap", "<", ">(", ");", "@", "@", "-", "89", ",", "6", "+", "87", ",", "12", "@", "@", "/", "**", "*", "/", "private", "boolean", "clientNode", ";", "/", "**", "Class", "name", "filter", ".", "*", "/", "private", "final", "IgnitePredicate", "<", "String", ">", "clsFilter", ";", "/", "**", "JDK", "marshaller", ".", "*", "/", "private", "final", "JdkMarshaller", "jdkMarsh", ";", "/", "**", "*", "Marshaller", "mapping", "file", "store", "directory", ".", "{", "@", "code", "null", "}", "used", "for", "standard", "folder", ",", "in", "this", "case", "folder", "is", "calculated", "*", "from", "work", "directory", ".", "Non", "null", "value", "may", "be", "used", "to", "setup", "custom", "directory", "from", "outside", "@", "@", "-", "100", ",", "7", "+", "104", ",", "10", "@", "@", "*", "*", "@", "param", "plugins", "Plugins", ".", "*", "/", "public", "MarshallerContextImpl", "(", "@", "Nullable", "Collection", "<", "PluginProvider", ">", "plugins", ")", "{", "public", "MarshallerContextImpl", "(", "@", "Nullable", "Collection", "<", "PluginProvider", ">", "plugins", ",", "IgnitePredicate", "<", "String", ">", "clsFilter", ")", "{", "this", ".", "clsFilter", "=", "clsFilter", ";", "this", ".", "jdkMarsh", "=", "new", "JdkMarshaller", "(", "clsFilter", ")", ";", "initializeCaches", "(", ");", "try", "{", "@", "@", "-", "330", ",", "7", "+", "337", ",", "7", "@", "@", "public", "void", "onMappingAccepted", "(", "final", "MarshallerMappingItem", "item", ")", "{", "if", "(", "clsName", "=", "=", "null", ")", "throw", "new", "ClassNotFoundException", "(", "\"", "Unknown", "type", "ID", ":", "\"", "+", "typeId", ")", ";", "return", "U", ".", "forName", "(", "clsName", ",", "ldr", ")", ";", "return", "U", ".", "forName", "(", "clsName", ",", "ldr", ",", "clsFilter", ")", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "@", "-", "385", ",", "6", "+", "392", ",", "16", "@", "@", "public", "void", "onMappingAccepted", "(", "final", "MarshallerMappingItem", "item", ")", "{", "return", "clsName", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "IgnitePredicate", "<", "String", ">", "classNameFilter", "(", ")", "{", "return", "clsFilter", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "JdkMarshaller", "jdkMarshaller", "(", ")", "{", "return", "jdkMarsh", ";", "}", "/", "**", "*", "@", "param", "platformId", "Platform", "id", ".", "*", "@", "param", "typeId", "Type", "id", ".", "@", "@", "-", "117", ",", "14", "+", "117", ",", "14", "@", "@", "public", "GridClientOptimizedMarshaller", "(", "boolean", "requireSer", ",", "int", "poolSize", ")", "throws", "IO", "private", "static", "class", "ClientMarshallerContext", "extends", "MarshallerContextImpl", "{", "/", "**", "*", "/", "public", "ClientMarshallerContext", "(", ")", "{", "super", "(", "null", ")", ";", "super", "(", "null", ",", "null", ")", ";", "}", "/", "**", "*", "@", "param", "plugins", "Plugins", ".", "*", "/", "public", "ClientMarshallerContext", "(", "@", "Nullable", "List", "<", "PluginProvider", ">", "plugins", ")", "{", "super", "(", "plugins", ")", ";", "super", "(", "plugins", ",", "null", ")", ";", "}", "}", "}", "@", "@", "-", "33", ",", "7", "+", "33", ",", "6", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "GridUnsafe", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "F", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerContext", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "MarshallerPlatformIds", ".", "JAVA_ID", ";", "@", "@", "-", "152", ",", "9", "+", "151", ",", "6", "@", "@", "/", "**", "UTF", "-", "8", "character", "name", ".", "*", "/", "static", "final", "Charset", "UTF_8", "=", "Charset", ".", "forName", "(", "\"", "UTF", "-", "8", "\"", ");", "/", "**", "JDK", "marshaller", ".", "*", "/", "static", "final", "JdkMarshaller", "JDK_MARSH", "=", "new", "JdkMarshaller", "(", ");", "static", "{", "long", "mapOff", ";", "@", "@", "-", "70", ",", "7", "+", "70", ",", "6", "@", "@", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "INT", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "INT_ARR", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "JDK", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "JDK_MARSH", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "LINKED_HASH_MAP", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "LINKED_HASH_SET", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "LINKED_LIST", ";", "@", "@", "-", "227", ",", "7", "+", "226", ",", "7", "@", "@", "private", "Object", "readObject0", "(", ")", "throws", "ClassNotFoundException", ",", "IOException", "{", "case", "JDK", ":", "try", "{", "return", "JDK_MARSH", ".", "unmarshal", "(", "this", ",", "clsLdr", ")", ";", "return", "ctx", ".", "jdkMarshaller", "(", ").", "unmarshal", "(", "this", ",", "clsLdr", ")", ";", "}", "catch", "(", "IgniteCheckedException", "e", ")", "{", "IOException", "ioEx", "=", "e", ".", "getCause", "(", "IOException", ".", "class", ")", ";", "@", "@", "-", "338", ",", "7", "+", "337", ",", "7", "@", "@", "private", "Object", "readObject0", "(", ")", "throws", "ClassNotFoundException", ",", "IOException", "{", "int", "typeId", "=", "readInt", "(", ");", "OptimizedClassDescriptor", "desc", "=", "typeId", "=", "=", "0", "?", "classDescriptor", "(", "clsMap", ",", "U", ".", "forName", "(", "readUTF", "(", "),", "clsLdr", ")", ",", "ctx", ",", "mapper", ")", ":", "classDescriptor", "(", "clsMap", ",", "U", ".", "forName", "(", "readUTF", "(", "),", "clsLdr", ",", "ctx", ".", "classNameFilter", "(", "))", ",", "ctx", ",", "mapper", ")", ":", "classDescriptor", "(", "clsMap", ",", "typeId", ",", "clsLdr", ",", "ctx", ",", "mapper", ")", ";", "curCls", "=", "desc", ".", "describedClass", "(", ");", "@", "@", "-", "47", ",", "7", "+", "47", ",", "6", "@", "@", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "HANDLE", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "JDK", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "JDK_MARSH", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "NULL", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "classDescriptor", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshallerUtils", ".", "getBoolean", ";", "@", "@", "-", "185", ",", "7", "+", "184", ",", "7", "@", "@", "private", "void", "writeObject0", "(", "Object", "obj", ")", "throws", "IOException", "{", "writeByte", "(", "JDK", ")", ";", "try", "{", "JDK_MARSH", ".", "marshal", "(", "obj", ",", "this", ")", ";", "ctx", ".", "jdkMarshaller", "(", ").", "marshal", "(", "obj", ",", "this", ")", ";", "}", "catch", "(", "IgniteCheckedException", "e", ")", "{", "IOException", "ioEx", "=", "e", ".", "getCause", "(", "IOException", ".", "class", ")", ";", "@", "@", "-", "137", ",", "7", "+", "137", ",", "7", "@", "@", "throw", "new", "IllegalStateException", "(", "\"", "Must", "not", "fail", "on", "empty", "providers", "list", ".", "\",", "e", ")", ";", "}", "this", ".", "marshallerCtx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "this", ".", "marshallerCtx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "this", ".", "cfg", "=", "prepareIgniteConfiguration", "(", ");", "/", "/", "Fake", "folder", "provided", "to", "perform", "processor", "startup", "on", "empty", "folder", ".", "@", "@", "-", "857", ",", "7", "+", "857", ",", "7", "@", "@", "public", "static", "GridBinaryMarshaller", "marshaller", "(", ")", "{", "BinaryMarshaller", "marsh", "=", "new", "BinaryMarshaller", "(", ");", "marsh", ".", "setContext", "(", "new", "MarshallerContextImpl", "(", "null", ")", ");", "marsh", ".", "setContext", "(", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ");", "ctx", ".", "configure", "(", "marsh", ",", "new", "IgniteConfiguration", "(", "))", ";", "@", "@", "-", "72", ",", "7", "+", "72", ",", "7", "@", "@", "private", "static", "final", "Charset", "UTF_8", "=", "Charset", ".", "forName", "(", "\"", "UTF", "-", "8", "\"", ");", "/", "**", "JDK", "marshaller", ".", "*", "/", "private", "final", "Marshaller", "jdkMarshaller", "=", "new", "JdkMarshaller", "(", ");", "private", "final", "Marshaller", "marsh", ";", "/", "**", "Router", "client", "flag", ".", "*", "/", "private", "final", "boolean", "routerClient", ";", "@", "@", "-", "81", ",", "7", "+", "81", ",", "16", "@", "@", "*", "@", "param", "routerClient", "Router", "client", "flag", ".", "*", "/", "public", "GridTcpRestParser", "(", "boolean", "routerClient", ")", "{", "this", "(", "routerClient", ",", "new", "JdkMarshaller", "(", "))", ";", "}", "/", "**", "*", "@", "param", "routerClient", "Router", "client", "flag", ".", "*", "@", "param", "marsh", "Marshaller", ".", "*", "/", "public", "GridTcpRestParser", "(", "boolean", "routerClient", ",", "Marshaller", "marsh", ")", "{", "this", ".", "routerClient", "=", "routerClient", ";", "this", ".", "marsh", "=", "marsh", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "@", "-", "735", ",", "7", "+", "744", ",", "7", "@", "@", "private", "Object", "decodeObj", "(", "short", "flags", ",", "byte", "[", "]", "bytes", ")", "throws", "IgniteCheckedExceptio", "assert", "bytes", "!", "=", "null", ";", "if", "(", "(", "flags", "&", "SERIALIZED_FLAG", ")", "!", "=", "0", ")", "return", "U", ".", "unmarshal", "(", "jdkMarshaller", ",", "bytes", ",", "null", ")", ";", "return", "U", ".", "unmarshal", "(", "marsh", ",", "bytes", ",", "null", ")", ";", "int", "masked", "=", "flags", "&", "0xff00", ";", "@", "@", "-", "817", ",", "7", "+", "826", ",", "7", "@", "@", "else", "if", "(", "obj", "instanceof", "byte", "[", "])", "{", "flags", "|", "=", "BYTE_ARR_FLAG", ";", "}", "else", "{", "U", ".", "marshal", "(", "jdkMarshaller", ",", "obj", ",", "out", ")", ";", "U", ".", "marshal", "(", "marsh", ",", "obj", ",", "out", ")", ";", "flags", "|", "=", "SERIALIZED_FLAG", ";", "}", "@", "@", "-", "44", ",", "27", "+", "44", ",", "19", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioParser", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioServer", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioServerListener", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioSession", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "ssl", ".", "GridNioSslFilter", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "Marshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "plugin", ".", "PluginProvider", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "IgnitePortProtocol", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "Nullable", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioSessionMetaKey", ".", "MARSHALLER", ";", "/", "**", "*", "TCP", "binary", "protocol", "implementation", ".", "*", "/", "public", "class", "GridTcpRestProtocol", "extends", "GridRestProtocolAdapter", "{", "/", "**", "Server", ".", "*", "/", "private", "GridNioServer", "<", "GridClientMessage", ">", "srv", ";", "/", "**", "JDK", "marshaller", ".", "*", "/", "private", "final", "Marshaller", "jdkMarshaller", "=", "new", "JdkMarshaller", "(", ");", "/", "**", "NIO", "server", "listener", ".", "*", "/", "private", "GridTcpRestNioListener", "lsnr", ";", "@", "@", "-", "73", ",", "27", "+", "65", ",", "6", "@", "@", "public", "GridTcpRestProtocol", "(", "GridKernalContext", "ctx", ")", "{", "super", "(", "ctx", ")", ";", "}", "/", "**", "*", "@", "return", "JDK", "marshaller", ".", "*", "/", "Marshaller", "jdkMarshaller", "(", ")", "{", "return", "jdkMarshaller", ";", "}", "/", "**", "*", "Returns", "marshaller", ".", "*", "*", "@", "param", "ses", "Session", ".", "*", "@", "return", "Marshaller", ".", "*", "/", "GridClientMarshaller", "marshaller", "(", "GridNioSession", "ses", ")", "{", "GridClientMarshaller", "marsh", "=", "ses", ".", "meta", "(", "MARSHALLER", ".", "ordinal", "(", "))", ";", "assert", "marsh", "!", "=", "null", ";", "return", "marsh", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "String", "name", "(", ")", "{", "return", "\"", "TCP", "binary", "\"", ";", "@", "@", "-", "110", ",", "7", "+", "81", ",", "7", "@", "@", "GridClientMarshaller", "marshaller", "(", "GridNioSession", "ses", ")", "{", "lsnr", "=", "new", "GridTcpRestNioListener", "(", "log", ",", "this", ",", "hnd", ",", "ctx", ")", ";", "GridNioParser", "parser", "=", "new", "GridTcpRestParser", "(", "false", ")", ";", "GridNioParser", "parser", "=", "new", "GridTcpRestParser", "(", "false", ",", "ctx", ".", "marshallerContext", "(", ").", "jdkMarshaller", "(", "))", ";", "try", "{", "host", "=", "resolveRestTcpHost", "(", "ctx", ".", "config", "(", "))", ";", "@", "@", "-", "8532", ",", "6", "+", "8532", ",", "18", "@", "@", "public", "static", "long", "safeAbs", "(", "long", "i", ")", "{", "*", "@", "throws", "ClassNotFoundException", "If", "class", "not", "found", ".", "*", "/", "public", "static", "Class", "<", "?>", "forName", "(", "String", "clsName", ",", "@", "Nullable", "ClassLoader", "ldr", ")", "throws", "ClassNotFoundException", "{", "return", "U", ".", "forName", "(", "clsName", ",", "ldr", ",", "null", ")", ";", "}", "/", "**", "*", "Gets", "class", "for", "provided", "name", ".", "Accepts", "primitive", "types", "names", ".", "*", "*", "@", "param", "clsName", "Class", "name", ".", "*", "@", "param", "ldr", "Class", "loader", ".", "*", "@", "return", "Class", ".", "*", "@", "throws", "ClassNotFoundException", "If", "class", "not", "found", ".", "*", "/", "public", "static", "Class", "<", "?>", "forName", "(", "String", "clsName", ",", "@", "Nullable", "ClassLoader", "ldr", ",", "IgnitePredicate", "<", "String", ">", "clsFilter", ")", "throws", "ClassNotFoundException", "{", "assert", "clsName", "!", "=", "null", ";", "Class", "<", "?>", "cls", "=", "primitiveMap", ".", "get", "(", "clsName", ")", ";", "@", "@", "-", "8558", ",", "6", "+", "8570", ",", "9", "@", "@", "public", "static", "long", "safeAbs", "(", "long", "i", ")", "{", "cls", "=", "ldrMap", ".", "get", "(", "clsName", ")", ";", "if", "(", "cls", "=", "=", "null", ")", "{", "if", "(", "clsFilter", "!", "=", "null", "&", "&", "!", "clsFilter", ".", "apply", "(", "clsName", ")", ")", "throw", "new", "RuntimeException", "(", "\"", "Deserialization", "of", "class", "\"", "+", "clsName", "+", "\"", "is", "disallowed", ".", "\")", ";", "Class", "old", "=", "ldrMap", ".", "putIfAbsent", "(", "clsName", ",", "cls", "=", "Class", ".", "forName", "(", "clsName", ",", "true", ",", "ldr", ")", ");", "if", "(", "old", "!", "=", "null", ")", "@", "@", "-", "18", ",", "6", "+", "18", ",", "8", "@", "@", "package", "org", ".", "apache", ".", "ignite", ".", "marshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteCheckedException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "/", "**", "*", "Marshaller", "context", ".", "@", "@", "-", "83", ",", "4", "+", "85", ",", "16", "@", "@", "*", "@", "return", "{", "@", "code", "true", "}", "if", "the", "type", "is", "a", "system", "one", ",", "{", "@", "code", "false", "}", "otherwise", ".", "*", "/", "public", "boolean", "isSystemType", "(", "String", "typeName", ")", ";", "/", "**", "*", "Returns", "class", "name", "filter", ".", "*", "*", "@", "return", "Class", "name", "filter", ".", "*", "/", "public", "IgnitePredicate", "<", "String", ">", "classNameFilter", "(", ");", "/", "**", "*", "Returns", "JDK", "marshaller", "instance", ".", "*", "/", "public", "JdkMarshaller", "jdkMarshaller", "(", ");", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "25", ",", "6", "+", "25", ",", "12", "@", "@", "*", "Utility", "marshaller", "methods", ".", "*", "/", "public", "class", "MarshallerUtils", "{", "/", "**", "Jdk", "class", "names", "file", ".", "*", "/", "public", "static", "final", "String", "JDK_CLS_NAMES_FILE", "=", "\"", "META", "-", "INF", "/", "classnames", "-", "jdk", ".", "properties", "\"", ";", "/", "**", "Class", "names", "file", ".", "*", "/", "public", "static", "final", "String", "CLS_NAMES_FILE", "=", "\"", "META", "-", "INF", "/", "classnames", ".", "properties", "\"", ";", "/", "**", "Job", "sender", "node", "version", ".", "*", "/", "private", "static", "final", "ThreadLocal", "<", "IgniteProductVersion", ">", "JOB_SND_NODE_VER", "=", "new", "ThreadLocal", "<", ">(", ");", "@", "@", "-", "27", ",", "6", "+", "27", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "io", ".", "GridByteArrayOutputStream", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "S", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "AbstractNodeNameAwareMarshaller", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "Nullable", ";", "@", "@", "-", "67", ",", "6", "+", "68", ",", "23", "@", "@", "*", "For", "information", "about", "Spring", "framework", "visit", "<", "a", "href", "=", "\"", "http", ":", "//", "www", ".", "springframework", ".", "org", "/", "\">", "www", ".", "springframework", ".", "org", "<", "/", "a", ">", "*", "/", "public", "class", "JdkMarshaller", "extends", "AbstractNodeNameAwareMarshaller", "{", "/", "**", "Class", "name", "filter", ".", "*", "/", "private", "final", "IgnitePredicate", "<", "String", ">", "clsFilter", ";", "/", "**", "*", "Default", "constructor", ".", "*", "/", "public", "JdkMarshaller", "(", ")", "{", "this", "(", "null", ")", ";", "}", "/", "**", "*", "@", "param", "clsFilter", "Class", "name", "filter", ".", "*", "/", "public", "JdkMarshaller", "(", "IgnitePredicate", "<", "String", ">", "clsFilter", ")", "{", "this", ".", "clsFilter", "=", "clsFilter", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "protected", "void", "marshal0", "(", "@", "Nullable", "Object", "obj", ",", "OutputStream", "out", ")", "throws", "IgniteCheckedException", "{", "assert", "out", "!", "=", "null", ";", "@", "@", "-", "116", ",", "7", "+", "134", ",", "7", "@", "@", "ObjectInputStream", "objIn", "=", "null", ";", "try", "{", "objIn", "=", "new", "JdkMarshallerObjectInputStream", "(", "new", "JdkMarshallerInputStreamWrapper", "(", "in", ")", ",", "clsLdr", ")", ";", "objIn", "=", "new", "JdkMarshallerObjectInputStream", "(", "new", "JdkMarshallerInputStreamWrapper", "(", "in", ")", ",", "clsLdr", ",", "clsFilter", ")", ";", "return", "(", "T", ")", "objIn", ".", "readObject", "(", ");", "}", "@", "@", "-", "22", ",", "6", "+", "22", ",", "7", "@", "@", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "io", ".", "ObjectStreamClass", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "/", "**", "*", "This", "class", "defines", "custom", "JDK", "object", "input", "stream", ".", "@", "@", "-", "30", ",", "17", "+", "31", ",", "21", "@", "@", "/", "**", "*", "/", "private", "final", "ClassLoader", "clsLdr", ";", "/", "**", "Class", "name", "filter", ".", "*", "/", "private", "final", "IgnitePredicate", "<", "String", ">", "clsFilter", ";", "/", "**", "*", "@", "param", "in", "Parent", "input", "stream", ".", "*", "@", "param", "clsLdr", "Custom", "class", "loader", ".", "*", "@", "throws", "IOException", "If", "initialization", "failed", ".", "*", "/", "JdkMarshallerObjectInputStream", "(", "InputStream", "in", ",", "ClassLoader", "clsLdr", ")", "throws", "IOException", "{", "JdkMarshallerObjectInputStream", "(", "InputStream", "in", ",", "ClassLoader", "clsLdr", ",", "IgnitePredicate", "<", "String", ">", "clsFilter", ")", "throws", "IOException", "{", "super", "(", "in", ")", ";", "assert", "clsLdr", "!", "=", "null", ";", "this", ".", "clsLdr", "=", "clsLdr", ";", "this", ".", "clsFilter", "=", "clsFilter", ";", "enableResolveObject", "(", "true", ")", ";", "}", "@", "@", "-", "51", ",", "7", "+", "56", ",", "7", "@", "@", "/", "/", "Must", "have", "'", "Class", ".", "forName", "(", ")'", "instead", "of", "clsLoader", ".", "loadClass", "(", ")", "/", "/", "due", "to", "weird", "ClassNotFoundExceptions", "for", "arrays", "of", "classes", "/", "/", "in", "certain", "cases", ".", "return", "U", ".", "forName", "(", "desc", ".", "getName", "(", "),", "clsLdr", ")", ";", "return", "U", ".", "forName", "(", "desc", ".", "getName", "(", "),", "clsLdr", ",", "clsFilter", ")", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "@", "-", "55", ",", "6", "+", "55", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "configuration", ".", "AddressResolver", ";", "import", "org", ".", "apache", ".", "ignite", ".", "configuration", ".", "IgniteConfiguration", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "IgniteInterruptedCheckedException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "IgniteKernal", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "tostring", ".", "GridToStringExclude", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "F", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "X", ";", "@", "@", "-", "333", ",", "7", "+", "334", ",", "7", "@", "@", "protected", "volatile", "long", "gridStartTime", ";", "/", "**", "Marshaller", ".", "*", "/", "private", "final", "Marshaller", "marsh", "=", "new", "JdkMarshaller", "(", ");", "private", "Marshaller", "marsh", ";", "/", "**", "Statistics", ".", "*", "/", "protected", "final", "TcpDiscoveryStatistics", "stats", "=", "new", "TcpDiscoveryStatistics", "(", ");", "@", "@", "-", "551", ",", "6", "+", "552", ",", "11", "@", "@", "public", "void", "setClientReconnectDisabled", "(", "boolean", "clientReconnectDisabled", ")", "{", "if", "(", "ignite", "!", "=", "null", ")", "{", "setLocalAddress", "(", "ignite", ".", "configuration", "(", ").", "getLocalHost", "(", "))", ";", "setAddressResolver", "(", "ignite", ".", "configuration", "(", ").", "getAddressResolver", "(", "))", ";", "if", "(", "ignite", "instanceof", "IgniteKernal", ")", "/", "/", "IgniteMock", "instance", "can", "be", "injected", "from", "tests", ".", "marsh", "=", "(", "(", "IgniteKernal", ")", "ignite", ")", ".", "context", "(", ").", "marshallerContext", "(", ").", "jdkMarshaller", "(", ");", "else", "marsh", "=", "new", "JdkMarshaller", "(", ");", "}", "}", "@", "@", "-", "46", ",", "7", "+", "46", ",", "7", "@", "@", "private", "IgniteDataStreamer", "<", "K", ",", "V", ">", "stmr", ";", "/", "**", "Ignite", ".", "*", "/", "private", "Ignite", "ignite", ";", "protected", "Ignite", "ignite", ";", "/", "**", "*", "Empty", "constructor", ".", "@", "@", "-", "24", ",", "6", "+", "24", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteDataStreamer", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteLogger", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "IgniteKernal", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridBufferedParser", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridDelimitedParser", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "nio", ".", "GridNioCodecFilter", ";", "@", "@", "-", "38", ",", "6", "+", "39", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "Marshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "StreamAdapter", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "StreamTupleExtractor", ";", "import", "org", ".", "jetbrains", ".", "annotations", ".", "Nullable", ";", "@", "@", "-", "217", ",", "7", "+", "219", ",", "7", "@", "@", "public", "void", "stop", "(", ")", "{", "/", "**", "*", "Converts", "message", "to", "Java", "object", "using", "Jdk", "marshaller", ".", "*", "/", "private", "static", "class", "DefaultConverter", "<", "T", ">", "implements", "SocketMessageConverter", "<", "T", ">", "{", "private", "class", "DefaultConverter", "<", "T", ">", "implements", "SocketMessageConverter", "<", "T", ">", "{", "/", "**", "Marshaller", ".", "*", "/", "private", "final", "Marshaller", "marsh", ";", "@", "@", "-", "227", ",", "7", "+", "229", ",", "9", "@", "@", "public", "void", "stop", "(", ")", "{", "*", "@", "param", "igniteInstanceName", "Ignite", "instance", "name", ".", "*", "/", "private", "DefaultConverter", "(", "@", "Nullable", "String", "igniteInstanceName", ")", "{", "marsh", "=", "MarshallerUtils", ".", "jdkMarshaller", "(", "igniteInstanceName", ")", ";", "marsh", "=", "new", "JdkMarshaller", "(", "((", "IgniteKernal", ")", "ignite", ")", ".", "context", "(", ").", "marshallerContext", "(", ").", "classNameFilter", "(", "))", ";", "MarshallerUtils", ".", "setNodeName", "(", "marsh", ",", "igniteInstanceName", ")", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "@", "-", "0", ",", "0", "+", "1", ",", "18", "@", "@", "#", "#", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "#", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "#", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "#", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "#", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "#", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "#", "#", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "#", "#", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "#", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "#", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "#", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "#", "limitations", "under", "the", "License", ".", "#", "#", "Intentionally", "empty", ".", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "0", ",", "0", "+", "1", ",", "19", "@", "@", "#", "#", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "#", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "#", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "#", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "#", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "#", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "#", "#", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "#", "#", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "#", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "#", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "#", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "#", "limitations", "under", "the", "License", ".", "#", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "DiscoveryUnmarshalVulnerabilityTest", "$", "Exploit", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "socket", ".", "SocketStreamerUnmarshalVulnerabilityTest", "$", "Exploit", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "0", ",", "0", "+", "1", ",", "71", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "ignite", ".", "internal", ";", "import", "junit", ".", "framework", ".", "TestCase", ";", "/", "**", "*", "Tests", "for", "{", "@", "link", "ClassSet", "}", "class", ".", "*", "/", "public", "class", "ClassSetTest", "extends", "TestCase", "{", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testAddAndContains", "(", ")", "throws", "Exception", "{", "ClassSet", "clsSet", "=", "new", "ClassSet", "(", ");", "clsSet", ".", "add", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", ");", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", "))", ";", "assertFalse", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "NotIgnite", "\"", "))", ";", "assertFalse", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "Ignite", "\"", "))", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testAddWithMaskAndContains", "(", ")", "throws", "Exception", "{", "ClassSet", "clsSet", "=", "new", "ClassSet", "(", ");", "clsSet", ".", "add", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "*\"", ");", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", "))", ";", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "NotIgnite", "\"", "))", ";", "assertFalse", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "Ignite", "\"", "))", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testReduceOnAddWithMask", "(", ")", "throws", "Exception", "{", "ClassSet", "clsSet", "=", "new", "ClassSet", "(", ");", "clsSet", ".", "add", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", ");", "clsSet", ".", "add", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignition", "\"", ");", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", "))", ";", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignition", "\"", "))", ";", "assertFalse", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "NotIgnite", "\"", "))", ";", "clsSet", ".", "add", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "*\"", ");", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignite", "\"", "))", ";", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "Ignition", "\"", "))", ";", "assertTrue", "(", "clsSet", ".", "contains", "(", "\"", "org", ".", "apache", ".", "ignite", ".", "NotIgnite", "\"", "))", ";", "}", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "140", ",", "7", "+", "140", ",", "7", "@", "@", "public", "void", "testMultithreadedUpdate", "(", ")", "throws", "Exception", "{", "public", "void", "executeTest", "(", "GridTestLog4jLogger", "log", ",", "GridKernalContext", "ctx", ")", "throws", "Exception", "{", "counter", ".", "incrementAndGet", "(", ");", "MarshallerContextImpl", "marshallerContext", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "marshallerContext", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "marshallerContext", ".", "onMarshallerProcessorStarted", "(", "ctx", ",", "null", ")", ";", "MarshallerMappingItem", "item", "=", "new", "MarshallerMappingItem", "(", "JAVA_ID", ",", "1", ",", "String", ".", "class", ".", "getName", "(", "))", ";", "@", "@", "-", "29", ",", "8", "+", "29", ",", "10", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "binary", ".", "Binarylizable", ";", "import", "org", ".", "apache", ".", "ignite", ".", "configuration", ".", "IgniteConfiguration", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "IgniteUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "logger", ".", "NullLogger", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerContext", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "testframework", ".", "junits", ".", "common", ".", "GridCommonAbstractTest", ";", "/", "**", "@", "@", "-", "122", ",", "6", "+", "124", ",", "16", "@", "@", "public", "void", "testObjectExchange", "(", ")", "throws", "Exception", "{", "@", "Override", "public", "boolean", "isSystemType", "(", "String", "typeName", ")", "{", "return", "false", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "IgnitePredicate", "<", "String", ">", "classNameFilter", "(", ")", "{", "return", "null", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "JdkMarshaller", "jdkMarshaller", "(", ")", "{", "return", "new", "JdkMarshaller", "(", ");", "}", "}", "/", "**", "@", "@", "-", "31", ",", "9", "+", "31", ",", "10", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "processors", ".", "cache", ".", "distributed", ".", "dht", ".", "GridDhtCacheEntry", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "processors", ".", "cache", ".", "distributed", ".", "near", ".", "GridNearCacheEntry", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgnitePredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "Marshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "MarshallerContext", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "marshaller", ".", "optimized", ".", "OptimizedMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "TcpDiscoverySpi", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "ipfinder", ".", "TcpDiscoveryIpFinder", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "ipfinder", ".", "vm", ".", "TcpDiscoveryVmIpFinder", ";", "@", "@", "-", "166", ",", "6", "+", "167", ",", "14", "@", "@", "protected", "Marshaller", "createMarshaller", "(", ")", "throws", "IgniteCheckedException", "{", "@", "Override", "public", "boolean", "isSystemType", "(", "String", "typeName", ")", "{", "return", "false", ";", "}", "@", "Override", "public", "IgnitePredicate", "<", "String", ">", "classNameFilter", "(", ")", "{", "return", "null", ";", "}", "@", "Override", "public", "JdkMarshaller", "jdkMarshaller", "(", ")", "{", "return", "new", "JdkMarshaller", "(", ");", "}", "}", ");", "return", "marsh", ";", "@", "@", "-", "72", ",", "7", "+", "72", ",", "7", "@", "@", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testClassName", "(", ")", "throws", "Exception", "{", "MarshallerContextImpl", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "marshCtx", ".", "onMarshallerProcessorStarted", "(", "ctx", ",", "null", ")", ";", "@", "@", "-", "99", ",", "7", "+", "99", ",", "7", "@", "@", "public", "void", "testClassName", "(", ")", "throws", "Exception", "{", "public", "void", "testMultiplatformMappingsCollecting", "(", ")", "throws", "Exception", "{", "String", "nonJavaClassName", "=", "\"", "random", ".", "platform", ".", "Mapping", "\"", ";", "MarshallerContextImpl", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "marshCtx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "marshCtx", ".", "onMarshallerProcessorStarted", "(", "ctx", ",", "null", ")", ";", "@", "@", "-", "157", ",", "7", "+", "157", ",", "7", "@", "@", "public", "void", "testMultiplatformMappingsDistributing", "(", ")", "throws", "Exception", "{", "*", "/", "public", "void", "testOnUpdated", "(", ")", "throws", "Exception", "{", "File", "workDir", "=", "U", ".", "resolveWorkDirectory", "(", "U", ".", "defaultWorkDirectory", "(", "),", "\"", "marshaller", "\"", ",", "false", ")", ";", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "ctx", ".", "onMarshallerProcessorStarted", "(", "this", ".", "ctx", ",", "null", ")", ";", "@", "@", "-", "188", ",", "7", "+", "188", ",", "7", "@", "@", "public", "void", "testOnUpdated", "(", ")", "throws", "Exception", "{", "*", "if", "platform", "ids", "passed", "to", "marshaller", "cache", "were", "not", "sequential", "(", "like", "0", ",", "2", ")", ".", "*", "/", "public", "void", "testCacheStructure0", "(", ")", "throws", "Exception", "{", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "ctx", ".", "onMarshallerProcessorStarted", "(", "this", ".", "ctx", ",", "null", ")", ";", "@", "@", "-", "221", ",", "7", "+", "221", ",", "7", "@", "@", "public", "void", "testCacheStructure0", "(", ")", "throws", "Exception", "{", "*", "if", "platform", "ids", "passed", "to", "marshaller", "context", "were", "sequential", ".", "*", "/", "public", "void", "testCacheStructure1", "(", ")", "throws", "Exception", "{", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ")", ";", "MarshallerContextImpl", "ctx", "=", "new", "MarshallerContextImpl", "(", "null", ",", "null", ")", ";", "ctx", ".", "onMarshallerProcessorStarted", "(", "this", ".", "ctx", ",", "null", ")", ";", "@", "@", "-", "43", ",", "7", "+", "43", ",", "7", "@", "@", "*", "@", "param", "excluded", "Excluded", "classes", ".", "*", "/", "public", "MarshallerContextTestImpl", "(", "@", "Nullable", "List", "<", "PluginProvider", ">", "plugins", ",", "Collection", "<", "String", ">", "excluded", ")", "{", "super", "(", "plugins", ")", ";", "super", "(", "plugins", ",", "null", ")", ";", "this", ".", "excluded", "=", "excluded", ";", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "180", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ";", "import", "java", ".", "io", ".", "BufferedOutputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "io", ".", "Serializable", ";", "import", "java", ".", "net", ".", "InetAddress", ";", "import", "java", ".", "net", ".", "Socket", ";", "import", "java", ".", "util", ".", "concurrent", ".", "atomic", ".", "AtomicBoolean", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteCheckedException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "IgniteUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "lang", ".", "GridAbsPredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "testframework", ".", "GridTestUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "testframework", ".", "junits", ".", "common", ".", "GridCommonAbstractTest", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_BLACKLIST", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_WHITELIST", ";", "/", "**", "*", "Tests", "for", "whitelist", "and", "blacklist", "ot", "avoiding", "deserialization", "vulnerability", ".", "*", "/", "public", "class", "DiscoveryUnmarshalVulnerabilityTest", "extends", "GridCommonAbstractTest", "{", "/", "**", "Marshaller", ".", "*", "/", "private", "static", "final", "JdkMarshaller", "MARSH", "=", "new", "JdkMarshaller", "(", ");", "/", "**", "Shared", "value", ".", "*", "/", "private", "static", "final", "AtomicBoolean", "SHARED", "=", "new", "AtomicBoolean", "(", ");", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "protected", "void", "beforeTest", "(", ")", "throws", "Exception", "{", "super", ".", "beforeTest", "(", ");", "SHARED", ".", "set", "(", "false", ")", ";", "System", ".", "clearProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ")", ";", "System", ".", "clearProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ")", ";", "IgniteUtils", ".", "clearClassCache", "(", ");", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testNoLists", "(", ")", "throws", "Exception", "{", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testWhiteListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testWhiteListExcluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_excluded", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBlackListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBlackListExcluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_excluded", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBothListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "param", "positive", "Positive", ".", "*", "/", "private", "void", "testExploit", "(", "boolean", "positive", ")", "throws", "Exception", "{", "try", "{", "startGrid", "(", ");", "attack", "(", "marshal", "(", "new", "Exploit", "(", "))", ");", "boolean", "res", "=", "GridTestUtils", ".", "waitForCondition", "(", "new", "GridAbsPredicate", "(", ")", "{", "@", "Override", "public", "boolean", "apply", "(", ")", "{", "return", "SHARED", ".", "get", "(", ");", "}", "}", ",", "3000L", ")", ";", "if", "(", "positive", ")", "assertTrue", "(", "res", ")", ";", "else", "assertFalse", "(", "res", ")", ";", "}", "finally", "{", "stopAllGrids", "(", ");", "}", "}", "/", "**", "*", "@", "param", "obj", "Object", ".", "*", "/", "private", "static", "byte", "[", "]", "marshal", "(", "Object", "obj", ")", "throws", "IgniteCheckedException", "{", "return", "MARSH", ".", "marshal", "(", "obj", ")", ";", "}", "/", "**", "*", "@", "param", "data", "Data", ".", "*", "/", "private", "void", "attack", "(", "byte", "[", "]", "data", ")", "throws", "IOException", "{", "InetAddress", "addr", "=", "InetAddress", ".", "getLoopbackAddress", "(", ");", "try", "(", "Socket", "sock", "=", "new", "Socket", "(", "addr", ",", "47500", ")", ";", "OutputStream", "oos", "=", "new", "BufferedOutputStream", "(", "sock", ".", "getOutputStream", "(", "))", ")", "{", "oos", ".", "write", "(", "U", ".", "IGNITE_HEADER", ")", ";", "oos", ".", "write", "(", "data", ")", ";", "}", "}", "/", "**", "*", "/", "private", "static", "class", "Exploit", "implements", "Serializable", "{", "/", "**", "*", "@", "param", "is", "Input", "stream", ".", "*", "/", "private", "void", "readObject", "(", "ObjectInputStream", "is", ")", "throws", "ClassNotFoundException", ",", "IOException", "{", "SHARED", ".", "set", "(", "true", ")", ";", "}", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "222", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "socket", ";", "import", "java", ".", "io", ".", "BufferedOutputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "io", ".", "OutputStream", ";", "import", "java", ".", "io", ".", "Serializable", ";", "import", "java", ".", "net", ".", "InetAddress", ";", "import", "java", ".", "net", ".", "ServerSocket", ";", "import", "java", ".", "net", ".", "Socket", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "concurrent", ".", "atomic", ".", "AtomicBoolean", ";", "import", "org", ".", "apache", ".", "ignite", ".", "Ignite", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteCheckedException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteDataStreamer", ";", "import", "org", ".", "apache", ".", "ignite", ".", "IgniteException", ";", "import", "org", ".", "apache", ".", "ignite", ".", "configuration", ".", "IgniteConfiguration", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "IgniteUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "lang", ".", "GridAbsPredicate", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "util", ".", "typedef", ".", "internal", ".", "U", ";", "import", "org", ".", "apache", ".", "ignite", ".", "lang", ".", "IgniteBiTuple", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "Marshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "marshaller", ".", "jdk", ".", "JdkMarshaller", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "StreamSingleTupleExtractor", ";", "import", "org", ".", "apache", ".", "ignite", ".", "testframework", ".", "GridTestUtils", ";", "import", "org", ".", "apache", ".", "ignite", ".", "testframework", ".", "junits", ".", "common", ".", "GridCommonAbstractTest", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_BLACKLIST", ";", "import", "static", "org", ".", "apache", ".", "ignite", ".", "IgniteSystemProperties", ".", "IGNITE_MARSHALLER_WHITELIST", ";", "/", "**", "*", "Tests", "for", "whitelist", "and", "blacklist", "ot", "avoiding", "deserialization", "vulnerability", ".", "*", "/", "public", "class", "SocketStreamerUnmarshalVulnerabilityTest", "extends", "GridCommonAbstractTest", "{", "/", "**", "Shared", "value", ".", "*", "/", "private", "static", "final", "AtomicBoolean", "SHARED", "=", "new", "AtomicBoolean", "(", ");", "/", "**", "Port", ".", "*", "/", "private", "static", "int", "port", ";", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "protected", "IgniteConfiguration", "getConfiguration", "(", "String", "igniteInstanceName", ")", "throws", "Exception", "{", "try", "(", "ServerSocket", "sock", "=", "new", "ServerSocket", "(", "0", ")", ")", "{", "port", "=", "sock", ".", "getLocalPort", "(", ");", "}", "IgniteConfiguration", "cfg", "=", "super", ".", "getConfiguration", "(", "igniteInstanceName", ")", ";", "cfg", ".", "setCacheConfiguration", "(", "defaultCacheConfiguration", "(", "))", ";", "return", "cfg", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "protected", "void", "beforeTest", "(", ")", "throws", "Exception", "{", "super", ".", "beforeTest", "(", ");", "SHARED", ".", "set", "(", "false", ")", ";", "System", ".", "clearProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ")", ";", "System", ".", "clearProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ")", ";", "IgniteUtils", ".", "clearClassCache", "(", ");", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testNoLists", "(", ")", "throws", "Exception", "{", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testWhiteListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testWhiteListExcluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_excluded", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBlackListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBlackListExcluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_excluded", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "true", ")", ";", "}", "/", "**", "*", "@", "throws", "Exception", "If", "failed", ".", "*", "/", "public", "void", "testBothListIncluded", "(", ")", "throws", "Exception", "{", "String", "path", "=", "U", ".", "resolveIgnitePath", "(", "\"", "modules", "/", "core", "/", "src", "/", "test", "/", "config", "/", "class_list_exploit_included", ".", "txt", "\"", ").", "getPath", "(", ");", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_WHITELIST", ",", "path", ")", ";", "System", ".", "setProperty", "(", "IGNITE_MARSHALLER_BLACKLIST", ",", "path", ")", ";", "testExploit", "(", "false", ")", ";", "}", "/", "**", "*", "@", "param", "positive", "Positive", ".", "*", "/", "private", "void", "testExploit", "(", "boolean", "positive", ")", "throws", "Exception", "{", "try", "{", "Ignite", "ignite", "=", "startGrid", "(", ");", "SocketStreamer", "<", "Exploit", ",", "Integer", ",", "String", ">", "sockStmr", "=", "null", ";", "try", "(", "IgniteDataStreamer", "<", "Integer", ",", "String", ">", "stmr", "=", "ignite", ".", "dataStreamer", "(", "DEFAULT_CACHE_NAME", ")", ")", "{", "stmr", ".", "allowOverwrite", "(", "true", ")", ";", "stmr", ".", "autoFlushFrequency", "(", "10", ")", ";", "sockStmr", "=", "new", "SocketStreamer", "<", ">(", ");", "sockStmr", ".", "setIgnite", "(", "ignite", ")", ";", "sockStmr", ".", "setStreamer", "(", "stmr", ")", ";", "sockStmr", ".", "setPort", "(", "port", ")", ";", "sockStmr", ".", "setSingleTupleExtractor", "(", "new", "StreamSingleTupleExtractor", "<", "Exploit", ",", "Integer", ",", "String", ">", "()", "{", "@", "Override", "public", "Map", ".", "Entry", "<", "Integer", ",", "String", ">", "extract", "(", "Exploit", "msg", ")", "{", "return", "new", "IgniteBiTuple", "<", ">(", "1", ",", "\"", "val", "\"", ");", "}", "}", ");", "sockStmr", ".", "start", "(", ");", "try", "(", "Socket", "sock", "=", "new", "Socket", "(", "InetAddress", ".", "getLocalHost", "(", "),", "port", ")", ";", "OutputStream", "os", "=", "new", "BufferedOutputStream", "(", "sock", ".", "getOutputStream", "(", "))", ")", "{", "Marshaller", "marsh", "=", "new", "JdkMarshaller", "(", ");", "byte", "[", "]", "msg", "=", "marsh", ".", "marshal", "(", "new", "Exploit", "(", "))", ";", "os", ".", "write", "(", "msg", ".", "length", ">", ">>", "24", ")", ";", "os", ".", "write", "(", "msg", ".", "length", ">", ">>", "16", ")", ";", "os", ".", "write", "(", "msg", ".", "length", ">", ">>", "8", ")", ";", "os", ".", "write", "(", "msg", ".", "length", ")", ";", "os", ".", "write", "(", "msg", ")", ";", "}", "catch", "(", "IOException", "|", "IgniteCheckedException", "e", ")", "{", "throw", "new", "IgniteException", "(", "e", ")", ";", "}", "boolean", "res", "=", "GridTestUtils", ".", "waitForCondition", "(", "new", "GridAbsPredicate", "(", ")", "{", "@", "Override", "public", "boolean", "apply", "(", ")", "{", "return", "SHARED", ".", "get", "(", ");", "}", "}", ",", "3000L", ")", ";", "if", "(", "positive", ")", "assertTrue", "(", "res", ")", ";", "else", "assertFalse", "(", "res", ")", ";", "}", "finally", "{", "if", "(", "sockStmr", "!", "=", "null", ")", "sockStmr", ".", "stop", "(", ");", "}", "}", "finally", "{", "stopAllGrids", "(", ");", "}", "}", "/", "**", "*", "/", "private", "static", "class", "Exploit", "implements", "Serializable", "{", "/", "**", "*", "@", "param", "is", "Input", "stream", ".", "*", "/", "private", "void", "readObject", "(", "ObjectInputStream", "is", ")", "throws", "ClassNotFoundException", ",", "IOException", "{", "SHARED", ".", "set", "(", "true", ")", ";", "}", "}", "}", "@", "@", "-", "78", ",", "7", "+", "78", ",", "8", "@", "@", "public", "GridTestKernalContext", "(", "IgniteLogger", "log", ",", "IgniteConfiguration", "cfg", ")", "{", "null", ",", "null", ",", "null", ",", "U", ".", "allPluginProviders", "(", ")", "U", ".", "allPluginProviders", "(", "),", "null", ")", ";", "GridTestUtils", ".", "setFieldValue", "(", "grid", "(", "),", "\"", "cfg", "\"", ",", "config", "(", "))", ";", "@", "@", "-", "20", ",", "6", "+", "20", ",", "7", "@", "@", "import", "java", ".", "util", ".", "Set", ";", "import", "junit", ".", "framework", ".", "TestSuite", ";", "import", "org", ".", "apache", ".", "ignite", ".", "GridSuppressedExceptionSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "ClassSetTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "ClusterGroupHostsSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "ClusterGroupSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "internal", ".", "GridFailFastNodeFailureDetectionSelfTest", ";", "@", "@", "-", "191", ",", "6", "+", "192", ",", "8", "@", "@", "public", "static", "TestSuite", "suite", "(", "@", "Nullable", "final", "Set", "<", "Class", ">", "ignoredTests", ")", "throws", "Ex", "suite", ".", "addTestSuite", "(", "GridCleanerTest", ".", "class", ")", ";", "suite", ".", "addTestSuite", "(", "ClassSetTest", ".", "class", ")", ";", "return", "suite", ";", "}", "}", "@", "@", "-", "21", ",", "6", "+", "21", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "GridTcpSpiForwardingSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "AuthenticationRestartTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "IgniteDiscoveryCacheReuseSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "DiscoveryUnmarshalVulnerabilityTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "IgniteClientConnectTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "IgniteClientReconnectMassiveShutdownTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "spi", ".", "discovery", ".", "tcp", ".", "TcpClientDiscoveryMarshallerCheckSelfTest", ";", "@", "@", "-", "111", ",", "6", "+", "112", ",", "8", "@", "@", "public", "static", "TestSuite", "suite", "(", ")", "throws", "Exception", "{", "/", "/", "Disco", "cache", "reuse", ".", "suite", ".", "addTest", "(", "new", "TestSuite", "(", "IgniteDiscoveryCacheReuseSelfTest", ".", "class", ")", ");", "suite", ".", "addTest", "(", "new", "TestSuite", "(", "DiscoveryUnmarshalVulnerabilityTest", ".", "class", ")", ");", "return", "suite", ";", "}", "}", "@", "@", "-", "19", ",", "6", "+", "19", ",", "7", "@", "@", "import", "junit", ".", "framework", ".", "TestSuite", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "socket", ".", "SocketStreamerSelfTest", ";", "import", "org", ".", "apache", ".", "ignite", ".", "stream", ".", "socket", ".", "SocketStreamerUnmarshalVulnerabilityTest", ";", "/", "**", "*", "Stream", "test", "suite", ".", "@", "@", "-", "32", ",", "6", "+", "33", ",", "7", "@", "@", "public", "static", "TestSuite", "suite", "(", ")", "throws", "Exception", "{", "TestSuite", "suite", "=", "new", "TestSuite", "(", "\"", "Ignite", "Stream", "Test", "Suite", "\"", ");", "suite", ".", "addTest", "(", "new", "TestSuite", "(", "SocketStreamerSelfTest", ".", "class", ")", ");", "suite", ".", "addTest", "(", "new", "TestSuite", "(", "SocketStreamerUnmarshalVulnerabilityTest", ".", "class", ")", ");", "return", "suite", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "797", ",", "12", "+", "797", ",", "12", "@", "@", "static", "bool", "new_idmap_permitted", "(", "const", "struct", "file", "*", "file", ",", "u32", "id", "=", "new_map", "-", ">", "extent", "[", "0", "]", ".", "lower_first", ";", "if", "(", "cap_setid", "=", "=", "CAP_SETUID", ")", "{", "kuid_t", "uid", "=", "make_kuid", "(", "ns", "-", ">", "parent", ",", "id", ")", ";", "if", "(", "uid_eq", "(", "uid", ",", "current_fsuid", "(", "))", ")", "if", "(", "uid_eq", "(", "uid", ",", "file", "-", ">", "f_cred", "-", ">", "fsuid", ")", ")", "return", "true", ";", "}", "else", "if", "(", "cap_setid", "=", "=", "CAP_SETGID", ")", "{", "kgid_t", "gid", "=", "make_kgid", "(", "ns", "-", ">", "parent", ",", "id", ")", ";", "if", "(", "gid_eq", "(", "gid", ",", "current_fsgid", "(", "))", ")", "if", "(", "gid_eq", "(", "gid", ",", "file", "-", ">", "f_cred", "-", ">", "fsgid", ")", ")", "return", "true", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2", ",", "6", "+", "2", ",", "8", "@", "@", "Broker", ":", "-", "Fix", "for", "poor", "websockets", "performance", ".", "-", "Fix", "lazy", "bridges", "not", "timing", "out", "for", "idle_timeout", ".", "Closes", "#", "417", ".", "-", "Fix", "problems", "with", "large", "retained", "messages", "over", "websockets", ".", "Closes", "#", "427", ".", "-", "Set", "persistence", "file", "to", "only", "be", "readable", "by", "owner", ",", "except", "on", "Windows", ".", "Closes", "#", "468", ".", "Clients", ":", "-", "Don", "'", "t", "use", "/", "in", "auto", "-", "generated", "client", "ids", ".", "@", "@", "-", "402", ",", "6", "+", "402", ",", "9", "@", "@", "int", "mqtt3_db_backup", "(", "struct", "mosquitto_db", "*", "db", ",", "bool", "shutdown", ")", "goto", "error", ";", "}", "}", "/", "*", "Set", "permissions", "to", "-", "rw", "-", "--", "--", "--", "*", "/", "umask", "(", "0077", ")", ";", "#", "endif", "db_fptr", "=", "_mosquitto_fopen", "(", "outfile", ",", "\"", "wb", "\"", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "55", ",", "7", "+", "55", ",", "7", "@", "@", "public", "void", "validate", "(", "Object", "object", ")", "throws", "ValidationException", "{", "return", ";", "}", "if", "(", "!(", "value", ".", "getClass", "(", ").", "equals", "(", "String", ".", "class", ")", ")", "|", "|", "!", "Pattern", ".", "compile", "(", "getUrlRegex", "(", "),", "Pattern", ".", "CASE_INSENSITIVE", ")", ".", "matcher", "(", "String", ".", "valueOf", "(", "value", ")", ").", "matches", "(", "))", "{", "if", "(", "!(", "value", ".", "getClass", "(", ").", "equals", "(", "String", ".", "class", ")", ")", "|", "|", "!", "Pattern", ".", "compile", "(", "getUrlRegex", "(", "),", "Pattern", ".", "CASE_INSENSITIVE", ")", ".", "matcher", "(", "String", ".", "valueOf", "(", "value", ")", ".", "trim", "(", "))", ".", "matches", "(", "))", "{", "addFieldError", "(", "fieldName", ",", "object", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "0", ",", "0", "+", "1", ",", "47", "@", "@", "#", "Security", "Guidelines", "Please", "contact", "us", "directly", "at", "*", "*", "security", "@", "3rd", "-", "Eden", ".", "com", "*", "*", "for", "any", "bug", "that", "might", "impact", "the", "security", "of", "this", "project", ".", "Please", "prefix", "the", "subject", "of", "your", "email", "with", "`", "[", "security", "]", "`", "in", "lowercase", "and", "square", "brackets", ".", "Our", "email", "filters", "will", "automatically", "prevent", "these", "messages", "from", "being", "moved", "to", "our", "spam", "box", ".", "All", "emails", "that", "do", "not", "include", "security", "vulnerabilities", "will", "be", "removed", "and", "blocked", "instantly", ".", "In", "addition", "to", "a", "dedicated", "email", "address", "to", "receive", "security", "related", "reports", ",", "we", "also", "have", "a", "[", "Hacker1", "account", "]", "[", "hacker1", "]", "that", "can", "be", "used", "be", "used", "for", "communicating", "security", "related", "issues", ".", "You", "will", "receive", "an", "acknowledgement", "of", "your", "report", "within", "*", "*", "24", "hours", "*", "*", "of", "notification", ".", "#", "#", "Exceptions", "If", "you", "do", "not", "receive", "an", "acknowledgement", "within", "the", "said", "time", "frame", "please", "give", "us", "the", "benefit", "of", "the", "doubt", "as", "it", "'", "s", "possible", "that", "we", "haven", "'", "t", "seen", "it", "yet", ".", "In", "this", "case", "please", "send", "us", "a", "message", "*", "*", "without", "details", "*", "*", "using", "one", "of", "the", "following", "methods", ":", "-", "Give", "a", "poke", "on", "Twitter", "[", "@", "3rdEden", "]", "(", "https", ":", "//", "twitter", ".", "com", "/", "3rdEden", ")", "-", "Contact", "the", "lead", "developers", "of", "this", "project", "on", "their", "personal", "e", "-", "mails", ".", "You", "can", "find", "the", "e", "-", "mails", "in", "the", "git", "logs", ",", "for", "example", "using", "the", "following", "command", ":", "`", "git", "-", "-", "no", "-", "pager", "show", "-", "s", "-", "-", "format", "=", "'%", "an", "<", "%", "ae", ">", "'", "<", "gitsha", ">", "`", "where", "`", "<", "gitsha", ">", "`", "is", "the", "SHA1", "of", "their", "latest", "commit", "in", "the", "project", ".", "Once", "we", "have", "acknowledged", "receipt", "of", "your", "report", "and", "confirmed", "the", "bug", "ourselves", "we", "will", "work", "with", "you", "to", "fix", "the", "vulnerability", "and", "publicly", "acknowledge", "your", "responsible", "disclosure", ",", "if", "you", "wish", ".", "#", "#", "History", ">", "url", "-", "parse", "returns", "wrong", "hostname", "which", "leads", "to", "multiple", "vulnerabilities", "such", ">", "as", "SSRF", ",", "Open", "Redirect", ",", "Bypass", "Authentication", "Protocol", ".", "-", "Hacker1", "report", ":", "https", ":", "//", "hackerone", ".", "com", "/", "reports", "/", "384029", "-", "Reported", "by", "[", "lolwaleet", "]", "(", "https", ":", "//", "hackerone", ".", "com", "/", "lolwalee", ")", "-", "Triaged", "by", "[", "Liran", "Tal", "]", "(", "https", ":", "//", "hackerone", ".", "com", "/", "lirantal", ")", "-", "Fixed", "in", ":", "1", ".", "4", ".", "3", "-", "--", "[", "twitter", "]", ":", "https", ":", "//", "twitter", ".", "com", "/", "3rdEden", "[", "hacker1", "]", ":", "https", ":", "//", "hackerone", ".", "com", "/", "3rdeden"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1003", ",", "4", "+", "1003", ",", "19", "@", "@", "public", "static", "void", "insertNumericUnboxOrPrimitiveTypeCoercion", "(", "void", "generateCode", "(", "MethodVisitor", "mv", ",", "CodeFlow", "codeflow", ")", ";", "}", "public", "static", "String", "toBoxedDescriptor", "(", "String", "primitiveDescriptor", ")", "{", "switch", "(", "primitiveDescriptor", ".", "charAt", "(", "0", ")", ")", "{", "case", "'", "I", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Integer", "\"", ";", "case", "'", "J", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Long", "\"", ";", "case", "'", "F", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Float", "\"", ";", "case", "'", "D", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Double", "\"", ";", "case", "'", "B", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Byte", "\"", ";", "case", "'", "C", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Character", "\"", ";", "case", "'", "S", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Short", "\"", ";", "case", "'", "Z", "'", ":", "return", "\"", "Ljava", "/", "lang", "/", "Boolean", "\"", ";", "default", ":", "throw", "new", "IllegalArgumentException", "(", "\"", "Unexpected", "non", "primitive", "descriptor", "\"", "+", "primitiveDescriptor", ")", ";", "}", "}", "}", "@", "@", "-", "24", ",", "6", "+", "24", ",", "7", "@", "@", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "springframework", ".", "asm", ".", "Label", ";", "import", "org", ".", "springframework", ".", "asm", ".", "MethodVisitor", ";", "import", "org", ".", "springframework", ".", "core", ".", "convert", ".", "TypeDescriptor", ";", "import", "org", ".", "springframework", ".", "expression", ".", "AccessException", ";", "@", "@", "-", "53", ",", "6", "+", "54", ",", "8", "@", "@", "private", "final", "boolean", "nullSafe", ";", "private", "String", "originalPrimitiveExitTypeDescriptor", "=", "null", ";", "private", "volatile", "CachedMethodExecutor", "cachedExecutor", ";", "@", "@", "-", "233", ",", "7", "+", "236", ",", "14", "@", "@", "private", "void", "updateExitTypeDescriptor", "(", ")", "{", "CachedMethodExecutor", "executorToCheck", "=", "this", ".", "cachedExecutor", ";", "if", "(", "executorToCheck", "!", "=", "null", "&", "&", "executorToCheck", ".", "get", "(", ")", "instanceof", "ReflectiveMethodExecutor", ")", "{", "Method", "method", "=", "(", "(", "ReflectiveMethodExecutor", ")", "executorToCheck", ".", "get", "(", "))", ".", "getMethod", "(", ");", "this", ".", "exitTypeDescriptor", "=", "CodeFlow", ".", "toDescriptor", "(", "method", ".", "getReturnType", "(", "))", ";", "String", "descriptor", "=", "CodeFlow", ".", "toDescriptor", "(", "method", ".", "getReturnType", "(", "))", ";", "if", "(", "this", ".", "nullSafe", "&", "&", "CodeFlow", ".", "isPrimitive", "(", "descriptor", ")", ")", "{", "originalPrimitiveExitTypeDescriptor", "=", "descriptor", ";", "this", ".", "exitTypeDescriptor", "=", "CodeFlow", ".", "toBoxedDescriptor", "(", "descriptor", ")", ";", "}", "else", "{", "this", ".", "exitTypeDescriptor", "=", "descriptor", ";", "}", "}", "}", "@", "@", "-", "293", ",", "17", "+", "303", ",", "23", "@", "@", "public", "void", "generateCode", "(", "MethodVisitor", "mv", ",", "CodeFlow", "cf", ")", "{", "boolean", "isStaticMethod", "=", "Modifier", ".", "isStatic", "(", "method", ".", "getModifiers", "(", "))", ";", "String", "descriptor", "=", "cf", ".", "lastDescriptor", "(", ");", "if", "(", "descriptor", "=", "=", "null", ")", "{", "if", "(", "!", "isStaticMethod", ")", "{", "/", "/", "Nothing", "on", "the", "stack", "but", "something", "is", "needed", "cf", ".", "loadTarget", "(", "mv", ")", ";", "}", "Label", "skipIfNull", "=", "null", ";", "if", "(", "descriptor", "=", "=", "null", "&", "&", "!", "isStaticMethod", ")", "{", "/", "/", "Nothing", "on", "the", "stack", "but", "something", "is", "needed", "cf", ".", "loadTarget", "(", "mv", ")", ";", "}", "else", "{", "if", "(", "isStaticMethod", ")", "{", "/", "/", "Something", "on", "the", "stack", "when", "nothing", "is", "needed", "mv", ".", "visitInsn", "(", "POP", ")", ";", "}", "if", "(", "(", "descriptor", "!", "=", "null", "|", "|", "!", "isStaticMethod", ")", "&", "&", "nullSafe", ")", "{", "mv", ".", "visitInsn", "(", "DUP", ")", ";", "skipIfNull", "=", "new", "Label", "(", ");", "Label", "continueLabel", "=", "new", "Label", "(", ");", "mv", ".", "visitJumpInsn", "(", "IFNONNULL", ",", "continueLabel", ")", ";", "CodeFlow", ".", "insertCheckCast", "(", "mv", ",", "this", ".", "exitTypeDescriptor", ")", ";", "mv", ".", "visitJumpInsn", "(", "GOTO", ",", "skipIfNull", ")", ";", "mv", ".", "visitLabel", "(", "continueLabel", ")", ";", "}", "if", "(", "descriptor", "!", "=", "null", "&", "&", "isStaticMethod", ")", "{", "/", "/", "Something", "on", "the", "stack", "when", "nothing", "is", "needed", "mv", ".", "visitInsn", "(", "POP", ")", ";", "}", "if", "(", "CodeFlow", ".", "isPrimitive", "(", "descriptor", ")", ")", "{", "@", "@", "-", "323", ",", "6", "+", "339", ",", "14", "@", "@", "public", "void", "generateCode", "(", "MethodVisitor", "mv", ",", "CodeFlow", "cf", ")", "{", "mv", ".", "visitMethodInsn", "(", "(", "isStaticMethod", "?", "INVOKESTATIC", ":", "INVOKEVIRTUAL", ")", ",", "classDesc", ",", "method", ".", "getName", "(", "),", "CodeFlow", ".", "createSignatureDescriptor", "(", "method", ")", ",", "method", ".", "getDeclaringClass", "(", ").", "isInterface", "(", "))", ";", "cf", ".", "pushDescriptor", "(", "this", ".", "exitTypeDescriptor", ")", ";", "if", "(", "originalPrimitiveExitTypeDescriptor", "!", "=", "null", ")", "{", "/", "/", "The", "output", "of", "the", "accessor", "will", "be", "a", "primitive", "but", "from", "the", "block", "above", "it", "might", "be", "null", ",", "/", "/", "so", "to", "have", "a", "'", "common", "stack", "'", "element", "at", "skipIfNull", "target", "we", "need", "to", "box", "the", "primitive", "CodeFlow", ".", "insertBoxIfNecessary", "(", "mv", ",", "originalPrimitiveExitTypeDescriptor", ")", ";", "}", "if", "(", "skipIfNull", "!", "=", "null", ")", "{", "mv", ".", "visitLabel", "(", "skipIfNull", ")", ";", "}", "}", "@", "@", "-", "21", ",", "6", "+", "21", ",", "7", "@", "@", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "org", ".", "springframework", ".", "asm", ".", "Label", ";", "import", "org", ".", "springframework", ".", "asm", ".", "MethodVisitor", ";", "import", "org", ".", "springframework", ".", "core", ".", "convert", ".", "TypeDescriptor", ";", "import", "org", ".", "springframework", ".", "expression", ".", "AccessException", ";", "@", "@", "-", "47", ",", "6", "+", "48", ",", "8", "@", "@", "private", "final", "boolean", "nullSafe", ";", "private", "String", "originalPrimitiveExitTypeDescriptor", "=", "null", ";", "private", "final", "String", "name", ";", "private", "volatile", "PropertyAccessor", "cachedReadAccessor", ";", "@", "@", "-", "83", ",", "7", "+", "86", ",", "7", "@", "@", "public", "TypedValue", "getValueInternal", "(", "ExpressionState", "state", ")", "throws", "EvaluationExcep", "PropertyAccessor", "accessorToUse", "=", "this", ".", "cachedReadAccessor", ";", "if", "(", "accessorToUse", "instanceof", "CompilablePropertyAccessor", ")", "{", "CompilablePropertyAccessor", "accessor", "=", "(", "CompilablePropertyAccessor", ")", "accessorToUse", ";", "this", ".", "exitTypeDescriptor", "=", "CodeFlow", ".", "toDescriptor", "(", "accessor", ".", "getPropertyType", "(", "))", ";", "setExitTypeDescriptor", "(", "CodeFlow", ".", "toDescriptor", "(", "accessor", ".", "getPropertyType", "(", "))", ");", "}", "return", "tv", ";", "}", "@", "@", "-", "350", ",", "8", "+", "353", ",", "40", "@", "@", "public", "void", "generateCode", "(", "MethodVisitor", "mv", ",", "CodeFlow", "cf", ")", "{", "if", "(", "!(", "accessorToUse", "instanceof", "CompilablePropertyAccessor", ")", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "Property", "accessor", "is", "not", "compilable", ":", "\"", "+", "accessorToUse", ")", ";", "}", "Label", "skipIfNull", "=", "null", ";", "if", "(", "nullSafe", ")", "{", "mv", ".", "visitInsn", "(", "DUP", ")", ";", "skipIfNull", "=", "new", "Label", "(", ");", "Label", "continueLabel", "=", "new", "Label", "(", ");", "mv", ".", "visitJumpInsn", "(", "IFNONNULL", ",", "continueLabel", ")", ";", "CodeFlow", ".", "insertCheckCast", "(", "mv", ",", "this", ".", "exitTypeDescriptor", ")", ";", "mv", ".", "visitJumpInsn", "(", "GOTO", ",", "skipIfNull", ")", ";", "mv", ".", "visitLabel", "(", "continueLabel", ")", ";", "}", "(", "(", "CompilablePropertyAccessor", ")", "accessorToUse", ")", ".", "generateCode", "(", "this", ".", "name", ",", "mv", ",", "cf", ")", ";", "cf", ".", "pushDescriptor", "(", "this", ".", "exitTypeDescriptor", ")", ";", "if", "(", "originalPrimitiveExitTypeDescriptor", "!", "=", "null", ")", "{", "/", "/", "The", "output", "of", "the", "accessor", "is", "a", "primitive", "but", "from", "the", "block", "above", "it", "might", "be", "null", ",", "/", "/", "so", "to", "have", "a", "common", "stack", "element", "type", "at", "skipIfNull", "target", "it", "is", "necessary", "/", "/", "to", "box", "the", "primitive", "CodeFlow", ".", "insertBoxIfNecessary", "(", "mv", ",", "originalPrimitiveExitTypeDescriptor", ")", ";", "}", "if", "(", "skipIfNull", "!", "=", "null", ")", "{", "mv", ".", "visitLabel", "(", "skipIfNull", ")", ";", "}", "}", "void", "setExitTypeDescriptor", "(", "String", "descriptor", ")", "{", "/", "/", "If", "this", "property", "or", "field", "access", "would", "return", "a", "primitive", "-", "and", "yet", "/", "/", "it", "is", "also", "marked", "null", "safe", "-", "then", "the", "exit", "type", "descriptor", "must", "be", "/", "/", "promoted", "to", "the", "box", "type", "to", "allow", "a", "null", "value", "to", "be", "passed", "on", "if", "(", "this", ".", "nullSafe", "&", "&", "CodeFlow", ".", "isPrimitive", "(", "descriptor", ")", ")", "{", "this", ".", "originalPrimitiveExitTypeDescriptor", "=", "descriptor", ";", "this", ".", "exitTypeDescriptor", "=", "CodeFlow", ".", "toBoxedDescriptor", "(", "descriptor", ")", ";", "}", "else", "{", "this", ".", "exitTypeDescriptor", "=", "descriptor", ";", "}", "}", "@", "@", "-", "379", ",", "8", "+", "414", ",", "7", "@", "@", "public", "TypedValue", "getValue", "(", ")", "{", "this", ".", "ref", ".", "getValueInternal", "(", "this", ".", "contextObject", ",", "this", ".", "evalContext", ",", "this", ".", "autoGrowNullReferences", ")", ";", "PropertyAccessor", "accessorToUse", "=", "this", ".", "ref", ".", "cachedReadAccessor", ";", "if", "(", "accessorToUse", "instanceof", "CompilablePropertyAccessor", ")", "{", "this", ".", "ref", ".", "exitTypeDescriptor", "=", "CodeFlow", ".", "toDescriptor", "(", "((", "CompilablePropertyAccessor", ")", "accessorToUse", ")", ".", "getPropertyType", "(", "))", ";", "this", ".", "ref", ".", "setExitTypeDescriptor", "(", "CodeFlow", ".", "toDescriptor", "(", "((", "CompilablePropertyAccessor", ")", "accessorToUse", ")", ".", "getPropertyType", "(", "))", ");", "}", "return", "value", ";", "}", "@", "@", "-", "701", ",", "7", "+", "701", ",", "167", "@", "@", "public", "void", "ternaryWithBooleanReturn", "(", ")", "{", "/", "/", "SPR", "-", "12271", "assertCanCompile", "(", "expression", ")", ";", "assertEquals", "(", "\"", "def", "\"", ",", "expression", ".", "getValue", "(", "))", ";", "}", "@", "Test", "public", "void", "nullsafeFieldPropertyDereferencing_SPR16489", "(", ")", "throws", "Exception", "{", "FooObjectHolder", "foh", "=", "new", "FooObjectHolder", "(", ");", "StandardEvaluationContext", "context", "=", "new", "StandardEvaluationContext", "(", ");", "context", ".", "setRootObject", "(", "foh", ")", ";", "/", "/", "First", "non", "compiled", ":", "SpelExpression", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"", "foo", "?", ".", "object", "\"", ");", "assertEquals", "(", "\"", "hello", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ");", "foh", ".", "foo", "=", "null", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Now", "revert", "state", "of", "foh", "and", "try", "compiling", "it", ":", "foh", ".", "foo", "=", "new", "FooObject", "(", ");", "assertEquals", "(", "\"", "hello", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "assertEquals", "(", "\"", "hello", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ");", "foh", ".", "foo", "=", "null", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Static", "references", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "propertya", "\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "StaticsHelper", ".", "class", ")", ";", "assertEquals", "(", "\"", "sh", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "StaticsHelper", ".", "class", ")", ";", "assertEquals", "(", "\"", "sh", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Single", "size", "primitive", "(", "boolean", ")", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "a", "\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "new", "TestClass4", "(", "))", ";", "assertFalse", "(", "(", "Boolean", ")", "expression", ".", "getValue", "(", "context", ")", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "new", "TestClass4", "(", "))", ";", "assertFalse", "(", "(", "Boolean", ")", "expression", ".", "getValue", "(", "context", ")", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Double", "slot", "primitives", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "four", "\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "new", "Three", "(", "))", ";", "assertEquals", "(", "\"", "0", ".", "04", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "new", "Three", "(", "))", ";", "assertEquals", "(", "\"", "0", ".", "04", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "}", "@", "Test", "public", "void", "nullsafeMethodChaining_SPR16489", "(", ")", "throws", "Exception", "{", "FooObjectHolder", "foh", "=", "new", "FooObjectHolder", "(", ");", "StandardEvaluationContext", "context", "=", "new", "StandardEvaluationContext", "(", ");", "context", ".", "setRootObject", "(", "foh", ")", ";", "/", "/", "First", "non", "compiled", ":", "SpelExpression", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"", "getFoo", "(", ")?", ".", "getObject", "(", ")\"", ");", "assertEquals", "(", "\"", "hello", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ");", "foh", ".", "foo", "=", "null", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "foh", ".", "foo", "=", "new", "FooObject", "(", ");", "assertEquals", "(", "\"", "hello", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ");", "foh", ".", "foo", "=", "null", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Static", "method", "references", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "methoda", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "StaticsHelper", ".", "class", ")", ";", "assertEquals", "(", "\"", "sh", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "StaticsHelper", ".", "class", ")", ";", "assertEquals", "(", "\"", "sh", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "intValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "4", ")", ";", "assertEquals", "(", "\"", "4", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "4", ")", ";", "assertEquals", "(", "\"", "4", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "booleanValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "false", ")", ";", "assertEquals", "(", "\"", "false", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "false", ")", ";", "assertEquals", "(", "\"", "false", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "booleanValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "true", ")", ";", "assertEquals", "(", "\"", "true", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "true", ")", ";", "assertEquals", "(", "\"", "true", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "longValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "5L", ")", ";", "assertEquals", "(", "\"", "5", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "5L", ")", ";", "assertEquals", "(", "\"", "5", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "floatValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "3f", ")", ";", "assertEquals", "(", "\"", "3", ".", "0", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "3f", ")", ";", "assertEquals", "(", "\"", "3", ".", "0", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "/", "/", "Nullsafe", "guard", "on", "expression", "element", "evaluating", "to", "primitive", "/", "null", "expression", "=", "(", "SpelExpression", ")", "parser", ".", "parseExpression", "(", "\"#", "var", "?", ".", "shortValue", "(", ")\"", ");", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "(", "short", ")", "8", ")", ";", "assertEquals", "(", "\"", "8", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "(", "short", ")", "8", ")", ";", "assertEquals", "(", "\"", "8", "\"", ",", "expression", ".", "getValue", "(", "context", ")", ".", "toString", "(", "))", ";", "context", ".", "setVariable", "(", "\"", "var", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "context", ")", ");", "}", "@", "Test", "public", "void", "elvis", "(", ")", "throws", "Exception", "{", "Expression", "expression", "=", "parser", ".", "parseExpression", "(", "\"'", "a", "'", "?:", "'", "b", "'", "\")", ";", "@", "@", "-", "3063", ",", "19", "+", "3223", ",", "47", "@", "@", "public", "void", "opModulus_12041", "(", ")", "throws", "Exception", "{", "assertEquals", "(", "1", ".", "0f", ",", "expression", ".", "getValue", "(", "))", ";", "}", "@", "Test", "public", "void", "compilationOfBasicNullSafeMethodReference", "(", ")", "{", "SpelExpressionParser", "parser", "=", "new", "SpelExpressionParser", "(", "new", "SpelParserConfiguration", "(", "SpelCompilerMode", ".", "OFF", ",", "getClass", "(", ").", "getClassLoader", "(", "))", ");", "SpelExpression", "expression", "=", "parser", ".", "parseRaw", "(", "\"#", "it", "?", ".", "equals", "(", "3", ")", "\")", ";", "StandardEvaluationContext", "context", "=", "new", "StandardEvaluationContext", "(", "new", "Object", "[", "]", "{", "1", "}", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "3", ")", ";", "expression", ".", "setEvaluationContext", "(", "context", ")", ";", "assertTrue", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "3", ")", ";", "assertTrue", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "}", "@", "Test", "public", "void", "failsWhenSettingContextForExpression_SPR12326", "(", ")", "{", "SpelExpressionParser", "parser", "=", "new", "SpelExpressionParser", "(", "new", "SpelParserConfiguration", "(", "SpelCompilerMode", ".", "IMMEDIATE", ",", "getClass", "(", ").", "getClassLoader", "(", "))", ");", "new", "SpelParserConfiguration", "(", "SpelCompilerMode", ".", "OFF", ",", "getClass", "(", ").", "getClassLoader", "(", "))", ");", "Person3", "person", "=", "new", "Person3", "(", "\"", "foo", "\"", ",", "1", ")", ";", "SpelExpression", "expression", "=", "parser", ".", "parseRaw", "(", "\"#", "it", "?", ".", "age", "?", ".", "equals", "(", "[", "0", "]", ")\"", ");", "StandardEvaluationContext", "context", "=", "new", "StandardEvaluationContext", "(", "new", "Object", "[", "]", "{", "1", "}", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "person", ")", ";", "expression", ".", "setEvaluationContext", "(", "context", ")", ";", "assertTrue", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "/", "/", "This", "will", "trigger", "compilation", "(", "second", "usage", ")", "assertTrue", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "assertCanCompile", "(", "expression", ")", ";", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "person", ")", ";", "assertTrue", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "context", ".", "setVariable", "(", "\"", "it", "\"", ",", "null", ")", ";", "assertNull", "(", "expression", ".", "getValue", "(", "Boolean", ".", "class", ")", ");", "}", "@", "@", "-", "5078", ",", "6", "+", "5266", ",", "14", "@", "@", "public", "Object", "getObject", "(", ")", "{", "}", "}", "public", "static", "class", "FooObjectHolder", "{", "private", "FooObject", "foo", "=", "new", "FooObject", "(", ");", "public", "FooObject", "getFoo", "(", ")", "{", "return", "foo", ";", "}", "}", "public", "static", "class", "FooObject", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "368", ",", "8", "+", "368", ",", "17", "@", "@", "static", "int", "flakey_status", "(", "struct", "dm_target", "*", "ti", ",", "status_type_t", "type", ",", "static", "int", "flakey_ioctl", "(", "struct", "dm_target", "*", "ti", ",", "unsigned", "int", "cmd", ",", "unsigned", "long", "arg", ")", "{", "struct", "flakey_c", "*", "fc", "=", "ti", "-", ">", "private", ";", "struct", "dm_dev", "*", "dev", "=", "fc", "-", ">", "dev", ";", "int", "r", "=", "0", ";", "return", "__blkdev_driver_ioctl", "(", "fc", "-", ">", "dev", "-", ">", "bdev", ",", "fc", "-", ">", "dev", "-", ">", "mode", ",", "cmd", ",", "arg", ")", ";", "/", "*", "*", "Only", "pass", "ioctls", "through", "if", "the", "device", "sizes", "match", "exactly", ".", "*", "/", "if", "(", "fc", "-", ">", "start", "|", "|", "ti", "-", ">", "len", "!", "=", "i_size_read", "(", "dev", "-", ">", "bdev", "-", ">", "bd_inode", ")", ">", ">", "SECTOR_SHIFT", ")", "r", "=", "scsi_verify_blk_ioctl", "(", "NULL", ",", "cmd", ")", ";", "return", "r", "?", ":", "__blkdev_driver_ioctl", "(", "dev", "-", ">", "bdev", ",", "dev", "-", ">", "mode", ",", "cmd", ",", "arg", ")", ";", "}", "static", "int", "flakey_merge", "(", "struct", "dm_target", "*", "ti", ",", "struct", "bvec_merge_data", "*", "bvm", ",", "@", "@", "-", "116", ",", "7", "+", "116", ",", "17", "@", "@", "static", "int", "linear_ioctl", "(", "struct", "dm_target", "*", "ti", ",", "unsigned", "int", "cmd", ",", "unsigned", "long", "arg", ")", "{", "struct", "linear_c", "*", "lc", "=", "(", "struct", "linear_c", "*", ")", "ti", "-", ">", "private", ";", "return", "__blkdev_driver_ioctl", "(", "lc", "-", ">", "dev", "-", ">", "bdev", ",", "lc", "-", ">", "dev", "-", ">", "mode", ",", "cmd", ",", "arg", ")", ";", "struct", "dm_dev", "*", "dev", "=", "lc", "-", ">", "dev", ";", "int", "r", "=", "0", ";", "/", "*", "*", "Only", "pass", "ioctls", "through", "if", "the", "device", "sizes", "match", "exactly", ".", "*", "/", "if", "(", "lc", "-", ">", "start", "|", "|", "ti", "-", ">", "len", "!", "=", "i_size_read", "(", "dev", "-", ">", "bdev", "-", ">", "bd_inode", ")", ">", ">", "SECTOR_SHIFT", ")", "r", "=", "scsi_verify_blk_ioctl", "(", "NULL", ",", "cmd", ")", ";", "return", "r", "?", ":", "__blkdev_driver_ioctl", "(", "dev", "-", ">", "bdev", ",", "dev", "-", ">", "mode", ",", "cmd", ",", "arg", ")", ";", "}", "static", "int", "linear_merge", "(", "struct", "dm_target", "*", "ti", ",", "struct", "bvec_merge_data", "*", "bvm", ",", "@", "@", "-", "1520", ",", "6", "+", "1520", ",", "12", "@", "@", "static", "int", "multipath_ioctl", "(", "struct", "dm_target", "*", "ti", ",", "unsigned", "int", "cmd", ",", "spin_unlock_irqrestore", "(", "&", "m", "-", ">", "lock", ",", "flags", ")", ";", "/", "*", "*", "Only", "pass", "ioctls", "through", "if", "the", "device", "sizes", "match", "exactly", ".", "*", "/", "if", "(", "!", "r", "&", "&", "ti", "-", ">", "len", "!", "=", "i_size_read", "(", "bdev", "-", ">", "bd_inode", ")", ">", ">", "SECTOR_SHIFT", ")", "r", "=", "scsi_verify_blk_ioctl", "(", "NULL", ",", "cmd", ")", ";", "return", "r", "?", ":", "__blkdev_driver_ioctl", "(", "bdev", ",", "mode", ",", "cmd", ",", "arg", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "886", ",", "24", "+", "886", ",", "6", "@", "@", "static", "int", "tower_probe", "(", "struct", "usb_interface", "*", "interface", ",", "const", "struct", "usb_device", "dev", "-", ">", "interrupt_in_interval", "=", "interrupt_in_interval", "?", "interrupt_in_interval", ":", "dev", "-", ">", "interrupt_in_endpoint", "-", ">", "bInterval", ";", "dev", "-", ">", "interrupt_out_interval", "=", "interrupt_out_interval", "?", "interrupt_out_interval", ":", "dev", "-", ">", "interrupt_out_endpoint", "-", ">", "bInterval", ";", "/", "*", "we", "can", "register", "the", "device", "now", ",", "as", "it", "is", "ready", "*", "/", "usb_set_intfdata", "(", "interface", ",", "dev", ")", ";", "retval", "=", "usb_register_dev", "(", "interface", ",", "&", "tower_class", ")", ";", "if", "(", "retval", ")", "{", "/", "*", "something", "prevented", "us", "from", "registering", "this", "driver", "*", "/", "dev_err", "(", "idev", ",", "\"", "Not", "able", "to", "get", "a", "minor", "for", "this", "device", ".", "\\", "n", "\"", ");", "usb_set_intfdata", "(", "interface", ",", "NULL", ")", ";", "goto", "error", ";", "}", "dev", "-", ">", "minor", "=", "interface", "-", ">", "minor", ";", "/", "*", "let", "the", "user", "know", "what", "node", "this", "device", "is", "now", "attached", "to", "*", "/", "dev_info", "(", "&", "interface", "-", ">", "dev", ",", "\"", "LEGO", "USB", "Tower", "#", "%", "d", "now", "attached", "to", "major", "\"", "\"", "%", "d", "minor", "%", "d", "\\", "n", "\"", ",", "(", "dev", "-", ">", "minor", "-", "LEGO_USB_TOWER_MINOR_BASE", ")", ",", "USB_MAJOR", ",", "dev", "-", ">", "minor", ")", ";", "/", "*", "get", "the", "firmware", "version", "and", "log", "it", "*", "/", "result", "=", "usb_control_msg", "(", "udev", ",", "usb_rcvctrlpipe", "(", "udev", ",", "0", ")", ",", "@", "@", "-", "924", ",", "6", "+", "906", ",", "23", "@", "@", "static", "int", "tower_probe", "(", "struct", "usb_interface", "*", "interface", ",", "const", "struct", "usb_device", "get_version_reply", ".", "minor", ",", "le16_to_cpu", "(", "get_version_reply", ".", "build_no", ")", ");", "/", "*", "we", "can", "register", "the", "device", "now", ",", "as", "it", "is", "ready", "*", "/", "usb_set_intfdata", "(", "interface", ",", "dev", ")", ";", "retval", "=", "usb_register_dev", "(", "interface", ",", "&", "tower_class", ")", ";", "if", "(", "retval", ")", "{", "/", "*", "something", "prevented", "us", "from", "registering", "this", "driver", "*", "/", "dev_err", "(", "idev", ",", "\"", "Not", "able", "to", "get", "a", "minor", "for", "this", "device", ".", "\\", "n", "\"", ");", "usb_set_intfdata", "(", "interface", ",", "NULL", ")", ";", "goto", "error", ";", "}", "dev", "-", ">", "minor", "=", "interface", "-", ">", "minor", ";", "/", "*", "let", "the", "user", "know", "what", "node", "this", "device", "is", "now", "attached", "to", "*", "/", "dev_info", "(", "&", "interface", "-", ">", "dev", ",", "\"", "LEGO", "USB", "Tower", "#", "%", "d", "now", "attached", "to", "major", "\"", "\"", "%", "d", "minor", "%", "d", "\\", "n", "\"", ",", "(", "dev", "-", ">", "minor", "-", "LEGO_USB_TOWER_MINOR_BASE", ")", ",", "USB_MAJOR", ",", "dev", "-", ">", "minor", ")", ";", "exit", ":", "return", "retval", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2738", ",", "7", "+", "2738", ",", "7", "@", "@", "<", "h3", ">", "or", "in", "a", "<", "a", "href", "=", "\"#", "c3p0_conf", "\"", ">", "HOCON", "(", "typesafe", "-", "config", ")", "file", "<", "/", "a", ">", ".", "<", "/", "p", ">", "<", "div", "class", "=", "\"", "other_properties_desc", "\"", ">", "<", "h4", ">", "<", "a", "name", "=", "\"", "locating_configuration_information", "\"", ">", "Locating", "Configuration", "Information", "<", "/", "a", ">", "</", "h4", ">", "<", "h4", ">", "<", "a", "name", "=", "\"", "locating_configuration_information", "\"", ">", "Locating", "and", "Resolving", "Configuration", "Information", "<", "/", "a", ">", "</", "h4", ">", "<", "p", ">", "Normally", ",", "c3p0", "'", "s", "configuration", "information", "is", "placed", "in", "a", "either", "a", "c3p0", "-", "config", ".", "xml", "or", "c3p0", ".", "properties", "file", "at", "the", "top", "-", "level", "of", "an", "application", "'", "s", "CLASSPATH", ".", "However", ",", "if", "you", "wish", "to", "place", "configuration", "information", "@", "@", "-", "2752", ",", "6", "+", "2752", ",", "17", "@", "@", "<", "h4", ">", "<", "a", "name", "=", "\"", "locating_configuration_information", "\"", ">", "Locating", "Configuration", "Informat", "<", "p", ">", "If", "you", "set", "this", "property", "to", "a", "value", "beginning", "with", "\"", "<", "tt", ">", "classloader", ":", "</", "tt", ">", "\",", "c3p0", "will", "search", "for", "an", "XML", "config", "file", "as", "a", "ClassLoader", "resource", ",", "that", "is", ",", "in", "any", "location", "you", "specify", "under", "your", "classpath", ",", "including", "jar", "-", "file", "<", "tt", ">", "META", "-", "INF", "<", "/", "tt", ">", "directories", ".", "<", "/", "p", ">", "<", "p", ">", "Due", "to", "<", "a", "href", "=", "\"\"", ">", "security", "concerns", "surrounding", "liberal", "parsing", "of", "XML", "references", "<", "/", "a", ">", ",", "as", "of", "c3p0", "-", "0", ".", "9", ".", "5", ".", "3", ",", "c3p0", "by", "default", "<", "i", ">", "no", "longer", "expands", "entity", "references", "in", "XML", "config", "files", "<", "/", "i", ">", ".", "However", ",", "installations", "that", "understand", "the", "full", "transitive", "closure", "of", "all", "entity", "references", "in", "their", "XML", "config", "may", "override", "this", "conservative", "behavior", "by", "setting", "the", "following", "property", "to", "<", "tt", ">", "true", "<", "/", "tt", ">", ":", "<", "/", "p", ">", "<", "ul", "class", "=", "\"", "other_props_list", "\"", ">", "<", "li", ">", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "cfg", ".", "xml", ".", "expandEntityReferences", "<", "/", "li", ">", "<", "/", "ul", ">", "<", "p", ">", "This", "will", "restore", "the", "traditional", ",", "liberal", "parsing", "of", "XML", "config", "files", "that", "c3p0", "utilized", "by", "default", "in", "versions", "prior", "to", "c3p0", "-", "0", ".", "9", ".", "5", ".", "3", ".", "<", "/", "p", ">", "<", "h4", ">", "Logging", "-", "related", "properties", "<", "/", "h4", ">", "<", "p", ">", "@", "@", "-", "115", ",", "7", "+", "115", ",", "13", "@", "@", "private", "final", "static", "void", "warnCommonXmlConfigResourceMisspellings", "(", ")", "}", "public", "static", "C3P0Config", "extractXmlConfigFromDefaultResource", "(", ")", "throws", "Exception", "/", "/", "thanks", "to", "zhutougg", "on", "GitHub", "https", ":", "//", "github", ".", "com", "/", "zhutougg", "/", "c3p0", "/", "commit", "/", "2eb0ea97f745740b18dd45e4a909112d4685f87b", "/", "/", "let", "'", "s", "address", "hazards", "associated", "with", "overliberal", "parsing", "of", "XML", ",", "CVE", "-", "2018", "-", "20433", "/", "/", "/", "/", "by", "default", "entity", "references", "will", "not", "be", "expanded", ",", "but", "callers", "can", "specify", "expansion", "if", "they", "wish", "(", "important", "/", "/", "to", "retain", "backwards", "compatibility", "with", "existing", "config", "files", "where", "users", "understand", "the", "risks", ")", "public", "static", "C3P0Config", "extractXmlConfigFromDefaultResource", "(", "boolean", "expandEntityReferences", ")", "throws", "Exception", "{", "InputStream", "is", "=", "null", ";", "@", "@", "-", "128", ",", "7", "+", "134", ",", "7", "@", "@", "public", "static", "C3P0Config", "extractXmlConfigFromDefaultResource", "(", ")", "throws", "Exception", "return", "null", ";", "}", "else", "return", "extractXmlConfigFromInputStream", "(", "is", ")", ";", "return", "extractXmlConfigFromInputStream", "(", "is", ",", "expandEntityReferences", ")", ";", "}", "finally", "{", "@", "@", "-", "141", ",", "9", "+", "147", ",", "12", "@", "@", "public", "static", "C3P0Config", "extractXmlConfigFromDefaultResource", "(", ")", "throws", "Exception", "}", "}", "public", "static", "C3P0Config", "extractXmlConfigFromInputStream", "(", "InputStream", "is", ")", "throws", "Exception", "public", "static", "C3P0Config", "extractXmlConfigFromInputStream", "(", "InputStream", "is", ",", "boolean", "expandEntityReferences", ")", "throws", "Exception", "{", "DocumentBuilderFactory", "fact", "=", "DocumentBuilderFactory", ".", "newInstance", "(", ");", "fact", ".", "setExpandEntityReferences", "(", "expandEntityReferences", ")", ";", "DocumentBuilder", "db", "=", "fact", ".", "newDocumentBuilder", "(", ");", "Document", "doc", "=", "db", ".", "parse", "(", "is", ")", ";", "@", "@", "-", "253", ",", "6", "+", "262", ",", "22", "@", "@", "private", "static", "HashMap", "extractPropertiesFromLevel", "(", "Element", "elem", ")", "return", "out", ";", "}", "/", "*", "/", "/", "preserve", "old", "public", "API", ",", "but", "with", "security", "-", "conservative", "defaults", "now", "/", "/", "i", "don", "'", "t", "think", "this", "API", "is", "used", "by", "anyone", ",", "so", "I", "'", "m", "gonna", "leave", "this", "commented", "out", "unless", "/", "/", "somebody", "complains", "public", "static", "C3P0Config", "extractXmlConfigFromDefaultResource", "(", ")", "throws", "Exception", "{", "return", "extractXmlConfigFromDefaultResource", "(", "false", ")", ";", "}", "public", "static", "C3P0Config", "extractXmlConfigFromInputStream", "(", "InputStream", "is", ")", "throws", "Exception", "{", "return", "extractXmlConfigFromInputStream", "(", "is", ",", "false", ")", "}", "*", "/", "private", "C3P0ConfigXmlUtils", "(", ")", "{", "}", "}", "@", "@", "-", "43", ",", "8", "+", "43", ",", "9", "@", "@", "public", "class", "DefaultC3P0ConfigFinder", "implements", "C3P0ConfigFinder", "{", "final", "static", "String", "XML_CFG_FILE_KEY", "=", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "cfg", ".", "xml", "\"", ";", "final", "static", "String", "CLASSLOADER_RESOURCE_PREFIX", "=", "\"", "classloader", ":", "\";", "final", "static", "String", "XML_CFG_FILE_KEY", "=", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "cfg", ".", "xml", "\"", ";", "final", "static", "String", "XML_CFG_EXPAND_ENTITY_REFS_KEY", "=", "\"", "com", ".", "mchange", ".", "v2", ".", "c3p0", ".", "cfg", ".", "xml", ".", "expandEntityReferences", "\"", ";", "final", "static", "String", "CLASSLOADER_RESOURCE_PREFIX", "=", "\"", "classloader", ":", "\";", "final", "static", "MLogger", "logger", "=", "MLog", ".", "getLogger", "(", "DefaultC3P0ConfigFinder", ".", "class", ")", ";", "@", "@", "-", "68", ",", "9", "+", "69", ",", "11", "@", "@", "public", "C3P0Config", "findConfig", "(", ")", "throws", "Exception", "flatDefaults", ".", "putAll", "(", "C3P0ConfigUtils", ".", "extractC3P0PropertiesResources", "(", ")", ")", ";", "String", "cfgFile", "=", "C3P0Config", ".", "getPropsFileConfigProperty", "(", "XML_CFG_FILE_KEY", ")", ";", "boolean", "expandEntityReferences", "=", "findExpandEntityReferences", "(", ");", "if", "(", "cfgFile", "=", "=", "null", ")", "{", "C3P0Config", "xmlConfig", "=", "C3P0ConfigXmlUtils", ".", "extractXmlConfigFromDefaultResource", "(", ");", "C3P0Config", "xmlConfig", "=", "C3P0ConfigXmlUtils", ".", "extractXmlConfigFromDefaultResource", "(", "expandEntityReferences", ")", ";", "if", "(", "xmlConfig", "!", "=", "null", ")", "{", "insertDefaultsUnderNascentConfig", "(", "flatDefaults", ",", "xmlConfig", ")", ";", "@", "@", "-", "111", ",", "7", "+", "114", ",", "7", "@", "@", "public", "C3P0Config", "findConfig", "(", ")", "throws", "Exception", "mbOverrideWarning", "(", "\"", "file", "\"", ",", "cfgFile", ")", ";", "}", "C3P0Config", "xmlConfig", "=", "C3P0ConfigXmlUtils", ".", "extractXmlConfigFromInputStream", "(", "is", ")", ";", "C3P0Config", "xmlConfig", "=", "C3P0ConfigXmlUtils", ".", "extractXmlConfigFromInputStream", "(", "is", ",", "expandEntityReferences", ")", ";", "insertDefaultsUnderNascentConfig", "(", "flatDefaults", ",", "xmlConfig", ")", ";", "out", "=", "xmlConfig", ";", "}", "@", "@", "-", "142", ",", "4", "+", "145", ",", "17", "@", "@", "private", "void", "mbOverrideWarning", "(", "String", "srcType", ",", "String", "srcName", ")", "if", "(", "warn_of_xml_overrides", "&", "&", "logger", ".", "isLoggable", "(", "MLevel", ".", "WARNING", ")", ")", "logger", ".", "log", "(", "MLevel", ".", "WARNING", ",", "\"", "Configuation", "defined", "in", "\"", "+", "srcType", "+", "\"", "'\"", "+", "srcName", "+", "\"", "'", "overrides", "all", "other", "c3p0", "config", ".", "\"", ")", ";", "}", "private", "boolean", "findExpandEntityReferences", "(", ")", "{", "String", "check", "=", "C3P0Config", ".", "getPropsFileConfigProperty", "(", "XML_CFG_EXPAND_ENTITY_REFS_KEY", ")", ";", "boolean", "out", "=", "(", "check", "!", "=", "null", "&", "&", "check", ".", "trim", "(", ").", "equalsIgnoreCase", "(", "\"", "true", "\"", "))", ";", "if", "(", "out", "&", "&", "logger", ".", "isLoggable", "(", "MLevel", ".", "WARNING", ")", ")", "logger", ".", "log", "(", "MLevel", ".", "WARNING", ",", "\"", "Configuration", "property", "'", "\"", "+", "XML_CFG_EXPAND_ENTITY_REFS_KEY", "+", "\"", "'", "is", "set", "to", "'", "true", "'", ".", "\"", "\"", "Entity", "references", "will", "be", "resolved", "in", "XML", "c3p0", "configuration", "files", ".", "This", "may", "be", "a", "security", "hazard", ".", "\"", "\"", "Be", "sure", "you", "understand", "your", "XML", "config", "files", ",", "including", "the", "full", "transitive", "closure", "of", "entity", "references", ".", "\"", "\"", "See", "CVE", "-", "2018", "-", "20433", ",", "https", ":", "//", "nvd", ".", "nist", ".", "gov", "/", "vuln", "/", "detail", "/", "CVE", "-", "2018", "-", "20433", "\"", ");", "return", "out", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "14", ",", "7", "+", "14", ",", "6", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "net", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "lang", ".", "reflect", ".", "Constructor", ";", "import", "java", ".", "net", ".", "ServerSocket", ";", "import", "java", ".", "net", ".", "Socket", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "@", "@", "-", "0", ",", "0", "+", "1", ",", "28", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "net", ".", "server", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "slf4j", ".", "helpers", ".", "BasicMarker", ";", "import", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "Logger", ";", "import", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "spi", ".", "LoggerContextVO", ";", "import", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "spi", ".", "LoggingEventVO", ";", "import", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "spi", ".", "ThrowableProxyVO", ";", "public", "class", "LogbackClassicSerializationHelper", "{", "static", "public", "List", "<", "String", ">", "getWhilelist", "(", ")", "{", "List", "<", "String", ">", "whitelist", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "whitelist", ".", "add", "(", "LoggingEventVO", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "LoggerContextVO", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "ThrowableProxyVO", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "StackTraceElement", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "BasicMarker", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "BasicMarker", ".", "class", ".", "getName", "(", "))", ";", "whitelist", ".", "add", "(", "Logger", ".", "class", ".", "getName", "(", "))", ";", "return", "whitelist", ";", "}", "}", "@", "@", "-", "14", ",", "7", "+", "14", ",", "10", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "classic", ";", "import", "java", ".", "io", ".", "*;", "import", "java", ".", "util", ".", "List", ";", "import", "ch", ".", "qos", ".", "logback", ".", "classic", ".", "net", ".", "server", ".", "LogbackClassicSerializationHelper", ";", "import", "ch", ".", "qos", ".", "logback", ".", "core", ".", "net", ".", "HardenedObjectInputStream", ";", "import", "ch", ".", "qos", ".", "logback", ".", "core", ".", "util", ".", "CoreTestConstants", ";", "import", "org", ".", "junit", ".", "After", ";", "import", "org", ".", "junit", ".", "Before", ";", "@", "@", "-", "36", ",", "7", "+", "39", ",", "8", "@", "@", "ByteArrayOutputStream", "bos", ";", "ObjectOutputStream", "oos", ";", "ObjectInputStream", "inputStream", ";", "List", "<", "String", ">", "whitelist", ";", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "lc", "=", "new", "LoggerContext", "(", ");", "@", "@", "-", "45", ",", "6", "+", "49", ",", "8", "@", "@", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "/", "/", "create", "the", "byte", "output", "stream", "bos", "=", "new", "ByteArrayOutputStream", "(", ");", "oos", "=", "new", "ObjectOutputStream", "(", "bos", ")", ";", "whitelist", "=", "LogbackClassicSerializationHelper", ".", "getWhilelist", "(", ");", "whitelist", ".", "add", "(", "Foo", ".", "class", ".", "getName", "(", "))", ";", "}", "@", "After", "@", "@", "-", "110", ",", "7", "+", "116", ",", "7", "@", "@", "public", "void", "deepTreeSerialization", "(", ")", "throws", "IOException", "{", "private", "Foo", "writeAndRead", "(", "Foo", "foo", ")", "throws", "IOException", ",", "ClassNotFoundException", "{", "writeObject", "(", "oos", ",", "foo", ")", ";", "ByteArrayInputStream", "bis", "=", "new", "ByteArrayInputStream", "(", "bos", ".", "toByteArray", "(", "))", ";", "inputStream", "=", "new", "ObjectInputStream", "(", "bis", ")", ";", "inputStream", "=", "new", "HardenedObjectInputStream", "(", "bis", ",", "whitelist", ")", ";", "Foo", "fooBack", "=", "readFooObject", "(", "inputStream", ")", ";", "inputStream", ".", "close", "(", ");", "return", "fooBack", ";", "@", "@", "-", "0", ",", "0", "+", "1", ",", "48", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "core", ".", "net", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "InvalidClassException", ";", "import", "java", ".", "io", ".", "ObjectInputStream", ";", "import", "java", ".", "io", ".", "ObjectStreamClass", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "List", ";", "/", "**", "*", "*", "@", "author", "Ceki", "G", "&", "uuml", ";", "lc", "&", "uuml", ";", "*", "@", "since", "1", ".", "2", ".", "0", "*", "/", "public", "class", "HardenedObjectInputStream", "extends", "ObjectInputStream", "{", "List", "<", "String", ">", "whitelistedClassNames", ";", "String", "[", "]", "javaPackages", "=", "new", "String", "[", "]", "{", "\"", "java", ".", "lang", "\"", ",", "\"", "java", ".", "util", "\"", "};", "public", "HardenedObjectInputStream", "(", "InputStream", "in", ",", "List", "<", "String", ">", "whilelist", ")", "throws", "IOException", "{", "super", "(", "in", ")", ";", "this", ".", "whitelistedClassNames", "=", "Collections", ".", "synchronizedList", "(", "new", "ArrayList", "<", "String", ">", "(", "whilelist", ")", ");", "}", "@", "Override", "protected", "Class", "<", "?>", "resolveClass", "(", "ObjectStreamClass", "anObjectStreamClass", ")", "throws", "IOException", ",", "ClassNotFoundException", "{", "String", "incomingClassName", "=", "anObjectStreamClass", ".", "getName", "(", ");", "if", "(", "!", "isWhitelisted", "(", "incomingClassName", ")", ")", "{", "throw", "new", "InvalidClassException", "(", "\"", "Unauthorized", "deserialization", "attempt", "\"", ",", "anObjectStreamClass", ".", "getName", "(", "))", ";", "}", "return", "super", ".", "resolveClass", "(", "anObjectStreamClass", ")", ";", "}", "private", "boolean", "isWhitelisted", "(", "String", "incomingClassName", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "javaPackages", ".", "length", ";", "i", "+", "+)", "{", "if", "(", "incomingClassName", ".", "startsWith", "(", "javaPackages", "[", "i", "]", "))", "return", "true", ";", "}", "for", "(", "String", "className", ":", "whitelistedClassNames", ")", "{", "if", "(", "incomingClassName", ".", "equals", "(", "className", ")", ")", "return", "true", ";", "}", "return", "false", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "61", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "core", ".", "net", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "java", ".", "io", ".", "ByteArrayInputStream", ";", "import", "java", ".", "io", ".", "ByteArrayOutputStream", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "ObjectOutputStream", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "junit", ".", "After", ";", "import", "org", ".", "junit", ".", "Before", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "HardenedObjectInputStreamTest", "{", "ByteArrayOutputStream", "bos", ";", "ObjectOutputStream", "oos", ";", "HardenedObjectInputStream", "inputStream", ";", "List", "<", "String", ">", "whitelist", "=", "new", "ArrayList", "<", "String", ">", "()", ";", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "whitelist", ".", "add", "(", "Innocent", ".", "class", ".", "getName", "(", "))", ";", "bos", "=", "new", "ByteArrayOutputStream", "(", ");", "oos", "=", "new", "ObjectOutputStream", "(", "bos", ")", ";", "}", "@", "After", "public", "void", "tearDown", "(", ")", "throws", "Exception", "{", "}", "@", "Test", "public", "void", "smoke", "(", ")", "throws", "ClassNotFoundException", ",", "IOException", "{", "Innocent", "innocent", "=", "new", "Innocent", "(", ");", "innocent", ".", "setAnInt", "(", "1", ")", ";", "innocent", ".", "setAnInteger", "(", "2", ")", ";", "innocent", ".", "setaString", "(", "\"", "smoke", "\"", ");", "Innocent", "back", "=", "writeAndRead", "(", "innocent", ")", ";", "assertEquals", "(", "innocent", ",", "back", ")", ";", "}", "private", "Innocent", "writeAndRead", "(", "Innocent", "innocent", ")", "throws", "IOException", ",", "ClassNotFoundException", "{", "writeObject", "(", "oos", ",", "innocent", ")", ";", "ByteArrayInputStream", "bis", "=", "new", "ByteArrayInputStream", "(", "bos", ".", "toByteArray", "(", "))", ";", "inputStream", "=", "new", "HardenedObjectInputStream", "(", "bis", ",", "whitelist", ")", ";", "Innocent", "fooBack", "=", "(", "Innocent", ")", "inputStream", ".", "readObject", "(", ");", "inputStream", ".", "close", "(", ");", "return", "fooBack", ";", "}", "private", "void", "writeObject", "(", "ObjectOutputStream", "oos", ",", "Object", "o", ")", "throws", "IOException", "{", "oos", ".", "writeObject", "(", "o", ")", ";", "oos", ".", "flush", "(", ");", "oos", ".", "close", "(", ");", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "69", "@", "@", "package", "ch", ".", "qos", ".", "logback", ".", "core", ".", "net", ";", "public", "class", "Innocent", "implements", "java", ".", "io", ".", "Serializable", "{", "private", "static", "final", "long", "serialVersionUID", "=", "-", "1227008349289885025L", ";", "int", "anInt", ";", "Integer", "anInteger", ";", "String", "aString", ";", "public", "int", "getAnInt", "(", ")", "{", "return", "anInt", ";", "}", "public", "void", "setAnInt", "(", "int", "anInt", ")", "{", "this", ".", "anInt", "=", "anInt", ";", "}", "public", "Integer", "getAnInteger", "(", ")", "{", "return", "anInteger", ";", "}", "public", "void", "setAnInteger", "(", "Integer", "anInteger", ")", "{", "this", ".", "anInteger", "=", "anInteger", ";", "}", "public", "String", "getaString", "(", ")", "{", "return", "aString", ";", "}", "public", "void", "setaString", "(", "String", "aString", ")", "{", "this", ".", "aString", "=", "aString", ";", "}", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "final", "int", "prime", "=", "31", ";", "int", "result", "=", "1", ";", "result", "=", "prime", "*", "result", "+", "(", "(", "aString", "=", "=", "null", ")", "?", "0", ":", "aString", ".", "hashCode", "(", "))", ";", "result", "=", "prime", "*", "result", "+", "anInt", ";", "result", "=", "prime", "*", "result", "+", "(", "(", "anInteger", "=", "=", "null", ")", "?", "0", ":", "anInteger", ".", "hashCode", "(", "))", ";", "return", "result", ";", "}", "@", "Override", "public", "boolean", "equals", "(", "Object", "obj", ")", "{", "if", "(", "this", "=", "=", "obj", ")", "return", "true", ";", "if", "(", "obj", "=", "=", "null", ")", "return", "false", ";", "if", "(", "getClass", "(", ")", "!", "=", "obj", ".", "getClass", "(", "))", "return", "false", ";", "Innocent", "other", "=", "(", "Innocent", ")", "obj", ";", "if", "(", "aString", "=", "=", "null", ")", "{", "if", "(", "other", ".", "aString", "!", "=", "null", ")", "return", "false", ";", "}", "else", "if", "(", "!", "aString", ".", "equals", "(", "other", ".", "aString", ")", ")", "return", "false", ";", "if", "(", "anInt", "!", "=", "other", ".", "anInt", ")", "return", "false", ";", "if", "(", "anInteger", "=", "=", "null", ")", "{", "if", "(", "other", ".", "anInteger", "!", "=", "null", ")", "return", "false", ";", "}", "else", "if", "(", "!", "anInteger", ".", "equals", "(", "other", ".", "anInteger", ")", ")", "return", "false", ";", "return", "true", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "164", ",", "6", "+", "164", ",", "24", "@", "@", "try", "{", "processStuffResponse", "(", "&", "lt", ";", "normal", "JSON", "body", "&", "gt", ";", ")}", "catch", "(", "e", ")", "{}", "<", "/", "programlisting", ">", "You", "can", "enable", "this", "feature", "by", "setting", "the", "resteasy", ".", "jsonp", ".", "silent", "property", "to", "true", "<", "/", "para", ">", "<", "para", ">", "<", "emphasis", "role", "=", "\"", "bold", "\"", ">", "Note", ".", "</", "emphasis", ">", "Because", "JSONP", "can", "be", "used", "in", "<", "emphasis", "role", "=", "\"", "bold", "\"", ">", "Cross", "Site", "Scripting", "Inclusion", "(", "XSSI", ")", "attacks", "<", "/", "emphasis", ">", ",", "<", "methodname", ">", "Jackson2JsonpInterceptor", "<", "/", "methodname", ">", "is", "disabled", "by", "default", ".", "Two", "steps", "are", "necessary", "to", "enable", "it", ":", "<", "/", "para", ">", "<", "orderedlist", ">", "<", "listitem", ">", "As", "noted", "above", ",", "<", "methodname", ">", "Jackson2JsonpInterceptor", "<", "/", "methodname", ">", "must", "be", "included", "in", "the", "deployment", ".", "For", "example", ",", "a", "service", "file", "META", "-", "INF", "/", "services", "/", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "with", "the", "line", "<", "programlisting", ">", "org", ".", "jboss", ".", "resteasy", ".", "plugins", ".", "providers", ".", "jackson", ".", "Jackson2JsonpInterceptor", "<", "/", "programlisting", ">", "may", "be", "included", "on", "the", "classpath", "<", "/", "listitem", ">", "<", "listitem", ">", "Also", ",", "the", "servlet", "context", "parameter", "parameter", "\"", "resteasy", ".", "jsonp", ".", "enable", "\"", "must", "be", "set", "to", "\"", "true", "\"", ".", "<", "/", "listitem", ">", "<", "/", "orderedlist", ">", "<", "/", "sect1", ">", "<", "sect1", "id", "=", "\"", "Jackson_JSON_Decorator", "\"", ">", "<", "title", ">", "Jackson", "JSON", "Decorator", "<", "/", "title", ">", "@", "@", "-", "109", ",", "6", "+", "109", ",", "7", "@", "@", "public", "Jackson2JsonpInterceptor", "(", ")", "{", "ResteasyConfiguration", "context", "=", "ResteasyProviderFactory", ".", "getContextData", "(", "ResteasyConfiguration", ".", "class", ")", ";", "if", "(", "context", "!", "=", "null", ")", "{", "wrapInTryCatch", "=", "Boolean", ".", "parseBoolean", "(", "context", ".", "getParameter", "(", "\"", "resteasy", ".", "jsonp", ".", "silent", "\"", "))", ";", "enabled", "=", "Boolean", ".", "parseBoolean", "(", "context", ".", "getParameter", "(", "\"", "resteasy", ".", "jsonp", ".", "enable", "\"", "))", ";", "}", "}", "@", "@", "-", "121", ",", "6", "+", "122", ",", "11", "@", "@", "public", "Jackson2JsonpInterceptor", "(", ")", "{", "*", "The", "{", "@", "link", "Providers", "}", "used", "to", "retrieve", "the", "{", "@", "link", "#", "objectMapper", "}", "from", ".", "*", "/", "protected", "Providers", "providers", ";", "/", "**", "*", "Is", "this", "interceptor", "enabled", ".", "*", "/", "private", "boolean", "enabled", "=", "false", ";", "/", "**", "*", "This", "subclass", "of", "{", "@", "link", "CommitHeaderOutputStream", "}", "overrides", "the", "{", "@", "link", "#", "close", "(", ")}", "method", "so", "it", "would", "commit", "@", "@", "-", "144", ",", "7", "+", "150", ",", "7", "@", "@", "public", "void", "close", "(", ")", "throws", "IOException", "{", "@", "Override", "public", "void", "aroundWriteTo", "(", "WriterInterceptorContext", "context", ")", "throws", "IOException", ",", "WebApplicationException", "{", "String", "function", "=", "uri", ".", "getQueryParameters", "(", ").", "getFirst", "(", "callbackQueryParameter", ")", ";", "if", "(", "function", "!", "=", "null", "&", "&", "!", "function", ".", "trim", "(", ").", "isEmpty", "(", ")", "&", "&", "!", "jsonpCompatibleMediaTypes", ".", "getPossible", "(", "context", ".", "getMediaType", "(", "))", ".", "isEmpty", "(", "))", "{", "if", "(", "enabled", "&", "&", "function", "!", "=", "null", "&", "&", "!", "function", ".", "trim", "(", ").", "isEmpty", "(", ")", "&", "&", "!", "jsonpCompatibleMediaTypes", ".", "getPossible", "(", "context", ".", "getMediaType", "(", "))", ".", "isEmpty", "(", "))", "{", "OutputStreamWriter", "writer", "=", "new", "OutputStreamWriter", "(", "context", ".", "getOutputStream", "(", "))", ";", "@", "@", "-", "25", ",", "6", "+", "25", ",", "9", "@", "@", "import", "org", ".", "junit", ".", "runner", ".", "RunWith", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "javax", ".", "ws", ".", "rs", ".", "Consumes", ";", "import", "javax", ".", "ws", ".", "rs", ".", "GET", ";", "import", "javax", ".", "ws", ".", "rs", ".", "POST", ";", "@", "@", "-", "47", ",", "7", "+", "50", ",", "9", "@", "@", "protected", "static", "final", "Logger", "logger", "=", "Logger", ".", "getLogger", "(", "Jackson2Test", ".", "class", ".", "getName", "(", "))", ";", "private", "static", "final", "String", "JETTISON_DEPLOYMENT", "=", "\"", "jettison", "\"", ";", "private", "static", "final", "String", "JSONP_ENABLED", "=", "\"", "JSONP_enabled", "\"", ";", "private", "static", "final", "String", "JSONP_DISABLED", "=", "\"", "JSONP_disabled", "\"", ";", "@", "Path", "(", "\"/", "products", "\"", ")", "public", "interface", "Jackson2Proxy", "{", "@", "GET", "@", "@", "-", "68", ",", "15", "+", "73", ",", "40", "@", "@", "static", "ResteasyClient", "client", ";", "@", "Deployment", "(", "name", "=", "\"", "default", "\"", ")", "public", "static", "Archive", "<", "?>", "deploy", "(", ")", "{", "WebArchive", "war", "=", "TestUtil", ".", "prepareArchive", "(", "Jackson2Test", ".", "class", ".", "getSimpleName", "(", "))", ";", "war", ".", "addClass", "(", "Jackson2Test", ".", "class", ")", ";", "war", ".", "addAsResource", "(", "Jackson2Test", ".", "class", ".", "getPackage", "(", "),", "\"", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ",", "\"", "META", "-", "INF", "/", "services", "/", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ");", "war", ".", "addAsResource", "(", "Jackson2Test", ".", "class", ".", "getPackage", "(", "),", "\"", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ",", "\"", "META", "-", "INF", "/", "services", "/", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ");", "return", "TestUtil", ".", "finishContainerPrepare", "(", "war", ",", "null", ",", "Jackson2Resource", ".", "class", ",", "Jackson2Product", ".", "class", ",", "Jackson2XmlResource", ".", "class", ",", "Jackson2XmlProduct", ".", "class", ",", "Jackson2JAXBResource", ".", "class", ",", "Jackson2XmlResourceWithJacksonAnnotation", ".", "class", ",", "Jackson2XmlResourceWithJAXB", ".", "class", ")", ";", "}", "@", "Deployment", "(", "name", "=", "\"", "JSONPenabled", "\"", ")", "public", "static", "Archive", "<", "?>", "deployJSONPenabled", "(", ")", "{", "WebArchive", "war", "=", "TestUtil", ".", "prepareArchive", "(", "JSONP_ENABLED", ")", ";", "war", ".", "addClass", "(", "Jackson2Test", ".", "class", ")", ";", "war", ".", "addAsResource", "(", "Jackson2Test", ".", "class", ".", "getPackage", "(", "),", "\"", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ",", "\"", "META", "-", "INF", "/", "services", "/", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ");", "Map", "<", "String", ",", "String", ">", "contextParam", "=", "new", "HashMap", "<", ">(", ");", "contextParam", ".", "put", "(", "\"", "resteasy", ".", "jsonp", ".", "enable", "\"", ",", "\"", "true", "\"", ");", "return", "TestUtil", ".", "finishContainerPrepare", "(", "war", ",", "contextParam", ",", "Jackson2Resource", ".", "class", ",", "Jackson2Product", ".", "class", ",", "Jackson2XmlResource", ".", "class", ",", "Jackson2XmlProduct", ".", "class", ",", "Jackson2JAXBResource", ".", "class", ",", "Jackson2XmlResourceWithJacksonAnnotation", ".", "class", ",", "Jackson2XmlResourceWithJAXB", ".", "class", ")", ";", "}", "@", "Deployment", "(", "name", "=", "\"", "JSONPdisabled", "\"", ")", "public", "static", "Archive", "<", "?>", "deployJSONPdisabled", "(", ")", "{", "WebArchive", "war", "=", "TestUtil", ".", "prepareArchive", "(", "JSONP_DISABLED", ")", ";", "war", ".", "addClass", "(", "Jackson2Test", ".", "class", ")", ";", "war", ".", "addAsResource", "(", "Jackson2Test", ".", "class", ".", "getPackage", "(", "),", "\"", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ",", "\"", "META", "-", "INF", "/", "services", "/", "javax", ".", "ws", ".", "rs", ".", "ext", ".", "Providers", "\"", ");", "Map", "<", "String", ",", "String", ">", "contextParam", "=", "new", "HashMap", "<", ">(", ");", "contextParam", ".", "put", "(", "\"", "resteasy", ".", "jsonp", ".", "enable", "\"", ",", "\"", "false", "\"", ");", "return", "TestUtil", ".", "finishContainerPrepare", "(", "war", ",", "contextParam", ",", "Jackson2Resource", ".", "class", ",", "Jackson2Product", ".", "class", ",", "Jackson2XmlResource", ".", "class", ",", "Jackson2XmlProduct", ".", "class", ",", "Jackson2JAXBResource", ".", "class", ",", "Jackson2XmlResourceWithJacksonAnnotation", ".", "class", ",", "Jackson2XmlResourceWithJAXB", ".", "class", ")", ";", "}", "/", "**", "*", "Jettison", "is", "deprecated", ",", "so", "it", "needs", "to", "be", "added", "to", "EAP", "manually", "(", "see", "JBEAP", "-", "2856", ")", ".", "@", "@", "-", "88", ",", "7", "+", "118", ",", "8", "@", "@", "war", ".", "addAsManifestResource", "(", "\"", "jboss", "-", "deployment", "-", "structure", "-", "jackson", "-", "v2", "-", "jettison", ".", "xml", "\"", ",", "\"", "jboss", "-", "deployment", "-", "structure", ".", "xml", "\"", ");", "return", "TestUtil", ".", "finishContainerPrepare", "(", "war", ",", "null", ",", "Jackson2Resource", ".", "class", ",", "Jackson2Product", ".", "class", ",", "Jackson2XmlResource", ".", "class", ",", "Jackson2XmlProduct", ".", "class", ",", "Jackson2JAXBResource", ".", "class", ",", "Jackson2XmlResourceWithJacksonAnnotation", ".", "class", ",", "Jackson2XmlResourceWithJAXB", ".", "class", ")", ";", "Jackson2XmlResourceWithJacksonAnnotation", ".", "class", ",", "Jackson2XmlResourceWithJAXB", ".", "class", ",", "org", ".", "jboss", ".", "resteasy", ".", "plugins", ".", "providers", ".", "jackson", ".", "Jackson2JsonpInterceptor", ".", "class", ")", ";", "}", "@", "Before", "@", "@", "-", "136", ",", "20", "+", "167", ",", "55", "@", "@", "public", "void", "testJacksonString", "(", ")", "throws", "Exception", "{", "/", "**", "*", "@", "tpTestDetails", "Client", "sends", "GET", "request", "for", "Json", "resource", ".", "The", "request", "url", "contains", "'", "callback", "'", "keyword", "which", "should", "*", "trigger", "processing", "of", "the", "response", "in", "the", "format", "callbackvalue", "(", "\"", "key", "\"", ":\"", "value", "\"", ")", "*", "@", "tpPassCrit", "The", "resource", "returns", "json", "entities", "in", "correct", "format", "*", "@", "tpPassCrit", "The", "resource", "returns", "json", "entities", "in", "correct", "format", "(", "with", "callback", "function", "wrapping", ")", "*", "@", "tpInfo", "This", "test", "fails", ",", "see", "RESTEASY", "-", "1168", ".", "This", "should", "be", "fixed", "in", "3", ".", "0", ".", "12", "release", ".", "*", "@", "tpSince", "RESTEasy", "3", ".", "0", ".", "16", "*", "@", "tpSince", "RESTEasy", "3", ".", "0", ".", "16", "as", "testJacksonJsonp", "(", ")", "(", "but", "Jackson2JsonpInterceptor", "didn", "'", "t", "need", "to", "be", "enabled", ")", "*", "/", "@", "Test", "public", "void", "testJacksonJsonp", "(", ")", "throws", "Exception", "{", "WebTarget", "target", "=", "client", ".", "target", "(", "generateURL", "(", "\"/", "products", "/", "333", "?", "callback", "=", "foo", "\"", "))", ";", "public", "void", "testJacksonJsonpEnabled", "(", ")", "throws", "Exception", "{", "WebTarget", "target", "=", "client", ".", "target", "(", "PortProviderUtil", ".", "generateURL", "(", "\"/", "products", "/", "333", "?", "callback", "=", "foo", "\"", ",", "JSONP_ENABLED", ")", ");", "Response", "response", "=", "target", ".", "request", "(", ").", "get", "(", ");", "String", "entity", "=", "response", ".", "readEntity", "(", "String", ".", "class", ")", ";", "logger", ".", "info", "(", "entity", ")", ";", "Assert", ".", "assertEquals", "(", "HttpResponseCodes", ".", "SC_OK", ",", "response", ".", "getStatus", "(", "))", ";", "Assert", ".", "assertEquals", "(", "\"", "The", "response", "entity", "content", "doesn", "'", "t", "match", "the", "expected", "\"", ",", "\"", "foo", "(", "{\\", "\"", "name", "\\", "\":", "\\\"", "Iphone", "\\", "\",", "\\\"", "id", "\\", "\":", "333", "}", ")\"", ",", "entity", ")", ";", "response", ".", "close", "(", ");", "}", "/", "**", "*", "@", "tpTestDetails", "Client", "sends", "GET", "request", "for", "Json", "resource", ".", "The", "request", "url", "contains", "'", "callback", "'", "keyword", "which", "should", "*", "trigger", "processing", "of", "the", "response", "in", "the", "format", "callbackvalue", "(", "\"", "key", "\"", ":\"", "value", "\"", ").", "However", ",", "Jackson2JsonpInterceptor", "is", "disabled", ".", "*", "@", "tpPassCrit", "The", "resource", "returns", "json", "entities", "in", "correct", "format", "(", "without", "callback", "function", "wrapping", ")", "*", "@", "tpSince", "RESTEasy", "3", ".", "1", ".", "0", ".", "Final", "*", "/", "@", "Test", "public", "void", "testJacksonJsonpDisabled", "(", ")", "throws", "Exception", "{", "WebTarget", "target", "=", "client", ".", "target", "(", "PortProviderUtil", ".", "generateURL", "(", "\"/", "products", "/", "333", "?", "callback", "=", "foo", "\"", ",", "JSONP_DISABLED", ")", ");", "Response", "response", "=", "target", ".", "request", "(", ").", "get", "(", ");", "String", "entity", "=", "response", ".", "readEntity", "(", "String", ".", "class", ")", ";", "logger", ".", "info", "(", "entity", ")", ";", "Assert", ".", "assertEquals", "(", "HttpResponseCodes", ".", "SC_OK", ",", "response", ".", "getStatus", "(", "))", ";", "Assert", ".", "assertEquals", "(", "\"", "Jackson2JsonpInterceptor", "should", "be", "disabled", "\"", ",", "\"", "{\\", "\"", "name", "\\", "\":", "\\\"", "Iphone", "\\", "\",", "\\\"", "id", "\\", "\":", "333", "}", "\",", "entity", ")", ";", "response", ".", "close", "(", ");", "}", "/", "**", "*", "@", "tpTestDetails", "Client", "sends", "GET", "request", "for", "Json", "resource", ".", "The", "request", "url", "contains", "'", "callback", "'", "keyword", "which", "should", "*", "trigger", "processing", "of", "the", "response", "in", "the", "format", "callbackvalue", "(", "\"", "key", "\"", ":\"", "value", "\"", ")", "*", "@", "tpPassCrit", "The", "resource", "returns", "json", "entities", "in", "correct", "format", "(", "without", "callback", "function", "wrapping", ")", "*", "@", "tpInfo", "This", "test", "fails", ",", "see", "RESTEASY", "-", "1168", ".", "This", "should", "be", "fixed", "in", "3", ".", "0", ".", "12", "release", ".", "*", "@", "tpSince", "RESTEasy", "3", ".", "0", ".", "16", "(", "as", "testJacksonJsonp", "(", ")", "but", "Jackson2JsonpInterceptor", "would", "have", "been", "enabled", ")", "*", "/", "@", "Test", "public", "void", "testJacksonJsonpDefault", "(", ")", "throws", "Exception", "{", "WebTarget", "target", "=", "client", ".", "target", "(", "generateURL", "(", "\"/", "products", "/", "333", "?", "callback", "=", "foo", "\"", "))", ";", "Response", "response", "=", "target", ".", "request", "(", ").", "get", "(", ");", "String", "entity", "=", "response", ".", "readEntity", "(", "String", ".", "class", ")", ";", "logger", ".", "info", "(", "entity", ")", ";", "Assert", ".", "assertEquals", "(", "HttpResponseCodes", ".", "SC_OK", ",", "response", ".", "getStatus", "(", "))", ";", "Assert", ".", "assertEquals", "(", "\"", "Jackson2JsonpInterceptor", "should", "be", "disabled", "\"", ",", "\"", "{\\", "\"", "name", "\\", "\":", "\\\"", "Iphone", "\\", "\",", "\\\"", "id", "\\", "\":", "333", "}", "\",", "entity", ")", ";", "response", ".", "close", "(", ");", "}", "/", "**", "*", "@", "tpTestDetails", "Client", "sends", "GET", "request", "for", "json", "annotated", "resource", ".", "The", "resource", "is", "annotated", "with", "@", "Formatted", ","], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "230", ",", "11", "+", "230", ",", "11", "@", "@", "static", "int", "get_prng_bytes", "(", "char", "*", "buf", ",", "size_t", "nbytes", ",", "struct", "prng_context", "*", "ctx", ",", "*", "/", "if", "(", "byte_count", "<", "DEFAULT_BLK_SZ", ")", "{", "empty_rbuf", ":", "for", "(", ";", "ctx", "-", ">", "rand_data_valid", "<", "DEFAULT_BLK_SZ", ";", "ctx", "-", ">", "rand_data_valid", "+", "+)", "{", "while", "(", "ctx", "-", ">", "rand_data_valid", "<", "DEFAULT_BLK_SZ", ")", "{", "*", "ptr", "=", "ctx", "-", ">", "rand_data", "[", "ctx", "-", ">", "rand_data_valid", "]", ";", "ptr", "+", "+;", "byte_count", "-", "-;", "ctx", "-", ">", "rand_data_valid", "+", "+;", "if", "(", "byte_count", "=", "=", "0", ")", "goto", "done", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1356", ",", "6", "+", "1356", ",", "8", "@", "@", "static", "int", "do_umount", "(", "struct", "mount", "*", "mnt", ",", "int", "flags", ")", "*", "Special", "case", "for", "\"", "unmounting", "\"", "root", ".", "..", "*", "we", "just", "try", "to", "remount", "it", "readonly", ".", "*", "/", "if", "(", "!", "capable", "(", "CAP_SYS_ADMIN", ")", ")", "return", "-", "EPERM", ";", "down_write", "(", "&", "sb", "-", ">", "s_umount", ")", ";", "if", "(", "!(", "sb", "-", ">", "s_flags", "&", "MS_RDONLY", ")", ")", "retval", "=", "do_remount_sb", "(", "sb", ",", "MS_RDONLY", ",", "NULL", ",", "0", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "824", ",", "8", "+", "824", ",", "8", "@", "@", "static", "int", "irda_bind", "(", "struct", "socket", "*", "sock", ",", "struct", "sockaddr", "*", "uaddr", ",", "int", "addr_len", ")", "err", "=", "irda_open_tsap", "(", "self", ",", "addr", "-", ">", "sir_lsap_sel", ",", "addr", "-", ">", "sir_name", ")", ";", "if", "(", "err", "<", "0", ")", "{", "kfree", "(", "self", "-", ">", "ias_obj", "-", ">", "name", ")", ";", "kfree", "(", "self", "-", ">", "ias_obj", ")", ";", "irias_delete_object", "(", "self", "-", ">", "ias_obj", ")", ";", "self", "-", ">", "ias_obj", "=", "NULL", ";", "goto", "out", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1221", ",", "6", "+", "1221", ",", "7", "@", "@", "SPL_METHOD", "(", "SplDoublyLinkedList", ",", "unserialize", ")", "zval_ptr_dtor", "(", "&", "elem", ")", ";", "goto", "error", ";", "}", "var_push_dtor", "(", "&", "var_hash", ",", "&", "elem", ")", ";", "spl_ptr_llist_push", "(", "intern", "-", ">", "llist", ",", "elem", "TSRMLS_CC", ")", ";", "}", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "-", "-", "TEST", "SPL", ":", "Bug", "#", "70365", "yet", "another", "use", "-", "after", "-", "free", "vulnerability", "in", "unserialize", "(", ")", "with", "SplObjectStorage", "SPL", ":", "Bug", "#", "70365", "use", "-", "after", "-", "free", "vulnerability", "in", "unserialize", "(", ")", "with", "SplObjectStorage", "-", "-", "FILE", "<", "?", "php", "class", "obj", "{", "@", "@", "-", "0", ",", "0", "+", "1", ",", "54", "@", "@", "-", "-", "TEST", "-", "-", "SPL", ":", "Bug", "#", "70366", "use", "-", "after", "-", "free", "vulnerability", "in", "unserialize", "(", ")", "with", "SplDoublyLinkedList", "-", "-", "FILE", "-", "-", "<", "?", "php", "class", "obj", "{", "var", "$", "ryat", ";", "function", "__wakeup", "(", ")", "{", "$", "this", "-", ">", "ryat", "=", "1", ";", "}", "}", "$", "fakezval", "=", "ptr2str", "(", "1122334455", ")", ";", "$", "fakezval", ".", "=", "ptr2str", "(", "0", ")", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\\", "x00", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x01", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\"", ";", "$", "fakezval", ".", "=", "\"", "\\", "x00", "\\", "x00", "\"", ";", "$", "inner", "=", "'", "i", ":", "1234", ";", ":", "i", ":", "1", ";", "';", "$", "exploit", "=", "'", "a", ":", "5", ":", "{", "i", ":", "0", ";", "i", ":", "1", ";", "i", ":", "1", ";", "C", ":", "19", ":", "\"", "SplDoublyLinkedList", "\"", ":'", ".", "strlen", "(", "$", "inner", ")", ".'", ":{", "'.", "$", "inner", ".", "'}", "i", ":", "2", ";", "O", ":", "3", ":", "\"", "obj", "\"", ":", "1", ":", "{", "s", ":", "4", ":", "\"", "ryat", "\"", ";", "R", ":", "3", ";", "}", "i", ":", "3", ";", "a", ":", "1", ":", "{", "i", ":", "0", ";", "R", ":", "5", ";", "}", "i", ":", "4", ";", "s", ":", "'.", "strlen", "(", "$", "fakezval", ")", ".'", ":\"", "'.", "$", "fakezval", ".", "'\"", ";}", "';", "$", "data", "=", "unserialize", "(", "$", "exploit", ")", ";", "var_dump", "(", "$", "data", ")", ";", "function", "ptr2str", "(", "$", "ptr", ")", "{", "$", "out", "=", "'", "';", "for", "(", "$", "i", "=", "0", ";", "$", "i", "<", "8", ";", "$", "i", "+", "+)", "{", "$", "out", ".", "=", "chr", "(", "$", "ptr", "&", "0xff", ")", ";", "$", "ptr", ">", ">=", "8", ";", "}", "return", "$", "out", ";", "}", "?", ">", "-", "-", "EXPECTF", "-", "-", "array", "(", "5", ")", "{", "[", "0", "]", "=>", "int", "(", "1", ")", "[", "1", "]", "=>", "&", "int", "(", "1", ")", "[", "2", "]", "=>", "object", "(", "obj", ")", "#%", "d", "(", "1", ")", "{", "[", "\"", "ryat", "\"", "]=", ">", "&", "int", "(", "1", ")", "}", "[", "3", "]", "=>", "array", "(", "1", ")", "{", "[", "0", "]", "=>", "int", "(", "1", ")", "}", "[", "4", "]", "=>", "string", "(", "24", ")", "\"", "%", "s", "\"", "}", "\\", "No", "newline", "at", "end", "of", "file"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "29", ",", "12", "+", "29", ",", "11", "@", "@", "import", "org", ".", "slf4j", ".", "LoggerFactory", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "RpcResponseCallback", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "StreamCallbackWithID", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "TransportClient", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "sasl", ".", "SecretKeyHolder", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "sasl", ".", "SaslRpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "AbstractAuthRpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "RpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "StreamManager", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "util", ".", "TransportConf", ";", "/", "**", "@", "@", "-", "46", ",", "7", "+", "45", ",", "7", "@", "@", "*", "The", "delegate", "will", "only", "receive", "messages", "if", "the", "given", "connection", "has", "been", "successfully", "*", "authenticated", ".", "A", "connection", "may", "be", "authenticated", "at", "most", "once", ".", "*", "/", "class", "AuthRpcHandler", "extends", "RpcHandler", "{", "class", "AuthRpcHandler", "extends", "AbstractAuthRpcHandler", "{", "private", "static", "final", "Logger", "LOG", "=", "LoggerFactory", ".", "getLogger", "(", "AuthRpcHandler", ".", "class", ")", ";", "/", "**", "Transport", "configuration", ".", "*", "/", "@", "@", "-", "55", ",", "36", "+", "54", ",", "31", "@", "@", "/", "**", "The", "client", "channel", ".", "*", "/", "private", "final", "Channel", "channel", ";", "/", "**", "*", "RpcHandler", "we", "will", "delegate", "to", "for", "authenticated", "connections", ".", "When", "falling", "back", "to", "SASL", "*", "this", "will", "be", "replaced", "with", "the", "SASL", "RPC", "handler", ".", "*", "/", "@", "VisibleForTesting", "RpcHandler", "delegate", ";", "/", "**", "Class", "which", "provides", "secret", "keys", "which", "are", "shared", "by", "server", "and", "client", "on", "a", "per", "-", "app", "basis", ".", "*", "/", "private", "final", "SecretKeyHolder", "secretKeyHolder", ";", "/", "**", "Whether", "auth", "is", "done", "and", "future", "calls", "should", "be", "delegated", ".", "*", "/", "/", "**", "RPC", "handler", "for", "auth", "handshake", "when", "falling", "back", "to", "SASL", "auth", ".", "*", "/", "@", "VisibleForTesting", "boolean", "doDelegate", ";", "SaslRpcHandler", "saslHandler", ";", "AuthRpcHandler", "(", "TransportConf", "conf", ",", "Channel", "channel", ",", "RpcHandler", "delegate", ",", "SecretKeyHolder", "secretKeyHolder", ")", "{", "super", "(", "delegate", ")", ";", "this", ".", "conf", "=", "conf", ";", "this", ".", "channel", "=", "channel", ";", "this", ".", "delegate", "=", "delegate", ";", "this", ".", "secretKeyHolder", "=", "secretKeyHolder", ";", "}", "@", "Override", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "doDelegate", ")", "{", "delegate", ".", "receive", "(", "client", ",", "message", ",", "callback", ")", ";", "return", ";", "protected", "boolean", "doAuthChallenge", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "saslHandler", "!", "=", "null", ")", "{", "return", "saslHandler", ".", "doAuthChallenge", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "int", "position", "=", "message", ".", "position", "(", ");", "@", "@", "-", "98", ",", "18", "+", "92", ",", "17", "@", "@", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallb", "if", "(", "conf", ".", "saslFallback", "(", "))", "{", "LOG", ".", "warn", "(", "\"", "Failed", "to", "parse", "new", "auth", "challenge", ",", "reverting", "to", "SASL", "for", "client", "{", "}.", "\",", "channel", ".", "remoteAddress", "(", "))", ";", "delegate", "=", "new", "SaslRpcHandler", "(", "conf", ",", "channel", ",", "delegate", ",", "secretKeyHolder", ")", ";", "saslHandler", "=", "new", "SaslRpcHandler", "(", "conf", ",", "channel", ",", "null", ",", "secretKeyHolder", ")", ";", "message", ".", "position", "(", "position", ")", ";", "message", ".", "limit", "(", "limit", ")", ";", "delegate", ".", "receive", "(", "client", ",", "message", ",", "callback", ")", ";", "doDelegate", "=", "true", ";", "return", "saslHandler", ".", "doAuthChallenge", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "else", "{", "LOG", ".", "debug", "(", "\"", "Unexpected", "challenge", "message", "from", "client", "{", "},", "closing", "channel", ".", "\",", "channel", ".", "remoteAddress", "(", "))", ";", "callback", ".", "onFailure", "(", "new", "IllegalArgumentException", "(", "\"", "Unknown", "challenge", "message", ".", "\")", ");", "channel", ".", "close", "(", ");", "}", "return", ";", "return", "false", ";", "}", "/", "/", "Here", "we", "have", "the", "client", "challenge", ",", "so", "perform", "the", "new", "auth", "protocol", "and", "set", "up", "the", "channel", ".", "@", "@", "-", "131", ",", "7", "+", "124", ",", "7", "@", "@", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallb", "LOG", ".", "debug", "(", "\"", "Authentication", "failed", "for", "client", "{", "},", "closing", "channel", ".", "\",", "channel", ".", "remoteAddress", "(", "))", ";", "callback", ".", "onFailure", "(", "new", "IllegalArgumentException", "(", "\"", "Authentication", "failed", ".", "\")", ");", "channel", ".", "close", "(", ");", "return", ";", "return", "false", ";", "}", "finally", "{", "if", "(", "engine", "!", "=", "null", ")", "{", "try", "{", "@", "@", "-", "143", ",", "40", "+", "136", ",", "6", "@", "@", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallb", "}", "LOG", ".", "debug", "(", "\"", "Authorization", "successful", "for", "client", "{", "}.", "\",", "channel", ".", "remoteAddress", "(", "))", ";", "doDelegate", "=", "true", ";", "}", "@", "Override", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ")", "{", "delegate", ".", "receive", "(", "client", ",", "message", ")", ";", "}", "@", "Override", "public", "StreamCallbackWithID", "receiveStream", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "return", "delegate", ".", "receiveStream", "(", "client", ",", "message", ",", "callback", ")", ";", "return", "true", ";", "}", "@", "Override", "public", "StreamManager", "getStreamManager", "(", ")", "{", "return", "delegate", ".", "getStreamManager", "(", ");", "}", "@", "Override", "public", "void", "channelActive", "(", "TransportClient", "client", ")", "{", "delegate", ".", "channelActive", "(", "client", ")", ";", "}", "@", "Override", "public", "void", "channelInactive", "(", "TransportClient", "client", ")", "{", "delegate", ".", "channelInactive", "(", "client", ")", ";", "}", "@", "Override", "public", "void", "exceptionCaught", "(", "Throwable", "cause", ",", "TransportClient", "client", ")", "{", "delegate", ".", "exceptionCaught", "(", "cause", ",", "client", ")", ";", "}", "}", "@", "@", "-", "28", ",", "10", "+", "28", ",", "9", "@", "@", "import", "org", ".", "slf4j", ".", "LoggerFactory", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "RpcResponseCallback", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "StreamCallbackWithID", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "TransportClient", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "AbstractAuthRpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "RpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "StreamManager", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "util", ".", "JavaUtils", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "util", ".", "TransportConf", ";", "@", "@", "-", "43", ",", "7", "+", "42", ",", "7", "@", "@", "*", "Note", "that", "the", "authentication", "process", "consists", "of", "multiple", "challenge", "-", "response", "pairs", ",", "each", "of", "*", "which", "are", "individual", "RPCs", ".", "*", "/", "public", "class", "SaslRpcHandler", "extends", "RpcHandler", "{", "public", "class", "SaslRpcHandler", "extends", "AbstractAuthRpcHandler", "{", "private", "static", "final", "Logger", "logger", "=", "LoggerFactory", ".", "getLogger", "(", "SaslRpcHandler", ".", "class", ")", ";", "/", "**", "Transport", "configuration", ".", "*", "/", "@", "@", "-", "52", ",", "37", "+", "51", ",", "28", "@", "@", "/", "**", "The", "client", "channel", ".", "*", "/", "private", "final", "Channel", "channel", ";", "/", "**", "RpcHandler", "we", "will", "delegate", "to", "for", "authenticated", "connections", ".", "*", "/", "private", "final", "RpcHandler", "delegate", ";", "/", "**", "Class", "which", "provides", "secret", "keys", "which", "are", "shared", "by", "server", "and", "client", "on", "a", "per", "-", "app", "basis", ".", "*", "/", "private", "final", "SecretKeyHolder", "secretKeyHolder", ";", "private", "SparkSaslServer", "saslServer", ";", "private", "boolean", "isComplete", ";", "private", "boolean", "isAuthenticated", ";", "public", "SaslRpcHandler", "(", "TransportConf", "conf", ",", "Channel", "channel", ",", "RpcHandler", "delegate", ",", "SecretKeyHolder", "secretKeyHolder", ")", "{", "super", "(", "delegate", ")", ";", "this", ".", "conf", "=", "conf", ";", "this", ".", "channel", "=", "channel", ";", "this", ".", "delegate", "=", "delegate", ";", "this", ".", "secretKeyHolder", "=", "secretKeyHolder", ";", "this", ".", "saslServer", "=", "null", ";", "this", ".", "isComplete", "=", "false", ";", "this", ".", "isAuthenticated", "=", "false", ";", "}", "@", "Override", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "isComplete", ")", "{", "/", "/", "Authentication", "complete", ",", "delegate", "to", "base", "handler", ".", "delegate", ".", "receive", "(", "client", ",", "message", ",", "callback", ")", ";", "return", ";", "}", "public", "boolean", "doAuthChallenge", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "saslServer", "=", "=", "null", "|", "|", "!", "saslServer", ".", "isComplete", "(", "))", "{", "ByteBuf", "nettyBuf", "=", "Unpooled", ".", "wrappedBuffer", "(", "message", ")", ";", "SaslMessage", "saslMessage", ";", "@", "@", "-", "118", ",", "55", "+", "108", ",", "28", "@", "@", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallb", "if", "(", "!", "SparkSaslServer", ".", "QOP_AUTH_CONF", ".", "equals", "(", "saslServer", ".", "getNegotiatedProperty", "(", "Sasl", ".", "QOP", ")", "))", "{", "logger", ".", "debug", "(", "\"", "SASL", "authentication", "successful", "for", "channel", "{", "}\"", ",", "client", ")", ";", "complete", "(", "true", ")", ";", "return", ";", "return", "true", ";", "}", "logger", ".", "debug", "(", "\"", "Enabling", "encryption", "for", "channel", "{", "}\"", ",", "client", ")", ";", "SaslEncryption", ".", "addToChannel", "(", "channel", ",", "saslServer", ",", "conf", ".", "maxSaslEncryptedBlockSize", "(", "))", ";", "complete", "(", "false", ")", ";", "return", ";", "return", "true", ";", "}", "}", "@", "Override", "public", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ")", "{", "delegate", ".", "receive", "(", "client", ",", "message", ")", ";", "}", "@", "Override", "public", "StreamCallbackWithID", "receiveStream", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "return", "delegate", ".", "receiveStream", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "@", "Override", "public", "StreamManager", "getStreamManager", "(", ")", "{", "return", "delegate", ".", "getStreamManager", "(", ");", "}", "@", "Override", "public", "void", "channelActive", "(", "TransportClient", "client", ")", "{", "delegate", ".", "channelActive", "(", "client", ")", ";", "return", "false", ";", "}", "@", "Override", "public", "void", "channelInactive", "(", "TransportClient", "client", ")", "{", "try", "{", "delegate", ".", "channelInactive", "(", "client", ")", ";", "super", ".", "channelInactive", "(", "client", ")", ";", "}", "finally", "{", "if", "(", "saslServer", "!", "=", "null", ")", "{", "saslServer", ".", "dispose", "(", ");", "}", "}", "}", "@", "Override", "public", "void", "exceptionCaught", "(", "Throwable", "cause", ",", "TransportClient", "client", ")", "{", "delegate", ".", "exceptionCaught", "(", "cause", ",", "client", ")", ";", "}", "private", "void", "complete", "(", "boolean", "dispose", ")", "{", "if", "(", "dispose", ")", "{", "try", "{", "@", "@", "-", "177", ",", "7", "+", "140", ",", "6", "@", "@", "private", "void", "complete", "(", "boolean", "dispose", ")", "{", "}", "saslServer", "=", "null", ";", "isComplete", "=", "true", ";", "}", "}", "@", "@", "-", "0", ",", "0", "+", "1", ",", "107", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ";", "import", "java", ".", "nio", ".", "ByteBuffer", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "RpcResponseCallback", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "StreamCallbackWithID", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "TransportClient", ";", "/", "**", "*", "RPC", "Handler", "which", "performs", "authentication", ",", "and", "when", "it", "'", "s", "successful", ",", "delegates", "further", "*", "calls", "to", "another", "RPC", "handler", ".", "The", "authentication", "handshake", "itself", "should", "be", "implemented", "*", "by", "subclasses", ".", "*", "/", "public", "abstract", "class", "AbstractAuthRpcHandler", "extends", "RpcHandler", "{", "/", "**", "RpcHandler", "we", "will", "delegate", "to", "for", "authenticated", "connections", ".", "*", "/", "private", "final", "RpcHandler", "delegate", ";", "private", "boolean", "isAuthenticated", ";", "protected", "AbstractAuthRpcHandler", "(", "RpcHandler", "delegate", ")", "{", "this", ".", "delegate", "=", "delegate", ";", "}", "/", "**", "*", "Responds", "to", "an", "authentication", "challenge", ".", "*", "*", "@", "return", "Whether", "the", "client", "is", "authenticated", ".", "*", "/", "protected", "abstract", "boolean", "doAuthChallenge", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", ";", "@", "Override", "public", "final", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "isAuthenticated", ")", "{", "delegate", ".", "receive", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "else", "{", "isAuthenticated", "=", "doAuthChallenge", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "}", "@", "Override", "public", "final", "void", "receive", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ")", "{", "if", "(", "isAuthenticated", ")", "{", "delegate", ".", "receive", "(", "client", ",", "message", ")", ";", "}", "else", "{", "throw", "new", "SecurityException", "(", "\"", "Unauthenticated", "call", "to", "receive", "(", ").", "\")", ";", "}", "}", "@", "Override", "public", "final", "StreamCallbackWithID", "receiveStream", "(", "TransportClient", "client", ",", "ByteBuffer", "message", ",", "RpcResponseCallback", "callback", ")", "{", "if", "(", "isAuthenticated", ")", "{", "return", "delegate", ".", "receiveStream", "(", "client", ",", "message", ",", "callback", ")", ";", "}", "else", "{", "throw", "new", "SecurityException", "(", "\"", "Unauthenticated", "call", "to", "receiveStream", "(", ").", "\")", ";", "}", "}", "@", "Override", "public", "StreamManager", "getStreamManager", "(", ")", "{", "return", "delegate", ".", "getStreamManager", "(", ");", "}", "@", "Override", "public", "void", "channelActive", "(", "TransportClient", "client", ")", "{", "delegate", ".", "channelActive", "(", "client", ")", ";", "}", "@", "Override", "public", "void", "channelInactive", "(", "TransportClient", "client", ")", "{", "delegate", ".", "channelInactive", "(", "client", ")", ";", "}", "@", "Override", "public", "void", "exceptionCaught", "(", "Throwable", "cause", ",", "TransportClient", "client", ")", "{", "delegate", ".", "exceptionCaught", "(", "cause", ",", "client", ")", ";", "}", "public", "boolean", "isAuthenticated", "(", ")", "{", "return", "isAuthenticated", ";", "}", "}", "@", "@", "-", "34", ",", "7", "+", "34", ",", "6", "@", "@", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "RpcResponseCallback", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "TransportClient", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "client", ".", "TransportClientBootstrap", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "sasl", ".", "SaslRpcHandler", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "sasl", ".", "SaslServerBootstrap", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "sasl", ".", "SecretKeyHolder", ";", "import", "org", ".", "apache", ".", "spark", ".", "network", ".", "server", ".", "RpcHandler", ";", "@", "@", "-", "65", ",", "8", "+", "64", ",", "7", "@", "@", "public", "void", "testNewAuth", "(", ")", "throws", "Exception", "{", "ByteBuffer", "reply", "=", "ctx", ".", "client", ".", "sendRpcSync", "(", "JavaUtils", ".", "stringToBytes", "(", "\"", "Ping", "\"", "),", "5000", ")", ";", "assertEquals", "(", "\"", "Pong", "\"", ",", "JavaUtils", ".", "bytesToString", "(", "reply", ")", ");", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "doDelegate", ")", ";", "assertFalse", "(", "ctx", ".", "authRpcHandler", ".", "delegate", "instanceof", "SaslRpcHandler", ")", ";", "assertNull", "(", "ctx", ".", "authRpcHandler", ".", "saslHandler", ")", ";", "}", "@", "Test", "@", "@", "-", "78", ",", "7", "+", "76", ",", "7", "@", "@", "public", "void", "testAuthFailure", "(", ")", "throws", "Exception", "{", "ctx", ".", "createClient", "(", "\"", "client", "\"", ");", "fail", "(", "\"", "Should", "have", "failed", "to", "create", "client", ".", "\")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "assertFalse", "(", "ctx", ".", "authRpcHandler", ".", "doDelegate", ")", ";", "assertFalse", "(", "ctx", ".", "authRpcHandler", ".", "isAuthenticated", "(", "))", ";", "assertFalse", "(", "ctx", ".", "serverChannel", ".", "isActive", "(", "))", ";", "}", "}", "@", "@", "-", "91", ",", "6", "+", "89", ",", "8", "@", "@", "public", "void", "testSaslServerFallback", "(", ")", "throws", "Exception", "{", "ByteBuffer", "reply", "=", "ctx", ".", "client", ".", "sendRpcSync", "(", "JavaUtils", ".", "stringToBytes", "(", "\"", "Ping", "\"", "),", "5000", ")", ";", "assertEquals", "(", "\"", "Pong", "\"", ",", "JavaUtils", ".", "bytesToString", "(", "reply", ")", ");", "assertNotNull", "(", "ctx", ".", "authRpcHandler", ".", "saslHandler", ")", ";", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "isAuthenticated", "(", "))", ";", "}", "@", "Test", "@", "@", "-", "120", ",", "7", "+", "120", ",", "7", "@", "@", "public", "void", "testAuthReplay", "(", ")", "throws", "Exception", "{", "ctx", ".", "client", ".", "sendRpcSync", "(", "JavaUtils", ".", "stringToBytes", "(", "\"", "Ping", "\"", "),", "5000", ")", ";", "fail", "(", "\"", "Should", "have", "failed", "unencrypted", "RPC", ".", "\")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "doDelegate", ")", ";", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "isAuthenticated", "(", "))", ";", "}", "}", "@", "@", "-", "151", ",", "7", "+", "151", ",", "7", "@", "@", "public", "StreamManager", "getStreamManager", "(", ")", "{", "ctx", ".", "client", ".", "sendRpcSync", "(", "JavaUtils", ".", "stringToBytes", "(", "\"", "Ping", "\"", "),", "5000", ")", ";", "fail", "(", "\"", "Should", "have", "failed", "unencrypted", "RPC", ".", "\")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "doDelegate", ")", ";", "assertTrue", "(", "ctx", ".", "authRpcHandler", ".", "isAuthenticated", "(", "))", ";", "assertTrue", "(", "e", ".", "getMessage", "(", ")", "+", "\"", "is", "not", "an", "expected", "error", "\"", ",", "e", ".", "getMessage", "(", ").", "contains", "(", "\"", "DDDDD", "\"", "))", ";", "/", "/", "Verify", "we", "receive", "the", "complete", "error", "message", "int", "messageStart", "=", "e", ".", "getMessage", "(", ").", "indexOf", "(", "\"", "DDDDD", "\"", ");", "@", "@", "-", "357", ",", "7", "+", "357", ",", "8", "@", "@", "public", "void", "testRpcHandlerDelegate", "(", ")", "throws", "Exception", "{", "public", "void", "testDelegates", "(", ")", "throws", "Exception", "{", "Method", "[", "]", "rpcHandlerMethods", "=", "RpcHandler", ".", "class", ".", "getDeclaredMethods", "(", ");", "for", "(", "Method", "m", ":", "rpcHandlerMethods", ")", "{", "SaslRpcHandler", ".", "class", ".", "getDeclaredMethod", "(", "m", ".", "getName", "(", "),", "m", ".", "getParameterTypes", "(", "))", ";", "Method", "delegate", "=", "SaslRpcHandler", ".", "class", ".", "getMethod", "(", "m", ".", "getName", "(", "),", "m", ".", "getParameterTypes", "(", "))", ";", "assertNotEquals", "(", "delegate", ".", "getDeclaringClass", "(", "),", "RpcHandler", ".", "class", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "16", ",", "7", "+", "16", ",", "9", "@", "@", "var", "Affix", "=", "function", "(", "element", ",", "options", ")", "{", "this", ".", "options", "=", "$", ".", "extend", "(", "{}", ",", "Affix", ".", "DEFAULTS", ",", "options", ")", "this", ".", "$", "target", "=", "$", "(", "this", ".", "options", ".", "target", ")", "var", "target", "=", "this", ".", "options", ".", "target", "=", "==", "Affix", ".", "DEFAULTS", ".", "target", "?", "$", "(", "this", ".", "options", ".", "target", ")", ":", "$", "(", "document", ")", ".", "find", "(", "this", ".", "options", ".", "target", ")", "this", ".", "$", "target", "=", "target", ".", "on", "(", "'", "scroll", ".", "bs", ".", "affix", ".", "data", "-", "api", "'", ",", "$", ".", "proxy", "(", "this", ".", "checkPosition", ",", "this", ")", ")", ".", "on", "(", "'", "click", ".", "bs", ".", "affix", ".", "data", "-", "api", "'", ",", "$", ".", "proxy", "(", "this", ".", "checkPositionWithEventLoop", ",", "this", ")", ")", "@", "@", "-", "137", ",", "7", "+", "137", ",", "7", "@", "@", "}", "Collapse", ".", "prototype", ".", "getParent", "=", "function", "(", ")", "{", "return", "$", "(", "this", ".", "options", ".", "parent", ")", "return", "$", "(", "document", ")", ".", "find", "(", "this", ".", "options", ".", "parent", ")", ".", "find", "(", "'[", "data", "-", "toggle", "=", "\"", "collapse", "\"", "][", "data", "-", "parent", "=", "\"'", "+", "this", ".", "options", ".", "parent", "+", "'", "\"]", "')", ".", "each", "(", "$.", "proxy", "(", "function", "(", "i", ",", "element", ")", "{", "var", "$", "element", "=", "$", "(", "element", ")", "@", "@", "-", "104", ",", "4", "+", "104", ",", "19", "@", "@", "$", "(", "function", "(", ")", "{", "}", ",", "250", ")", "}", ",", "250", ")", "}", ")", "QUnit", ".", "test", "(", "'", "should", "raise", "exception", "to", "avoid", "xss", "on", "target", "'", ",", "function", "(", "assert", ")", "{", "assert", ".", "expect", "(", "1", ")", "assert", ".", "throws", "(", "function", "(", ")", "{", "var", "templateHTML", "=", "'", "<", "div", "id", "=", "\"", "affixTarget", "\"", "><", "/", "div", ">", "'", "$", "(", "templateHTML", ")", ".", "appendTo", "(", "document", ".", "body", ")", "$", "('", "#", "affixTarget", "'", ").", "bootstrapAffix", "(", "{", "target", ":", "'", "<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">'", "}", ")", "}", ",", "new", "Error", "(", "'", "Syntax", "error", ",", "unrecognized", "expression", ":", "<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">'", "))", "}", ")", "}", ")", "@", "@", "-", "440", ",", "4", "+", "440", ",", "14", "@", "@", "$", "(", "function", "(", ")", "{", ".", "bootstrapCollapse", "(", "'", "show", "'", ")", "}", ")", "QUnit", ".", "test", "(", "'", "should", "raise", "exception", "to", "avoid", "xss", "on", "data", "-", "parent", "'", ",", "function", "(", "assert", ")", "{", "assert", ".", "expect", "(", "1", ")", "assert", ".", "throws", "(", "function", "(", ")", "{", "$", "('", "<", "a", "role", "=", "\"", "button", "\"", "data", "-", "toggle", "=", "\"", "collapse", "\"", "data", "-", "parent", "=", "\"<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">\"", "href", "=", "\"#", "collapseThree", "\"", ">'", ")", ".", "appendTo", "(", "'#", "qunit", "-", "fixture", "'", ")", ".", "bootstrapCollapse", "(", "'", "show", "'", ")", ".", "trigger", "(", "'", "click", "'", ");", "}", ",", "new", "Error", "(", "'", "Syntax", "error", ",", "unrecognized", "expression", ":", "<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">'", "))", "}", ")", "}", ")", "@", "@", "-", "1322", ",", "4", "+", "1322", ",", "22", "@", "@", "$", "(", "function", "(", ")", "{", "}", ")", "}", ")", "QUnit", ".", "test", "(", "'", "should", "raise", "exception", "to", "avoid", "xss", "on", "data", "-", "container", "'", ",", "function", "(", "assert", ")", "{", "assert", ".", "expect", "(", "1", ")", "assert", ".", "throws", "(", "function", "(", ")", "{", "$", "('", "<", "button", "data", "-", "toggle", "=", "\"", "tooltip", "\"", "data", "-", "container", "=", "\"<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">\"", "title", "=", "\"", "Tooltip", "on", "right", "\"", ">", "Tooltip", "on", "right", "<", "/", "button", ">", "')", ".", "appendTo", "(", "'#", "qunit", "-", "fixture", "'", ")", ".", "bootstrapTooltip", "(", "'", "show", "'", ")", "}", ",", "new", "Error", "(", "'", "Syntax", "error", ",", "unrecognized", "expression", ":", "<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">'", "))", "}", ")", "QUnit", ".", "test", "(", "'", "should", "raise", "exception", "to", "avoid", "xss", "on", "data", "-", "viewport", "'", ",", "function", "(", "assert", ")", "{", "assert", ".", "expect", "(", "1", ")", "assert", ".", "throws", "(", "function", "(", ")", "{", "$", "('", "<", "button", "data", "-", "toggle", "=", "\"", "tooltip", "\"", "data", "-", "viewport", "=", "\"<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">\"", "title", "=", "\"", "Tooltip", "on", "right", "\"", ">", "Tooltip", "on", "right", "<", "/", "button", ">", "')", ".", "appendTo", "(", "'#", "qunit", "-", "fixture", "'", ")", ".", "bootstrapTooltip", "(", "'", "show", "'", ")", "}", ",", "new", "Error", "(", "'", "Syntax", "error", ",", "unrecognized", "expression", ":", "<", "img", "src", "=", "1", "onerror", "=", "\\'", "alert", "(", "0", ")", "\\'", ">'", "))", "}", ")", "}", ")", "@", "@", "-", "51", ",", "7", "+", "51", ",", "7", "@", "@", "this", ".", "type", "=", "type", "this", ".", "$", "element", "=", "$", "(", "element", ")", "this", ".", "options", "=", "this", ".", "getOptions", "(", "options", ")", "this", ".", "$", "viewport", "=", "this", ".", "options", ".", "viewport", "&", "&", "$", "($", ".", "isFunction", "(", "this", ".", "options", ".", "viewport", ")", "?", "this", ".", "options", ".", "viewport", ".", "call", "(", "this", ",", "this", ".", "$", "element", ")", ":", "(", "this", ".", "options", ".", "viewport", ".", "selector", "|", "|", "this", ".", "options", ".", "viewport", ")", ")", "this", ".", "$", "viewport", "=", "this", ".", "options", ".", "viewport", "&", "&", "$", "(", "document", ")", ".", "find", "(", "$.", "isFunction", "(", "this", ".", "options", ".", "viewport", ")", "?", "this", ".", "options", ".", "viewport", ".", "call", "(", "this", ",", "this", ".", "$", "element", ")", ":", "(", "this", ".", "options", ".", "viewport", ".", "selector", "|", "|", "this", ".", "options", ".", "viewport", ")", ")", "this", ".", "inState", "=", "{", "click", ":", "false", ",", "hover", ":", "false", ",", "focus", ":", "false", "}", "if", "(", "this", ".", "$", "element", "[", "0", "]", "instanceof", "document", ".", "constructor", "&", "&", "!", "this", ".", "options", ".", "selector", ")", "{", "@", "@", "-", "204", ",", "7", "+", "204", ",", "7", "@", "@", ".", "addClass", "(", "placement", ")", ".", "data", "(", "'", "bs", ".", "'", "+", "this", ".", "type", ",", "this", ")", "this", ".", "options", ".", "container", "?", "$", "tip", ".", "appendTo", "(", "this", ".", "options", ".", "container", ")", ":", "$", "tip", ".", "insertAfter", "(", "this", ".", "$", "element", ")", "this", ".", "options", ".", "container", "?", "$", "tip", ".", "appendTo", "(", "$(", "document", ")", ".", "find", "(", "this", ".", "options", ".", "container", ")", ")", ":", "$", "tip", ".", "insertAfter", "(", "this", ".", "$", "element", ")", "this", ".", "$", "element", ".", "trigger", "(", "'", "inserted", ".", "bs", ".", "'", "+", "this", ".", "type", ")", "var", "pos", "=", "this", ".", "getPosition", "(", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "362", ",", "6", "+", "362", ",", "11", "@", "@", "static", "int", "nfattr_to_tcp", "(", "struct", "nfattr", "*", "cda", "[", "],", "struct", "ip_conntrack", "*", "ct", ")", "struct", "nfattr", "*", "attr", "=", "cda", "[", "CTA_PROTOINFO_TCP", "-", "1", "]", ";", "struct", "nfattr", "*", "tb", "[", "CTA_PROTOINFO_TCP_MAX", "]", ";", "/", "*", "updates", "could", "not", "contain", "anything", "about", "the", "private", "*", "protocol", "info", ",", "in", "that", "case", "skip", "the", "parsing", "*", "/", "if", "(", "!", "attr", ")", "return", "0", ";", "nfattr_parse_nested", "(", "tb", ",", "CTA_PROTOINFO_TCP_MAX", ",", "attr", ")", ";", "if", "(", "!", "tb", "[", "CTA_PROTOINFO_TCP_STATE", "-", "1", "]", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "33", ",", "12", "+", "33", ",", "15", "@", "@", "import", "hudson", ".", "util", ".", "FileVisitor", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "FileInputStream", ";", "import", "java", ".", "io", ".", "FileNotFoundException", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "import", "java", ".", "io", ".", "Serializable", ";", "import", "java", ".", "net", ".", "URI", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "logging", ".", "Level", ";", "import", "java", ".", "util", ".", "logging", ".", "Logger", ";", "import", "javax", ".", "annotation", ".", "Nonnull", ";", "/", "**", "@", "@", "-", "207", ",", "12", "+", "210", ",", "14", "@", "@", "*", "@", "return", "a", "wrapper", "*", "/", "public", "static", "VirtualFile", "forFile", "(", "final", "File", "f", ")", "{", "return", "new", "FileVF", "(", "f", ")", ";", "return", "new", "FileVF", "(", "f", ",", "f", ")", ";", "}", "private", "static", "final", "class", "FileVF", "extends", "VirtualFile", "{", "private", "final", "File", "f", ";", "FileVF", "(", "File", "f", ")", "{", "private", "final", "File", "root", ";", "FileVF", "(", "File", "f", ",", "File", "root", ")", "{", "this", ".", "f", "=", "f", ";", "this", ".", "root", "=", "root", ";", "}", "@", "Override", "public", "String", "getName", "(", ")", "{", "return", "f", ".", "getName", "(", ");", "@", "@", "-", "221", ",", "46", "+", "226", ",", "85", "@", "@", "public", "static", "VirtualFile", "forFile", "(", "final", "File", "f", ")", "{", "return", "f", ".", "toURI", "(", ");", "}", "@", "Override", "public", "VirtualFile", "getParent", "(", ")", "{", "return", "forFile", "(", "f", ".", "getParentFile", "(", "))", ";", "return", "new", "FileVF", "(", "f", ".", "getParentFile", "(", "),", "root", ")", ";", "}", "@", "Override", "public", "boolean", "isDirectory", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "return", "f", ".", "isDirectory", "(", ");", "}", "@", "Override", "public", "boolean", "isFile", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "return", "f", ".", "isFile", "(", ");", "}", "@", "Override", "public", "boolean", "exists", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "return", "f", ".", "exists", "(", ");", "}", "@", "Override", "public", "VirtualFile", "[", "]", "list", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "new", "VirtualFile", "[", "0", "]", ";", "}", "File", "[", "]", "kids", "=", "f", ".", "listFiles", "(", ");", "if", "(", "kids", "=", "=", "null", ")", "{", "return", "new", "VirtualFile", "[", "0", "]", ";", "}", "VirtualFile", "[", "]", "vfs", "=", "new", "VirtualFile", "[", "kids", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "kids", ".", "length", ";", "i", "+", "+)", "{", "vfs", "[", "i", "]", "=", "forFile", "(", "kids", "[", "i", "]", ");", "vfs", "[", "i", "]", "=", "new", "FileVF", "(", "kids", "[", "i", "]", ",", "root", ")", ";", "}", "return", "vfs", ";", "}", "@", "Override", "public", "String", "[", "]", "list", "(", "String", "glob", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "new", "String", "[", "0", "]", ";", "}", "return", "new", "Scanner", "(", "glob", ")", ".", "invoke", "(", "f", ",", "null", ")", ";", "}", "@", "Override", "public", "VirtualFile", "child", "(", "String", "name", ")", "{", "return", "forFile", "(", "new", "File", "(", "f", ",", "name", ")", ");", "return", "new", "FileVF", "(", "new", "File", "(", "f", ",", "name", ")", ",", "root", ")", ";", "}", "@", "Override", "public", "long", "length", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "0", ";", "}", "return", "f", ".", "length", "(", ");", "}", "@", "Override", "public", "long", "lastModified", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "0", ";", "}", "return", "f", ".", "lastModified", "(", ");", "}", "@", "Override", "public", "boolean", "canRead", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "return", "false", ";", "}", "return", "f", ".", "canRead", "(", ");", "}", "@", "Override", "public", "InputStream", "open", "(", ")", "throws", "IOException", "{", "if", "(", "isIllegalSymlink", "(", "))", "{", "throw", "new", "FileNotFoundException", "(", "f", ".", "getPath", "(", "))", ";", "}", "return", "new", "FileInputStream", "(", "f", ")", ";", "}", "private", "boolean", "isIllegalSymlink", "(", ")", "{", "/", "/", "TODO", "JENKINS", "-", "26838", "try", "{", "String", "myPath", "=", "f", ".", "getCanonicalPath", "(", ");", "String", "rootPath", "=", "root", ".", "getCanonicalPath", "(", ");", "if", "(", "!", "myPath", ".", "equals", "(", "rootPath", ")", "&", "&", "!", "myPath", ".", "startsWith", "(", "rootPath", "+", "File", ".", "separatorChar", ")", ")", "{", "return", "true", ";", "}", "}", "catch", "(", "IOException", "x", ")", "{", "Logger", ".", "getLogger", "(", "VirtualFile", ".", "class", ".", "getName", "(", "))", ".", "log", "(", "Level", ".", "FINE", ",", "\"", "could", "not", "determine", "symlink", "status", "of", "\"", "+", "f", ",", "x", ")", ";", "}", "return", "false", ";", "}", "}", "/", "**", "@", "@", "-", "0", ",", "0", "+", "1", ",", "66", "@", "@", "/", "*", "*", "The", "MIT", "License", "*", "*", "Copyright", "2015", "Jesse", "Glick", ".", "*", "*", "Permission", "is", "hereby", "granted", ",", "free", "of", "charge", ",", "to", "any", "person", "obtaining", "a", "copy", "*", "of", "this", "software", "and", "associated", "documentation", "files", "(", "the", "\"", "Software", "\"", "),", "to", "deal", "*", "in", "the", "Software", "without", "restriction", ",", "including", "without", "limitation", "the", "rights", "*", "to", "use", ",", "copy", ",", "modify", ",", "merge", ",", "publish", ",", "distribute", ",", "sublicense", ",", "and", "/", "or", "sell", "*", "copies", "of", "the", "Software", ",", "and", "to", "permit", "persons", "to", "whom", "the", "Software", "is", "*", "furnished", "to", "do", "so", ",", "subject", "to", "the", "following", "conditions", ":", "*", "*", "The", "above", "copyright", "notice", "and", "this", "permission", "notice", "shall", "be", "included", "in", "*", "all", "copies", "or", "substantial", "portions", "of", "the", "Software", ".", "*", "*", "THE", "SOFTWARE", "IS", "PROVIDED", "\"", "AS", "IS", "\"", ",", "WITHOUT", "WARRANTY", "OF", "ANY", "KIND", ",", "EXPRESS", "OR", "*", "IMPLIED", ",", "INCLUDING", "BUT", "NOT", "LIMITED", "TO", "THE", "WARRANTIES", "OF", "MERCHANTABILITY", ",", "*", "FITNESS", "FOR", "A", "PARTICULAR", "PURPOSE", "AND", "NONINFRINGEMENT", ".", "IN", "NO", "EVENT", "SHALL", "THE", "*", "AUTHORS", "OR", "COPYRIGHT", "HOLDERS", "BE", "LIABLE", "FOR", "ANY", "CLAIM", ",", "DAMAGES", "OR", "OTHER", "*", "LIABILITY", ",", "WHETHER", "IN", "AN", "ACTION", "OF", "CONTRACT", ",", "TORT", "OR", "OTHERWISE", ",", "ARISING", "FROM", ",", "*", "OUT", "OF", "OR", "IN", "CONNECTION", "WITH", "THE", "SOFTWARE", "OR", "THE", "USE", "OR", "OTHER", "DEALINGS", "IN", "*", "THE", "SOFTWARE", ".", "*", "/", "package", "jenkins", ".", "util", ";", "import", "hudson", ".", "Util", ";", "import", "hudson", ".", "model", ".", "TaskListener", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "FileNotFoundException", ";", "import", "org", ".", "apache", ".", "commons", ".", "io", ".", "FileUtils", ";", "import", "org", ".", "apache", ".", "commons", ".", "io", ".", "IOUtils", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "rules", ".", "TemporaryFolder", ";", "public", "class", "VirtualFileTest", "{", "@", "Rule", "public", "TemporaryFolder", "tmp", "=", "new", "TemporaryFolder", "(", ");", "/", "/@", "Issue", "(", "\"", "SECURITY", "-", "162", "\"", ")", "@", "Test", "public", "void", "outsideSymlinks", "(", ")", "throws", "Exception", "{", "File", "ws", "=", "tmp", ".", "newFolder", "(", "\"", "ws", "\"", ");", "FileUtils", ".", "write", "(", "new", "File", "(", "ws", ",", "\"", "safe", "\"", "),", "\"", "safe", "\"", ");", "Util", ".", "createSymlink", "(", "ws", ",", "\"", "safe", "\"", ",", "\"", "supported", "\"", ",", "TaskListener", ".", "NULL", ")", ";", "File", "other", "=", "tmp", ".", "newFolder", "(", "\"", "other", "\"", ");", "FileUtils", ".", "write", "(", "new", "File", "(", "other", ",", "\"", "secret", "\"", "),", "\"", "s3cr3t", "\"", ");", "Util", ".", "createSymlink", "(", "ws", ",", "\"", "..", "/", "other", "/", "secret", "\"", ",", "\"", "hack", "\"", ",", "TaskListener", ".", "NULL", ")", ";", "VirtualFile", "root", "=", "VirtualFile", ".", "forFile", "(", "ws", ")", ";", "VirtualFile", "supported", "=", "root", ".", "child", "(", "\"", "supported", "\"", ");", "assertTrue", "(", "supported", ".", "isFile", "(", "))", ";", "assertTrue", "(", "supported", ".", "exists", "(", "))", ";", "assertEquals", "(", "\"", "safe", "\"", ",", "IOUtils", ".", "toString", "(", "supported", ".", "open", "(", "),", "(", "String", ")", "null", ")", ");", "VirtualFile", "hack", "=", "root", ".", "child", "(", "\"", "hack", "\"", ");", "assertFalse", "(", "hack", ".", "isFile", "(", "))", ";", "assertFalse", "(", "hack", ".", "exists", "(", "))", ";", "try", "{", "hack", ".", "open", "(", ");", "fail", "(", ");", "}", "catch", "(", "FileNotFoundException", "x", ")", "{", "/", "/", "OK", "}", "}", "}", "\\", "No", "newline", "at", "end", "of", "file", "@", "@", "-", "45", ",", "7", "+", "45", ",", "6", "@", "@", "import", "jenkins", ".", "util", ".", "VirtualFile", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "static", "org", ".", "junit", ".", "Assume", ".", "*;", "import", "org", ".", "junit", ".", "Ignore", ";", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "jvnet", ".", "hudson", ".", "test", ".", "Bug", ";", "@", "@", "-", "205", ",", "7", "+", "204", ",", "6", "@", "@", "public", "void", "testAllowEmptyArchive", "(", ")", "throws", "Exception", "{", "/", "/", "do", "not", "check", "that", "it", ".", "exists", "(", ")", "since", "its", "target", "has", "not", "been", "archived", "}", "@", "Ignore", "(", "\"", "TODO", "currently", "fails", "as", "expected", "\"", ")", "/", "/@", "Issue", "(", "\"", "SECURITY", "-", "162", "\"", ")", "@", "Test", "public", "void", "outsideSymlinks", "(", ")", "throws", "Exception", "{", "final", "FreeStyleProject", "p", "=", "j", ".", "createFreeStyleProject", "(", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1190", ",", "7", "+", "1190", ",", "7", "@", "@", "CWD_API", "int", "virtual_file_ex", "(", "cwd_state", "*", "state", ",", "const", "char", "*", "path", ",", "verify_path_func", "int", "add_slash", ";", "void", "*", "tmp", ";", "if", "(", "path_length", "=", "=", "0", "|", "|", "path_length", ">", "=", "MAXPATHLEN", "-", "1", ")", "{", "if", "(", "path_length", "<", "=", "0", "|", "|", "path_length", ">", "=", "MAXPATHLEN", "-", "1", ")", "{", "#", "ifdef", "TSRM_WIN32", "#", "if", "_MSC_VER", "<", "1300", "errno", "=", "EINVAL", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "0", ",", "0", "+", "1", ",", "23", "@", "@", "-", "-", "TEST", "-", "-", "Bug", "#", "73831", "(", "NULL", "Pointer", "Dereference", "while", "unserialize", "php", "object", ")", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "\"", "wddx", "\"", "))", "print", "\"", "skip", "\"", ";", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "xml", "=", "<", "<<", "EOF", "<", "?", "xml", "version", "=", "\"", "1", ".", "0", "\"", "?", ">", "<", "wddxPacket", "version", "=", "\"", "1", ".", "0", "\"", ">", "<", "struct", ">", "<", "var", "name", "=", "\"", "php_class_name", "\"", ">", "<", "string", ">", "Throwable", "<", "/", "string", ">", "<", "/", "var", ">", "<", "/", "struct", ">", "<", "/", "wddxPacket", ">", "EOF", ";", "try", "{", "$", "wddx", "=", "wddx_deserialize", "(", "$", "xml", ")", ";", "}", "catch", "(", "Error", "$", "e", ")", "{", "echo", "$", "e", "-", ">", "getMessage", "(", ");", "}", "?", ">", "-", "-", "EXPECTF", "-", "-", "Warning", ":", "wddx_deserialize", "(", "):", "Class", "throwable", "can", "not", "be", "instantiated", "in", "%", "sbug73831", ".", "php", "on", "line", "%", "d", "Cannot", "instantiate", "interface", "Throwable", "@", "@", "-", "908", ",", "7", "+", "908", ",", "7", "@", "@", "static", "void", "php_wddx_pop_element", "(", "void", "*", "user_data", ",", "const", "XML_Char", "*", "name", ")", "if", "(", "!", "strcmp", "(", "(", "char", "*", ")", "name", ",", "EL_BINARY", ")", ")", "{", "zend_string", "*", "new_str", "=", "NULL", ";", "if", "(", "ZSTR_EMPTY_ALLOC", "(", ")", "!", "=", "Z_STR", "(", "ent1", "-", ">", "data", ")", ")", "{", "new_str", "=", "php_base64_decode", "(", "(", "unsigned", "char", "*", ")", "Z_STRVAL", "(", "ent1", "-", ">", "data", ")", ",", "Z_STRLEN", "(", "ent1", "-", ">", "data", ")", ");", "@", "@", "-", "967", ",", "22", "+", "967", ",", "26", "@", "@", "static", "void", "php_wddx_pop_element", "(", "void", "*", "user_data", ",", "const", "XML_Char", "*", "name", ")", "php_error_docref", "(", "NULL", ",", "E_WARNING", ",", "\"", "Class", "%", "s", "can", "not", "be", "unserialized", "\"", ",", "Z_STRVAL", "(", "ent1", "-", ">", "data", ")", ");", "}", "else", "{", "/", "*", "Initialize", "target", "object", "*", "/", "object_init_ex", "(", "&", "obj", ",", "pce", ")", ";", "/", "*", "Merge", "current", "hashtable", "with", "object", "'", "s", "default", "properties", "*", "/", "zend_hash_merge", "(", "Z_OBJPROP", "(", "obj", ")", ",", "Z_ARRVAL", "(", "ent2", "-", ">", "data", ")", ",", "zval_add_ref", ",", "0", ")", ";", "if", "(", "incomplete_class", ")", "{", "php_store_class_name", "(", "&", "obj", ",", "Z_STRVAL", "(", "ent1", "-", ">", "data", ")", ",", "Z_STRLEN", "(", "ent1", "-", ">", "data", ")", ");", "if", "(", "object_init_ex", "(", "&", "obj", ",", "pce", ")", "!", "=", "SUCCESS", "|", "|", "EG", "(", "exception", ")", ")", "{", "zval_ptr_dtor", "(", "&", "ent2", "-", ">", "data", ")", ";", "ZVAL_UNDEF", "(", "&", "ent2", "-", ">", "data", ")", ";", "php_error_docref", "(", "NULL", ",", "E_WARNING", ",", "\"", "Class", "%", "s", "can", "not", "be", "instantiated", "\"", ",", "Z_STRVAL", "(", "ent1", "-", ">", "data", ")", ");", "}", "else", "{", "/", "*", "Merge", "current", "hashtable", "with", "object", "'", "s", "default", "properties", "*", "/", "zend_hash_merge", "(", "Z_OBJPROP", "(", "obj", ")", ",", "Z_ARRVAL", "(", "ent2", "-", ">", "data", ")", ",", "zval_add_ref", ",", "0", ")", ";", "if", "(", "incomplete_class", ")", "{", "php_store_class_name", "(", "&", "obj", ",", "Z_STRVAL", "(", "ent1", "-", ">", "data", ")", ",", "Z_STRLEN", "(", "ent1", "-", ">", "data", ")", ");", "}", "/", "*", "Clean", "up", "old", "array", "entry", "*", "/", "zval_ptr_dtor", "(", "&", "ent2", "-", ">", "data", ")", ";", "/", "*", "Set", "stack", "entry", "to", "point", "to", "the", "newly", "created", "object", "*", "/", "ZVAL_COPY_VALUE", "(", "&", "ent2", "-", ">", "data", ",", "&", "obj", ")", ";", "}", "/", "*", "Clean", "up", "old", "array", "entry", "*", "/", "zval_ptr_dtor", "(", "&", "ent2", "-", ">", "data", ")", ";", "/", "*", "Set", "stack", "entry", "to", "point", "to", "the", "newly", "created", "object", "*", "/", "ZVAL_COPY_VALUE", "(", "&", "ent2", "-", ">", "data", ",", "&", "obj", ")", ";", "}", "/", "*", "Clean", "up", "class", "name", "var", "entry", "*", "/"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2250", ",", "25", "+", "2250", ",", "23", "@", "@", "static", "inline", "const", "char", "*", "netdev_name", "(", "const", "struct", "net_device", "*", "dev", ")", "return", "dev", "-", ">", "name", ";", "}", "#", "define", "netdev_printk", "(", "level", ",", "netdev", ",", "format", ",", "args", ".", "..", ")", "\\", "dev_printk", "(", "level", ",", "(", "netdev", ")", "->", "dev", ".", "parent", ",", "\\", "\"", "%", "s", ":", "\"", "format", ",", "\\", "netdev_name", "(", "netdev", ")", ",", "#", "#", "args", ")", "#", "define", "netdev_emerg", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_EMERG", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_alert", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_ALERT", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_crit", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_CRIT", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_err", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_ERR", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_warn", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_WARNING", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_notice", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_NOTICE", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "#", "define", "netdev_info", "(", "dev", ",", "format", ",", "args", ".", "..", ")", "\\", "netdev_printk", "(", "KERN_INFO", ",", "dev", ",", "format", ",", "#", "#", "args", ")", "extern", "int", "netdev_printk", "(", "const", "char", "*", "level", ",", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "3", ",", "4", ")", "))", ";", "extern", "int", "netdev_emerg", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_alert", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_crit", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_err", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_warn", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_notice", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "extern", "int", "netdev_info", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "__attribute__", "(", "(", "format", "(", "printf", ",", "2", ",", "3", ")", "))", ";", "#", "if", "defined", "(", "DEBUG", ")", "#", "define", "netdev_dbg", "(", "__dev", ",", "format", ",", "args", ".", "..", ")", "\\", "@", "@", "-", "5802", ",", "6", "+", "5802", ",", "68", "@", "@", "char", "*", "netdev_drivername", "(", "const", "struct", "net_device", "*", "dev", ",", "char", "*", "buffer", ",", "int", "len", ")", "return", "buffer", ";", "}", "static", "int", "__netdev_printk", "(", "const", "char", "*", "level", ",", "const", "struct", "net_device", "*", "dev", ",", "struct", "va_format", "*", "vaf", ")", "{", "int", "r", ";", "if", "(", "dev", "&", "&", "dev", "-", ">", "dev", ".", "parent", ")", "r", "=", "dev_printk", "(", "level", ",", "dev", "-", ">", "dev", ".", "parent", ",", "\"", "%", "s", ":", "%", "pV", "\"", ",", "netdev_name", "(", "dev", ")", ",", "vaf", ")", ";", "else", "if", "(", "dev", ")", "r", "=", "printk", "(", "\"%", "s", "%", "s", ":", "%", "pV", "\"", ",", "level", ",", "netdev_name", "(", "dev", ")", ",", "vaf", ")", ";", "else", "r", "=", "printk", "(", "\"%", "s", "(", "NULL", "net_device", ")", ":", "%", "pV", "\"", ",", "level", ",", "vaf", ")", ";", "return", "r", ";", "}", "int", "netdev_printk", "(", "const", "char", "*", "level", ",", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "format", ",", ".", "..", ")", "{", "struct", "va_format", "vaf", ";", "va_list", "args", ";", "int", "r", ";", "va_start", "(", "args", ",", "format", ")", ";", "vaf", ".", "fmt", "=", "format", ";", "vaf", ".", "va", "=", "&", "args", ";", "r", "=", "__netdev_printk", "(", "level", ",", "dev", ",", "&", "vaf", ")", ";", "va_end", "(", "args", ")", ";", "return", "r", ";", "}", "EXPORT_SYMBOL", "(", "netdev_printk", ")", ";", "#", "define", "define_netdev_printk_level", "(", "func", ",", "level", ")", "\\", "int", "func", "(", "const", "struct", "net_device", "*", "dev", ",", "const", "char", "*", "fmt", ",", ".", "..", ")", "\\", "{", "\\", "int", "r", ";", "\\", "struct", "va_format", "vaf", ";", "\\", "va_list", "args", ";", "\\", "\\", "va_start", "(", "args", ",", "fmt", ")", ";", "\\", "\\", "vaf", ".", "fmt", "=", "fmt", ";", "\\", "vaf", ".", "va", "=", "&", "args", ";", "\\", "\\", "r", "=", "__netdev_printk", "(", "level", ",", "dev", ",", "&", "vaf", ")", ";", "\\", "va_end", "(", "args", ")", ";", "\\", "\\", "return", "r", ";", "\\", "}", "\\", "EXPORT_SYMBOL", "(", "func", ")", ";", "define_netdev_printk_level", "(", "netdev_emerg", ",", "KERN_EMERG", ")", ";", "define_netdev_printk_level", "(", "netdev_alert", ",", "KERN_ALERT", ")", ";", "define_netdev_printk_level", "(", "netdev_crit", ",", "KERN_CRIT", ")", ";", "define_netdev_printk_level", "(", "netdev_err", ",", "KERN_ERR", ")", ";", "define_netdev_printk_level", "(", "netdev_warn", ",", "KERN_WARNING", ")", ";", "define_netdev_printk_level", "(", "netdev_notice", ",", "KERN_NOTICE", ")", ";", "define_netdev_printk_level", "(", "netdev_info", ",", "KERN_INFO", ")", ";", "static", "void", "__net_exit", "netdev_exit", "(", "struct", "net", "*", "net", ")", "{", "kfree", "(", "net", "-", ">", "dev_name_head", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "106", ",", "9", "+", "106", ",", "9", "@", "@", "private", "String", "generateToken", "(", ")", "{", "return", "saltPlusToken", "+", "\"", ".\"", "+", "signature", ";", "}", "private", "boolean", "validateToken", "(", "String", "header", ")", "{", "private", "boolean", "validateToken", "(", "String", "header", ",", "String", "cookie", ")", "{", "if", "(", "header", "=", "=", "null", ")", "{", "if", "(", "header", "=", "=", "null", "|", "|", "cookie", "=", "=", "null", "|", "|", "!", "header", ".", "equals", "(", "cookie", ")", ")", "{", "return", "false", ";", "}", "@", "@", "-", "168", ",", "7", "+", "168", ",", "8", "@", "@", "public", "void", "handle", "(", "RoutingContext", "ctx", ")", "{", "case", "DELETE", ":", "case", "PATCH", ":", "final", "String", "header", "=", "ctx", ".", "request", "(", ").", "getHeader", "(", "headerName", ")", ";", "if", "(", "validateToken", "(", "header", "=", "=", "null", "?", "ctx", ".", "request", "(", ").", "getFormAttribute", "(", "headerName", ")", ":", "header", ")", ")", "{", "final", "String", "cookie", "=", "ctx", ".", "getCookie", "(", "cookieName", ")", ".", "getValue", "(", ");", "if", "(", "validateToken", "(", "header", "=", "=", "null", "?", "ctx", ".", "request", "(", ").", "getFormAttribute", "(", "headerName", ")", ":", "header", ",", "cookie", ")", ")", "{", "ctx", ".", "next", "(", ");", "}", "else", "{", "forbidden", "(", "ctx", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "62", ",", "6", "+", "62", ",", "9", "@", "@", "private", "MessageSupport", "(", ")", "throws", "InstantiationException", "{", "static", "protected", "UTF8Buffer", "readUTF", "(", "DataByteArrayInputStream", "is", ")", "throws", "ProtocolException", "{", "int", "size", "=", "is", ".", "readUnsignedShort", "(", ");", "if", "(", "size", "<", "0", ")", "{", "throw", "new", "ProtocolException", "(", "\"", "Invalid", "message", "encoding", "\"", ");", "}", "Buffer", "buffer", "=", "is", ".", "readBuffer", "(", "size", ")", ";", "if", "(", "buffer", "=", "=", "null", "|", "|", "buffer", ".", "length", "!", "=", "size", ")", "{", "throw", "new", "ProtocolException", "(", "\"", "Invalid", "message", "encoding", "\"", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "12934", ",", "6", "+", "12934", ",", "24", "@", "@", "static", "netdev_features_t", "bnx2x_features_check", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ",", "netdev_features_t", "features", ")", "{", "/", "*", "*", "A", "skb", "with", "gso_size", "+", "header", "length", ">", "9700", "will", "cause", "a", "*", "firmware", "panic", ".", "Drop", "GSO", "support", ".", "*", "*", "Eventually", "the", "upper", "layer", "should", "not", "pass", "these", "packets", "down", ".", "*", "*", "For", "speed", ",", "if", "the", "gso_size", "is", "<", "=", "9000", ",", "assume", "there", "will", "*", "not", "be", "700", "bytes", "of", "headers", "and", "pass", "it", "through", ".", "Only", "do", "a", "*", "full", "(", "slow", ")", "validation", "if", "the", "gso_size", "is", ">", "9000", ".", "*", "*", "(", "Due", "to", "the", "way", "SKB_BY_FRAGS", "works", "this", "will", "also", "do", "a", "full", "*", "validation", "in", "that", "case", ".", ")", "*", "/", "if", "(", "unlikely", "(", "skb_is_gso", "(", "skb", ")", "&", "&", "(", "skb_shinfo", "(", "skb", ")", "->", "gso_size", ">", "9000", ")", "&", "&", "!", "skb_gso_validate_mac_len", "(", "skb", ",", "9700", ")", "))", "features", "&", "=", "~", "NETIF_F_GSO_MASK", ";", "features", "=", "vlan_features_check", "(", "skb", ",", "features", ")", ";", "return", "vxlan_features_check", "(", "skb", ",", "features", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "61", ",", "6", "+", "61", ",", "13", "@", "@", "public", "void", "testGet", "(", ")", "throws", "Exception", "{", ".", "hasStatusCode", "(", "HttpStatus", ".", "SC_OK", ")", ";", "}", "@", "Test", "public", "void", "testGetOnInternalRegion", "(", ")", "{", "assertResponse", "(", "restClient", ".", "doGet", "(", "\"/", "__PR", "\"", ",", "null", ",", "null", ")", ")", ".", "hasStatusCode", "(", "HttpStatus", ".", "SC_NOT_FOUND", ")", ";", "}", "@", "Test", "public", "void", "testServerStartedOnDefaultPort", "(", ")", "throws", "Exception", "{", "JsonNode", "jsonArray", "=", "assertResponse", "(", "restClient", ".", "doGet", "(", "\"/", "servers", "\"", ",", "null", ",", "null", ")", ")", "@", "@", "-", "137", ",", "6", "+", "137", ",", "17", "@", "@", "private", "void", "checkSetOfRegions", "(", "@", "SuppressWarnings", "(", "\"", "rawtypes", "\"", ")", "Set", "regions", ")", "{", "return", "result", ";", "}", "/", "**", "*", "Server", "-", "side", "code", "using", "an", "InternalCacheForClientAccess", "may", "need", "to", "*", "get", "an", "Internal", "Region", "not", "normally", "accesible", "and", "may", "use", "this", "method", "to", "*", "do", "so", ".", "The", "REST", "API", ",", "for", "instance", ",", "needs", "to", "get", "at", "a", "Query", "store", "*", "region", "that", "is", "not", "otherwise", "accessible", "through", "the", "getRegion", "methods", ".", "*", "/", "public", "<", "K", ",", "V", ">", "Region", "<", "K", ",", "V", ">", "getInternalRegion", "(", "String", "path", ")", "{", "Region", "<", "K", ",", "V", ">", "result", "=", "delegate", ".", "getRegion", "(", "path", ")", ";", "return", "result", ";", "}", "@", "Override", "public", "Region", "getRegion", "(", "String", "path", ",", "boolean", "returnDestroyedRegion", ")", "{", "Region", "result", "=", "delegate", ".", "getRegion", "(", "path", ",", "returnDestroyedRegion", ")", ";", "@", "@", "-", "62", ",", "6", "+", "62", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "geode", ".", "distributed", ".", "internal", ".", "ClusterDistributionManager", ";", "import", "org", ".", "apache", ".", "geode", ".", "distributed", ".", "internal", ".", "membership", ".", "InternalDistributedMember", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCache", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCacheForClientAccess", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "logging", ".", "LogService", ";", "import", "org", ".", "apache", ".", "geode", ".", "pdx", ".", "JSONFormatter", ";", "import", "org", ".", "apache", ".", "geode", ".", "pdx", ".", "JSONFormatterException", ";", "@", "@", "-", "109", ",", "8", "+", "110", ",", "8", "@", "@", "public", "void", "afterPropertiesSet", "(", ")", "{", "JSONUtils", ".", "setObjectMapper", "(", "objectMapper", ")", ";", "}", "protected", "InternalCache", "getCache", "(", ")", "{", "InternalCache", "cache", "=", "cacheProvider", ".", "getInternalCache", "(", ");", "protected", "InternalCacheForClientAccess", "getCache", "(", ")", "{", "InternalCacheForClientAccess", "cache", "=", "cacheProvider", ".", "getCache", "(", ");", "Assert", ".", "state", "(", "cache", "!", "=", "null", ",", "\"", "The", "Gemfire", "Cache", "reference", "was", "not", "properly", "initialized", "\"", ");", "return", "cache", ";", "}", "@", "@", "-", "402", ",", "7", "+", "403", ",", "7", "@", "@", "void", "checkForQueryIdExist", "(", "String", "region", ",", "String", "key", ")", "{", "}", "Region", "<", "String", ",", "String", ">", "getQueryStore", "(", "final", "String", "namePath", ")", "{", "return", "ValidationUtils", ".", "returnValueThrowOnNull", "(", "getCache", "(", ").", "<", "String", ",", "String", ">", "getRegion", "(", "namePath", ")", ",", "return", "ValidationUtils", ".", "returnValueThrowOnNull", "(", "getCache", "(", ").", "getInternalRegion", "(", "namePath", ")", ",", "new", "GemfireRestException", "(", "String", ".", "format", "(", "\"", "Query", "store", "does", "not", "exist", "!", "\",", "namePath", ")", "))", ";", "}", "@", "@", "-", "15", ",", "6", "+", "15", ",", "7", "@", "@", "package", "org", ".", "apache", ".", "geode", ".", "rest", ".", "internal", ".", "web", ".", "controllers", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Set", ";", "@", "@", "-", "38", ",", "6", "+", "39", ",", "7", "@", "@", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "FunctionException", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "FunctionService", ";", "import", "org", ".", "apache", ".", "geode", ".", "cache", ".", "execute", ".", "ResultCollector", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalRegion", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "execute", ".", "util", ".", "FindRestEnabledServersFunction", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "logging", ".", "LogService", ";", "import", "org", ".", "apache", ".", "geode", ".", "rest", ".", "internal", ".", "web", ".", "controllers", ".", "support", ".", "RestServersResultCollector", ";", "@", "@", "-", "73", ",", "7", "+", "75", ",", "12", "@", "@", "logger", ".", "debug", "(", "\"", "Listing", "all", "resources", "(", "Regions", ")", "in", "Geode", ".", "..", "\")", ";", "final", "HttpHeaders", "headers", "=", "new", "HttpHeaders", "(", ");", "headers", ".", "setLocation", "(", "toUri", "(", "))", ";", "final", "Set", "<", "Region", "<", "?,", "?", ">>", "regions", "=", "getCache", "(", ").", "rootRegions", "(", ");", "final", "Set", "<", "Region", "<", "?,", "?", ">>", "regions", "=", "new", "HashSet", "<", ">(", ");", "for", "(", "InternalRegion", "region", ":", "getCache", "(", ").", "getApplicationRegions", "(", "))", "{", "if", "(", "region", "instanceof", "Region", ")", "{", "regions", ".", "add", "(", "region", ")", ";", "}", "}", ";", "String", "listRegionsAsJson", "=", "JSONUtils", ".", "formulateJsonForListRegions", "(", "regions", ",", "\"", "regions", "\"", ");", "return", "new", "ResponseEntity", "<", ">(", "listRegionsAsJson", ",", "headers", ",", "HttpStatus", ".", "OK", ")", ";", "}", "@", "@", "-", "244", ",", "7", "+", "244", ",", "7", "@", "@", "protected", "String", "getRestApiVersion", "(", ")", "{", "Query", "compiledQuery", "=", "compiledQueries", ".", "get", "(", "queryId", ")", ";", "if", "(", "compiledQuery", "=", "=", "null", ")", "{", "/", "/", "This", "is", "first", "time", "the", "query", "is", "seen", "by", "this", "server", ".", "final", "String", "oql", "=", "getValue", "(", "PARAMETERIZED_QUERIES_REGION", ",", "queryId", ",", "false", ")", ";", "final", "String", "oql", "=", "getQueryStore", "(", "PARAMETERIZED_QUERIES_REGION", ")", ".", "get", "(", "queryId", ")", ";", "ValidationUtils", ".", "returnValueThrowOnNull", "(", "oql", ",", "new", "ResourceNotFoundException", "(", "String", ".", "format", "(", "\"", "No", "Query", "with", "ID", "(", "%", "1", "$", "s", ")", "was", "found", "!", "\",", "queryId", ")", "))", ";", "@", "@", "-", "14", ",", "9", "+", "14", ",", "9", "@", "@", "*", "/", "package", "org", ".", "apache", ".", "geode", ".", "rest", ".", "internal", ".", "web", ".", "controllers", ".", "support", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCache", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCacheForClientAccess", ";", "public", "interface", "CacheProvider", "{", "InternalCache", "getInternalCache", "(", ");", "InternalCacheForClientAccess", "getCache", "(", ");", "}", "@", "@", "-", "18", ",", "12", "+", "18", ",", "17", "@", "@", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "GemFireCacheImpl", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCache", ";", "import", "org", ".", "apache", ".", "geode", ".", "internal", ".", "cache", ".", "InternalCacheForClientAccess", ";", "@", "Component", "(", "\"", "cacheProvider", "\"", ")", "public", "class", "CacheProviderImpl", "implements", "CacheProvider", "{", "@", "Override", "public", "InternalCache", "getInternalCache", "(", ")", "{", "return", "GemFireCacheImpl", ".", "getExisting", "(", ");", "public", "InternalCacheForClientAccess", "getCache", "(", ")", "{", "InternalCache", "result", "=", "GemFireCacheImpl", ".", "getExisting", "(", ");", "if", "(", "result", "=", "=", "null", ")", "{", "return", "null", ";", "}", "return", "new", "InternalCacheForClientAccess", "(", "result", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "253", ",", "9", "+", "253", ",", "9", "@", "@", "public", "OnGoingLogicalCondition", "notLike", "(", "String", "notLikeValue", ")", "{", "private", "LikeCondition", "createLike", "(", "Type", "type", ",", "String", "toMatch", ")", "{", "if", "(", "notLike", ")", "{", "return", "new", "NotLikeCondition", "(", "type", ",", "selector", ",", "toMatch", ")", ";", "return", "new", "NotLikeCondition", "(", "selector", ",", "selector", ".", "generateParameter", "(", "type", ".", "wrap", "(", "toMatch", ")", "))", ";", "}", "else", "{", "return", "new", "LikeCondition", "(", "type", ",", "selector", ",", "toMatch", ")", ";", "return", "new", "LikeCondition", "(", "selector", ",", "selector", ".", "generateParameter", "(", "type", ".", "wrap", "(", "toMatch", ")", "))", ";", "}", "}", "@", "@", "-", "19", ",", "15", "+", "19", ",", "10", "@", "@", "*", "/", "package", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "conditions", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "concurrent", ".", "atomic", ".", "AtomicInteger", ";", "import", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Condition", ";", "import", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Parameter", ";", "import", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Selector", ";", "public", "class", "LikeCondition", "implements", "Condition", "{", "public", "class", "LikeCondition", "<", "T", ">", "extends", "SingleParameterCondition", "<", "T", ">", "{", "public", "static", "enum", "Type", "{", "ANY", "{", "@", "@", "-", "58", ",", "51", "+", "53", ",", "24", "@", "@", "public", "String", "wrap", "(", "String", "toMatch", ")", "{", "public", "abstract", "String", "wrap", "(", "String", "toMatch", ")", ";", "}", "private", "final", "String", "toMatch", ";", "private", "final", "Type", "type", ";", "private", "final", "Selector", "selector", ";", "/", "**", "*", "<", "p", ">", "*", "Constructor", "for", "LikeCondition", ".", "*", "<", "/", "p", ">", "*", "*", "@", "param", "type", "*", "a", "*", "{", "@", "link", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "conditions", ".", "LikeCondition", ".", "Type", "}", "*", "object", ".", "*", "@", "param", "selector", "*", "a", "{", "@", "link", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Selector", "}", "object", ".", "*", "@", "param", "toMatch", "*", "a", "{", "@", "link", "java", ".", "lang", ".", "String", "}", "object", ".", "*", "@", "param", "type", "a", "*", "{", "@", "link", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "conditions", ".", "LikeCondition", ".", "Type", "}", "*", "object", ".", "*", "@", "param", "selector", "a", "{", "@", "link", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Selector", "}", "object", ".", "*", "@", "param", "toMatch", "a", "{", "@", "link", "java", ".", "lang", ".", "String", "}", "object", ".", "*", "/", "public", "LikeCondition", "(", "Type", "type", ",", "Selector", "selector", ",", "String", "toMatch", ")", "{", "this", ".", "type", "=", "type", ";", "this", ".", "selector", "=", "selector", ";", "this", ".", "toMatch", "=", "toMatch", ";", "public", "LikeCondition", "(", "Selector", "selector", ",", "Parameter", "<", "T", ">", "parameter", ")", "{", "super", "(", "selector", ",", "parameter", ")", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "String", "createQueryFragment", "(", "AtomicInteger", "incrementor", ")", "{", "return", "selector", ".", "createQueryFragment", "(", "incrementor", ")", "+", "\"", "\"", "+", "getLike", "(", ")", "+", "\"", "'", "\"", "+", "type", ".", "wrap", "(", "toMatch", ")", "+", "\"", "'", "\"", ";", "}", "/", "**", "*", "<", "p", ">", "*", "getLike", ".", "*", "<", "/", "p", ">", "*", "*", "@", "return", "a", "{", "@", "link", "java", ".", "lang", ".", "String", "}", "object", ".", "*", "/", "protected", "String", "getLike", "(", ")", "{", "protected", "String", "getComparator", "(", ")", "{", "return", "\"", "like", "\"", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "List", "<", "Parameter", ">", "getParameters", "(", ")", "{", "return", "Collections", ".", "emptyList", "(", ");", "}", "}", "@", "@", "-", "19", ",", "8", "+", "19", ",", "9", "@", "@", "*", "/", "package", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "conditions", ";", "import", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Parameter", ";", "import", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Selector", ";", "public", "class", "NotLikeCondition", "extends", "LikeCondition", "{", "public", "class", "NotLikeCondition", "<", "T", ">", "extends", "LikeCondition", "<", "T", ">", "{", "/", "**", "*", "<", "p", ">", "Constructor", "for", "NotLikeCondition", ".", "</", "p", ">", "@", "@", "-", "29", ",", "14", "+", "30", ",", "13", "@", "@", "*", "@", "param", "selector", "a", "{", "@", "link", "org", ".", "torpedoquery", ".", "jpa", ".", "internal", ".", "Selector", "}", "object", ".", "*", "@", "param", "toMatch", "a", "{", "@", "link", "java", ".", "lang", ".", "String", "}", "object", ".", "*", "/", "public", "NotLikeCondition", "(", "Type", "type", ",", "Selector", "selector", ",", "String", "toMatch", ")", "{", "super", "(", "type", ",", "selector", ",", "toMatch", ")", ";", "public", "NotLikeCondition", "(", "Selector", "selector", ",", "Parameter", "<", "T", ">", "parameter", ")", "{", "super", "(", "selector", ",", "parameter", ")", ";", "}", "/", "**", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "protected", "String", "getLike", "(", ")", "{", "return", "\"", "not", "\"", "+", "super", ".", "getLike", "(", ");", "protected", "String", "getComparator", "(", ")", "{", "return", "\"", "not", "\"", "+", "super", ".", "getComparator", "(", ");", "}", "}", "@", "@", "-", "96", ",", "23", "+", "96", ",", "26", "@", "@", "public", "void", "testWhereWithStringFunction", "(", ")", "{", "Entity", "from", "=", "from", "(", "Entity", ".", "class", ")", ";", "where", "(", "lower", "(", "from", ".", "getCode", "(", "))", ").", "like", "(", ").", "any", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "like", "'", "%", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "like", ":", "function_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "function_1", "\"", "))", ";", "}", "@", "Test", "public", "void", "testWhereWithLikeFunction", "(", ")", "{", "Entity", "from", "=", "from", "(", "Entity", ".", "class", ")", ";", "where", "(", "lower", "(", "from", ".", "getCode", "(", "))", ").", "like", "(", "\"%", "test", "%", "\")", ";", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "like", "'", "%", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "like", ":", "function_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "function_1", "\"", "))", ";", "}", "@", "Test", "public", "void", "testWhereWithNotLikeFunction", "(", ")", "{", "Entity", "from", "=", "from", "(", "Entity", ".", "class", ")", ";", "where", "(", "lower", "(", "from", ".", "getCode", "(", "))", ").", "notLike", "(", "\"%", "test", "%", "\")", ";", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "not", "like", "'", "%", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "lower", "(", "entity_0", ".", "code", ")", "not", "like", ":", "function_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "function_1", "\"", "))", ";", "}", "/", "**", "@", "@", "-", "119", ",", "7", "+", "119", ",", "7", "@", "@", "public", "void", "testLowerFunctionInCondition", "(", ")", "{", "where", "(", "condition", ")", ";", "Query", "<", "Entity", ">", "select", "=", "select", "(", "entity", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "(", "lower", "(", "entity_0", ".", "code", ")", "like", "'", "%", "test", "%", "'", ")", "\",", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "(", "lower", "(", "entity_0", ".", "code", ")", "like", ":", "function_1", ")", "\",", "select", ".", "getQuery", "(", "))", ";", "}", "@", "@", "-", "343", ",", "7", "+", "343", ",", "8", "@", "@", "public", "void", "test_like_any", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "like", "(", ").", "any", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", "'", "%", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "/", "**", "@", "@", "-", "355", ",", "7", "+", "356", ",", "8", "@", "@", "public", "void", "test_notLike_any", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "notLike", "(", ").", "any", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", "'", "%", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "/", "**", "@", "@", "-", "367", ",", "7", "+", "369", ",", "8", "@", "@", "public", "void", "test_like_startsWith", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "like", "(", ").", "startsWith", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", "'", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "@", "Test", "@", "@", "-", "376", ",", "7", "+", "379", ",", "8", "@", "@", "public", "void", "test_notLike_startsWith", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "notLike", "(", ").", "startsWith", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", "'", "test", "%", "'\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "test", "%", "\",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "/", "**", "@", "@", "-", "388", ",", "7", "+", "392", ",", "8", "@", "@", "public", "void", "test_like_endsWith", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "like", "(", ").", "endsWith", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", "'", "%", "test", "'", "\",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "\"", ",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "/", "**", "@", "@", "-", "400", ",", "7", "+", "405", ",", "8", "@", "@", "public", "void", "test_notLike_endsWith", "(", ")", "{", "where", "(", "from", ".", "getCode", "(", "))", ".", "notLike", "(", ").", "endsWith", "(", "\"", "test", "\"", ");", "Query", "<", "Entity", ">", "select", "=", "select", "(", "from", ")", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", "'", "%", "test", "'", "\",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"", "select", "entity_0", "from", "Entity", "entity_0", "where", "entity_0", ".", "code", "not", "like", ":", "code_1", "\"", ",", "select", ".", "getQuery", "(", "))", ";", "assertEquals", "(", "\"%", "test", "\"", ",", "select", ".", "getParameters", "(", ").", "get", "(", "\"", "code_1", "\"", "))", ";", "}", "/", "**"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "17", ",", "6", "+", "17", ",", "7", "@", "@", "package", "org", ".", "springframework", ".", "cloud", ".", "config", ".", "server", ".", "resource", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Collection", ";", "import", "java", ".", "util", ".", "LinkedHashSet", ";", "import", "java", ".", "util", ".", "Set", ";", "@", "@", "-", "56", ",", "18", "+", "57", ",", "22", "@", "@", "public", "synchronized", "Resource", "findOne", "(", "String", "application", ",", "String", "profile", ",", "String", "if", "(", "StringUtils", ".", "hasText", "(", "path", ")", ")", "{", "String", "[", "]", "locations", "=", "this", ".", "service", ".", "getLocations", "(", "application", ",", "profile", ",", "label", ")", ".", "getLocations", "(", ");", "ArrayList", "<", "Resource", ">", "locationResources", "=", "new", "ArrayList", "<", ">(", ");", "for", "(", "int", "i", "=", "locations", ".", "length", ";", "i", "-", "-", ">", "0", ";", ")", "{", "String", "location", "=", "locations", "[", "i", "]", ";", "if", "(", "!", "PathUtils", ".", "isInvalidEncodedLocation", "(", "location", ")", ")", "{", "locationResources", ".", "add", "(", "this", ".", "resourceLoader", ".", "getResource", "(", "location", ")", ");", "}", "}", "try", "{", "for", "(", "int", "i", "=", "locations", ".", "length", ";", "i", "-", "-", ">", "0", ";", ")", "{", "String", "location", "=", "locations", "[", "i", "]", ";", "if", "(", "PathUtils", ".", "isInvalidEncodedLocation", "(", "location", ")", ")", "{", "continue", ";", "}", "for", "(", "Resource", "location", ":", "locationResources", ")", "{", "for", "(", "String", "local", ":", "getProfilePaths", "(", "profile", ",", "path", ")", ")", "{", "if", "(", "!", "PathUtils", ".", "isInvalidPath", "(", "local", ")", "&", "&", "!", "PathUtils", ".", "isInvalidEncodedPath", "(", "local", ")", ")", "{", "Resource", "file", "=", "this", ".", "resourceLoader", ".", "getResource", "(", "location", ")", ".", "createRelative", "(", "local", ")", ";", "if", "(", "file", ".", "exists", "(", ")", "&", "&", "file", ".", "isReadable", "(", "))", "{", "Resource", "file", "=", "location", ".", "createRelative", "(", "local", ")", ";", "if", "(", "file", ".", "exists", "(", ")", "&", "&", "file", ".", "isReadable", "(", ")", "&", "&", "PathUtils", ".", "checkResource", "(", "file", ",", "location", ",", "locationResources", ")", ")", "{", "return", "file", ";", "}", "}", "@", "@", "-", "16", ",", "12", "+", "16", ",", "17", "@", "@", "package", "org", ".", "springframework", ".", "cloud", ".", "config", ".", "server", ".", "support", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "UnsupportedEncodingException", ";", "import", "java", ".", "net", ".", "URLDecoder", ";", "import", "java", ".", "util", ".", "List", ";", "import", "org", ".", "apache", ".", "commons", ".", "logging", ".", "Log", ";", "import", "org", ".", "apache", ".", "commons", ".", "logging", ".", "LogFactory", ";", "import", "org", ".", "springframework", ".", "core", ".", "io", ".", "ClassPathResource", ";", "import", "org", ".", "springframework", ".", "core", ".", "io", ".", "Resource", ";", "import", "org", ".", "springframework", ".", "core", ".", "io", ".", "UrlResource", ";", "import", "org", ".", "springframework", ".", "util", ".", "ResourceUtils", ";", "import", "org", ".", "springframework", ".", "util", ".", "StringUtils", ";", "@", "@", "-", "205", ",", "4", "+", "210", ",", "71", "@", "@", "public", "static", "boolean", "isInvalidPath", "(", "String", "path", ")", "{", "return", "false", ";", "}", "/", "**", "*", "Perform", "additional", "checks", "on", "a", "resolved", "resource", "beyond", "checking", "whether", "the", "*", "resources", "exists", "and", "is", "readable", ".", "The", "default", "implementation", "also", "verifies", "the", "*", "resource", "is", "either", "under", "the", "location", "relative", "to", "which", "it", "was", "found", "or", "is", "under", "*", "one", "of", "the", "{", "@", "link", "#", "setAllowedLocations", "allowed", "locations", "}", ".", "*", "@", "param", "resource", "the", "resource", "to", "check", "*", "@", "param", "location", "the", "location", "relative", "to", "which", "the", "resource", "was", "found", "*", "@", "param", "allowedLocations", "set", "of", "allowed", "locations", "*", "@", "return", "\"", "true", "\"", "if", "resource", "is", "in", "a", "valid", "location", ",", "\"", "false", "\"", "otherwise", ".", "*", "@", "throws", "IOException", "if", "Resource", "URLS", "fail", "to", "parse", ".", "*", "@", "since", "4", ".", "1", ".", "2", "*", "/", "public", "static", "boolean", "checkResource", "(", "Resource", "resource", ",", "Resource", "location", ",", "List", "<", "Resource", ">", "allowedLocations", ")", "throws", "IOException", "{", "if", "(", "isResourceUnderLocation", "(", "resource", ",", "location", ")", ")", "{", "return", "true", ";", "}", "if", "(", "allowedLocations", "!", "=", "null", ")", "{", "for", "(", "Resource", "current", ":", "allowedLocations", ")", "{", "if", "(", "isResourceUnderLocation", "(", "resource", ",", "current", ")", ")", "{", "return", "true", ";", "}", "}", "}", "if", "(", "logger", ".", "isWarnEnabled", "(", "))", "{", "logger", ".", "warn", "(", "\"", "Resource", "path", "\\", "\"\"", "+", "location", ".", "getURI", "(", ")", "+", "\"", "\\\"", "was", "successfully", "resolved", "\"", "+", "\"", "but", "resource", "\\", "\"\"", "+", "resource", ".", "getURL", "(", ")", "+", "\"", "\\\"", "is", "neither", "under", "the", "\"", "+", "\"", "current", "location", "\\", "\"\"", "+", "location", ".", "getURL", "(", ")", "+", "\"", "\\\"", "nor", "under", "any", "of", "the", "\"", "+", "\"", "allowed", "locations", "\"", "+", "(", "allowedLocations", "!", "=", "null", "?", "allowedLocations", ":", "\"", "[]", "\")", ");", "}", "return", "false", ";", "}", "private", "static", "boolean", "isResourceUnderLocation", "(", "Resource", "resource", ",", "Resource", "location", ")", "throws", "IOException", "{", "if", "(", "resource", ".", "getClass", "(", ")", "!", "=", "location", ".", "getClass", "(", "))", "{", "return", "false", ";", "}", "String", "resourcePath", ";", "String", "locationPath", ";", "if", "(", "resource", "instanceof", "UrlResource", ")", "{", "resourcePath", "=", "resource", ".", "getURL", "(", ").", "toExternalForm", "(", ");", "locationPath", "=", "StringUtils", ".", "cleanPath", "(", "location", ".", "getURL", "(", ").", "toString", "(", "))", ";", "}", "else", "if", "(", "resource", "instanceof", "ClassPathResource", ")", "{", "resourcePath", "=", "(", "(", "ClassPathResource", ")", "resource", ")", ".", "getPath", "(", ");", "locationPath", "=", "StringUtils", ".", "cleanPath", "(", "((", "ClassPathResource", ")", "location", ")", ".", "getPath", "(", "))", ";", "}", "else", "{", "resourcePath", "=", "resource", ".", "getURL", "(", ").", "getPath", "(", ");", "locationPath", "=", "StringUtils", ".", "cleanPath", "(", "location", ".", "getURL", "(", ").", "getPath", "(", "))", ";", "}", "if", "(", "locationPath", ".", "equals", "(", "resourcePath", ")", ")", "{", "return", "true", ";", "}", "locationPath", "=", "(", "locationPath", ".", "endsWith", "(", "\"/", "\")", "|", "|", "locationPath", ".", "isEmpty", "(", ")", "?", "locationPath", ":", "locationPath", "+", "\"", "/\"", ");", "return", "(", "resourcePath", ".", "startsWith", "(", "locationPath", ")", "&", "&", "!", "isInvalidEncodedPath", "(", "resourcePath", ")", ");", "}", "}", "@", "@", "-", "120", ",", "6", "+", "120", ",", "17", "@", "@", "public", "void", "invalidPathWithPreviousDirectoryAllEncoded", "(", ")", "{", "testInvalidPath", "(", "\"%", "2E", "%", "2E", "%", "2F", "\"", ");", "}", "@", "Test", "public", "void", "invalidPathEncodedSlash", "(", ")", "{", "String", "file", "=", "System", ".", "getProperty", "(", "\"", "user", ".", "dir", "\"", ");", "file", "=", "file", ".", "replaceFirst", "(", "\"\\", "\\/", "\",", "\"", "%", "2f", "\"", ");", "file", "+", "=", "\"", "/", "src", "/", "test", "/", "resources", "/", "ssh", "/", "key", "\"", ";", "this", ".", "exception", ".", "expect", "(", "NoSuchResourceException", ".", "class", ")", ";", "this", ".", "nativeRepository", ".", "setSearchLocations", "(", "\"", "file", ":", "./", "\")", ";", "this", ".", "output", ".", "expect", "(", "containsString", "(", "\"", "is", "neither", "under", "the", "current", "location", "\"", "))", ";", "this", ".", "repository", ".", "findOne", "(", "\"", "blah", "\"", ",", "\"", "local", "\"", ",", "\"", "master", "\"", ",", "file", ")", ";", "}", "private", "void", "testInvalidPath", "(", "String", "label", ")", "{", "this", ".", "exception", ".", "expect", "(", "NoSuchResourceException", ".", "class", ")", ";", "this", ".", "nativeRepository", ".", "setSearchLocations", "(", "\"", "file", ":", "./", "src", "/", "test", "/", "resources", "/", "test", "/", "local", "\"", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "60", ",", "6", "+", "60", ",", "13", "@", "@", "<", "groupId", ">", "org", ".", "apache", ".", "shiro", "<", "/", "groupId", ">", "<", "artifactId", ">", "shiro", "-", "crypto", "-", "core", "<", "/", "artifactId", ">", "<", "/", "dependency", ">", "<", "dependency", ">", "<", "groupId", ">", "org", ".", "bouncycastle", "<", "/", "groupId", ">", "<", "artifactId", ">", "bcprov", "-", "jdk15on", "<", "/", "artifactId", ">", "<", "version", ">", "1", ".", "64", "<", "/", "version", ">", "<", "scope", ">", "test", "<", "/", "scope", ">", "<", "/", "dependency", ">", "<", "/", "dependencies", ">", "<", "/", "project", ">", "@", "@", "-", "18", ",", "13", "+", "18", ",", "16", "@", "@", "*", "/", "package", "org", ".", "apache", ".", "shiro", ".", "crypto", ";", "import", "javax", ".", "crypto", ".", "spec", ".", "GCMParameterSpec", ";", "import", "java", ".", "security", ".", "spec", ".", "AlgorithmParameterSpec", ";", "/", "**", "*", "{", "@", "code", "CipherService", "}", "using", "the", "{", "@", "code", "AES", "}", "cipher", "algorithm", "for", "all", "encryption", ",", "decryption", ",", "and", "key", "operations", ".", "*", "<", "p", "/", ">", "*", "The", "AES", "algorithm", "can", "support", "key", "sizes", "of", "{", "@", "code", "128", "}", ",", "{", "@", "code", "192", "}", "and", "{", "@", "code", "256", "}", "bits", "<", "b", ">", "*<", "/", "b", ">", ".", "This", "implementation", "*", "defaults", "to", "128", "bits", ".", "*", "<", "p", "/", ">", "*", "Note", "that", "this", "class", "retains", "the", "parent", "class", "'", "s", "default", "{", "@", "link", "OperationMode", "#", "CBC", "CBC", "}", "mode", "of", "operation", "*", "Note", "that", "this", "class", "retains", "changes", "the", "parent", "class", "'", "s", "default", "{", "@", "link", "OperationMode", "#", "CBC", "CBC", "}", "mode", "to", "{", "@", "link", "OperationMode", "#", "GCM", "GCM", "}", "of", "operation", "*", "instead", "of", "the", "typical", "JDK", "default", "of", "{", "@", "link", "OperationMode", "#", "ECB", "ECB", "}", ".", "{", "@", "code", "ECB", "}", "should", "not", "be", "used", "in", "*", "security", "-", "sensitive", "environments", "because", "{", "@", "code", "ECB", "}", "does", "not", "allow", "for", "initialization", "vectors", ",", "which", "are", "*", "considered", "necessary", "for", "strong", "encryption", ".", "See", "the", "{", "@", "link", "DefaultBlockCipherService", "parent", "class", "}", "'", "s", "JavaDoc", "and", "the", "@", "@", "-", "59", ",", "7", "+", "62", ",", "7", "@", "@", "*", "<", "/", "tr", ">", "*", "<", "tr", ">", "*", "<", "td", ">", "{@", "link", "#", "setMode", "mode", "}", "</", "td", ">", "*", "<", "td", ">", "{@", "link", "OperationMode", "#", "CBC", "CBC", "}", "<", "b", ">", "*<", "/", "b", ">", "</", "td", ">", "*", "<", "td", ">", "{@", "link", "OperationMode", "#", "GCM", "GCM", "}", "<", "b", ">", "*<", "/", "b", ">", "</", "td", ">", "*", "<", "/", "tr", ">", "*", "<", "tr", ">", "*", "<", "td", ">", "{@", "link", "#", "setPaddingScheme", "paddingScheme", "}", "</", "td", ">", "@", "@", "-", "75", ",", "16", "+", "78", ",", "28", "@", "@", "*", "<", "/", "tr", ">", "*", "<", "/", "table", ">", "*", "<", "p", "/", ">", "*", "<", "b", ">", "*<", "/", "b", ">", "The", "{", "@", "link", "OperationMode", "#", "CBC", "CBC", "}", "operation", "mode", "is", "used", "instead", "of", "the", "JDK", "default", "{", "@", "code", "ECB", "}", "to", "*", "<", "b", ">", "*<", "/", "b", ">", "The", "{", "@", "link", "OperationMode", "#", "GCM", "GCM", "}", "operation", "mode", "is", "used", "instead", "of", "the", "JDK", "default", "{", "@", "code", "ECB", "}", "to", "*", "ensure", "strong", "encryption", ".", "{", "@", "code", "ECB", "}", "should", "not", "be", "used", "in", "security", "-", "sensitive", "environments", "-", "see", "the", "*", "{", "@", "link", "DefaultBlockCipherService", "DefaultBlockCipherService", "}", "class", "JavaDoc", "'", "s", "&", "quot", ";", "Operation", "Mode", "&", "quot", ";", "section", "*", "for", "more", ".", "*", "<", "p", "/", ">", "*", "<", "b", ">", "**", "</", "b", ">", "In", "conjunction", "with", "the", "default", "{", "@", "code", "CBC", "}", "operation", "mode", ",", "initialization", "vectors", "are", "generated", "by", "*", "<", "b", ">", "**", "</", "b", ">", "In", "conjunction", "with", "the", "default", "{", "@", "code", "GCM", "}", "operation", "mode", ",", "initialization", "vectors", "are", "generated", "by", "*", "default", "to", "ensure", "strong", "encryption", ".", "See", "the", "{", "@", "link", "JcaCipherService", "JcaCipherService", "}", "class", "JavaDoc", "for", "more", ".", "*", "/", "public", "AesCipherService", "(", ")", "{", "super", "(", "ALGORITHM_NAME", ")", ";", "setMode", "(", "OperationMode", ".", "GCM", ")", ";", "setStreamingMode", "(", "OperationMode", ".", "GCM", ")", ";", "}", "@", "Override", "protected", "AlgorithmParameterSpec", "createParameterSpec", "(", "byte", "[", "]", "iv", ",", "boolean", "streaming", ")", "{", "if", "(", "(", "streaming", "&", "&", "OperationMode", ".", "GCM", ".", "name", "(", ").", "equals", "(", "getStreamingModeName", "(", "))", ")", "|", "|", "(", "!", "streaming", "&", "&", "OperationMode", ".", "GCM", ".", "name", "(", ").", "equals", "(", "getModeName", "(", "))", "))", "{", "return", "new", "GCMParameterSpec", "(", "getKeySize", "(", "),", "iv", ")", ";", "}", "return", "super", ".", "createParameterSpec", "(", "iv", ",", "streaming", ")", ";", "}", "}", "@", "@", "-", "590", ",", "13", "+", "590", ",", "18", "@", "@", "private", "void", "crypt", "(", "InputStream", "in", ",", "OutputStream", "out", ",", "byte", "[", "]", "keyBytes", ",", "byte", "[", "]", "iv", ",", "javax", ".", "crypto", ".", "Cipher", "cipher", "=", "newCipherInstance", "(", "streaming", ")", ";", "java", ".", "security", ".", "Key", "jdkKey", "=", "new", "SecretKeySpec", "(", "key", ",", "getAlgorithmName", "(", "))", ";", "IvParameterSpec", "ivSpec", "=", "null", ";", "AlgorithmParameterSpec", "ivSpec", "=", "null", ";", "if", "(", "iv", "!", "=", "null", "&", "&", "iv", ".", "length", ">", "0", ")", "{", "ivSpec", "=", "new", "IvParameterSpec", "(", "iv", ")", ";", "ivSpec", "=", "createParameterSpec", "(", "iv", ",", "streaming", ")", ";", "}", "init", "(", "cipher", ",", "jcaCipherMode", ",", "jdkKey", ",", "ivSpec", ",", "getSecureRandom", "(", "))", ";", "return", "cipher", ";", "}", "protected", "AlgorithmParameterSpec", "createParameterSpec", "(", "byte", "[", "]", "iv", ",", "boolean", "streaming", ")", "{", "return", "new", "IvParameterSpec", "(", "iv", ")", ";", "}", "}", "@", "@", "-", "18", ",", "6", "+", "18", ",", "12", "@", "@", "*", "/", "package", "org", ".", "apache", ".", "shiro", ".", "crypto", "import", "org", ".", "bouncycastle", ".", "jce", ".", "provider", ".", "BouncyCastleProvider", "import", "java", ".", "security", ".", "Security", "import", "static", "org", ".", "junit", ".", "Assert", ".", "*;", "import", "org", ".", "apache", ".", "shiro", ".", "codec", ".", "CodecSupport", "import", "org", ".", "apache", ".", "shiro", ".", "util", ".", "ByteSource", "import", "org", ".", "junit", ".", "Test", "@", "@", "-", "29", ",", "46", "+", "35", ",", "146", "@", "@", "import", "static", "junit", ".", "framework", ".", "Assert", ".", "*", "*", "*", "@", "since", "1", ".", "0", "*", "/", "public", "class", "AesCipherServiceTest", "{", "class", "AesCipherServiceTest", "{", "private", "static", "final", "String", "[", "]", "PLAINTEXTS", "=", "[", "\"", "Hello", ",", "this", "is", "a", "test", ".", "\",", "\"", "Lorem", "ipsum", "dolor", "sit", "amet", ",", "consectetur", "adipisicing", "elit", ",", "sed", "do", "eiusmod", "tempor", "incididunt", "ut", "labore", "et", "dolore", "magna", "aliqua", ".", "\"", "]", ";", "]", "AesCipherServiceTest", "(", ")", "{", "Security", ".", "addProvider", "(", "new", "BouncyCastleProvider", "(", "))", "}", "@", "Test", "public", "void", "testBlockOperations", "(", ")", "{", "AesCipherService", "aes", "=", "new", "AesCipherService", "(", ");", "void", "testBlockOperations", "(", ")", "{", "AesCipherService", "cipher", "=", "new", "AesCipherService", "(", ")", "assertBlock", "(", "cipher", ")", "}", "byte", "[", "]", "key", "=", "aes", ".", "generateNewKey", "(", ").", "getEncoded", "(", ");", "@", "Test", "void", "testStreamingOperations", "(", ")", "{", "AesCipherService", "cipher", "=", "new", "AesCipherService", "(", ")", "assertStreaming", "(", "cipher", ")", "}", "for", "(", "String", "plain", ":", "PLAINTEXTS", ")", "{", "byte", "[", "]", "plaintext", "=", "CodecSupport", ".", "toBytes", "(", "plain", ")", ";", "ByteSource", "ciphertext", "=", "aes", ".", "encrypt", "(", "plaintext", ",", "key", ")", ";", "ByteSource", "decrypted", "=", "aes", ".", "decrypt", "(", "ciphertext", ".", "getBytes", "(", "),", "key", ")", ";", "assertTrue", "(", "Arrays", ".", "equals", "(", "plaintext", ",", "decrypted", ".", "getBytes", "(", "))", ");", "}", "@", "Test", "void", "testAesGcm", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "GCM", ")", "assertStreaming", "(", "OperationMode", ".", "GCM", ")", "}", "@", "Test", "public", "void", "testStreamingOperations", "(", ")", "{", "void", "testCcm", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "CCM", ",", "PaddingScheme", ".", "NONE", ",", "13", "*", "8", ")", "/", "/", "13", "bytes", "assertStreaming", "(", "OperationMode", ".", "CCM", ")", "}", "AesCipherService", "cipher", "=", "new", "AesCipherService", "(", ");", "byte", "[", "]", "key", "=", "cipher", ".", "generateNewKey", "(", ").", "getEncoded", "(", ");", "@", "Test", "void", "testCfb", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "CFB", ")", "assertStreaming", "(", "OperationMode", ".", "CFB", ")", "}", "@", "Test", "void", "testCtr", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "CTR", ")", "assertStreaming", "(", "OperationMode", ".", "CTR", ")", "}", "@", "Test", "void", "testEax", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "EAX", ")", "assertStreaming", "(", "OperationMode", ".", "EAX", ")", "}", "@", "Test", "void", "testEcb", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "ECB", ",", "PaddingScheme", ".", "PKCS5", ")", "}", "@", "Test", "void", "testNone", "(", ")", "{", "assertBlock", "(", "(", "OperationMode", ")", "null", ",", "null", ")", "}", "@", "Test", "void", "testOcb", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "OCB", ",", "PaddingScheme", ".", "NONE", ",", "15", "*", "8", ")", "/", "/", "15", "bytes", "assertStreaming", "(", "OperationMode", ".", "OCB", ",", "PaddingScheme", ".", "NONE", ",", "16", "*", "8", ")", "/", "/", "16", "bytes", "}", "@", "Test", "void", "testOfb", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "OFB", ")", "assertStreaming", "(", "OperationMode", ".", "OFB", ")", "}", "@", "Test", "void", "testPcbc", "(", ")", "{", "assertBlock", "(", "OperationMode", ".", "PCBC", ",", "PaddingScheme", ".", "PKCS5", ")", "assertStreaming", "(", "OperationMode", ".", "PCBC", ",", "PaddingScheme", ".", "PKCS5", ")", "}", "private", "static", "assertBlock", "(", "OperationMode", "mode", ",", "PaddingScheme", "scheme", "=", "PaddingScheme", ".", "NONE", ",", "int", "ivSize", "=", "JcaCipherService", ".", "DEFAULT_KEY_SIZE", ")", "{", "AesCipherService", "cipher", "=", "new", "AesCipherService", "(", ")", "cipher", ".", "setInitializationVectorSize", "(", "ivSize", ")", "if", "(", "mode", "=", "=", "null", ")", "{", "cipher", ".", "setModeName", "(", "null", ")", "}", "else", "{", "cipher", ".", "setMode", "(", "mode", ")", "}", "if", "(", "scheme", "=", "=", "null", ")", "{", "cipher", ".", "setPaddingSchemeName", "(", "null", ")", "}", "else", "{", "cipher", ".", "setPaddingScheme", "(", "scheme", ")", "}", "assertBlock", "(", "cipher", ")", "}", "private", "static", "assertStreaming", "(", "OperationMode", "mode", ",", "PaddingScheme", "scheme", "=", "PaddingScheme", ".", "NONE", ",", "int", "ivSize", "=", "JcaCipherService", ".", "DEFAULT_KEY_SIZE", ")", "{", "AesCipherService", "cipher", "=", "new", "AesCipherService", "(", ")", "cipher", ".", "setInitializationVectorSize", "(", "ivSize", ")", "if", "(", "mode", "=", "=", "null", ")", "{", "cipher", ".", "setStreamingModeName", "(", "null", ")", "}", "else", "{", "cipher", ".", "setStreamingMode", "(", "mode", ")", "}", "if", "(", "scheme", "=", "=", "null", ")", "{", "cipher", ".", "setStreamingPaddingScheme", "(", "null", ")", "}", "else", "{", "cipher", ".", "setStreamingPaddingScheme", "(", "scheme", ")", "}", "assertBlock", "(", "cipher", ")", "}", "private", "static", "assertBlock", "(", "AesCipherService", "cipher", ",", "byte", "[", "]", "key", "=", "cipher", ".", "generateNewKey", "(", ").", "getEncoded", "(", "))", "{", "for", "(", "String", "plain", ":", "PLAINTEXTS", ")", "{", "byte", "[", "]", "plaintext", "=", "CodecSupport", ".", "toBytes", "(", "plain", ")", ";", "InputStream", "plainIn", "=", "new", "ByteArrayInputStream", "(", "plaintext", ")", ";", "ByteArrayOutputStream", "cipherOut", "=", "new", "ByteArrayOutputStream", "(", ");", "cipher", ".", "encrypt", "(", "plainIn", ",", "cipherOut", ",", "key", ")", ";", "byte", "[", "]", "ciphertext", "=", "cipherOut", ".", "toByteArray", "(", ");", "InputStream", "cipherIn", "=", "new", "ByteArrayInputStream", "(", "ciphertext", ")", ";", "ByteArrayOutputStream", "plainOut", "=", "new", "ByteArrayOutputStream", "(", ");", "cipher", ".", "decrypt", "(", "cipherIn", ",", "plainOut", ",", "key", ")", ";", "byte", "[", "]", "decrypted", "=", "plainOut", ".", "toByteArray", "(", ");", "assertTrue", "(", "Arrays", ".", "equals", "(", "plaintext", ",", "decrypted", ")", ");", "byte", "[", "]", "plaintext", "=", "CodecSupport", ".", "toBytes", "(", "plain", ")", "ByteSource", "ciphertext", "=", "cipher", ".", "encrypt", "(", "plaintext", ",", "key", ")", "ByteSource", "decrypted", "=", "cipher", ".", "decrypt", "(", "ciphertext", ".", "getBytes", "(", "),", "key", ")", "assertTrue", "(", "Arrays", ".", "equals", "(", "plaintext", ",", "decrypted", ".", "getBytes", "(", "))", ")", "}", "}", "private", "static", "assertStreaming", "(", "AesCipherService", "cipher", ",", "byte", "[", "]", "key", "=", "cipher", ".", "generateNewKey", "(", ").", "getEncoded", "(", "))", "{", "for", "(", "String", "plain", ":", "PLAINTEXTS", ")", "{", "byte", "[", "]", "plaintext", "=", "CodecSupport", ".", "toBytes", "(", "plain", ")", "InputStream", "plainIn", "=", "new", "ByteArrayInputStream", "(", "plaintext", ")", "ByteArrayOutputStream", "cipherOut", "=", "new", "ByteArrayOutputStream", "(", ")", "cipher", ".", "encrypt", "(", "plainIn", ",", "cipherOut", ",", "key", ")", "byte", "[", "]", "ciphertext", "=", "cipherOut", ".", "toByteArray", "(", ")", "InputStream", "cipherIn", "=", "new", "ByteArrayInputStream", "(", "ciphertext", ")", "ByteArrayOutputStream", "plainOut", "=", "new", "ByteArrayOutputStream", "(", ")", "cipher", ".", "decrypt", "(", "cipherIn", ",", "plainOut", ",", "key", ")", "byte", "[", "]", "decrypted", "=", "plainOut", ".", "toByteArray", "(", ")", "assertTrue", "(", "Arrays", ".", "equals", "(", "plaintext", ",", "decrypted", ")", ")", "}", "}", "}", "@", "@", "-", "125", ",", "13", "+", "125", ",", "13", "@", "@", "public", "void", "getRememberedPrincipals", "(", ")", "{", "/", "/", "The", "following", "base64", "string", "was", "determined", "from", "the", "log", "output", "of", "the", "above", "'", "onSuccessfulLogin", "'", "test", ".", "/", "/", "This", "will", "have", "to", "change", "any", "time", "the", "PrincipalCollection", "implementation", "changes", ":", "final", "String", "userPCAesBase64", "=", "\"", "WlD5MLzzZznN3dQ1lPJO", "/", "eScSuY245k29aECNmjUs31o7Yu478hWhaM5Sj", "\"", "+", "\"", "jmoe900", "/", "72JNu3hcJaPG6Q17Vuz4F8x0kBjbFnPVx4PqzsZYT6yreeS2jwO6OwfI", "+", "efqXOKyB2a5KPtnr", "\"", "+", "\"", "7jt5kZsyH38XJISb81cf6xqTGUru8zC", "+", "kNqJFz7E5RpO0kraBofS5jhMm45gDVjDRkjgPJAzocVWMtrza", "\"", "+", "\"", "zy67P8eb", "+", "kMSBCqGI251JTNAGboVgQ28KjfaAJ", "/", "6LXRJUj7kB7CGia7mgRk", "+", "hxzEJGDs81at5VOPqODJr", "\"", "+", "\"", "xb8tcIdemFUFIkiYVP9bGs4dP3ECtmw7aNrCzv", "+", "84sx3vRFUrd5DbDYpEuE12hF2Y9owDK9sxStbXoF0y", "\"", "+", "\"", "A32dhfGDIqS", "+", "agsass0sWn8WX2TM9i8SxrUjiFbxqyIG49HbqGrZp5QLM9IuIwO", "+", "TzGfF1FzumQGdwmWT", "\"", "+", "\"", "xkVapw5UESl34YvA615cb", "+", "82ue1I", "=", "\";", "final", "String", "userPCAesBase64", "=", "\"", "0o6DCfePYTjK4q579qzUFEfkeGRvbBOdKHp2y8", "/", "nGAltt1Vz8uW0Z8igeO", "\"", "\"", "Tq", "/", "yBmcw25f3Q0ui", "/", "Leg3x0iQZWhw9Bbu0mFHmHsGxEd6mPwtUpSegIjyX5c", "/", "kZpqnb7QLdajPWiczX8P", "\"", "\"", "Oc2Eku5", "+", "8ye1u38Y8uKlklHxcYCPh0pRiDSBxfjPsLaDfOpGbmPjZd4SVg68i", "/", "++", "TvUjqBNJyb", "+", "pDix3f", "\"", "\"", "PeuPvReWGcE50iovezVZrEfDOAQ0cZYW35ShypMWOmE9yZnb", "+", "p8", "+", "+", "StDyAUegryyuIa4pjuRzfMh9D", "+", "sN", "\"", "\"", "F9tm", "/", "EnDC1VCer2S", "/", "a0AGlWAQiM7jrWt1sNinZcKIrvShaWI21tONJt8WhozNS2H72lk4p92rfLNHeglT", "\"", "\"", "xObxIYxLfTI9KiToSe1nYmpQmbBO8x1wWDkWBG", "/", "/", "EqRvhgbIfQVqJp12T0fJC1nFuZuVhw", "/", "ZanaAZGDk8", "\"", "\"", "7aLMiw3T6FBZtWaspgvfH", "+", "0TJrTD8Ra386ekNXNN8JW8", "=", "\";", "Cookie", "[", "]", "cookies", "=", "new", "Cookie", "[", "]{", "new", "Cookie", "(", "CookieRememberMeManager", ".", "DEFAULT_REMEMBER_ME_COOKIE_NAME", ",", "userPCAesBase64", ")", "@", "@", "-", "165", ",", "13", "+", "165", ",", "13", "@", "@", "public", "void", "getRememberedPrincipalsNoMoreDefaultCipher", "(", ")", "{", "/", "/", "The", "following", "base64", "string", "was", "determined", "from", "the", "log", "output", "of", "the", "above", "'", "onSuccessfulLogin", "'", "test", ".", "/", "/", "This", "will", "have", "to", "change", "any", "time", "the", "PrincipalCollection", "implementation", "changes", ":", "final", "String", "userPCAesBase64", "=", "\"", "WlD5MLzzZznN3dQ1lPJO", "/", "eScSuY245k29aECNmjUs31o7Yu478hWhaM5Sj", "\"", "+", "\"", "jmoe900", "/", "72JNu3hcJaPG6Q17Vuz4F8x0kBjbFnPVx4PqzsZYT6yreeS2jwO6OwfI", "+", "efqXOKyB2a5KPtnr", "\"", "+", "\"", "7jt5kZsyH38XJISb81cf6xqTGUru8zC", "+", "kNqJFz7E5RpO0kraBofS5jhMm45gDVjDRkjgPJAzocVWMtrza", "\"", "+", "\"", "zy67P8eb", "+", "kMSBCqGI251JTNAGboVgQ28KjfaAJ", "/", "6LXRJUj7kB7CGia7mgRk", "+", "hxzEJGDs81at5VOPqODJr", "\"", "+", "\"", "xb8tcIdemFUFIkiYVP9bGs4dP3ECtmw7aNrCzv", "+", "84sx3vRFUrd5DbDYpEuE12hF2Y9owDK9sxStbXoF0y", "\"", "+", "\"", "A32dhfGDIqS", "+", "agsass0sWn8WX2TM9i8SxrUjiFbxqyIG49HbqGrZp5QLM9IuIwO", "+", "TzGfF1FzumQGdwmWT", "\"", "+", "\"", "xkVapw5UESl34YvA615cb", "+", "82ue1I", "=", "\";", "final", "String", "userPCAesBase64", "=", "\"", "0o6DCfePYTjK4q579qzUFEfkeGRvbBOdKHp2y8", "/", "nGAltt1Vz8uW0Z8igeO", "\"", "\"", "Tq", "/", "yBmcw25f3Q0ui", "/", "Leg3x0iQZWhw9Bbu0mFHmHsGxEd6mPwtUpSegIjyX5c", "/", "kZpqnb7QLdajPWiczX8P", "\"", "\"", "Oc2Eku5", "+", "8ye1u38Y8uKlklHxcYCPh0pRiDSBxfjPsLaDfOpGbmPjZd4SVg68i", "/", "++", "TvUjqBNJyb", "+", "pDix3f", "\"", "\"", "PeuPvReWGcE50iovezVZrEfDOAQ0cZYW35ShypMWOmE9yZnb", "+", "p8", "+", "+", "StDyAUegryyuIa4pjuRzfMh9D", "+", "sN", "\"", "\"", "F9tm", "/", "EnDC1VCer2S", "/", "a0AGlWAQiM7jrWt1sNinZcKIrvShaWI21tONJt8WhozNS2H72lk4p92rfLNHeglT", "\"", "\"", "xObxIYxLfTI9KiToSe1nYmpQmbBO8x1wWDkWBG", "/", "/", "EqRvhgbIfQVqJp12T0fJC1nFuZuVhw", "/", "ZanaAZGDk8", "\"", "\"", "7aLMiw3T6FBZtWaspgvfH", "+", "0TJrTD8Ra386ekNXNN8JW8", "=", "\";", "Cookie", "[", "]", "cookies", "=", "new", "Cookie", "[", "]{", "new", "Cookie", "(", "CookieRememberMeManager", ".", "DEFAULT_REMEMBER_ME_COOKIE_NAME", ",", "userPCAesBase64", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "3424", ",", "6", "+", "3424", ",", "7", "@", "@", "static", "void", "napi_reuse_skb", "(", "struct", "napi_struct", "*", "napi", ",", "struct", "sk_buff", "*", "skb", ")", "__skb_pull", "(", "skb", ",", "skb_headlen", "(", "skb", ")", ");", "skb_reserve", "(", "skb", ",", "NET_IP_ALIGN", "-", "skb_headroom", "(", "skb", ")", ");", "skb", "-", ">", "vlan_tci", "=", "0", ";", "skb", "-", ">", "dev", "=", "napi", "-", ">", "dev", ";", "napi", "-", ">", "skb", "=", "skb", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "14", ",", "6", "+", "14", ",", "7", "@", "@", "#", "include", "<", "linux", "/", "log2", ".", "h", ">", "#", "include", "<", "linux", "/", "module", ".", "h", ">", "#", "include", "<", "linux", "/", "slab", ".", "h", ">", "#", "include", "<", "linux", "/", "nospec", ".", "h", ">", "#", "include", "<", "linux", "/", "backing", "-", "dev", ".", "h", ">", "#", "include", "<", "trace", "/", "events", "/", "ext4", ".", "h", ">", "@", "@", "-", "2140", ",", "7", "+", "2141", ",", "8", "@", "@", "ext4_mb_regular_allocator", "(", "struct", "ext4_allocation_context", "*", "ac", ")", "*", "This", "should", "tell", "if", "fe_len", "is", "exactly", "power", "of", "2", "*", "/", "if", "(", "(", "ac", "-", ">", "ac_g_ex", ".", "fe_len", "&", "(", "~(", "1", "<", "<", "(", "i", "-", "1", ")", "))", ")", "=", "=", "0", ")", "ac", "-", ">", "ac_2order", "=", "i", "-", "1", ";", "ac", "-", ">", "ac_2order", "=", "array_index_nospec", "(", "i", "-", "1", ",", "sb", "-", ">", "s_blocksize_bits", "+", "2", ")", ";", "}", "/", "*", "if", "stream", "allocation", "is", "enabled", ",", "use", "global", "goal", "*", "/"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "150", ",", "7", "+", "150", ",", "7", "@", "@", "static", "inline", "bool", "kvm_apic_vid_enabled", "(", "struct", "kvm", "*", "kvm", ")", "static", "inline", "bool", "kvm_apic_has_events", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "{", "return", "vcpu", "-", ">", "arch", ".", "apic", "-", ">", "pending_events", ";", "return", "kvm_vcpu_has_lapic", "(", "vcpu", ")", "&", "&", "vcpu", "-", ">", "arch", ".", "apic", "-", ">", "pending_events", ";", "}", "static", "inline", "bool", "kvm_lowest_prio_delivery", "(", "struct", "kvm_lapic_irq", "*", "irq", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "0", ",", "0", "+", "1", ",", "34", "@", "@", "-", "-", "TEST", "-", "-", "Bug", "#", "72750", ":", "wddx_deserialize", "null", "dereference", "-", "-", "SKIPIF", "-", "-", "<", "?", "php", "if", "(", "!", "extension_loaded", "(", "'", "wddx", "'", "))", "{", "die", "(", "'", "skip", ".", "wddx", "not", "available", "'", ");", "}", "?", ">", "-", "-", "FILE", "-", "-", "<", "?", "php", "$", "xml", "=", "<", "<<", "XML", "<", "?", "xml", "version", "=", "'", "1", ".", "0", "'", "?>", "<", "!", "DOCTYPE", "wddxPacket", "SYSTEM", "'", "wddx_0100", ".", "dtd", "'", ">", "<", "wddxPacket", "version", "=", "'", "1", ".", "0", "'", ">", "<", "header", "/", ">", "<", "data", ">", "<", "struct", ">", "<", "var", "name", "=", "'", "aBinary", "'", ">", "<", "binary", "length", "=", "'", "11", "'", ">\\", "\\", "tYmluYXJRhdGE", "=", "</", "binary", ">", "<", "/", "var", ">", "<", "/", "struct", ">", "<", "/", "data", ">", "<", "/", "wddxPacket", ">", "XML", ";", "$", "array", "=", "wddx_deserialize", "(", "$", "xml", ")", ";", "var_dump", "(", "$", "array", ")", ";", "?", ">", "-", "-", "EXPECT", "-", "-", "array", "(", "1", ")", "{", "[", "\"", "aBinary", "\"", "]=", ">", "string", "(", "0", ")", "\"", "\"", "}", "@", "@", "-", "959", ",", "8", "+", "959", ",", "12", "@", "@", "static", "void", "php_wddx_pop_element", "(", "void", "*", "user_data", ",", "const", "XML_Char", "*", "name", ")", "new_str", "=", "php_base64_decode", "(", "Z_STRVAL_P", "(", "ent1", "-", ">", "data", ")", ",", "Z_STRLEN_P", "(", "ent1", "-", ">", "data", ")", ",", "&", "new_len", ")", ";", "STR_FREE", "(", "Z_STRVAL_P", "(", "ent1", "-", ">", "data", ")", ");", "Z_STRVAL_P", "(", "ent1", "-", ">", "data", ")", "=", "new_str", ";", "Z_STRLEN_P", "(", "ent1", "-", ">", "data", ")", "=", "new_len", ";", "if", "(", "new_str", ")", "{", "Z_STRVAL_P", "(", "ent1", "-", ">", "data", ")", "=", "new_str", ";", "Z_STRLEN_P", "(", "ent1", "-", ">", "data", ")", "=", "new_len", ";", "}", "else", "{", "ZVAL_EMPTY_STRING", "(", "ent1", "-", ">", "data", ")", ";", "}", "}", "/", "*", "Call", "__wakeup", "(", ")", "method", "on", "the", "object", ".", "*", "/"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "88", ",", "6", "+", "88", ",", "8", "@", "@", "(", "CURLOPT_STDERR", ")", ").", "(", "Gustavo", ")", "-", "Fixed", "bug", "#", "52786", "(", "PHP", "should", "reset", "section", "to", "[", "PHP", "]", "after", "ini", "sections", ")", ".", "(", "Fedora", "at", "famillecollet", "dot", "com", ")", "-", "Fixed", "bug", "#", "52784", "(", "Race", "condition", "when", "handling", "many", "concurrent", "signals", ")", ".", "(", "nick", "dot", "telford", "at", "gmail", "dot", "com", ",", "Arnaud", ")", "-", "Fixed", "bug", "#", "52772", "(", "var_dump", "(", ")", "doesn", "'", "t", "check", "for", "the", "existence", "of", "get_class_name", "before", "calling", "it", ")", ".", "(", "Kalle", ",", "Gustavo", ")", "-", "Fixed", "bug", "#", "52744", "(", "cal_days_in_month", "incorrect", "for", "December", "1", "BCE", ")", ".", "@", "@", "-", "887", ",", "7", "+", "887", ",", "7", "@", "@", "PHP_FUNCTION", "(", "pcntl_signal", ")", "zend_hash_index_update", "(", "&", "PCNTL_G", "(", "php_signal_table", ")", ",", "signo", ",", "(", "void", "*", "*)", "&", "handle", ",", "sizeof", "(", "zval", "*", "),", "(", "void", "*", "*)", "&", "dest_handle", ")", ";", "if", "(", "dest_handle", ")", "zval_add_ref", "(", "dest_handle", ")", ";", "if", "(", "php_signal", "(", "signo", ",", "pcntl_signal_handler", ",", "(", "int", ")", "restart_syscalls", ")", "=", "=", "SIG_ERR", ")", "{", "if", "(", "php_signal4", "(", "signo", ",", "pcntl_signal_handler", ",", "(", "int", ")", "restart_syscalls", ",", "1", ")", "=", "=", "SIG_ERR", ")", "{", "PCNTL_G", "(", "last_error", ")", "=", "errno", ";", "php_error_docref", "(", "NULL", "TSRMLS_CC", ",", "E_WARNING", ",", "\"", "Error", "assigning", "signal", "\"", ");", "RETURN_FALSE", ";", "@", "@", "-", "1224", ",", "11", "+", "1224", ",", "19", "@", "@", "void", "pcntl_signal_dispatch", "(", ")", "{", "zval", "*", "param", ",", "*", "*", "handle", ",", "*", "retval", ";", "struct", "php_pcntl_pending_signal", "*", "queue", ",", "*", "next", ";", "sigset_t", "mask", ";", "sigset_t", "old_mask", ";", "TSRMLS_FETCH", "(", ");", "/", "*", "Mask", "all", "signals", "*", "/", "sigfillset", "(", "&", "mask", ")", ";", "sigprocmask", "(", "SIG_BLOCK", ",", "&", "mask", ",", "&", "old_mask", ")", ";", "/", "*", "Bail", "if", "the", "queue", "is", "empty", "or", "if", "we", "are", "already", "playing", "the", "queue", "*", "/", "if", "(", "!", "PCNTL_G", "(", "head", ")", "|", "|", "PCNTL_G", "(", "processing_signal_queue", ")", ")", "if", "(", "!", "PCNTL_G", "(", "head", ")", "|", "|", "PCNTL_G", "(", "processing_signal_queue", ")", ")", "{", "sigprocmask", "(", "SIG_SETMASK", ",", "&", "old_mask", ",", "NULL", ")", ";", "return", ";", "}", "/", "*", "Prevent", "reentrant", "handler", "calls", "*", "/", "PCNTL_G", "(", "processing_signal_queue", ")", "=", "1", ";", "@", "@", "-", "1260", ",", "6", "+", "1268", ",", "9", "@", "@", "void", "pcntl_signal_dispatch", "(", ")", "/", "*", "Re", "-", "enable", "queue", "*", "/", "PCNTL_G", "(", "processing_signal_queue", ")", "=", "0", ";", "/", "*", "return", "signal", "mask", "to", "previous", "state", "*", "/", "sigprocmask", "(", "SIG_SETMASK", ",", "&", "old_mask", ",", "NULL", ")", ";", "}", "@", "@", "-", "22", ",", "11", "+", "22", ",", "15", "@", "@", "/", "*", "php_signal", "using", "sigaction", "is", "derrived", "from", "Advanced", "Programing", "*", "in", "the", "Unix", "Environment", "by", "W", ".", "Richard", "Stevens", "p", "298", ".", "*", "/", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", "Sigfunc", "*", "php_signal4", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ",", "int", "mask_all", ")", "{", "struct", "sigaction", "act", ",", "oact", ";", "act", ".", "sa_handler", "=", "func", ";", "sigemptyset", "(", "&", "act", ".", "sa_mask", ")", ";", "if", "(", "mask_all", ")", "{", "sigfillset", "(", "&", "act", ".", "sa_mask", ")", ";", "}", "else", "{", "sigemptyset", "(", "&", "act", ".", "sa_mask", ")", ";", "}", "act", ".", "sa_flags", "=", "0", ";", "if", "(", "signo", "=", "=", "SIGALRM", "|", "|", "(", "!", "restart", ")", ")", "{", "#", "ifdef", "SA_INTERRUPT", "@", "@", "-", "43", ",", "6", "+", "47", ",", "11", "@", "@", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", "return", "oact", ".", "sa_handler", ";", "}", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", "{", "return", "php_signal4", "(", "signo", ",", "func", ",", "restart", ",", "0", ")", ";", "}", "/", "*", "*", "Local", "variables", ":", "*", "tab", "-", "width", ":", "4", "@", "@", "-", "31", ",", "5", "+", "31", ",", "6", "@", "@", "typedef", "void", "Sigfunc", "(", "int", ")", ";", "Sigfunc", "*", "php_signal", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ")", ";", "Sigfunc", "*", "php_signal4", "(", "int", "signo", ",", "Sigfunc", "*", "func", ",", "int", "restart", ",", "int", "mask_all", ")", ";", "#", "endif"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "196", ",", "6", "+", "196", ",", "9", "@", "@", "static", "void", "cmtp_recv_interopmsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "s", "switch", "(", "CAPIMSG_SUBCOMMAND", "(", "skb", "-", ">", "data", ")", ")", "{", "case", "CAPI_CONF", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "10", ")", "break", ";", "func", "=", "CAPIMSG_U16", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "5", ")", ";", "info", "=", "CAPIMSG_U16", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "8", ")", ";", "@", "@", "-", "226", ",", "6", "+", "229", ",", "9", "@", "@", "static", "void", "cmtp_recv_interopmsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "s", "break", ";", "case", "CAPI_FUNCTION_GET_PROFILE", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "11", "+", "sizeof", "(", "capi_profile", ")", ")", "break", ";", "controller", "=", "CAPIMSG_U16", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "11", ")", ";", "msgnum", "=", "CAPIMSG_MSGID", "(", "skb", "-", ">", "data", ")", ";", "@", "@", "-", "246", ",", "17", "+", "252", ",", "26", "@", "@", "static", "void", "cmtp_recv_interopmsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "s", "break", ";", "case", "CAPI_FUNCTION_GET_MANUFACTURER", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "15", ")", "break", ";", "controller", "=", "CAPIMSG_U32", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "10", ")", ";", "if", "(", "!", "info", "&", "&", "ctrl", ")", "{", "int", "len", "=", "min_t", "(", "uint", ",", "CAPI_MANUFACTURER_LEN", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "14", "]", ");", "memset", "(", "ctrl", "-", ">", "manu", ",", "0", ",", "CAPI_MANUFACTURER_LEN", ")", ";", "strncpy", "(", "ctrl", "-", ">", "manu", ",", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "15", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "14", "]", ");", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "15", ",", "len", ")", ";", "}", "break", ";", "case", "CAPI_FUNCTION_GET_VERSION", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "32", ")", "break", ";", "controller", "=", "CAPIMSG_U32", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "12", ")", ";", "if", "(", "!", "info", "&", "&", "ctrl", ")", "{", "@", "@", "-", "269", ",", "13", "+", "284", ",", "18", "@", "@", "static", "void", "cmtp_recv_interopmsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "s", "break", ";", "case", "CAPI_FUNCTION_GET_SERIAL_NUMBER", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "17", ")", "break", ";", "controller", "=", "CAPIMSG_U32", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "12", ")", ";", "if", "(", "!", "info", "&", "&", "ctrl", ")", "{", "int", "len", "=", "min_t", "(", "uint", ",", "CAPI_SERIAL_LEN", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "16", "]", ");", "memset", "(", "ctrl", "-", ">", "serial", ",", "0", ",", "CAPI_SERIAL_LEN", ")", ";", "strncpy", "(", "ctrl", "-", ">", "serial", ",", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "17", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "16", "]", ");", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "17", ",", "len", ")", ";", "}", "break", ";", "@", "@", "-", "284", ",", "14", "+", "304", ",", "18", "@", "@", "static", "void", "cmtp_recv_interopmsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "s", "break", ";", "case", "CAPI_IND", ":", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", "+", "6", ")", "break", ";", "func", "=", "CAPIMSG_U16", "(", "skb", "-", ">", "data", ",", "CAPI_MSG_BASELEN", "+", "3", ")", ";", "if", "(", "func", "=", "=", "CAPI_FUNCTION_LOOPBACK", ")", "{", "int", "len", "=", "min_t", "(", "uint", ",", "skb", "-", ">", "len", "-", "CAPI_MSG_BASELEN", "-", "6", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "5", "]", ");", "appl", "=", "CAPIMSG_APPID", "(", "skb", "-", ">", "data", ")", ";", "msgnum", "=", "CAPIMSG_MSGID", "(", "skb", "-", ">", "data", ")", ";", "cmtp_send_interopmsg", "(", "session", ",", "CAPI_RESP", ",", "appl", ",", "msgnum", ",", "func", ",", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "6", ",", "skb", "-", ">", "data", "[", "CAPI_MSG_BASELEN", "+", "5", "]", ");", "skb", "-", ">", "data", "+", "CAPI_MSG_BASELEN", "+", "6", ",", "len", ")", ";", "}", "break", ";", "@", "@", "-", "309", ",", "6", "+", "333", ",", "9", "@", "@", "void", "cmtp_recv_capimsg", "(", "struct", "cmtp_session", "*", "session", ",", "struct", "sk_buff", "*", "skb", ")", "BT_DBG", "(", "\"", "session", "%", "p", "skb", "%", "p", "len", "%", "d", "\"", ",", "session", ",", "skb", ",", "skb", "-", ">", "len", ")", ";", "if", "(", "skb", "-", ">", "len", "<", "CAPI_MSG_BASELEN", ")", "return", ";", "if", "(", "CAPIMSG_COMMAND", "(", "skb", "-", ">", "data", ")", "=", "=", "CAPI_INTEROPERABILITY", ")", "{", "cmtp_recv_interopmsg", "(", "session", ",", "skb", ")", ";", "return", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "14", ",", "6", "+", "14", ",", "8", "@", "@", "import", "{", "isFalsyAttrValue", "}", "from", "'", "web", "/", "util", "/", "attrs", "'", "import", "{", "isSSRUnsafeAttr", "}", "from", "'", "web", "/", "server", "/", "util", "'", "export", "default", "function", "renderAttrs", "(", "node", ":", "VNodeWithData", ")", ":", "string", "{", "let", "attrs", "=", "node", ".", "data", ".", "attrs", "let", "res", "=", "'", "'", "@", "@", "-", "34", ",", "6", "+", "36", ",", "9", "@", "@", "export", "default", "function", "renderAttrs", "(", "node", ":", "VNodeWithData", ")", ":", "string", "{", "}", "for", "(", "const", "key", "in", "attrs", ")", "{", "if", "(", "isSSRUnsafeAttr", "(", "key", ")", ")", "{", "continue", "}", "if", "(", "key", "=", "==", "'", "style", "'", ")", "{", "/", "/", "leave", "it", "to", "the", "style", "module", "continue", "@", "@", "-", "18", ",", "6", "+", "18", ",", "11", "@", "@", "const", "isAttr", "=", "makeMap", "(", "'", "target", ",", "title", ",", "type", ",", "usemap", ",", "value", ",", "width", ",", "wrap", "'", ")", "const", "unsafeAttrCharRE", "=", "/", "[>", "/=", "\"'", "\\", "u0009", "\\", "u000a", "\\", "u000c", "\\", "u0020", "]", "/", "export", "const", "isSSRUnsafeAttr", "=", "name", "=", ">", "{", "return", "unsafeAttrCharRE", ".", "test", "(", "name", ")", "}", "/", "*", "istanbul", "ignore", "next", "*", "/", "const", "isRenderableAttr", "=", "(", "name", ":", "string", ")", ":", "boolean", "=", ">", "{", "return", "(", "@", "@", "-", "1", ",", "6", "+", "1", ",", "6", "@", "@", "/", "*", "@", "flow", "*", "/", "import", "{", "escape", "}", "from", "'", "web", "/", "server", "/", "util", "'", "import", "{", "escape", ",", "isSSRUnsafeAttr", "}", "from", "'", "web", "/", "server", "/", "util", "'", "import", "{", "isObject", ",", "extend", "}", "from", "'", "shared", "/", "util", "'", "import", "{", "renderAttr", "}", "from", "'", "web", "/", "server", "/", "modules", "/", "attrs", "'", "import", "{", "renderClass", "}", "from", "'", "web", "/", "util", "/", "class", "'", "@", "@", "-", "109", ",", "6", "+", "109", ",", "9", "@", "@", "function", "renderStringList", "(", "function", "renderAttrs", "(", "obj", ":", "Object", ")", ":", "string", "{", "let", "res", "=", "'", "'", "for", "(", "const", "key", "in", "obj", ")", "{", "if", "(", "isSSRUnsafeAttr", "(", "key", ")", ")", "{", "continue", "}", "res", "+", "=", "renderAttr", "(", "key", ",", "obj", "[", "key", "]", ")", "}", "return", "res", "@", "@", "-", "929", ",", "6", "+", "929", ",", "40", "@", "@", "describe", "(", "'", "SSR", ":", "renderToString", "'", ",", "(", ")", "=", ">", "{", "}", ")", "}", ")", "it", "(", "'", "should", "prevent", "xss", "in", "attribute", "names", "'", ",", "done", "=", ">", "{", "renderVmWithOptions", "(", "{", "data", ":", "{", "xss", ":", "{", "'", "foo", "=", "\"", "bar", "\"", "><", "/", "div", ">", "<", "script", ">", "alert", "(", "1", ")", "</", "script", ">", "':", "'", "'", "}", "}", ",", "template", ":", "`", "<", "div", "v", "-", "bind", "=", "\"", "xss", "\"", "><", "/", "div", ">", "`", "}", ",", "res", "=", ">", "{", "expect", "(", "res", ")", ".", "not", ".", "toContain", "(", "`<", "script", ">", "alert", "(", "1", ")", "</", "script", ">", "`)", "done", "(", ")", "}", ")", "}", ")", "it", "(", "'", "should", "prevent", "xss", "in", "attribute", "names", "(", "optimized", ")", "',", "done", "=", ">", "{", "renderVmWithOptions", "(", "{", "data", ":", "{", "xss", ":", "{", "'", "foo", "=", "\"", "bar", "\"", "><", "/", "div", ">", "<", "script", ">", "alert", "(", "1", ")", "</", "script", ">", "':", "'", "'", "}", "}", ",", "template", ":", "`", "<", "div", ">", "<", "a", "v", "-", "bind", "=", "\"", "xss", "\"", ">", "foo", "<", "/", "a", ">", "<", "/", "div", ">", "`", "}", ",", "res", "=", ">", "{", "expect", "(", "res", ")", ".", "not", ".", "toContain", "(", "`<", "script", ">", "alert", "(", "1", ")", "</", "script", ">", "`)", "done", "(", ")", "}", ")", "}", ")", "it", "(", "'", "should", "prevent", "script", "xss", "with", "v", "-", "bind", "object", "syntax", "+", "array", "value", "'", ",", "done", "=", ">", "{", "renderVmWithOptions", "(", "{", "data", ":", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "36", ",", "4", "+", "36", ",", "8", "@", "@", "otherwise", "to", "0", ".", "*", "/", "#", "define", "JSON_HAVE_LOCALECONV", "0", "/", "*", "Maximum", "recursion", "depth", "for", "parsing", "JSON", "input", ".", "This", "limits", "the", "depth", "of", "e", ".", "g", ".", "array", "-", "within", "-", "array", "constructions", ".", "*", "/", "#", "define", "JSON_PARSER_MAX_DEPTH", "2048", "#", "endif", "@", "@", "-", "60", ",", "5", "+", "60", ",", "9", "@", "@", "#", "define", "JSON_HAVE_LOCALECONV", "@", "JSON_HAVE_LOCALECONV", "@", "/", "*", "Maximum", "recursion", "depth", "for", "parsing", "JSON", "input", ".", "This", "limits", "the", "depth", "of", "e", ".", "g", ".", "array", "-", "within", "-", "array", "constructions", ".", "*", "/", "#", "define", "JSON_PARSER_MAX_DEPTH", "2048", "#", "endif", "@", "@", "-", "108", ",", "3", "+", "108", ",", "13", "@", "@", "types", ",", "`", "`", "long", "double", "`", "`,", "etc", ".", "Obviously", ",", "shorter", "types", "like", "`", "`", "short", "`", "`,", "are", "implicitly", "handled", "via", "the", "ordinary", "C", "type", "coercion", "rules", "(", "subject", "to", "overflow", "semantics", ")", ".", "Also", ",", "no", "support", "or", "hooks", "are", "provided", "for", "any", "supplemental", "\"", "bignum", "\"", "type", "add", "-", "on", "packages", ".", "Depth", "of", "nested", "values", "-", "--", "--", "--", "--", "--", "--", "--", "--", "--", "--", "-", "To", "avoid", "stack", "exhaustion", ",", "Jansson", "currently", "limits", "the", "nesting", "depth", "for", "arrays", "and", "objects", "to", "a", "certain", "value", "(", "default", ":", "2048", ")", ",", "defined", "as", "a", "macro", "`", "`", "JSON_PARSER_MAX_DEPTH", "`", "`", "within", "`", "`", "jansson_config", ".", "h", "`", "`.", "The", "limit", "is", "allowed", "to", "be", "set", "by", "the", "RFC", ";", "there", "is", "no", "recommended", "value", "or", "required", "minimum", "depth", "to", "be", "supported", ".", "@", "@", "-", "36", ",", "4", "+", "36", ",", "8", "@", "@", "otherwise", "to", "0", ".", "*", "/", "#", "define", "JSON_HAVE_LOCALECONV", "@", "json_have_localeconv", "@", "/", "*", "Maximum", "recursion", "depth", "for", "parsing", "JSON", "input", ".", "This", "limits", "the", "depth", "of", "e", ".", "g", ".", "array", "-", "within", "-", "array", "constructions", ".", "*", "/", "#", "define", "JSON_PARSER_MAX_DEPTH", "2048", "#", "endif", "@", "@", "-", "62", ",", "6", "+", "62", ",", "7", "@", "@", "typedef", "struct", "{", "stream_t", "stream", ";", "strbuffer_t", "saved_text", ";", "size_t", "flags", ";", "size_t", "depth", ";", "int", "token", ";", "union", "{", "struct", "{", "@", "@", "-", "803", ",", "6", "+", "804", ",", "12", "@", "@", "static", "json_t", "*", "parse_value", "(", "lex_t", "*", "lex", ",", "size_t", "flags", ",", "json_error_t", "*", "error", ")", "{", "json_t", "*", "json", ";", "lex", "-", ">", "depth", "+", "+;", "if", "(", "lex", "-", ">", "depth", ">", "JSON_PARSER_MAX_DEPTH", ")", "{", "error_set", "(", "error", ",", "lex", ",", "\"", "maximum", "parsing", "depth", "reached", "\"", ");", "return", "NULL", ";", "}", "switch", "(", "lex", "-", ">", "token", ")", "{", "case", "TOKEN_STRING", ":", "{", "const", "char", "*", "value", "=", "lex", "-", ">", "value", ".", "string", ".", "val", ";", "@", "@", "-", "865", ",", "13", "+", "872", ",", "16", "@", "@", "static", "json_t", "*", "parse_value", "(", "lex_t", "*", "lex", ",", "size_t", "flags", ",", "json_error_t", "*", "error", ")", "if", "(", "!", "json", ")", "return", "NULL", ";", "lex", "-", ">", "depth", "-", "-;", "return", "json", ";", "}", "static", "json_t", "*", "parse_json", "(", "lex_t", "*", "lex", ",", "size_t", "flags", ",", "json_error_t", "*", "error", ")", "{", "json_t", "*", "result", ";", "lex", "-", ">", "depth", "=", "0", ";", "lex_scan", "(", "lex", ",", "error", ")", ";", "if", "(", "!(", "flags", "&", "JSON_DECODE_ANY", ")", ")", "{", "if", "(", "lex", "-", ">", "token", "!", "=", "'", "['", "&", "&", "lex", "-", ">", "token", "!", "=", "'", "{'", ")", "{", "@", "@", "-", "0", ",", "0", "+", "1", ",", "2", "@", "@", "1", "2049", "2049", "maximum", "parsing", "depth", "reached", "near", "'", "['", "@", "@", "-", "0", ",", "0", "+", "1", "@", "@", "[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "[[", "["], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "115", ",", "7", "+", "115", ",", "8", "@", "@", "static", "inline", "int", "ntrig_get_mode", "(", "struct", "hid_device", "*", "hdev", ")", "struct", "hid_report", "*", "report", "=", "hdev", "-", ">", "report_enum", "[", "HID_FEATURE_REPORT", "]", ".", "report_id_hash", "[", "0x0d", "]", ";", "if", "(", "!", "report", ")", "if", "(", "!", "report", "|", "|", "report", "-", ">", "maxfield", "<", "1", "|", "|", "report", "-", ">", "field", "[", "0", "]", "->", "report_count", "<", "1", ")", "return", "-", "EINVAL", ";", "hid_hw_request", "(", "hdev", ",", "report", ",", "HID_REQ_GET_REPORT", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1173", ",", "6", "+", "1173", ",", "7", "@", "@", "static", "int", "nr_recvmsg", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "socket", "*", "sock", ",", "}", "if", "(", "sax", "!", "=", "NULL", ")", "{", "memset", "(", "sax", ",", "0", ",", "sizeof", "(", "sax", ")", ");", "sax", "-", ">", "sax25_family", "=", "AF_NETROM", ";", "skb_copy_from_linear_data_offset", "(", "skb", ",", "7", ",", "sax", "-", ">", "sax25_call", ".", "ax25_call", ",", "AX25_ADDR_LEN", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "4", ",", "6", "+", "4", ",", "10", "@", "@", "Project", ":", "jackson", "-", "databind", "=", "==", "Releases", "=", "==", "2", ".", "7", ".", "9", ".", "4", "(", "not", "yet", "released", ")", "#", "2032", ":", "Blacklist", "another", "serialization", "gadget", "(", "ibatis", ")", "2", ".", "7", ".", "9", ".", "3", "(", "11", "-", "Feb", "-", "2018", ")", "#", "1872", "`", "NullPointerException", "`", "in", "`", "SubTypeValidator", ".", "validateSubType", "`", "when", "@", "@", "-", "54", ",", "6", "+", "54", ",", "8", "@", "@", "/", "/", "[", "databind", "#", "1855", "]", ":", "more", "3rd", "party", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "tomcat", ".", "dbcp", ".", "dbcp2", ".", "BasicDataSource", "\"", ");", "s", ".", "add", "(", "\"", "com", ".", "sun", ".", "org", ".", "apache", ".", "bcel", ".", "internal", ".", "util", ".", "ClassLoader", "\"", ");", "/", "/", "[", "databind", "#", "2032", "]", ":", "more", "3rd", "party", ";", "data", "exfiltration", "via", "xml", "parsed", "ext", "entities", "s", ".", "add", "(", "\"", "org", ".", "apache", ".", "ibatis", ".", "parsing", ".", "XPathParser", "\"", ");", "DEFAULT_NO_DESER_CLASS_NAMES", "=", "Collections", ".", "unmodifiableSet", "(", "s", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "70", ",", "9", "+", "70", ",", "11", "@", "@", "static", "__inline__", "void", "scm_destroy", "(", "struct", "scm_cookie", "*", "scm", ")", "}", "static", "__inline__", "int", "scm_send", "(", "struct", "socket", "*", "sock", ",", "struct", "msghdr", "*", "msg", ",", "struct", "scm_cookie", "*", "scm", ")", "struct", "scm_cookie", "*", "scm", ",", "bool", "forcecreds", ")", "{", "memset", "(", "scm", ",", "0", ",", "sizeof", "(", "*", "scm", ")", ");", "if", "(", "forcecreds", ")", "scm_set_cred", "(", "scm", ",", "task_tgid", "(", "current", ")", ",", "current_cred", "(", "))", ";", "unix_get_peersec_dgram", "(", "sock", ",", "scm", ")", ";", "if", "(", "msg", "-", ">", "msg_controllen", "<", "=", "0", ")", "return", "0", ";", "@", "@", "-", "1362", ",", "7", "+", "1362", ",", "7", "@", "@", "static", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "if", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "siocb", "-", ">", "scm", "=", "&", "scm", ";", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "if", "(", "err", "<", "0", ")", "return", "err", ";", "@", "@", "-", "1450", ",", "7", "+", "1450", ",", "7", "@", "@", "static", "int", "unix_dgram_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "if", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "siocb", "-", ">", "scm", "=", "&", "tmp_scm", ";", "wait_for_unix_gc", "(", ");", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "false", ")", ";", "if", "(", "err", "<", "0", ")", "return", "err", ";", "@", "@", "-", "1619", ",", "7", "+", "1619", ",", "7", "@", "@", "static", "int", "unix_stream_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "if", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "siocb", "-", ">", "scm", "=", "&", "tmp_scm", ";", "wait_for_unix_gc", "(", ");", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "false", ")", ";", "if", "(", "err", "<", "0", ")", "return", "err", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "209", ",", "6", "+", "209", ",", "8", "@", "@", "int", "RLByteStream", ":", ":", "getByte", "(", ")", "current", "=", "m_current", ";", "}", "CV_Assert", "(", "current", "<", "m_end", ")", ";", "val", "=", "*", "((", "uchar", "*", ")", "current", ")", ";", "m_current", "=", "current", "+", "1", ";", "return", "val", ";", "@", "@", "-", "48", ",", "13", "+", "48", ",", "20", "@", "@", "namespace", "cv", "{", "enum", "{", "RBS_THROW_EOS", "=", "-", "123", ",", "/", "/", "<", "end", "of", "stream", ">", "exception", "code", "RBS_THROW_FORB", "=", "-", "124", ",", "/", "/", "<", "forrbidden", "huffman", "code", ">", "exception", "code", "RBS_HUFF_FORB", "=", "2047", ",", "/", "/", "forrbidden", "huffman", "code", "\"", "value", "\"", "RBS_BAD_HEADER", "=", "-", "125", "/", "/", "invalid", "header", "#", "define", "DECLARE_RBS_EXCEPTION", "(", "name", ")", "\\", "class", "RBS_", "#", "#", "name", "#", "#", "_Exception", ":", "public", "cv", ":", ":", "Exception", "\\", "{", "\\", "public", ":", "\\", "RBS_", "#", "#", "name", "#", "#", "_Exception", "(", "int", "code_", ",", "const", "String", "&", "err_", ",", "const", "String", "&", "func_", ",", "const", "String", "&", "file_", ",", "int", "line_", ")", ":", "\\", "cv", ":", ":", "Exception", "(", "code_", ",", "err_", ",", "func_", ",", "file_", ",", "line_", ")", "\\", "{", "}", "\\", "}", ";", "DECLARE_RBS_EXCEPTION", "(", "THROW_EOS", ")", "#", "define", "RBS_THROW_EOS", "RBS_THROW_EOS_Exception", "(", "cv", ":", ":", "Error", ":", ":", "StsError", ",", "\"", "Unexpected", "end", "of", "input", "stream", "\"", ",", "CV_Func", ",", "__FILE__", ",", "__LINE__", ")", "DECLARE_RBS_EXCEPTION", "(", "THROW_FORB", ")", "#", "define", "RBS_THROW_FORB", "RBS_THROW_FORB_Exception", "(", "cv", ":", ":", "Error", ":", ":", "StsError", ",", "\"", "Forrbidden", "huffman", "code", "\"", ",", "CV_Func", ",", "__FILE__", ",", "__LINE__", ")", "DECLARE_RBS_EXCEPTION", "(", "BAD_HEADER", ")", "#", "define", "RBS_BAD_HEADER", "RBS_BAD_HEADER_Exception", "(", "cv", ":", ":", "Error", ":", ":", "StsError", ",", "\"", "Invalid", "header", "\"", ",", "CV_Func", ",", "__FILE__", ",", "__LINE__", ")", "typedef", "unsigned", "long", "ulong", ";", "@", "@", "-", "118", ",", "8", "+", "118", ",", "9", "@", "@", "bool", "BmpDecoder", ":", ":", "readHeader", "(", ")", "if", "(", "m_bpp", "<", "=", "8", ")", "{", "memset", "(", "m_palette", ",", "0", ",", "sizeof", "(", "m_palette", ")", ");", "m_strm", ".", "getBytes", "(", "m_palette", ",", "(", "clrused", "=", "=", "0", "?", "1", "<", "<", "m_bpp", ":", "clrused", ")", "*", "4", ")", ";", "CV_Assert", "(", "clrused", "<", "256", ")", ";", "memset", "(", "m_palette", ",", "0", ",", "sizeof", "(", "m_palette", ")", ");", "m_strm", ".", "getBytes", "(", "m_palette", ",", "(", "clrused", "=", "=", "0", "?", "1", "<", "<", "m_bpp", ":", "clrused", ")", "*", "4", ")", ";", "iscolor", "=", "IsColorPalette", "(", "m_palette", ",", "m_bpp", ")", ";", "}", "else", "if", "(", "m_bpp", "=", "=", "16", "&", "&", "m_rle_code", "=", "=", "BMP_BITFIELDS", ")", "@", "@", "-", "290", ",", "7", "+", "291", ",", "9", "@", "@", "bool", "BmpDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "else", "if", "(", "code", ">", "2", ")", "/", "/", "absolute", "mode", "{", "if", "(", "data", "+", "code", "*", "nch", ">", "line_end", ")", "goto", "decode_rle4_bad", ";", "m_strm", ".", "getBytes", "(", "src", ",", "(", "((", "code", "+", "1", ")", ">>", "1", ")", "+", "1", ")", "&", "-", "2", ")", ";", "int", "sz", "=", "(", "((", "code", "+", "1", ")", ">>", "1", ")", "+", "1", ")", "&", "(", "~", "1", ")", ";", "CV_Assert", "(", "(", "size_t", ")", "sz", "<", "_src", ".", "size", "(", "))", ";", "m_strm", ".", "getBytes", "(", "src", ",", "sz", ")", ";", "if", "(", "color", ")", "data", "=", "FillColorRow4", "(", "data", ",", "src", ",", "code", ",", "m_palette", ")", ";", "else", "@", "@", "-", "379", ",", "7", "+", "382", ",", "9", "@", "@", "decode_rle4_bad", ":", ";", "if", "(", "data", "+", "code3", ">", "line_end", ")", "goto", "decode_rle8_bad", ";", "m_strm", ".", "getBytes", "(", "src", ",", "(", "code", "+", "1", ")", "&", "-", "2", ")", ";", "int", "sz", "=", "(", "code", "+", "1", ")", "&", "(", "~", "1", ")", ";", "CV_Assert", "(", "(", "size_t", ")", "sz", "<", "_src", ".", "size", "(", "))", ";", "m_strm", ".", "getBytes", "(", "src", ",", "sz", ")", ";", "if", "(", "color", ")", "data", "=", "FillColorRow8", "(", "data", ",", "src", ",", "code", ",", "m_palette", ")", ";", "else", "@", "@", "-", "43", ",", "50", "+", "43", ",", "58", "@", "@", "#", "include", "\"", "precomp", ".", "hpp", "\"", "#", "include", "\"", "utils", ".", "hpp", "\"", "#", "include", "\"", "grfmt_pxm", ".", "hpp", "\"", "#", "include", "<", "iostream", ">", "namespace", "cv", "{", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "P", "?", "M", "reader", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "/", "static", "int", "ReadNumber", "(", "RLByteStream", "&", "strm", ",", "int", "maxdigits", ")", "static", "int", "ReadNumber", "(", "RLByteStream", "&", "strm", ",", "int", "maxdigits", "=", "0", ")", "{", "int", "code", ";", "int", "val", "=", "0", ";", "int64", "val", "=", "0", ";", "int", "digits", "=", "0", ";", "code", "=", "strm", ".", "getByte", "(", ");", "if", "(", "!", "isdigit", "(", "code", ")", ")", "while", "(", "!", "isdigit", "(", "code", ")", ")", "{", "do", "if", "(", "code", "=", "=", "'", "#'", ")", "{", "if", "(", "code", "=", "=", "'", "#'", ")", "do", "{", "do", "{", "code", "=", "strm", ".", "getByte", "(", ");", "}", "while", "(", "code", "!", "=", "'", "\\", "n", "'", "&", "&", "code", "!", "=", "'", "\\", "r", "'", ")", ";", "code", "=", "strm", ".", "getByte", "(", ");", "}", "while", "(", "code", "!", "=", "'", "\\", "n", "'", "&", "&", "code", "!", "=", "'", "\\", "r", "'", ");", "code", "=", "strm", ".", "getByte", "(", ");", "while", "(", "isspace", "(", "code", ")", ")", "}", "else", "if", "(", "isspace", "(", "code", ")", ")", "{", "while", "(", "isspace", "(", "code", ")", ")", "code", "=", "strm", ".", "getByte", "(", ");", "}", "while", "(", "!", "isdigit", "(", "code", ")", ");", "else", "{", "#", "if", "1", "CV_ErrorNoReturn_", "(", "Error", ":", ":", "StsError", ",", "(", "\"", "PXM", ":", "Unexpected", "code", "in", "ReadNumber", "(", "):", "0x", "%", "x", "(", "%", "d", ")", "\",", "code", ",", "code", ")", ");", "#", "else", "code", "=", "strm", ".", "getByte", "(", ");", "#", "endif", "}", "}", "do", "{", "val", "=", "val", "*", "10", "+", "code", "-", "'", "0", "'", ";", "if", "(", "+", "+", "digits", ">", "=", "maxdigits", ")", "break", ";", "val", "=", "val", "*", "10", "+", "(", "code", "-", "'", "0", "'", ");", "CV_Assert", "(", "val", "<", "=", "INT_MAX", "&", "&", "\"", "PXM", ":", "ReadNumber", "(", "):", "result", "is", "too", "large", "\"", ");", "digits", "+", "+;", "if", "(", "maxdigits", "!", "=", "0", "&", "&", "digits", ">", "=", "maxdigits", ")", "break", ";", "code", "=", "strm", ".", "getByte", "(", ");", "}", "while", "(", "isdigit", "(", "code", ")", ");", "while", "(", "isdigit", "(", "code", ")", ");", "return", "val", ";", "return", "(", "int", ")", "val", ";", "}", "@", "@", "-", "122", ",", "13", "+", "130", ",", "13", "@", "@", "ImageDecoder", "PxMDecoder", ":", ":", "newDecoder", "(", ")", "const", "return", "makePtr", "<", "PxMDecoder", ">", "()", ";", "}", "void", "PxMDecoder", ":", ":", "close", "(", ")", "void", "PxMDecoder", ":", ":", "close", "(", ")", "{", "m_strm", ".", "close", "(", ");", "}", "bool", "PxMDecoder", ":", ":", "readHeader", "(", ")", "bool", "PxMDecoder", ":", ":", "readHeader", "(", ")", "{", "bool", "result", "=", "false", ";", "@", "@", "-", "158", ",", "10", "+", "166", ",", "10", "@", "@", "bool", "PxMDecoder", ":", ":", "readHeader", "(", ")", "m_binary", "=", "code", ">", "=", "'", "4", "'", ";", "m_type", "=", "m_bpp", ">", "8", "?", "CV_8UC3", ":", "CV_8UC1", ";", "m_width", "=", "ReadNumber", "(", "m_strm", ",", "INT_MAX", ")", ";", "m_height", "=", "ReadNumber", "(", "m_strm", ",", "INT_MAX", ")", ";", "m_width", "=", "ReadNumber", "(", "m_strm", ")", ";", "m_height", "=", "ReadNumber", "(", "m_strm", ")", ";", "m_maxval", "=", "m_bpp", "=", "=", "1", "?", "1", ":", "ReadNumber", "(", "m_strm", ",", "INT_MAX", ")", ";", "m_maxval", "=", "m_bpp", "=", "=", "1", "?", "1", ":", "ReadNumber", "(", "m_strm", ")", ";", "if", "(", "m_maxval", ">", "65535", ")", "throw", "RBS_BAD_HEADER", ";", "@", "@", "-", "175", ",", "8", "+", "183", ",", "14", "@", "@", "bool", "PxMDecoder", ":", ":", "readHeader", "(", ")", "result", "=", "true", ";", "}", "}", "catch", "(", "..", ".)", "catch", "(", "const", "cv", ":", ":", "Exception", "&", ")", "{", "throw", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "PXM", ":", ":", "readHeader", "(", "):", "unknown", "C", "+", "+", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "throw", ";", "}", "if", "(", "!", "result", ")", "@", "@", "-", "189", ",", "33", "+", "203", ",", "28", "@", "@", "bool", "PxMDecoder", ":", ":", "readHeader", "(", ")", "}", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "{", "int", "color", "=", "img", ".", "channels", "(", ")", ">", "1", ";", "uchar", "*", "data", "=", "img", ".", "ptr", "(", ");", "PaletteEntry", "palette", "[", "256", "]", ";", "bool", "result", "=", "false", ";", "int", "bit_depth", "=", "CV_ELEM_SIZE1", "(", "m_type", ")", "*", "8", ";", "int", "src_pitch", "=", "(", "m_width", "*", "m_bpp", "*", "bit_depth", "/", "8", "+", "7", ")", "/", "8", ";", "const", "int", "bit_depth", "=", "CV_ELEM_SIZE1", "(", "m_type", ")", "*", "8", ";", "const", "int", "src_pitch", "=", "divUp", "(", "m_width", "*", "m_bpp", "*", "(", "bit_depth", "/", "8", ")", ",", "8", ")", ";", "int", "nch", "=", "CV_MAT_CN", "(", "m_type", ")", ";", "int", "width3", "=", "m_width", "*", "nch", ";", "int", "i", ",", "x", ",", "y", ";", "if", "(", "m_offset", "<", "0", "|", "|", "!", "m_strm", ".", "isOpened", "(", "))", "return", "false", ";", "AutoBuffer", "<", "uchar", ">", "_src", "(", "src_pitch", "+", "32", ")", ";", "uchar", "*", "src", "=", "_src", ";", "AutoBuffer", "<", "uchar", ">", "_gray_palette", ";", "uchar", "*", "gray_palette", "=", "_gray_palette", ";", "uchar", "gray_palette", "[", "256", "]", "=", "{", "0", "}", ";", "/", "/", "create", "LUT", "for", "converting", "colors", "if", "(", "bit_depth", "=", "=", "8", ")", "{", "_gray_palette", ".", "allocate", "(", "m_maxval", "+", "1", ")", ";", "gray_palette", "=", "_gray_palette", ";", "CV_Assert", "(", "m_maxval", "<", "256", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "=", "m_maxval", ";", "i", "+", "+", ")", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "m_maxval", ";", "i", "+", "+)", "gray_palette", "[", "i", "]", "=", "(", "uchar", ")", "((", "i", "*", "255", "/", "m_maxval", ")", "^(", "m_bpp", "=", "=", "1", "?", "255", ":", "0", ")", ");", "FillGrayPalette", "(", "palette", ",", "m_bpp", "=", "=", "1", "?", "1", ":", "8", ",", "m_bpp", "=", "=", "1", ")", ";", "@", "@", "-", "229", ",", "12", "+", "238", ",", "16", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "{", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "/", "1", "BPP", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "case", "1", ":", "CV_Assert", "(", "CV_MAT_DEPTH", "(", "m_type", ")", "=", "=", "CV_8U", ")", ";", "if", "(", "!", "m_binary", ")", "{", "for", "(", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "AutoBuffer", "<", "uchar", ">", "_src", "(", "m_width", ")", ";", "uchar", "*", "src", "=", "_src", ";", "for", "(", "int", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "{", "for", "(", "x", "=", "0", ";", "x", "<", "m_width", ";", "x", "+", "+", ")", "src", "[", "x", "]", "=", "ReadNumber", "(", "m_strm", ",", "1", ")", "!", "=", "0", ";", "for", "(", "int", "x", "=", "0", ";", "x", "<", "m_width", ";", "x", "+", "+)", "src", "[", "x", "]", "=", "ReadNumber", "(", "m_strm", ",", "1", ")", "!", "=", "0", ";", "if", "(", "color", ")", "FillColorRow8", "(", "data", ",", "src", ",", "m_width", ",", "palette", ")", ";", "@", "@", "-", "244", ",", "7", "+", "257", ",", "10", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "}", "else", "{", "for", "(", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "AutoBuffer", "<", "uchar", ">", "_src", "(", "src_pitch", ")", ";", "uchar", "*", "src", "=", "_src", ";", "for", "(", "int", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "{", "m_strm", ".", "getBytes", "(", "src", ",", "src_pitch", ")", ";", "@", "@", "-", "260", ",", "13", "+", "276", ",", "17", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "/", "8", "BPP", "/", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "case", "8", ":", "case", "24", ":", "for", "(", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "{", "AutoBuffer", "<", "uchar", ">", "_src", "(", "std", ":", ":", "max", "<", "size_t", ">", "(", "width3", "*", "2", ",", "src_pitch", ")", ");", "uchar", "*", "src", "=", "_src", ";", "for", "(", "int", "y", "=", "0", ";", "y", "<", "m_height", ";", "y", "+", "+,", "data", "+", "=", "img", ".", "step", ")", "{", "if", "(", "!", "m_binary", ")", "{", "for", "(", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+", ")", "for", "(", "int", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+)", "{", "int", "code", "=", "ReadNumber", "(", "m_strm", ",", "INT_MAX", ")", ";", "int", "code", "=", "ReadNumber", "(", "m_strm", ")", ";", "if", "(", "(", "unsigned", ")", "code", ">", "(", "unsigned", ")", "m_maxval", ")", "code", "=", "m_maxval", ";", "if", "(", "bit_depth", "=", "=", "8", ")", "src", "[", "x", "]", "=", "gray_palette", "[", "code", "]", ";", "@", "@", "-", "279", ",", "7", "+", "299", ",", "7", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "m_strm", ".", "getBytes", "(", "src", ",", "src_pitch", ")", ";", "if", "(", "bit_depth", "=", "=", "16", "&", "&", "!", "isBigEndian", "(", ")", ")", "{", "for", "(", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+", ")", "for", "(", "int", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+)", "{", "uchar", "v", "=", "src", "[", "x", "*", "2", "]", ";", "src", "[", "x", "*", "2", "]", "=", "src", "[", "x", "*", "2", "+", "1", "]", ";", "@", "@", "-", "290", ",", "7", "+", "310", ",", "7", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "if", "(", "img", ".", "depth", "(", ")", "=", "=", "CV_8U", "&", "&", "bit_depth", "=", "=", "16", ")", "{", "for", "(", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+", ")", "for", "(", "int", "x", "=", "0", ";", "x", "<", "width3", ";", "x", "+", "+)", "{", "int", "v", "=", "(", "(", "ushort", "*", ")", "src", ")", "[", "x", "]", ";", "src", "[", "x", "]", "=", "(", "uchar", ")", "(", "v", ">", ">", "8", ")", ";", "@", "@", "-", "331", ",", "12", "+", "351", ",", "19", "@", "@", "bool", "PxMDecoder", ":", ":", "readData", "(", "Mat", "&", "img", ")", "}", "result", "=", "true", ";", "break", ";", "}", "default", ":", "assert", "(", "0", ")", ";", "CV_ErrorNoReturn", "(", "Error", ":", ":", "StsError", ",", "\"", "m_bpp", "is", "not", "supported", "\"", ");", "}", "}", "catch", "(", "..", ".)", "catch", "(", "const", "cv", ":", ":", "Exception", "&", ")", "{", "throw", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "PXM", ":", ":", "readData", "(", "):", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "throw", ";", "}", "return", "result", ";", "@", "@", "-", "412", ",", "8", "+", "439", ",", "9", "@", "@", "bool", "PxMEncoder", ":", ":", "write", "(", "const", "Mat", "&", "img", ",", "const", "std", ":", ":", "vector", "<", "int", ">", "&", "params", ")", "char", "*", "buffer", "=", "_buffer", ";", "/", "/", "write", "header", ";", "sprintf", "(", "buffer", ",", "\"", "P", "%", "c", "\\", "n", "%", "d", "%", "d", "\\", "n", "%", "d", "\\", "n", "\"", ",", "sprintf", "(", "buffer", ",", "\"", "P", "%", "c", "\\", "n", "#", "Generated", "by", "OpenCV", "%", "s", "\\", "n", "%", "d", "%", "d", "\\", "n", "%", "d", "\\", "n", "\"", ",", "'", "2", "'", "+", "(", "channels", ">", "1", "?", "1", ":", "0", ")", "+", "(", "isBinary", "?", "3", ":", "0", ")", ",", "CV_VERSION", ",", "width", ",", "height", ",", "(", "1", "<", "<", "depth", ")", "-", "1", ")", ";", "strm", ".", "putBytes", "(", "buffer", ",", "(", "int", ")", "strlen", "(", "buffer", ")", ")", ";", "@", "@", "-", "55", ",", "6", "+", "55", ",", "27", "@", "@", "/", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "\\", "*", "Image", "Codecs", "*", "\\", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "/", "namespace", "cv", "{", "/", "/", "TODO", "Add", "runtime", "configuration", "#", "define", "CV_IO_MAX_IMAGE_PARAMS", "(", "50", ")", "#", "define", "CV_IO_MAX_IMAGE_WIDTH", "(", "1", "<", "<", "20", ")", "#", "define", "CV_IO_MAX_IMAGE_HEIGHT", "(", "1", "<", "<", "20", ")", "#", "define", "CV_IO_MAX_IMAGE_PIXELS", "(", "1", "<", "<", "30", ")", "/", "/", "1", "Gigapixel", "static", "Size", "validateInputImageSize", "(", "const", "Size", "&", "size", ")", "{", "CV_Assert", "(", "size", ".", "width", ">", "0", ")", ";", "CV_Assert", "(", "size", ".", "width", "<", "=", "CV_IO_MAX_IMAGE_WIDTH", ")", ";", "CV_Assert", "(", "size", ".", "height", ">", "0", ")", ";", "CV_Assert", "(", "size", ".", "height", "<", "=", "CV_IO_MAX_IMAGE_HEIGHT", ")", ";", "uint64", "pixels", "=", "(", "uint64", ")", "size", ".", "width", "*", "(", "uint64", ")", "size", ".", "height", ";", "CV_Assert", "(", "pixels", "<", "=", "CV_IO_MAX_IMAGE_PIXELS", ")", ";", "return", "size", ";", "}", "namespace", "{", "class", "ByteStreamBuffer", ":", "public", "std", ":", ":", "streambuf", "@", "@", "-", "94", ",", "9", "+", "115", ",", "6", "@", "@", "class", "ByteStreamBuffer", ":", "public", "std", ":", ":", "streambuf", "}", "namespace", "cv", "{", "/", "**", "*", "@", "struct", "ImageCodecInitializer", "*", "@", "@", "-", "408", ",", "14", "+", "426", ",", "26", "@", "@", "imread_", "(", "const", "String", "&", "filename", ",", "int", "flags", ",", "int", "hdrtype", ",", "Mat", "*", "mat", "=", "0", ")", "/", "//", "set", "the", "filename", "in", "the", "driver", "decoder", "-", ">", "setSource", "(", "filename", ")", ";", "/", "/", "read", "the", "header", "to", "make", "sure", "it", "succeeds", "if", "(", "!", "decoder", "-", ">", "readHeader", "(", ")", ")", "try", "{", "/", "/", "read", "the", "header", "to", "make", "sure", "it", "succeeds", "if", "(", "!", "decoder", "-", ">", "readHeader", "(", ")", ")", "return", "0", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imread_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "return", "0", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imread_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "return", "0", ";", "}", "/", "/", "established", "the", "required", "input", "image", "size", "CvSize", "size", ";", "size", ".", "width", "=", "decoder", "-", ">", "width", "(", ");", "size", ".", "height", "=", "decoder", "-", ">", "height", "(", ");", "Size", "size", "=", "validateInputImageSize", "(", "Size", "(", "decoder", "-", ">", "width", "(", "),", "decoder", "-", ">", "height", "(", "))", ");", "/", "/", "grab", "the", "decoded", "type", "int", "type", "=", "decoder", "-", ">", "type", "(", ");", "@", "@", "-", "451", ",", "7", "+", "481", ",", "21", "@", "@", "imread_", "(", "const", "String", "&", "filename", ",", "int", "flags", ",", "int", "hdrtype", ",", "Mat", "*", "mat", "=", "0", ")", "}", "/", "/", "read", "the", "image", "data", "if", "(", "!", "decoder", "-", ">", "readData", "(", "*", "data", ")", ")", "bool", "success", "=", "false", ";", "try", "{", "if", "(", "decoder", "-", ">", "readData", "(", "*", "data", ")", ")", "success", "=", "true", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imread_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imread_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "if", "(", "!", "success", ")", "{", "cvReleaseImage", "(", "&", "image", ")", ";", "cvReleaseMat", "(", "&", "matrix", ")", ";", "@", "@", "-", "504", ",", "8", "+", "548", ",", "22", "@", "@", "imreadmulti_", "(", "const", "String", "&", "filename", ",", "int", "flags", ",", "std", ":", ":", "vector", "<", "Mat", ">", "&", "mats", ")", "decoder", "-", ">", "setSource", "(", "filename", ")", ";", "/", "/", "read", "the", "header", "to", "make", "sure", "it", "succeeds", "if", "(", "!", "decoder", "-", ">", "readHeader", "(", "))", "try", "{", "/", "/", "read", "the", "header", "to", "make", "sure", "it", "succeeds", "if", "(", "!", "decoder", "-", ">", "readHeader", "(", ")", ")", "return", "0", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imreadmulti_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "return", "0", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imreadmulti_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "return", "0", ";", "}", "for", "(", ";;", ")", "{", "@", "@", "-", "523", ",", "17", "+", "581", ",", "32", "@", "@", "imreadmulti_", "(", "const", "String", "&", "filename", ",", "int", "flags", ",", "std", ":", ":", "vector", "<", "Mat", ">", "&", "mats", ")", "type", "=", "CV_MAKETYPE", "(", "CV_MAT_DEPTH", "(", "type", ")", ",", "1", ")", ";", "}", "/", "/", "established", "the", "required", "input", "image", "size", "Size", "size", "=", "validateInputImageSize", "(", "Size", "(", "decoder", "-", ">", "width", "(", "),", "decoder", "-", ">", "height", "(", "))", ");", "/", "/", "read", "the", "image", "data", "Mat", "mat", "(", "decoder", "-", ">", "height", "(", "),", "decoder", "-", ">", "width", "(", "),", "type", ")", ";", "if", "(", "!", "decoder", "-", ">", "readData", "(", "mat", ")", ")", "Mat", "mat", "(", "size", ".", "height", ",", "size", ".", "width", ",", "type", ")", ";", "bool", "success", "=", "false", ";", "try", "{", "/", "/", "optionally", "rotate", "the", "data", "if", "EXIF", "'", "orientation", "flag", "says", "so", "if", "(", "(", "flags", "&", "IMREAD_IGNORE_ORIENTATION", ")", "=", "=", "0", "&", "&", "flags", "!", "=", "IMREAD_UNCHANGED", ")", "{", "ApplyExifOrientation", "(", "filename", ",", "mat", ")", ";", "}", "if", "(", "decoder", "-", ">", "readData", "(", "mat", ")", ")", "success", "=", "true", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imreadmulti_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imreadmulti_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "if", "(", "!", "success", ")", "break", ";", "/", "/", "optionally", "rotate", "the", "data", "if", "EXIF", "'", "orientation", "flag", "says", "so", "if", "(", "(", "flags", "&", "IMREAD_IGNORE_ORIENTATION", ")", "=", "=", "0", "&", "&", "flags", "!", "=", "IMREAD_UNCHANGED", ")", "{", "ApplyExifOrientation", "(", "filename", ",", "mat", ")", ";", "}", "mats", ".", "push_back", "(", "mat", ")", ";", "@", "@", "-", "616", ",", "6", "+", "689", ",", "7", "@", "@", "static", "bool", "imwrite_", "(", "const", "String", "&", "filename", ",", "const", "Mat", "&", "image", ",", "}", "encoder", "-", ">", "setDestination", "(", "filename", ")", ";", "CV_Assert", "(", "params", ".", "size", "(", ")", "<", "=", "CV_IO_MAX_IMAGE_PARAMS", "*", "2", ")", ";", "bool", "code", "=", "encoder", "-", ">", "write", "(", "*", "pimage", ",", "params", ")", ";", "/", "/", "CV_Assert", "(", "code", ")", ";", "@", "@", "-", "663", ",", "22", "+", "737", ",", "35", "@", "@", "imdecode_", "(", "const", "Mat", "&", "buf", ",", "int", "flags", ",", "int", "hdrtype", ",", "Mat", "*", "mat", "=", "0", ")", "decoder", "-", ">", "setSource", "(", "filename", ")", ";", "}", "if", "(", "!", "decoder", "-", ">", "readHeader", "(", ")", ")", "bool", "success", "=", "false", ";", "try", "{", "if", "(", "decoder", "-", ">", "readHeader", "(", "))", "success", "=", "true", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imdecode_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imdecode_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "header", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "if", "(", "!", "success", ")", "{", "decoder", ".", "release", "(", ");", "if", "(", "!", "filename", ".", "empty", "(", ")", ")", "if", "(", "!", "filename", ".", "empty", "(", "))", "{", "if", "(", "remove", "(", "filename", ".", "c_str", "(", "))", "!", "=", "0", ")", "if", "(", "0", "!", "=", "remove", "(", "filename", ".", "c_str", "(", "))", ")", "{", "CV_Error", "(", "CV_StsError", ",", "\"", "unable", "to", "remove", "temporary", "file", "\"", ")", ";", "std", ":", ":", "cerr", "<", "<", "\"", "unable", "to", "remove", "temporary", "file", ":", "\"", "<", "<", "filename", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "}", "return", "0", ";", "}", "CvSize", "size", ";", "size", ".", "width", "=", "decoder", "-", ">", "width", "(", ");", "size", ".", "height", "=", "decoder", "-", ">", "height", "(", ");", "/", "/", "established", "the", "required", "input", "image", "size", "Size", "size", "=", "validateInputImageSize", "(", "Size", "(", "decoder", "-", ">", "width", "(", "),", "decoder", "-", ">", "height", "(", "))", ");", "int", "type", "=", "decoder", "-", ">", "type", "(", ");", "if", "(", "(", "flags", "&", "IMREAD_LOAD_GDAL", ")", "!", "=", "IMREAD_LOAD_GDAL", "&", "&", "flags", "!", "=", "IMREAD_UNCHANGED", ")", "@", "@", "-", "712", ",", "17", "+", "799", ",", "30", "@", "@", "imdecode_", "(", "const", "Mat", "&", "buf", ",", "int", "flags", ",", "int", "hdrtype", ",", "Mat", "*", "mat", "=", "0", ")", "temp", "=", "cvarrToMat", "(", "image", ")", ";", "}", "bool", "code", "=", "decoder", "-", ">", "readData", "(", "*", "data", ")", ";", "success", "=", "false", ";", "try", "{", "if", "(", "decoder", "-", ">", "readData", "(", "*", "data", ")", ")", "success", "=", "true", ";", "}", "catch", "(", "const", "cv", ":", ":", "Exception", "&", "e", ")", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imdecode_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "\"", "<", "<", "e", ".", "what", "(", ")", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "catch", "(", "..", ".)", "{", "std", ":", ":", "cerr", "<", "<", "\"", "imdecode_", "(", "'\"", "<", "<", "filename", "<", "<", "\"", "')", ":", "can", "'", "t", "read", "data", ":", "unknown", "exception", "\"", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "decoder", ".", "release", "(", ");", "if", "(", "!", "filename", ".", "empty", "(", ")", ")", "if", "(", "!", "filename", ".", "empty", "(", "))", "{", "if", "(", "remove", "(", "filename", ".", "c_str", "(", "))", "!", "=", "0", ")", "if", "(", "0", "!", "=", "remove", "(", "filename", ".", "c_str", "(", "))", ")", "{", "CV_Error", "(", "CV_StsError", ",", "\"", "unable", "to", "remove", "temporary", "file", "\"", ")", ";", "std", ":", ":", "cerr", "<", "<", "\"", "unable", "to", "remove", "temporary", "file", ":", "\"", "<", "<", "filename", "<", "<", "std", ":", ":", "endl", "<", "<", "std", ":", ":", "flush", ";", "}", "}", "if", "(", "!", "code", ")", "if", "(", "!", "success", ")", "{", "cvReleaseImage", "(", "&", "image", ")", ";", "cvReleaseMat", "(", "&", "matrix", ")", ";", "@", "@", "-", "859", ",", "7", "+", "959", ",", "7", "@", "@", "cvSaveImage", "(", "const", "char", "*", "filename", ",", "const", "CvArr", "*", "arr", ",", "const", "int", "*", "_params", ")", "if", "(", "_params", ")", "{", "for", "(", ";", "_params", "[", "i", "]", ">", "0", ";", "i", "+", "=", "2", ")", ";", "CV_Assert", "(", "i", "<", "CV_IO_MAX_IMAGE_PARAMS", "*", "2", ")", ";", "/", "/", "Limit", "number", "of", "params", "for", "security", "reasons", "}", "return", "cv", ":", ":", "imwrite_", "(", "filename", ",", "cv", ":", ":", "cvarrToMat", "(", "arr", ")", ",", "i", ">", "0", "?", "std", ":", ":", "vector", "<", "int", ">", "(", "_params", ",", "_params", "+", "i", ")", ":", "std", ":", ":", "vector", "<", "int", ">", "()", ",", "@", "@", "-", "890", ",", "7", "+", "990", ",", "7", "@", "@", "cvEncodeImage", "(", "const", "char", "*", "ext", ",", "const", "CvArr", "*", "arr", ",", "const", "int", "*", "_params", ")", "if", "(", "_params", ")", "{", "for", "(", ";", "_params", "[", "i", "]", ">", "0", ";", "i", "+", "=", "2", ")", ";", "CV_Assert", "(", "i", "<", "CV_IO_MAX_IMAGE_PARAMS", "*", "2", ")", ";", "/", "/", "Limit", "number", "of", "params", "for", "security", "reasons", "}", "cv", ":", ":", "Mat", "img", "=", "cv", ":", ":", "cvarrToMat", "(", "arr", ")", ";", "if", "(", "CV_IS_IMAGE", "(", "arr", ")", "&", "&", "(", "(", "const", "IplImage", "*", ")", "arr", ")", "->", "origin", "=", "=", "IPL_ORIGIN_BL", ")", "@", "@", "-", "175", ",", "7", "+", "175", ",", "7", "@", "@", "TEST_P", "(", "Imgcodecs_ExtSize", ",", "write_imageseq", ")", "EXPECT_LT", "(", "n", ",", "1", ".", ");", "EXPECT_PRED_FORMAT2", "(", "cvtest", ":", ":", "MatComparator", "(", "0", ",", "0", ")", ",", "img", ",", "img_gt", ")", ";", "}", "remove", "(", "filename", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "filename", ".", "c_str", "(", "))", ");", "}", "}", "@", "@", "-", "123", ",", "8", "+", "123", ",", "8", "@", "@", "TEST", "(", "Imgcodecs_Jpeg", ",", "encode_decode_progressive_jpeg", ")", "EXPECT_EQ", "(", "0", ",", "cvtest", ":", ":", "norm", "(", "img_jpg_progressive", ",", "img_jpg_normal", ",", "NORM_INF", ")", ");", "remove", "(", "output_progressive", ".", "c_str", "(", "))", ";", "remove", "(", "output_normal", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_progressive", ".", "c_str", "(", "))", ");", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_normal", ".", "c_str", "(", "))", ");", "}", "TEST", "(", "Imgcodecs_Jpeg", ",", "encode_decode_optimize_jpeg", ")", "@", "@", "-", "148", ",", "8", "+", "148", ",", "8", "@", "@", "TEST", "(", "Imgcodecs_Jpeg", ",", "encode_decode_optimize_jpeg", ")", "EXPECT_EQ", "(", "0", ",", "cvtest", ":", ":", "norm", "(", "img_jpg_optimized", ",", "img_jpg_normal", ",", "NORM_INF", ")", ");", "remove", "(", "output_optimized", ".", "c_str", "(", "))", ";", "remove", "(", "output_normal", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_optimized", ".", "c_str", "(", "))", ");", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_normal", ".", "c_str", "(", "))", ");", "}", "TEST", "(", "Imgcodecs_Jpeg", ",", "encode_decode_rst_jpeg", ")", "@", "@", "-", "173", ",", "8", "+", "173", ",", "8", "@", "@", "TEST", "(", "Imgcodecs_Jpeg", ",", "encode_decode_rst_jpeg", ")", "EXPECT_EQ", "(", "0", ",", "cvtest", ":", ":", "norm", "(", "img_jpg_rst", ",", "img_jpg_normal", ",", "NORM_INF", ")", ");", "remove", "(", "output_rst", ".", "c_str", "(", "))", ";", "remove", "(", "output_normal", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_rst", ".", "c_str", "(", "))", ");", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output_normal", ".", "c_str", "(", "))", ");", "}", "#", "endif", "/", "/", "HAVE_JPEG", "@", "@", "-", "17", ",", "7", "+", "17", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_Png", ",", "write_big", ")", "EXPECT_EQ", "(", "13043", ",", "img", ".", "cols", ")", ";", "EXPECT_EQ", "(", "13917", ",", "img", ".", "rows", ")", ";", "ASSERT_NO_THROW", "(", "imwrite", "(", "dst_file", ",", "img", ")", ");", "remove", "(", "dst_file", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "dst_file", ".", "c_str", "(", "))", ");", "}", "TEST", "(", "Imgcodecs_Png", ",", "encode", ")", "@", "@", "-", "50", ",", "7", "+", "50", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_Image", ",", "read_write_bmp", ")", "psnr", "=", "cvtest", ":", ":", "PSNR", "(", "buf_loaded", ",", "image", ")", ";", "EXPECT_GT", "(", "psnr", ",", "thresDbell", ")", ";", "remove", "(", "dst_name", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "dst_name", ".", "c_str", "(", "))", ");", "}", "}", "@", "@", "-", "95", ",", "7", "+", "95", ",", "7", "@", "@", "TEST_P", "(", "Imgcodecs_Image", ",", "read_write", ")", "psnr", "=", "cvtest", ":", ":", "PSNR", "(", "buf_loaded", ",", "image", ")", ";", "EXPECT_GT", "(", "psnr", ",", "thresDbell", ")", ";", "remove", "(", "full_name", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "full_name", ".", "c_str", "(", "))", ");", "}", "const", "string", "exts", "[", "]", "=", "{", "@", "@", "-", "41", ",", "8", "+", "41", ",", "8", "@", "@", "TEST", "(", "Imgcodecs_Tiff", ",", "decode_tile16384x16384", ")", "/", "/", "not", "enough", "memory", "}", "remove", "(", "file3", ".", "c_str", "(", "))", ";", "remove", "(", "file4", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "file3", ".", "c_str", "(", "))", ");", "EXPECT_EQ", "(", "0", ",", "remove", "(", "file4", ".", "c_str", "(", "))", ");", "}", "TEST", "(", "Imgcodecs_Tiff", ",", "write_read_16bit_big_little_endian", ")", "@", "@", "-", "88", ",", "7", "+", "88", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_Tiff", ",", "write_read_16bit_big_little_endian", ")", "EXPECT_EQ", "(", "0xDEAD", ",", "img", ".", "at", "<", "ushort", ">", "(", "0", ",", "0", ")", ");", "EXPECT_EQ", "(", "0xBEEF", ",", "img", ".", "at", "<", "ushort", ">", "(", "0", ",", "1", ")", ");", "remove", "(", "filename", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "filename", ".", "c_str", "(", "))", ");", "}", "}", "@", "@", "-", "143", ",", "7", "+", "143", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_Tiff", ",", "decode_infinite_rowsperstrip", ")", "EXPECT_NO_THROW", "(", "cv", ":", ":", "imread", "(", "filename", ",", "IMREAD_UNCHANGED", ")", ");", "remove", "(", "filename", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "filename", ".", "c_str", "(", "))", ");", "}", "/", "/=", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "==", "=", "@", "@", "-", "44", ",", "7", "+", "44", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_WebP", ",", "encode_decode_lossless_webp", ")", "}", "}", "remove", "(", "output", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output", ".", "c_str", "(", "))", ");", "cv", ":", ":", "Mat", "decode", "=", "cv", ":", ":", "imdecode", "(", "buf", ",", "IMREAD_COLOR", ")", ";", "ASSERT_FALSE", "(", "decode", ".", "empty", "(", "))", ";", "@", "@", "-", "71", ",", "7", "+", "71", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_WebP", ",", "encode_decode_lossy_webp", ")", "EXPECT_NO_THROW", "(", "cv", ":", ":", "imwrite", "(", "output", ",", "img", ",", "params", ")", ");", "cv", ":", ":", "Mat", "img_webp", "=", "cv", ":", ":", "imread", "(", "output", ")", ";", "remove", "(", "output", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output", ".", "c_str", "(", "))", ");", "EXPECT_FALSE", "(", "img_webp", ".", "empty", "(", "))", ";", "EXPECT_EQ", "(", "3", ",", "img_webp", ".", "channels", "(", "))", ";", "EXPECT_EQ", "(", "512", ",", "img_webp", ".", "cols", ")", ";", "@", "@", "-", "96", ",", "7", "+", "96", ",", "7", "@", "@", "TEST", "(", "Imgcodecs_WebP", ",", "encode_decode_with_alpha_webp", ")", "EXPECT_NO_THROW", "(", "cv", ":", ":", "imwrite", "(", "output", ",", "img", ")", ");", "cv", ":", ":", "Mat", "img_webp", "=", "cv", ":", ":", "imread", "(", "output", ")", ";", "remove", "(", "output", ".", "c_str", "(", "))", ";", "EXPECT_EQ", "(", "0", ",", "remove", "(", "output", ".", "c_str", "(", "))", ");", "EXPECT_FALSE", "(", "img_webp", ".", "empty", "(", "))", ";", "EXPECT_EQ", "(", "4", ",", "img_webp", ".", "channels", "(", "))", ";", "EXPECT_EQ", "(", "512", ",", "img_webp", ".", "cols", ")", ";", "@", "@", "-", "322", ",", "16", "+", "322", ",", "20", "@", "@", "namespace", "cvtest", "if", "(", "m1", ".", "size", "(", ")", "!", "=", "m2", ".", "size", "(", "))", "{", "return", "AssertionFailure", "(", ")", "<", "<", "\"", "Matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "have", "different", "sizes", ":", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "m1", ".", "size", "(", "))", "<", "<", "\"", "]", "vs", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "m2", ".", "size", "(", "))", "<", "<", "\"", "]\"", ";", "std", ":", ":", "stringstream", "msg", ";", "msg", "<", "<", "\"", "Matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "have", "different", "sizes", ":", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "m1", ".", "size", "(", "))", "<", "<", "\"", "]", "vs", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "m2", ".", "size", "(", "))", "<", "<", "\"", "]\"", ";", "return", "AssertionFailure", "(", ")", "<", "<", "msg", ".", "str", "(", ");", "}", "if", "(", "m1", ".", "type", "(", ")", "!", "=", "m2", ".", "type", "(", "))", "{", "return", "AssertionFailure", "(", ")", "<", "<", "\"", "Matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "have", "different", "types", ":", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "MatType", "(", "m1", ".", "type", "(", "))", ")", "<", "<", "\"", "]", "vs", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "MatType", "(", "m2", ".", "type", "(", "))", ")", "<", "<", "\"", "]\"", ";", "std", ":", ":", "stringstream", "msg", ";", "msg", "<", "<", "\"", "Matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "have", "different", "types", ":", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "MatType", "(", "m1", ".", "type", "(", "))", ")", "<", "<", "\"", "]", "vs", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "[", "\"", "<", "<", "PrintToString", "(", "MatType", "(", "m2", ".", "type", "(", "))", ")", "<", "<", "\"", "]\"", ";", "return", "AssertionFailure", "(", ")", "<", "<", "msg", ".", "str", "(", ");", "}", "Mat", "diff", ";", "@", "@", "-", "343", ",", "12", "+", "347", ",", "14", "@", "@", "namespace", "cvtest", "if", "(", "maxVal", ">", "eps", ")", "{", "return", "AssertionFailure", "(", ")", "<", "<", "\"", "The", "max", "difference", "between", "matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "is", "\"", "<", "<", "maxVal", "<", "<", "\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")\"", "<", "<", "\"", ",", "which", "exceeds", "\\", "\"\"", "<", "<", "eps_expr", "<", "<", "\"", "\\\"", ",", "where", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")", "evaluates", "to", "\"", "<", "<", "printMatVal", "(", "m1", ",", "maxLoc", ")", "<", "<", "\"", ",", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")", "evaluates", "to", "\"", "<", "<", "printMatVal", "(", "m2", ",", "maxLoc", ")", "<", "<", "\"", ",", "\\", "\"\"", "<", "<", "eps_expr", "<", "<", "\"", "\\\"", "evaluates", "to", "\"", "<", "<", "eps", ";", "std", ":", ":", "stringstream", "msg", ";", "msg", "<", "<", "\"", "The", "max", "difference", "between", "matrices", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "and", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "is", "\"", "<", "<", "maxVal", "<", "<", "\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")\"", "<", "<", "\"", ",", "which", "exceeds", "\\", "\"\"", "<", "<", "eps_expr", "<", "<", "\"", "\\\"", ",", "where", "\\", "\"\"", "<", "<", "expr1", "<", "<", "\"", "\\\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")", "evaluates", "to", "\"", "<", "<", "printMatVal", "(", "m1", ",", "maxLoc", ")", "<", "<", "\"", ",", "\\", "\"\"", "<", "<", "expr2", "<", "<", "\"", "\\\"", "at", "(", "\"", "<", "<", "maxLoc", ".", "y", "<", "<", "\"", ",", "\"", "<", "<", "maxLoc", ".", "x", "/", "m1", ".", "channels", "(", ")", "<", "<", "\"", ")", "evaluates", "to", "\"", "<", "<", "printMatVal", "(", "m2", ",", "maxLoc", ")", "<", "<", "\"", ",", "\\", "\"\"", "<", "<", "eps_expr", "<", "<", "\"", "\\\"", "evaluates", "to", "\"", "<", "<", "eps", ";", "return", "AssertionFailure", "(", ")", "<", "<", "msg", ".", "str", "(", ");", "}", "return", "AssertionSuccess", "(", ");", "@", "@", "-", "469", ",", "9", "+", "475", ",", "11", "@", "@", "namespace", "cvtest", "{", "if", "(", "gold", ".", "size", "(", ")", "!", "=", "actual", ".", "size", "(", "))", "{", "return", "testing", ":", ":", "AssertionFailure", "(", ")", "<", "<", "\"", "KeyPoints", "size", "mistmach", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "gold_expr", "<", "<", "\"", "\\\"", ":", "\"", "<", "<", "gold", ".", "size", "(", ")", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "actual_expr", "<", "<", "\"", "\\\"", ":", "\"", "<", "<", "actual", ".", "size", "(", ");", "std", ":", ":", "stringstream", "msg", ";", "msg", "<", "<", "\"", "KeyPoints", "size", "mistmach", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "gold_expr", "<", "<", "\"", "\\\"", ":", "\"", "<", "<", "gold", ".", "size", "(", ")", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "actual_expr", "<", "<", "\"", "\\\"", ":", "\"", "<", "<", "actual", ".", "size", "(", ");", "return", "AssertionFailure", "(", ")", "<", "<", "msg", ".", "str", "(", ");", "}", "std", ":", ":", "sort", "(", "actual", ".", "begin", "(", "),", "actual", ".", "end", "(", "),", "KeyPointLess", "(", "))", ";", "@", "@", "-", "484", ",", "14", "+", "492", ",", "16", "@", "@", "namespace", "cvtest", "if", "(", "!", "keyPointsEquals", "(", "p1", ",", "p2", ")", ")", "{", "return", "testing", ":", ":", "AssertionFailure", "(", ")", "<", "<", "\"", "KeyPoints", "differ", "at", "\"", "<", "<", "i", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "gold_expr", "<", "<", "\"", "\\\"", "vs", "\\", "\"\"", "<", "<", "actual_expr", "<", "<", "\"", "\\\"", ":", "\\", "n", "\"", "<", "<", "\"", "pt", ":", "\"", "<", "<", "testing", ":", ":", "PrintToString", "(", "p1", ".", "pt", ")", "<", "<", "\"", "vs", "\"", "<", "<", "testing", ":", ":", "PrintToString", "(", "p2", ".", "pt", ")", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "size", ":", "\"", "<", "<", "p1", ".", "size", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "size", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "angle", ":", "\"", "<", "<", "p1", ".", "angle", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "angle", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "response", ":", "\"", "<", "<", "p1", ".", "response", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "response", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "octave", ":", "\"", "<", "<", "p1", ".", "octave", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "octave", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "class_id", ":", "\"", "<", "<", "p1", ".", "class_id", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "class_id", ";", "std", ":", ":", "stringstream", "msg", ";", "msg", "<", "<", "\"", "KeyPoints", "differ", "at", "\"", "<", "<", "i", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "\\\"", "\"", "<", "<", "gold_expr", "<", "<", "\"", "\\\"", "vs", "\\", "\"\"", "<", "<", "actual_expr", "<", "<", "\"", "\\\"", ":", "\\", "n", "\"", "<", "<", "\"", "pt", ":", "\"", "<", "<", "testing", ":", ":", "PrintToString", "(", "p1", ".", "pt", ")", "<", "<", "\"", "vs", "\"", "<", "<", "testing", ":", ":", "PrintToString", "(", "p2", ".", "pt", ")", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "size", ":", "\"", "<", "<", "p1", ".", "size", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "size", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "angle", ":", "\"", "<", "<", "p1", ".", "angle", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "angle", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "response", ":", "\"", "<", "<", "p1", ".", "response", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "response", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "octave", ":", "\"", "<", "<", "p1", ".", "octave", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "octave", "<", "<", "\"", "\\", "n", "\"", "<", "<", "\"", "class_id", ":", "\"", "<", "<", "p1", ".", "class_id", "<", "<", "\"", "vs", "\"", "<", "<", "p2", ".", "class_id", ";", "return", "AssertionFailure", "(", ")", "<", "<", "msg", ".", "str", "(", ");", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "101", ",", "6", "+", "101", ",", "8", "@", "@", "grant", "codeBase", "\"", "file", ":", "path", "/", "to", "/", "hibernate", "-", "validator", "-", "{", "hvVersion", "}", ".", "jar", "\"", "{", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "accessDeclaredMembers", "\"", ";", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "setContextClassLoader", "\"", ";", "permission", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", "\"", "accessPrivateMembers", "\"", ";", "/", "/", "Only", "needed", "when", "working", "with", "XML", "descriptors", "(", "validation", ".", "xml", "or", "XML", "constraint", "mappings", ")", "permission", "java", ".", "util", ".", "PropertyPermission", "\"", "mapAnyUriToUri", "\"", ",", "\"", "read", "\"", ";", "}", ";", "@", "@", "-", "0", ",", "0", "+", "1", ",", "29", "@", "@", "/", "*", "*", "Hibernate", "Validator", ",", "declare", "and", "validate", "application", "constraints", "*", "*", "License", ":", "Apache", "License", ",", "Version", "2", ".", "0", "*", "See", "the", "license", ".", "txt", "file", "in", "the", "root", "directory", "or", "<", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", ">", ".", "*", "/", "package", "org", ".", "hibernate", ".", "validator", ";", "import", "java", ".", "security", ".", "BasicPermission", ";", "/", "**", "*", "Our", "specific", "implementation", "of", "{", "@", "link", "BasicPermission", "}", "as", "we", "cannot", "define", "additional", "{", "@", "link", "RuntimePermission", "}", ".", "*", "<", "p", ">", "*", "{", "@", "code", "HibernateValidatorPermission", "}", "is", "thread", "-", "safe", "and", "immutable", ".", "*", "*", "@", "author", "Guillaume", "Smet", "*", "/", "public", "class", "HibernateValidatorPermission", "extends", "BasicPermission", "{", "public", "static", "final", "HibernateValidatorPermission", "ACCESS_PRIVATE_MEMBERS", "=", "new", "HibernateValidatorPermission", "(", "\"", "accessPrivateMembers", "\"", ")", ";", "public", "HibernateValidatorPermission", "(", "String", "name", ")", "{", "super", "(", "name", ")", ";", "}", "public", "HibernateValidatorPermission", "(", "String", "name", ",", "String", "actions", ")", "{", "super", "(", "name", ",", "actions", ")", ";", "}", "}", "@", "@", "-", "40", ",", "6", "+", "40", ",", "7", "@", "@", "import", "javax", ".", "validation", ".", "groups", ".", "Default", ";", "import", "javax", ".", "validation", ".", "metadata", ".", "BeanDescriptor", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "engine", ".", "ValidationContext", ".", "ValidationContextBuilder", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "engine", ".", "constraintvalidation", ".", "ConstraintValidatorManager", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "engine", ".", "groups", ".", "Group", ";", "@", "@", "-", "1739", ",", "6", "+", "1740", ",", "11", "@", "@", "private", "Member", "getAccessible", "(", "Member", "original", ")", "{", "return", "member", ";", "}", "SecurityManager", "sm", "=", "System", ".", "getSecurityManager", "(", ");", "if", "(", "sm", "!", "=", "null", ")", "{", "sm", ".", "checkPermission", "(", "HibernateValidatorPermission", ".", "ACCESS_PRIVATE_MEMBERS", ")", ";", "}", "Class", "<", "?>", "clazz", "=", "original", ".", "getDeclaringClass", "(", ");", "if", "(", "original", "instanceof", "Field", ")", "{", "@", "@", "-", "25", ",", "6", "+", "25", ",", "7", "@", "@", "import", "javax", ".", "validation", ".", "ElementKind", ";", "import", "javax", ".", "validation", ".", "metadata", ".", "GroupConversionDescriptor", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "engine", ".", "valuehandling", ".", "UnwrapMode", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "metadata", ".", "core", ".", "ConstraintHelper", ";", "import", "org", ".", "hibernate", ".", "validator", ".", "internal", ".", "metadata", ".", "core", ".", "MetaConstraint", ";", "@", "@", "-", "119", ",", "6", "+", "120", ",", "11", "@", "@", "private", "static", "Member", "getAccessible", "(", "Member", "original", ")", "{", "return", "original", ";", "}", "SecurityManager", "sm", "=", "System", ".", "getSecurityManager", "(", ");", "if", "(", "sm", "!", "=", "null", ")", "{", "sm", ".", "checkPermission", "(", "HibernateValidatorPermission", ".", "ACCESS_PRIVATE_MEMBERS", ")", ";", "}", "Class", "<", "?>", "clazz", "=", "original", ".", "getDeclaringClass", "(", ");", "Member", "member", ";", "@", "@", "-", "31", ",", "7", "+", "31", ",", "6", "@", "@", "private", "GetDeclaredField", "(", "Class", "<", "?>", "clazz", ",", "String", "fieldName", ")", "{", "public", "Field", "run", "(", ")", "{", "try", "{", "final", "Field", "field", "=", "clazz", ".", "getDeclaredField", "(", "fieldName", ")", ";", "field", ".", "setAccessible", "(", "true", ")", ";", "return", "field", ";", "}", "catch", "(", "NoSuchFieldException", "e", ")", "{", "@", "@", "-", "28", ",", "6", "+", "28", ",", "8", "@", "@", "grant", "codeBase", "\"", "file", ":", "${", "localRepository", "}", "/", "org", "/", "hibernate", "/", "hibernate", "-", "validator", "/", "${", "proj", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "accessDeclaredMembers", "\"", ";", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "setContextClassLoader", "\"", ";", "permission", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", "\"", "accessPrivateMembers", "\"", ";", "/", "/", "JAXB", "permission", "java", ".", "util", ".", "PropertyPermission", "\"", "mapAnyUriToUri", "\"", ",", "\"", "read", "\"", ";", "}", ";", "@", "@", "-", "39", ",", "6", "+", "41", ",", "8", "@", "@", "grant", "codeBase", "\"", "file", ":", "${", "basedir", "}", "/.", "./", "engine", "/", "target", "/", "hibernate", "-", "validator", "-", "${", "project", ".", "v", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "accessDeclaredMembers", "\"", ";", "permission", "java", ".", "lang", ".", "RuntimePermission", "\"", "setContextClassLoader", "\"", ";", "permission", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", "\"", "accessPrivateMembers", "\"", ";", "/", "/", "JAXB", "permission", "java", ".", "util", ".", "PropertyPermission", "\"", "mapAnyUriToUri", "\"", ",", "\"", "read", "\"", ";", "}", ";", "@", "@", "-", "81", ",", "6", "+", "85", ",", "7", "@", "@", "grant", "codeBase", "\"", "file", ":", "${", "project", ".", "build", ".", "directory", "}", "/", "classes", "\"", "{", "permission", "java", ".", "util", ".", "PropertyPermission", "\"", "validation", ".", "provider", "\"", ",", "\"", "read", "\"", ";", "permission", "java", ".", "io", ".", "FilePermission", "\"", "${", "localRepository", "}", "/", "org", "/", "hibernate", "/", "beanvalidation", "/", "tck", "/", "beanvalidation", "-", "tck", "-", "tests", "/", "${", "tck", ".", "version", "}", "/", "beanvalidation", "-", "tck", "-", "tests", "-", "${", "tck", ".", "version", "}", ".", "jar", "\"", ",", "\"", "read", "\"", ";", "permission", "java", ".", "util", ".", "PropertyPermission", "\"", "user", ".", "language", "\"", ",", "\"", "write", "\"", ";", "permission", "org", ".", "hibernate", ".", "validator", ".", "HibernateValidatorPermission", "\"", "accessPrivateMembers", "\"", ";", "}", ";", "grant", "codeBase", "\"", "file", ":", "${", "project", ".", "build", ".", "directory", "}", "/", "test", "-", "classes", "\"", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "700", ",", "8", "+", "700", ",", "7", "@", "@", "PHP_INI_BEGIN", "(", ")", "PHP_INI_ENTRY", "(", "\"", "mbstring", ".", "script_encoding", "\"", ",", "NULL", ",", "PHP_INI_ALL", ",", "OnUpdate_mbstring_script_encoding", ")", "#", "endif", "/", "*", "ZEND_MULTIBYTE", "*", "/", "PHP_INI_ENTRY", "(", "\"", "mbstring", ".", "substitute_character", "\"", ",", "NULL", ",", "PHP_INI_ALL", ",", "OnUpdate_mbstring_substitute_character", ")", "STD_PHP_INI_ENTRY", "(", "\"", "mbstring", ".", "func_overload", "\"", ",", "\"", "0", "\"", ",", "PHP_INI_SYSTEM", "|", "PHP_INI_PERDIR", ",", "OnUpdateLong", ",", "func_overload", ",", "zend_mbstring_globals", ",", "mbstring_globals", ")", "STD_PHP_INI_ENTRY", "(", "\"", "mbstring", ".", "func_overload", "\"", ",", "\"", "0", "\"", ",", "PHP_INI_SYSTEM", ",", "OnUpdateLong", ",", "func_overload", ",", "zend_mbstring_globals", ",", "mbstring_globals", ")", "STD_PHP_INI_BOOLEAN", "(", "\"", "mbstring", ".", "encoding_translation", "\"", ",", "\"", "0", "\"", ",", "PHP_INI_SYSTEM", "|", "PHP_INI_PERDIR", ",", "OnUpdate_mbstring_encoding_translation", ","], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2478", ",", "6", "+", "2478", ",", "9", "@", "@", "static", "void", "tcp_cwnd_reduction", "(", "struct", "sock", "*", "sk", ",", "const", "int", "prior_unsacked", ",", "int", "newly_acked_sacked", "=", "prior_unsacked", "-", "(", "tp", "-", ">", "packets_out", "-", "tp", "-", ">", "sacked_out", ")", ";", "if", "(", "newly_acked_sacked", "<", "=", "0", "|", "|", "WARN_ON_ONCE", "(", "!", "tp", "-", ">", "prior_cwnd", ")", ")", "return", ";", "tp", "-", ">", "prr_delivered", "+", "=", "newly_acked_sacked", ";", "if", "(", "delta", "<", "0", ")", "{", "u64", "dividend", "=", "(", "u64", ")", "tp", "-", ">", "snd_ssthresh", "*", "tp", "-", ">", "prr_delivered", "+"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "16", ",", "7", "+", "16", ",", "8", "@", "@", "public", "Mappings", "(", ")", "public", "void", "configure", "(", "ConfigurableProvider", "provider", ")", "{", "provider", ".", "addAlgorithm", "(", "\"", "KeyStore", ".", "BKS", "\"", ",", "PREFIX", "+", "\"", "BcKeyStoreSpi", "\"", ");", "provider", ".", "addAlgorithm", "(", "\"", "KeyStore", ".", "BKS", "\"", ",", "PREFIX", "+", "\"", "BcKeyStoreSpi", "$", "Std", "\"", ");", "provider", ".", "addAlgorithm", "(", "\"", "KeyStore", ".", "BKS", "-", "V1", "\"", ",", "PREFIX", "+", "\"", "BcKeyStoreSpi", "$", "Version1", "\"", ");", "provider", ".", "addAlgorithm", "(", "\"", "KeyStore", ".", "BouncyCastle", "\"", ",", "PREFIX", "+", "\"", "BcKeyStoreSpi", "$", "BouncyCastleStore", "\"", ");", "provider", ".", "addAlgorithm", "(", "\"", "Alg", ".", "Alias", ".", "KeyStore", ".", "UBER", "\"", ",", "\"", "BouncyCastle", "\"", ");", "provider", ".", "addAlgorithm", "(", "\"", "Alg", ".", "Alias", ".", "KeyStore", ".", "BOUNCYCASTLE", "\"", ",", "\"", "BouncyCastle", "\"", ");", "@", "@", "-", "86", ",", "8", "+", "86", ",", "11", "@", "@", "protected", "SecureRandom", "random", "=", "new", "SecureRandom", "(", ");", "public", "BcKeyStoreSpi", "(", ")", "protected", "int", "version", ";", "public", "BcKeyStoreSpi", "(", "int", "version", ")", "{", "this", ".", "version", "=", "version", ";", "}", "private", "class", "StoreEntry", "@", "@", "-", "880", ",", "7", "+", "883", ",", "7", "@", "@", "public", "void", "engineStore", "(", "OutputStream", "stream", ",", "char", "[", "]", "password", ")", "random", ".", "nextBytes", "(", "salt", ")", ";", "dOut", ".", "writeInt", "(", "STORE_VERSION", ")", ";", "dOut", ".", "writeInt", "(", "version", ")", ";", "dOut", ".", "writeInt", "(", "salt", ".", "length", ")", ";", "dOut", ".", "write", "(", "salt", ")", ";", "dOut", ".", "writeInt", "(", "iterationCount", ")", ";", "@", "@", "-", "892", ",", "7", "+", "895", ",", "14", "@", "@", "public", "void", "engineStore", "(", "OutputStream", "stream", ",", "char", "[", "]", "password", ")", "pbeGen", ".", "init", "(", "passKey", ",", "salt", ",", "iterationCount", ")", ";", "hMac", ".", "init", "(", "pbeGen", ".", "generateDerivedMacParameters", "(", "hMac", ".", "getMacSize", "(", ")", "*", "8", ")", ");", "if", "(", "version", "<", "2", ")", "{", "hMac", ".", "init", "(", "pbeGen", ".", "generateDerivedMacParameters", "(", "hMac", ".", "getMacSize", "(", "))", ");", "}", "else", "{", "hMac", ".", "init", "(", "pbeGen", ".", "generateDerivedMacParameters", "(", "hMac", ".", "getMacSize", "(", ")", "*", "8", ")", ");", "}", "for", "(", "int", "i", "=", "0", ";", "i", "!", "=", "passKey", ".", "length", ";", "i", "+", "+)", "{", "@", "@", "-", "923", ",", "6", "+", "933", ",", "11", "@", "@", "public", "void", "engineStore", "(", "OutputStream", "stream", ",", "char", "[", "]", "password", ")", "public", "static", "class", "BouncyCastleStore", "extends", "BcKeyStoreSpi", "{", "public", "BouncyCastleStore", "(", ")", "{", "super", "(", "1", ")", ";", "}", "public", "void", "engineLoad", "(", "InputStream", "stream", ",", "char", "[", "]", "password", ")", "@", "@", "-", "1006", ",", "7", "+", "1021", ",", "7", "@", "@", "public", "void", "engineStore", "(", "OutputStream", "stream", ",", "char", "[", "]", "password", ")", "random", ".", "nextBytes", "(", "salt", ")", ";", "dOut", ".", "writeInt", "(", "STORE_VERSION", ")", ";", "dOut", ".", "writeInt", "(", "version", ")", ";", "dOut", ".", "writeInt", "(", "salt", ".", "length", ")", ";", "dOut", ".", "write", "(", "salt", ")", ";", "dOut", ".", "writeInt", "(", "iterationCount", ")", ";", "@", "@", "-", "1025", ",", "4", "+", "1040", ",", "22", "@", "@", "public", "void", "engineStore", "(", "OutputStream", "stream", ",", "char", "[", "]", "password", ")", "cOut", ".", "close", "(", ");", "}", "}", "public", "static", "class", "Std", "extends", "BcKeyStoreSpi", "{", "public", "Std", "(", ")", "{", "super", "(", "STORE_VERSION", ")", ";", "}", "}", "public", "static", "class", "Version1", "extends", "BcKeyStoreSpi", "{", "public", "Version1", "(", ")", "{", "super", "(", "1", ")", ";", "}", "}", "}", "@", "@", "-", "107", ",", "6", "+", "107", ",", "19", "@", "@", "private", "void", "testEncodingIA5String", "(", "ASN1ObjectIdentifier", "oid", ",", "String", "value", ")", "}", "}", "private", "void", "testEncodingUTF8String", "(", "ASN1ObjectIdentifier", "oid", ",", "String", "value", ")", "throws", "IOException", "{", "ASN1Encodable", "converted", "=", "createEntryValue", "(", "oid", ",", "value", ")", ";", "if", "(", "!(", "converted", "instanceof", "DERUTF8String", ")", ")", "{", "fail", "(", "\"", "encoding", "for", "\"", "+", "oid", "+", "\"", "not", "IA5String", "\"", ");", "}", "if", "(", "!", "value", ".", "equals", "(", "(", "DERUTF8String", ".", "getInstance", "(", "converted", ".", "toASN1Primitive", "(", ").", "getEncoded", "(", "))", ".", "getString", "(", "))", "))", "{", "fail", "(", "\"", "decoding", "not", "correct", "\"", ");", "}", "}", "private", "void", "testEncodingGeneralizedTime", "(", "ASN1ObjectIdentifier", "oid", ",", "String", "value", ")", "{", "@", "@", "-", "132", ",", "8", "+", "145", ",", "9", "@", "@", "public", "void", "performTest", "(", ")", "testEncodingIA5String", "(", "BCStyle", ".", "DC", ",", "\"", "test", "\"", ");", "/", "/", "correct", "encoding", "testEncodingGeneralizedTime", "(", "BCStyle", ".", "DATE_OF_BIRTH", ",", "\"", "#", "180F32303032303132323132323232305A", "\"", ");", "/", "/", "compatability", "encoding", "/", "/", "compatibility", "encoding", "testEncodingGeneralizedTime", "(", "BCStyle", ".", "DATE_OF_BIRTH", ",", "\"", "20020122122220Z", "\"", ");", "testEncodingUTF8String", "(", "BCStyle", ".", "CN", ",", "\"", "M", "\u00f6", "rsky", "\"", ");", "/", "/", "/", "/", "composite", "@", "@", "-", "16", ",", "6", "+", "16", ",", "7", "@", "@", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "ASN1Primitive", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "ASN1Sequence", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "ASN1Set", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "ASN1String", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "DERGeneralizedTime", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "DERIA5String", ";", "import", "org", ".", "bouncycastle", ".", "asn1", ".", "DERObjectIdentifier", ";", "@", "@", "-", "118", ",", "6", "+", "119", ",", "20", "@", "@", "private", "void", "testEncodingIA5String", "(", "DERObjectIdentifier", "oid", ",", "String", "value", ")", "}", "private", "void", "testEncodingUTF8String", "(", "DERObjectIdentifier", "oid", ",", "String", "value", ")", "throws", "IOException", "{", "ASN1Encodable", "converted", "=", "createEntryValue", "(", "oid", ",", "value", ")", ";", "if", "(", "!(", "converted", "instanceof", "DERUTF8String", ")", ")", "{", "fail", "(", "\"", "encoding", "for", "\"", "+", "oid", "+", "\"", "not", "IA5String", "\"", ");", "}", "if", "(", "!", "value", ".", "equals", "(", "(", "DERUTF8String", ".", "getInstance", "(", "converted", ".", "toASN1Primitive", "(", ").", "getEncoded", "(", "))", ".", "getString", "(", "))", "))", "{", "fail", "(", "\"", "decoding", "not", "correct", "\"", ");", "}", "}", "private", "void", "testEncodingGeneralizedTime", "(", "DERObjectIdentifier", "oid", ",", "String", "value", ")", "{", "ASN1Encodable", "converted", "=", "createEntryValue", "(", "oid", ",", "value", ")", ";", "@", "@", "-", "142", ",", "9", "+", "157", ",", "9", "@", "@", "public", "void", "performTest", "(", ")", "testEncodingIA5String", "(", "X509Name", ".", "DC", ",", "\"", "test", "\"", ");", "/", "/", "correct", "encoding", "testEncodingGeneralizedTime", "(", "X509Name", ".", "DATE_OF_BIRTH", ",", "\"", "#", "180F32303032303132323132323232305A", "\"", ");", "/", "/", "compatability", "encoding", "/", "/", "compatibility", "encoding", "testEncodingGeneralizedTime", "(", "X509Name", ".", "DATE_OF_BIRTH", ",", "\"", "20020122122220Z", "\"", ");", "testEncodingUTF8String", "(", "X509Name", ".", "CN", ",", "\"", "M", "\u00f6", "rsky", "\"", ");", "/", "/", "/", "/", "composite", "/", "/", "@", "@", "-", "328", ",", "6", "+", "328", ",", "9", "@", "@", "private", "void", "oldStoreTest", "(", ")", "checkStore", "(", "KeyStore", ".", "getInstance", "(", "\"", "BKS", "\"", ",", "\"", "BC", "\"", "),", "v2BKS", ")", ";", "checkStore", "(", "KeyStore", ".", "getInstance", "(", "\"", "UBER", "\"", ",", "\"", "BC", "\"", "),", "v1UBER", ")", ";", "checkStore", "(", "KeyStore", ".", "getInstance", "(", "\"", "UBER", "\"", ",", "\"", "BC", "\"", "),", "v2UBER", ")", ";", "checkOldStore", "(", "KeyStore", ".", "getInstance", "(", "\"", "BKS", "-", "V1", "\"", ",", "\"", "BC", "\"", "),", "v1BKS", ")", ";", "checkOldStore", "(", "KeyStore", ".", "getInstance", "(", "\"", "BKS", "-", "V1", "\"", ",", "\"", "BC", "\"", "),", "v2BKS", ")", ";", "}", "private", "void", "checkStore", "(", "KeyStore", "ks", ",", "byte", "[", "]", "data", ")", "@", "@", "-", "351", ",", "6", "+", "354", ",", "32", "@", "@", "private", "void", "checkStore", "(", "KeyStore", "ks", ",", "byte", "[", "]", "data", ")", "ks", ".", "store", "(", "bOut", ",", "oldStorePass", ")", ";", "}", "private", "void", "checkOldStore", "(", "KeyStore", "ks", ",", "byte", "[", "]", "data", ")", "throws", "Exception", "{", "ks", ".", "load", "(", "new", "ByteArrayInputStream", "(", "data", ")", ",", "oldStorePass", ")", ";", "if", "(", "!", "ks", ".", "containsAlias", "(", "\"", "android", "\"", "))", "{", "fail", "(", "\"", "cannot", "find", "alias", "\"", ");", "}", "Key", "key", "=", "ks", ".", "getKey", "(", "\"", "android", "\"", ",", "oldStorePass", ")", ";", "if", "(", "key", "=", "=", "null", ")", "{", "fail", "(", "\"", "cannot", "find", "key", "\"", ");", "}", "ByteArrayOutputStream", "bOut", "=", "new", "ByteArrayOutputStream", "(", ");", "ks", ".", "store", "(", "bOut", ",", "oldStorePass", ")", ";", "if", "(", "data", ".", "length", "!", "=", "bOut", ".", "toByteArray", "(", ").", "length", ")", "{", "fail", "(", "\"", "Old", "version", "key", "store", "write", "incorrect", "\"", ");", "}", "}", "private", "void", "checkException", "(", ")", "throws", "Exception", "{", "@", "@", "-", "379", ",", "6", "+", "408", ",", "7", "@", "@", "public", "void", "performTest", "(", ")", "{", "keyStoreTest", "(", "\"", "BKS", "\"", ");", "keyStoreTest", "(", "\"", "UBER", "\"", ");", "keyStoreTest", "(", "\"", "BKS", "-", "V1", "\"", ");", "ecStoreTest", "(", "\"", "BKS", "\"", ");", "oldStoreTest", "(", ");", "checkException", "(", ");"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "2256", ",", "9", "+", "2256", ",", "10", "@", "@", "mountpoint_last", "(", "struct", "nameidata", "*", "nd", ",", "struct", "path", "*", "path", ")", "goto", "out", ";", "}", "path", "-", ">", "dentry", "=", "dentry", ";", "path", "-", ">", "mnt", "=", "mntget", "(", "nd", "-", ">", "path", ".", "mnt", ")", ";", "path", "-", ">", "mnt", "=", "nd", "-", ">", "path", ".", "mnt", ";", "if", "(", "should_follow_link", "(", "dentry", ",", "nd", "-", ">", "flags", "&", "LOOKUP_FOLLOW", ")", ")", "return", "1", ";", "mntget", "(", "path", "-", ">", "mnt", ")", ";", "follow_mount", "(", "path", ")", ";", "error", "=", "0", ";", "out", ":"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "68", ",", "8", "+", "68", ",", "8", "@", "@", "The", "output", "is", "well", "-", "formed", "JSON", "as", "defined", "by", "[", "RFC", "4627", "]", "(", "http", ":", "//", "www", ".", "ietf", ".", "org", "/", "rfc", "/", "rfc4627", ".", "txt", ")", ".", "The", "output", "satisfies", "these", "additional", "properties", ":", "*", "The", "output", "will", "not", "contain", "the", "substring", "(", "case", "-", "insensitively", ")", "`", "\"<", "/", "script", "\"", "`", "so", "can", "be", "embedded", "inside", "an", "HTML", "script", "element", "without", "further", "encoding", ".", "*", "The", "output", "will", "not", "contain", "the", "substring", "`", "\"]", "]>", "\"`", "so", "can", "be", "embedded", "inside", "an", "XML", "CDATA", "section", "without", "further", "encoding", ".", "*", "The", "output", "will", "not", "contain", "the", "substrings", "(", "case", "-", "insensitively", ")", "`", "\"<", "script", "\"", "`,", "`", "\"<", "/", "script", "\"", "`", "and", "`", "<!", "--", "`", "and", "can", "thus", "be", "embedded", "inside", "an", "HTML", "script", "element", "without", "further", "encoding", ".", "*", "The", "output", "will", "not", "contain", "the", "substring", "`", "\"]", "]>", "\"`", "and", "can", "thus", "be", "embedded", "inside", "an", "XML", "CDATA", "section", "without", "further", "encoding", ".", "*", "The", "output", "is", "a", "valid", "Javascript", "expression", ",", "so", "can", "be", "parsed", "by", "Javascript", "'", "s", "`", "eval", "`", "builtin", "(", "after", "being", "wrapped", "in", "parentheses", ")", "or", "by", "`", "JSON", ".", "parse", "`", ".", "Specifically", ",", "the", "output", "will", "not", "contain", "any", "string", "literals", "with", "embedded", "JS", "newlines", "(", "U", "+", "2028", "Paragraph", "separator", "or", "U", "+", "2029", "Line", "separator", ")", ".", "*", "The", "output", "contains", "only", "valid", "Unicode", "[", "scalar", "values", "]", "(", "http", ":", "//", "www", ".", "unicode", ".", "org", "/", "glossary", "/", "#", "unicode_scalar_value", ")", "(", "no", "isolated", "[", "UTF", "-", "16", "surrogates", "]", "(", "http", ":", "//", "www", ".", "unicode", ".", "org", "/", "glossary", "/", "#", "surrogate_pair", ")", ")", "that", "are", "[", "allowed", "in", "XML", "]", "(", "http", ":", "//", "www", ".", "w3", ".", "org", "/", "TR", "/", "xml", "/", "#", "charsets", ")", "unescaped", ".", "@", "@", "-", "541", ",", "16", "+", "541", ",", "41", "@", "@", "private", "void", "sanitizeString", "(", "int", "start", ",", "int", "end", ")", "{", "}", "}", "break", ";", "/", "/", "Embedding", ".", "Disallow", "<", "/", "script", "and", "]", "]>", "in", "string", "literals", "so", "that", "/", "/", "the", "output", "can", "be", "embedded", "in", "HTML", "script", "elements", "and", "in", "XML", "CDATA", "/", "/", "sections", ".", "case", "'", "/'", ":", "/", "/", "Don", "'", "t", "over", "escape", ".", "Many", "JSON", "bodies", "contain", "innocuous", "HTML", "/", "/", "that", "can", "be", "safely", "embedded", ".", "if", "(", "i", ">", "start", "&", "&", "i", "+", "2", "<", "end", "&", "&", "'", "<'", "=", "=", "jsonish", ".", "charAt", "(", "i", "-", "1", ")", "&", "&", "'", "s", "'", "=", "=", "(", "jsonish", ".", "charAt", "(", "i", "+", "1", ")", "|", "32", ")", "&", "&", "'", "c", "'", "=", "=", "(", "jsonish", ".", "charAt", "(", "i", "+", "2", ")", "|", "32", ")", ")", "{", "insert", "(", "i", ",", "'", "\\\\", "')", ";", "/", "/", "Embedding", ".", "Disallow", "<", "script", ",", "<", "/", "script", ",", "<", "!-", "-,", "-", "->", "and", "]", "]>", "in", "string", "/", "/", "literals", "so", "that", "the", "output", "can", "be", "embedded", "in", "HTML", "script", "elements", "/", "/", "and", "in", "XML", "CDATA", "sections", "without", "affecting", "the", "parser", "state", ".", "/", "/", "References", ":", "/", "/", "https", ":", "//", "www", ".", "w3", ".", "org", "/", "TR", "/", "html53", "/", "semantics", "-", "scripting", ".", "html", "#", "restrictions", "-", "for", "-", "contents", "-", "of", "-", "script", "-", "elements", "/", "/", "https", ":", "//", "www", ".", "w3", ".", "org", "/", "TR", "/", "html53", "/", "syntax", ".", "html", "#", "script", "-", "data", "-", "escaped", "-", "state", "/", "/", "https", ":", "//", "www", ".", "w3", ".", "org", "/", "TR", "/", "html53", "/", "syntax", ".", "html", "#", "script", "-", "data", "-", "double", "-", "escaped", "-", "state", "/", "/", "https", ":", "//", "www", ".", "w3", ".", "org", "/", "TR", "/", "xml", "/", "#", "sec", "-", "cdata", "-", "sect", "case", "'", "<'", ":", "/", "/", "Disallow", "<", "!-", "-,", "which", "lets", "the", "HTML", "parser", "switch", "into", "the", "\"", "script", "/", "/", "data", "escaped", "\"", "state", ".", "/", "/", "Disallow", "<", "script", ",", "which", "followed", "by", "various", "characters", "lets", "the", "/", "/", "HTML", "parser", "switch", "into", "or", "out", "of", "the", "\"", "script", "data", "double", "escaped", "\"", "/", "/", "state", ".", "/", "/", "Disallow", "<", "/", "script", ",", "which", "ends", "a", "script", "block", ".", "if", "(", "i", "+", "3", ">", "=", "end", ")", "break", ";", "char", "c1", "=", "jsonish", ".", "charAt", "(", "i", "+", "1", ")", ";", "char", "c2", "=", "jsonish", ".", "charAt", "(", "i", "+", "2", ")", ";", "char", "c3", "=", "jsonish", ".", "charAt", "(", "i", "+", "3", ")", ";", "char", "lc1", "=", "(", "char", ")", "(", "c1", "|", "32", ")", ";", "char", "lc2", "=", "(", "char", ")", "(", "c2", "|", "32", ")", ";", "char", "lc3", "=", "(", "char", ")", "(", "c3", "|", "32", ")", ";", "if", "(", "(", "c1", "=", "=", "'", "!'", "&", "&", "c2", "=", "=", "'", "-'", "&", "&", "c3", "=", "=", "'", "-'", ")", "|", "|", "(", "lc1", "=", "=", "'", "s", "'", "&", "&", "lc2", "=", "=", "'", "c", "'", "&", "&", "lc3", "=", "=", "'", "r", "'", ")", "|", "|", "(", "c1", "=", "=", "'", "/'", "&", "&", "lc2", "=", "=", "'", "s", "'", "&", "&", "lc3", "=", "=", "'", "c", "'", "))", "{", "replace", "(", "i", ",", "i", "+", "1", ",", "\"", "\\\\", "u003c", "\"", ");", "/", "/", "Escaped", "<", "}", "break", ";", "case", "'", ">'", ":", "/", "/", "Disallow", "-", "->", ",", "which", "lets", "the", "HTML", "parser", "switch", "out", "of", "the", "\"", "script", "/", "/", "data", "escaped", "\"", "or", "\"", "script", "data", "double", "escaped", "\"", "state", ".", "if", "(", "(", "i", "-", "2", ")", ">", "=", "start", "&", "&", "'", "-'", "=", "=", "jsonish", ".", "charAt", "(", "i", "-", "2", ")", "&", "&", "'", "-'", "=", "=", "jsonish", ".", "charAt", "(", "i", "-", "1", ")", ")", "{", "replace", "(", "i", ",", "i", "+", "1", ",", "\"", "\\\\", "u003e", "\"", ");", "/", "/", "Escaped", ">", "}", "break", ";", "case", "'", "]'", ":", "@", "@", "-", "56", ",", "14", "+", "56", ",", "12", "@", "@", "public", "static", "final", "void", "testSanitize", "(", ")", "{", "assertSanitized", "(", "\"\\", "\"", "foo", "\\", "\"\"", ");", "assertSanitized", "(", "\"\\", "\"", "foo", "\\", "\"\"", ",", "\"", "'", "foo", "'", "\")", ";", "assertSanitized", "(", "\"", "\\\"", "<", "script", ">", "foo", "(", ")<", "\\\\", "/", "script", ">", "\\\"", "\",", "\"", "\\\"", "<", "script", ">", "foo", "(", ")<", "/", "script", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"", "\\\"", "<", "script", ">", "foo", "(", ")<", "\\\\", "/", "script", ">", "\\\"", "\",", "\"", "\\\"", "<", "script", ">", "foo", "(", ")<", "/", "script", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"<", "\\\\", "/", "SCRIPT", "\\", "\\", "n", ">", "\\\"", "\",", "\"", "\\\"", "</", "SCRIPT", "\\", "n", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"<", "\\\\", "/", "ScRIpT", "\\", "\"\"", ",", "\"", "\\\"", "</", "ScRIpT", "\\", "\"\"", ");", "\"", "\\\"", "\\\\", "u003cscript", ">", "foo", "(", ")\\", "\\", "u003c", "/", "script", ">", "\\\"", "\",", "\"", "\\\"", "<", "script", ">", "foo", "(", ")<", "/", "script", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003c", "/", "SCRIPT", "\\", "\\", "n", ">", "\\\"", "\",", "\"", "\\\"", "</", "SCRIPT", "\\", "n", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003c", "/", "ScRIpT", "\\", "\"\"", ",", "\"", "\\\"", "</", "ScRIpT", "\\", "\"\"", ");", "/", "/", "\\", "u0130", "is", "a", "Turkish", "dotted", "upper", "-", "case", "'", "I", "'", "so", "the", "lower", "case", "version", "of", "/", "/", "the", "tag", "name", "is", "\"", "script", "\"", ".", "assertSanitized", "(", "\"\\", "\"<", "\\\\", "/", "ScR", "\\", "u0130pT", "\\", "\"\"", ",", "\"", "\\\"", "</", "ScR", "\\", "u0130pT", "\\", "\"\"", ");", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003c", "/", "ScR", "\\", "u0130pT", "\\", "\"\"", ",", "\"", "\\\"", "</", "ScR", "\\", "u0130pT", "\\", "\"\"", ");", "assertSanitized", "(", "\"\\", "\"<", "b", ">", "Hello", "<", "/", "b", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"<", "s", ">", "Hello", "<", "/", "s", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"<", "[[", "\\\\", "u005d", "]", ">\\", "\"\"", ",", "\"", "'<", "[[", "]]", ">'", "\")", ";", "@", "@", "-", "211", ",", "4", "+", "209", ",", "23", "@", "@", "public", "static", "final", "void", "testIssue13", "(", ")", "{", "\"", "[", "{", "\\", "\"", "description", "\\", "\":", "\\", "\"", "aa", "#", "##", "##", "##", "##", "##", "##", "#", "aa", "\\", "\"", "}", ",", "1", "]", "\",", "\"", "[", "{", "\\", "\"", "description", "\\", "\":", "\\", "\"", "aa", "#", "##", "##", "##", "##", "##", "##", "#", "aa", "\\", "\"", "}", ",", "1", "]", "\")", ";", "}", "@", "Test", "public", "static", "final", "void", "testHtmlParserStateChanges", "(", ")", "{", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003cscript", "\\", "\"\"", ",", "\"", "\\\"", "<", "script", "\\", "\"\"", ");", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003cScript", "\\", "\"\"", ",", "\"", "\\\"", "<", "Script", "\\", "\"\"", ");", "/", "/", "\\", "u0130", "is", "a", "Turkish", "dotted", "upper", "-", "case", "'", "I", "'", "so", "the", "lower", "case", "version", "of", "/", "/", "the", "tag", "name", "is", "\"", "script", "\"", ".", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003cScR", "\\", "u0130pT", "\\", "\"\"", ",", "\"", "\\\"", "<", "ScR", "\\", "u0130pT", "\\", "\"\"", ");", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003cSCRIPT", "\\", "\\", "n", ">", "\\\"", "\",", "\"", "\\\"", "<", "SCRIPT", "\\", "n", ">", "\\\"", "\")", ";", "assertSanitized", "(", "\"\\", "\"", "script", "\\", "\"\"", ",", "\"", "<", "script", "\"", ");", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003c", "!", "--", "\\\"", "\",", "\"", "\\\"", "<!", "--", "\\\"", "\")", ";", "assertSanitized", "(", "\"-", "0", "\"", ",", "\"", "<!", "--", "\")", ";", "assertSanitized", "(", "\"\\", "\"-", "-\\", "\\", "u003e", "\\", "\"\"", ",", "\"", "\\\"", "--", ">\\", "\"\"", ");", "assertSanitized", "(", "\"-", "0", "\"", ",", "\"", "--", ">\"", ");", "assertSanitized", "(", "\"\\", "\"\\", "\\", "u003c", "!", "--", "\\\\", "u003cscript", ">", "\\\"", "\",", "\"", "\\\"", "<!", "--", "<", "script", ">", "\\\"", "\")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "444", ",", "6", "+", "444", ",", "8", "@", "@", "protected", "Document", "createDocument", "(", "InputSource", "is", ")", "true", ")", ";", "parser", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "validation", "\"", ",", "isValidating", ")", ";", "parser", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "general", "-", "entities", "\"", ",", "false", ")", ";", "parser", ".", "setFeature", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "features", "/", "external", "-", "parameter", "-", "entities", "\"", ",", "false", ")", ";", "parser", ".", "setProperty", "(", "\"", "http", ":", "//", "xml", ".", "org", "/", "sax", "/", "properties", "/", "lexical", "-", "handler", "\"", ",", "this", ")", ";", "parser", ".", "parse", "(", "is", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "690", ",", "6", "+", "690", ",", "10", "@", "@", "Changes", "between", "0", ".", "9", ".", "8g", "and", "0", ".", "9", ".", "8h", "[", "xx", "XXX", "xxxx", "]", "*", ")", "Fix", "double", "free", "in", "TLS", "server", "name", "extensions", "which", "could", "lead", "to", "a", "remote", "crash", "found", "by", "Codenomicon", "TLS", "test", "suite", "(", "CVE", "-", "2008", "-", "0891", ")", "[", "Joe", "Orton", "]", "*", ")", "Clear", "error", "queue", "in", "SSL_CTX_use_certificate_chain_file", "(", ")", "Clear", "the", "error", "queue", "to", "ensure", "that", "error", "entries", "left", "from", "@", "@", "-", "637", ",", "6", "+", "637", ",", "7", "@", "@", "int", "ssl_parse_clienthello_tlsext", "(", "SSL", "*", "s", ",", "unsigned", "char", "*", "*", "p", ",", "unsigned", "char", "*", "d", ",", "in", "s", "-", ">", "session", "-", ">", "tlsext_hostname", "[", "len", "]", "='", "\\", "0", "'", ";", "if", "(", "strlen", "(", "s", "-", ">", "session", "-", ">", "tlsext_hostname", ")", "!", "=", "len", ")", "{", "OPENSSL_free", "(", "s", "-", ">", "session", "-", ">", "tlsext_hostname", ")", ";", "s", "-", ">", "session", "-", ">", "tlsext_hostname", "=", "NULL", ";", "*", "al", "=", "TLS1_AD_UNRECOGNIZED_NAME", ";", "return", "0", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "8", ",", "6", "+", "8", ",", "9", "@", "@", "PHP", "NEWS", "configuration", "options", ")", ".", "(", "Anatol", "Belski", ")", ".", "Fixed", "bug", "#", "69207", "(", "move_uploaded_file", "allows", "nulls", "in", "path", ")", ".", "(", "Stas", ")", "-", "Ereg", ":", ".", "Fixed", "bug", "#", "69248", "(", "heap", "overflow", "vulnerability", "in", "regcomp", ".", "c", ")", ".", "(", "Stas", ")", "-", "SOAP", ":", ".", "Fixed", "bug", "#", "69085", "(", "SoapClient", "'", "s", "__call", "(", ")", "type", "confusion", "through", "unserialize", "(", "))", ".", "(", "Dmitry", ")", "@", "@", "-", "117", ",", "7", "+", "117", ",", "15", "@", "@", "int", "cflags", ";", "(", "NC", "-", "1", ")", "*", "sizeof", "(", "cat_t", ")", ");", "if", "(", "g", "=", "=", "NULL", ")", "return", "(", "REG_ESPACE", ")", ";", "p", "-", ">", "ssize", "=", "len", "/", "(", "size_t", ")", "2", "*", "(", "size_t", ")", "3", "+", "(", "size_t", ")", "1", ";", "/", "*", "ugh", "*", "/", "{", "/", "*", "Patched", "for", "CERT", "Vulnerability", "Note", "VU", "#", "695940", ",", "Feb", "2015", ".", "*", "/", "size_t", "new_ssize", "=", "len", "/", "(", "size_t", ")", "2", "*", "(", "size_t", ")", "3", "+", "(", "size_t", ")", "1", ";", "/", "*", "ugh", "*", "/", "if", "(", "new_ssize", "<", "len", "|", "|", "new_ssize", ">", "LONG_MAX", "/", "sizeof", "(", "sop", ")", ")", "{", "free", "(", "(", "char", "*", ")", "g", ")", ";", "return", "REG_INVARG", ";", "}", "p", "-", ">", "ssize", "=", "new_ssize", ";", "}", "p", "-", ">", "strip", "=", "(", "sop", "*", ")", "malloc", "(", "p", "-", ">", "ssize", "*", "sizeof", "(", "sop", ")", ");", "p", "-", ">", "slen", "=", "0", ";", "if", "(", "p", "-", ">", "strip", "=", "=", "NULL", ")", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "188", ",", "7", "+", "188", ",", "7", "@", "@", "int", "ptrace_attach", "(", "struct", "task_struct", "*", "task", ")", "/", "*", "Protect", "exec", "'", "s", "credential", "calculations", "against", "our", "interference", ";", "*", "SUID", ",", "SGID", "and", "LSM", "creds", "get", "determined", "differently", "under", "ptrace", ".", "*", "/", "retval", "=", "mutex_lock_interruptible", "(", "&", "current", "-", ">", "cred_exec_mutex", ")", ";", "retval", "=", "mutex_lock_interruptible", "(", "&", "task", "-", ">", "cred_exec_mutex", ")", ";", "if", "(", "retval", "<", "0", ")", "goto", "out", ";", "@", "@", "-", "232", ",", "7", "+", "232", ",", "7", "@", "@", "int", "ptrace_attach", "(", "struct", "task_struct", "*", "task", ")", "bad", ":", "write_unlock_irqrestore", "(", "&", "tasklist_lock", ",", "flags", ")", ";", "task_unlock", "(", "task", ")", ";", "mutex_unlock", "(", "&", "current", "-", ">", "cred_exec_mutex", ")", ";", "mutex_unlock", "(", "&", "task", "-", ">", "cred_exec_mutex", ")", ";", "out", ":", "return", "retval", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "142", ",", "6", "+", "142", ",", "8", "@", "@", "static", "long", "__media_device_enum_links", "(", "struct", "media_device", "*", "mdev", ",", "for", "(", "p", "=", "0", ";", "p", "<", "entity", "-", ">", "num_pads", ";", "p", "+", "+)", "{", "struct", "media_pad_desc", "pad", ";", "memset", "(", "&", "pad", ",", "0", ",", "sizeof", "(", "pad", ")", ");", "media_device_kpad_to_upad", "(", "&", "entity", "-", ">", "pads", "[", "p", "]", ",", "&", "pad", ")", ";", "if", "(", "copy_to_user", "(", "&", "links", "-", ">", "pads", "[", "p", "]", ",", "&", "pad", ",", "sizeof", "(", "pad", ")", "))", "return", "-", "EFAULT", ";", "@", "@", "-", "159", ",", "6", "+", "161", ",", "7", "@", "@", "static", "long", "__media_device_enum_links", "(", "struct", "media_device", "*", "mdev", ",", "if", "(", "entity", "-", ">", "links", "[", "l", "]", ".", "source", "-", ">", "entity", "!", "=", "entity", ")", "continue", ";", "memset", "(", "&", "link", ",", "0", ",", "sizeof", "(", "link", ")", ");", "media_device_kpad_to_upad", "(", "entity", "-", ">", "links", "[", "l", "]", ".", "source", ",", "&", "link", ".", "source", ")", ";", "media_device_kpad_to_upad", "(", "entity", "-", ">", "links", "[", "l", "]", ".", "sink", ","], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "78", ",", "7", "+", "78", ",", "8", "@", "@", "static", "const", "char", "*", "ops", "[", "]", "=", "{", "OPS", "}", ";", "C", "(", "TOO_MANY_PREDS", ",", "\"", "Too", "many", "terms", "in", "predicate", "expression", "\"", "),", "\\", "C", "(", "INVALID_FILTER", ",", "\"", "Meaningless", "filter", "expression", "\"", "),", "\\", "C", "(", "IP_FIELD_ONLY", ",", "\"", "Only", "'", "ip", "'", "field", "is", "supported", "for", "function", "trace", "\"", "),", "\\", "C", "(", "INVALID_VALUE", ",", "\"", "Invalid", "value", "(", "did", "you", "forget", "quotes", ")", "?\"", "),", "C", "(", "INVALID_VALUE", ",", "\"", "Invalid", "value", "(", "did", "you", "forget", "quotes", ")", "?\"", "),", "\\", "C", "(", "NO_FILTER", ",", "\"", "No", "filter", "found", "\"", "),", "#", "undef", "C", "#", "define", "C", "(", "a", ",", "b", ")", "FILT_ERR_", "#", "#", "a", "@", "@", "-", "550", ",", "6", "+", "551", ",", "13", "@", "@", "predicate_parse", "(", "const", "char", "*", "str", ",", "int", "nr_parens", ",", "int", "nr_preds", ",", "goto", "out_free", ";", "}", "if", "(", "!", "N", ")", "{", "/", "*", "No", "program", "?", "*", "/", "ret", "=", "-", "EINVAL", ";", "parse_error", "(", "pe", ",", "FILT_ERR_NO_FILTER", ",", "ptr", "-", "str", ")", ";", "goto", "out_free", ";", "}", "prog", "[", "N", "]", ".", "pred", "=", "NULL", ";", "/", "*", "#", "13", "*", "/", "prog", "[", "N", "]", ".", "target", "=", "1", ";", "/", "*", "TRUE", "*", "/", "prog", "[", "N", "+", "1", "]", ".", "pred", "=", "NULL", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "121", ",", "6", "+", "121", ",", "9", "@", "@", "static", "int", "__sock_diag_rcv_msg", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "nlmsghdr", "*", "nlh", ")", "if", "(", "nlmsg_len", "(", "nlh", ")", "<", "sizeof", "(", "*", "req", ")", ")", "return", "-", "EINVAL", ";", "if", "(", "req", "-", ">", "sdiag_family", ">", "=", "AF_MAX", ")", "return", "-", "EINVAL", ";", "hndl", "=", "sock_diag_lock_handler", "(", "req", "-", ">", "sdiag_family", ")", ";", "if", "(", "hndl", "=", "=", "NULL", ")", "err", "=", "-", "ENOENT", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "89", ",", "6", "+", "89", ",", "9", "@", "@", "public", "SimpleString", "readSimpleString", "(", ")", "{", "private", "SimpleString", "readSimpleStringInternal", "(", ")", "{", "int", "len", "=", "buffer", ".", "readInt", "(", ");", "if", "(", "len", ">", "buffer", ".", "readableBytes", "(", "))", "{", "throw", "new", "IndexOutOfBoundsException", "(", ");", "}", "byte", "[", "]", "data", "=", "new", "byte", "[", "len", "]", ";", "buffer", ".", "readBytes", "(", "data", ")", ";", "return", "new", "SimpleString", "(", "data", ")", ";", "@", "@", "-", "0", ",", "0", "+", "1", ",", "44", "@", "@", "/", "*", "*", "Licensed", "to", "the", "Apache", "Software", "Foundation", "(", "ASF", ")", "under", "one", "or", "more", "*", "contributor", "license", "agreements", ".", "See", "the", "NOTICE", "file", "distributed", "with", "*", "this", "work", "for", "additional", "information", "regarding", "copyright", "ownership", ".", "*", "The", "ASF", "licenses", "this", "file", "to", "You", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "*", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "*", "*", "http", ":", "//", "www", ".", "apache", ".", "org", "/", "licenses", "/", "LICENSE", "-", "2", ".", "0", "*", "*", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing", ",", "software", "*", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "*", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "*", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "*", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "apache", ".", "activemq", ".", "artemis", ".", "utils", ";", "import", "io", ".", "netty", ".", "buffer", ".", "ByteBuf", ";", "import", "io", ".", "netty", ".", "buffer", ".", "ByteBufAllocator", ";", "import", "org", ".", "apache", ".", "activemq", ".", "artemis", ".", "core", ".", "buffers", ".", "impl", ".", "ChannelBufferWrapper", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "public", "class", "ChannelBufferWrapperTest", "{", "@", "Test", "public", "void", "testOutOfBoundsThrownOnMalformedString", "(", ")", "{", "ByteBuf", "byteBuffer", "=", "ByteBufAllocator", ".", "DEFAULT", ".", "buffer", "(", "4", ")", ";", "byteBuffer", ".", "writeInt", "(", "100", ")", ";", "Exception", "e", "=", "null", ";", "try", "{", "ChannelBufferWrapper", "cbw", "=", "new", "ChannelBufferWrapper", "(", "byteBuffer", ")", ";", "cbw", ".", "readSimpleString", "(", ");", "}", "catch", "(", "IndexOutOfBoundsException", "iob", ")", "{", "e", "=", "iob", ";", "}", "assertTrue", "(", "e", "instanceof", "IndexOutOfBoundsException", ")", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "126", ",", "40", "+", "126", ",", "61", "@", "@", "static", "void", "async_ctrl_callback", "(", "struct", "urb", "*", "urb", ")", "static", "int", "get_registers", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u16", "size", ",", "void", "*", "data", ")", "{", "u8", "*", "buf", ";", "int", "ret", ";", "buf", "=", "kmalloc", "(", "size", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "ret", "=", "usb_control_msg", "(", "pegasus", "-", ">", "usb", ",", "usb_rcvctrlpipe", "(", "pegasus", "-", ">", "usb", ",", "0", ")", ",", "PEGASUS_REQ_GET_REGS", ",", "PEGASUS_REQT_READ", ",", "0", ",", "indx", ",", "data", ",", "size", ",", "1000", ")", ";", "indx", ",", "buf", ",", "size", ",", "1000", ")", ";", "if", "(", "ret", "<", "0", ")", "netif_dbg", "(", "pegasus", ",", "drv", ",", "pegasus", "-", ">", "net", ",", "\"", "%", "s", "returned", "%", "d", "\\", "n", "\"", ",", "__func__", ",", "ret", ")", ";", "else", "if", "(", "ret", "<", "=", "size", ")", "memcpy", "(", "data", ",", "buf", ",", "ret", ")", ";", "kfree", "(", "buf", ")", ";", "return", "ret", ";", "}", "static", "int", "set_registers", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u16", "size", ",", "void", "*", "data", ")", "static", "int", "set_registers", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u16", "size", ",", "const", "void", "*", "data", ")", "{", "u8", "*", "buf", ";", "int", "ret", ";", "buf", "=", "kmemdup", "(", "data", ",", "size", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "ret", "=", "usb_control_msg", "(", "pegasus", "-", ">", "usb", ",", "usb_sndctrlpipe", "(", "pegasus", "-", ">", "usb", ",", "0", ")", ",", "PEGASUS_REQ_SET_REGS", ",", "PEGASUS_REQT_WRITE", ",", "0", ",", "indx", ",", "data", ",", "size", ",", "100", ")", ";", "indx", ",", "buf", ",", "size", ",", "100", ")", ";", "if", "(", "ret", "<", "0", ")", "netif_dbg", "(", "pegasus", ",", "drv", ",", "pegasus", "-", ">", "net", ",", "\"", "%", "s", "returned", "%", "d", "\\", "n", "\"", ",", "__func__", ",", "ret", ")", ";", "kfree", "(", "buf", ")", ";", "return", "ret", ";", "}", "static", "int", "set_register", "(", "pegasus_t", "*", "pegasus", ",", "__u16", "indx", ",", "__u8", "data", ")", "{", "u8", "*", "buf", ";", "int", "ret", ";", "buf", "=", "kmemdup", "(", "&", "data", ",", "1", ",", "GFP_NOIO", ")", ";", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "ret", "=", "usb_control_msg", "(", "pegasus", "-", ">", "usb", ",", "usb_sndctrlpipe", "(", "pegasus", "-", ">", "usb", ",", "0", ")", ",", "PEGASUS_REQ_SET_REG", ",", "PEGASUS_REQT_WRITE", ",", "data", ",", "indx", ",", "&", "data", ",", "1", ",", "1000", ")", ";", "indx", ",", "buf", ",", "1", ",", "1000", ")", ";", "if", "(", "ret", "<", "0", ")", "netif_dbg", "(", "pegasus", ",", "drv", ",", "pegasus", "-", ">", "net", ",", "\"", "%", "s", "returned", "%", "d", "\\", "n", "\"", ",", "__func__", ",", "ret", ")", ";", "kfree", "(", "buf", ")", ";", "return", "ret", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "19", ",", "6", "+", "19", ",", "7", "@", "@", "package", "org", ".", "jvnet", ".", "hudson", ".", "plugins", ".", "monitoring", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "util", ".", "Enumeration", ";", "import", "javax", ".", "servlet", ".", "FilterChain", ";", "import", "javax", ".", "servlet", ".", "FilterConfig", ";", "@", "@", "-", "69", ",", "9", "+", "70", ",", "19", "@", "@", "public", "void", "doFilter", "(", "ServletRequest", "request", ",", "ServletResponse", "response", ",", "FilterCha", "final", "String", "monitoringUrl", "=", "getMonitoringUrl", "(", "httpRequest", ")", ";", "final", "String", "monitoringSlavesUrl", "=", "monitoringUrl", "+", "\"", "/", "nodes", "\"", ";", "if", "(", "!", "PLUGIN_AUTHENTICATION_DISABLED", "&", "&", "(", "requestURI", ".", "equals", "(", "monitoringUrl", ")", "|", "|", "requestURI", ".", "equals", "(", "monitoringSlavesUrl", ")", "))", "{", "&", "&", "(", "requestURI", ".", "equals", "(", "monitoringUrl", ")", "|", "|", "requestURI", ".", "startsWith", "(", "monitoringSlavesUrl", ")", "))", "{", "/", "/", "only", "the", "Hudson", "/", "Jenkins", "administrator", "can", "view", "the", "monitoring", "report", "Jenkins", ".", "getInstance", "(", ").", "checkPermission", "(", "Jenkins", ".", "ADMINISTER", ")", ";", "Enumeration", "<", "?>", "parameterNames", "=", "request", ".", "getParameterNames", "(", ");", "while", "(", "parameterNames", ".", "hasMoreElements", "(", "))", "{", "String", "parameterName", "=", "(", "String", ")", "parameterNames", ".", "nextElement", "(", ");", "for", "(", "String", "value", ":", "request", ".", "getParameterValues", "(", "parameterName", ")", ")", "{", "if", "(", "value", ".", "indexOf", "(", "'\"", "')", "!", "=", "-", "1", "|", "|", "value", ".", "indexOf", "(", "'\\", "''", ")", "!", "=", "-", "1", "|", "|", "value", ".", "indexOf", "(", "'<", "')", "!", "=", "-", "1", "|", "|", "value", ".", "indexOf", "(", "'&", "')", "!", "=", "-", "1", ")", "{", "(", "(", "HttpServletResponse", ")", "response", ")", ".", "sendError", "(", "HttpServletResponse", ".", "SC_BAD_REQUEST", ")", ";", "return", ";", "}", "}", "}", "}", "if", "(", "requestURI", ".", "startsWith", "(", "monitoringSlavesUrl", ")", ")", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1182", ",", "7", "+", "1182", ",", "6", "@", "@", "void", "sctp_assoc_update", "(", "struct", "sctp_association", "*", "asoc", ",", "asoc", "-", ">", "peer", ".", "peer_hmacs", "=", "new", "-", ">", "peer", ".", "peer_hmacs", ";", "new", "-", ">", "peer", ".", "peer_hmacs", "=", "NULL", ";", "sctp_auth_key_put", "(", "asoc", "-", ">", "asoc_shared_key", ")", ";", "sctp_auth_asoc_init_active_key", "(", "asoc", ",", "GFP_ATOMIC", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "85", ",", "6", "+", "85", ",", "7", "@", "@", "protected", "void", "onSuccessfulAuthentication", "(", "HttpServletRequest", "request", ",", "HttpServle", "/", "/", "HttpSessionContextIntegrationFilter", "stores", "the", "updated", "SecurityContext", "object", "into", "this", "session", "later", "/", "/", "(", "either", "when", "a", "redirect", "is", "issued", ",", "via", "its", "HttpResponseWrapper", ",", "or", "when", "the", "execution", "returns", "to", "its", "/", "/", "doFilter", "method", ".", "request", ".", "getSession", "(", ").", "invalidate", "(", ");", "request", ".", "getSession", "(", ");", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "927", ",", "14", "+", "927", ",", "13", "@", "@", "enum", "lru_status", "binder_alloc_free_page", "(", "struct", "list_head", "*", "item", ",", "index", "=", "page", "-", "alloc", "-", ">", "pages", ";", "page_addr", "=", "(", "uintptr_t", ")", "alloc", "-", ">", "buffer", "+", "index", "*", "PAGE_SIZE", ";", "mm", "=", "alloc", "-", ">", "vma_vm_mm", ";", "if", "(", "!", "mmget_not_zero", "(", "mm", ")", ")", "goto", "err_mmget", ";", "if", "(", "!", "down_write_trylock", "(", "&", "mm", "-", ">", "mmap_sem", ")", ")", "goto", "err_down_write_mmap_sem_failed", ";", "vma", "=", "binder_alloc_get_vma", "(", "alloc", ")", ";", "if", "(", "vma", ")", "{", "if", "(", "!", "mmget_not_zero", "(", "alloc", "-", ">", "vma_vm_mm", ")", ")", "goto", "err_mmget", ";", "mm", "=", "alloc", "-", ">", "vma_vm_mm", ";", "if", "(", "!", "down_read_trylock", "(", "&", "mm", "-", ">", "mmap_sem", ")", ")", "goto", "err_down_write_mmap_sem_failed", ";", "}", "list_lru_isolate", "(", "lru", ",", "item", ")", ";", "spin_unlock", "(", "lock", ")", ";", "@", "@", "-", "945", ",", "10", "+", "944", ",", "9", "@", "@", "enum", "lru_status", "binder_alloc_free_page", "(", "struct", "list_head", "*", "item", ",", "zap_page_range", "(", "vma", ",", "page_addr", ",", "PAGE_SIZE", ")", ";", "trace_binder_unmap_user_end", "(", "alloc", ",", "index", ")", ";", "up_read", "(", "&", "mm", "-", ">", "mmap_sem", ")", ";", "mmput", "(", "mm", ")", ";", "}", "up_write", "(", "&", "mm", "-", ">", "mmap_sem", ")", ";", "mmput", "(", "mm", ")", ";", "trace_binder_unmap_kernel_start", "(", "alloc", ",", "index", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "216", ",", "6", "+", "216", ",", "9", "@", "@", "Bug", "Fixes", "*", "SOLR", "-", "13963", ":", "JavaBinCodec", "has", "concurrent", "modification", "of", "CharArr", "resulting", "in", "corrupt", "internode", "updates", "(", "Colvin", "Cowie", ",", "noble", ")", "*", "SOLR", "-", "13971", ":", "Velocity", "response", "writer", "'", "s", "resource", "loading", "now", "possible", "only", "through", "startup", "parameters", ".", "Also", ",", "removed", "velocity", "response", "writer", "from", "_default", "configset", ".", "(", "Ishan", "Chattopadhyaya", ")", "=", "==", "==", "==", "==", "==", "==", "==", "==", "=", "8", ".", "3", ".", "0", "=", "==", "==", "==", "==", "==", "==", "==", "==", "=", "Consult", "the", "LUCENE_CHANGES", ".", "txt", "file", "for", "additional", ",", "low", "level", ",", "changes", "in", "this", "release", ".", "@", "@", "-", "62", ",", "9", "+", "62", ",", "11", "@", "@", "/", "/", "init", "param", "names", ",", "these", "are", "_only_", "loaded", "at", "init", "time", "(", "no", "per", "-", "request", "control", "of", "these", ")", "/", "/", "-", "multiple", "different", "named", "writers", "could", "be", "created", "with", "different", "init", "params", "public", "static", "final", "String", "TEMPLATE_BASE_DIR", "=", "\"", "template", ".", "base", ".", "dir", "\"", ";", "public", "static", "final", "String", "PROPERTIES_FILE", "=", "\"", "init", ".", "properties", ".", "file", "\"", ";", "/", "/", "System", "property", "names", ",", "these", "are", "_only_", "loaded", "at", "node", "startup", "(", "no", "per", "-", "request", "control", "of", "these", ")", "public", "static", "final", "String", "PARAMS_RESOURCE_LOADER_ENABLED", "=", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ";", "public", "static", "final", "String", "SOLR_RESOURCE_LOADER_ENABLED", "=", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ";", "public", "static", "final", "String", "PROPERTIES_FILE", "=", "\"", "init", ".", "properties", ".", "file", "\"", ";", "/", "/", "request", "param", "names", "public", "static", "final", "String", "TEMPLATE", "=", "\"", "v", ".", "template", "\"", ";", "@", "@", "-", "106", ",", "12", "+", "108", ",", "12", "@", "@", "public", "void", "init", "(", "NamedList", "args", ")", "{", "}", "/", "/", "params", "resource", "loader", ":", "off", "by", "default", "Boolean", "prle", "=", "args", ".", "getBooleanArg", "(", "PARAMS_RESOURCE_LOADER_ENABLED", ")", ";", "Boolean", "prle", "=", "Boolean", ".", "getBoolean", "(", "PARAMS_RESOURCE_LOADER_ENABLED", ")", ";", "paramsResourceLoaderEnabled", "=", "(", "null", "=", "=", "prle", "?", "false", ":", "prle", ")", ";", "/", "/", "solr", "resource", "loader", ":", "on", "by", "default", "Boolean", "srle", "=", "args", ".", "getBooleanArg", "(", "SOLR_RESOURCE_LOADER_ENABLED", ")", ";", "solrResourceLoaderEnabled", "=", "(", "null", "=", "=", "srle", "?", "true", ":", "srle", ")", ";", "/", "/", "solr", "resource", "loader", ":", "off", "by", "default", "Boolean", "srle", "=", "Boolean", ".", "getBoolean", "(", "SOLR_RESOURCE_LOADER_ENABLED", ")", ";", "solrResourceLoaderEnabled", "=", "(", "null", "=", "=", "srle", "?", "false", ":", "srle", ")", ";", "initPropertiesFileName", "=", "(", "String", ")", "args", ".", "get", "(", "PROPERTIES_FILE", ")", ";", "@", "@", "-", "27", ",", "16", "+", "27", ",", "25", "@", "@", "import", "org", ".", "apache", ".", "solr", ".", "response", ".", "SolrParamResourceLoader", ";", "import", "org", ".", "apache", ".", "solr", ".", "response", ".", "SolrQueryResponse", ";", "import", "org", ".", "apache", ".", "solr", ".", "response", ".", "VelocityResponseWriter", ";", "import", "org", ".", "junit", ".", "AfterClass", ";", "import", "org", ".", "junit", ".", "BeforeClass", ";", "import", "org", ".", "junit", ".", "Test", ";", "public", "class", "VelocityResponseWriterTest", "extends", "SolrTestCaseJ4", "{", "@", "BeforeClass", "public", "static", "void", "beforeClass", "(", ")", "throws", "Exception", "{", "System", ".", "setProperty", "(", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ",", "\"", "true", "\"", ");", "System", ".", "setProperty", "(", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ",", "\"", "true", "\"", ");", "initCore", "(", "\"", "solrconfig", ".", "xml", "\"", ",", "\"", "schema", ".", "xml", "\"", ",", "getFile", "(", "\"", "velocity", "/", "solr", "\"", ").", "getAbsolutePath", "(", "))", ";", "System", ".", "out", ".", "println", "(", "getFile", "(", "\"", "velocity", "/", "solr", "\"", ").", "getAbsolutePath", "(", "))", ";", "}", "@", "AfterClass", "public", "static", "void", "afterClass", "(", ")", "throws", "Exception", "{", "System", ".", "clearProperty", "(", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ");", "System", ".", "clearProperty", "(", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ");", "}", "@", "Test", "public", "void", "testVelocityResponseWriterRegistered", "(", ")", "{", "QueryResponseWriter", "writer", "=", "h", ".", "getCore", "(", ").", "getQueryResponseWriter", "(", "\"", "velocity", "\"", ");", "@", "@", "-", "81", ",", "8", "+", "81", ",", "6", "@", "@", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "contrib", "/", "langid", "/", "lib", "/", "\"", "regex", "=", "\".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "langid", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "contrib", "/", "velocity", "/", "lib", "\"", "regex", "=", "\".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "velocity", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "ltr", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "!-", "-", "an", "exact", "'", "path", "'", "can", "be", "used", "instead", "of", "a", "'", "dir", "'", "to", "specify", "a", "@", "@", "-", "780", ",", "7", "+", "778", ",", "7", "@", "@", "(", "SearchHandler", ")", "can", "be", "registered", "multiple", "times", "with", "different", "names", "(", "and", "different", "init", "parameters", ")", "-", "->", "<", "requestHandler", "name", "=", "\"/", "browse", "\"", "class", "=", "\"", "solr", ".", "SearchHandler", "\"", "useParams", "=", "\"", "query", ",", "facets", ",", "velocity", ",", "browse", "\"", ">", "<", "requestHandler", "name", "=", "\"/", "browse", "\"", "class", "=", "\"", "solr", ".", "SearchHandler", "\"", "useParams", "=", "\"", "query", ",", "facets", ",", "browse", "\"", ">", "<", "lst", "name", "=", "\"", "defaults", "\"", ">", "<", "str", "name", "=", "\"", "echoParams", "\"", ">", "explicit", "<", "/", "str", ">", "<", "/", "lst", ">", "@", "@", "-", "1292", ",", "15", "+", "1290", ",", "6", "@", "@", "<", "/", "queryResponseWriter", ">", "-", "->", "<", "!", "Custom", "response", "writers", "can", "be", "declared", "as", "needed", ".", "..", "-", "->", "<", "queryResponseWriter", "name", "=", "\"", "velocity", "\"", "class", "=", "\"", "solr", ".", "VelocityResponseWriter", "\"", "startup", "=", "\"", "lazy", "\"", ">", "<", "str", "name", "=", "\"", "template", ".", "base", ".", "dir", "\"", ">$", "{", "velocity", ".", "template", ".", "base", ".", "dir", ":", "}<", "/", "str", ">", "<", "str", "name", "=", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ">$", "{", "velocity", ".", "solr", ".", "resource", ".", "loader", ".", "enabled", ":", "true", "}", "</", "str", ">", "<", "str", "name", "=", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ">$", "{", "velocity", ".", "params", ".", "resource", ".", "loader", ".", "enabled", ":", "false", "}", "</", "str", ">", "<", "/", "queryResponseWriter", ">", "<", "!-", "-", "XSLT", "response", "writer", "transforms", "the", "XML", "output", "by", "any", "xslt", "file", "found", "in", "Solr", "'", "s", "conf", "/", "xslt", "directory", ".", "Changes", "to", "xslt", "files", "are", "checked", "for", "every", "xsltCacheLifetimeSeconds", ".", "@", "@", "-", "81", ",", "8", "+", "81", ",", "6", "@", "@", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "contrib", "/", "langid", "/", "lib", "/", "\"", "regex", "=", "\".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "langid", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "contrib", "/", "velocity", "/", "lib", "\"", "regex", "=", "\".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "velocity", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "lib", "dir", "=", "\"$", "{", "solr", ".", "install", ".", "dir", ":", "..", "/.", "./", "..", "/.", ".}", "/", "dist", "/", "\"", "regex", "=", "\"", "solr", "-", "ltr", "-", "\\", "d", ".", "*\\", ".", "jar", "\"", "/", ">", "<", "!-", "-", "an", "exact", "'", "path", "'", "can", "be", "used", "instead", "of", "a", "'", "dir", "'", "to", "specify", "a", "@", "@", "-", "780", ",", "7", "+", "778", ",", "7", "@", "@", "(", "SearchHandler", ")", "can", "be", "registered", "multiple", "times", "with", "different", "names", "(", "and", "different", "init", "parameters", ")", "-", "->", "<", "requestHandler", "name", "=", "\"/", "browse", "\"", "class", "=", "\"", "solr", ".", "SearchHandler", "\"", "useParams", "=", "\"", "query", ",", "facets", ",", "velocity", ",", "browse", "\"", ">", "<", "requestHandler", "name", "=", "\"/", "browse", "\"", "class", "=", "\"", "solr", ".", "SearchHandler", "\"", "useParams", "=", "\"", "query", ",", "facets", ",", "browse", "\"", ">", "<", "lst", "name", "=", "\"", "defaults", "\"", ">", "<", "str", "name", "=", "\"", "echoParams", "\"", ">", "explicit", "<", "/", "str", ">", "<", "/", "lst", ">", "@", "@", "-", "1292", ",", "15", "+", "1290", ",", "6", "@", "@", "<", "/", "queryResponseWriter", ">", "-", "->", "<", "!", "Custom", "response", "writers", "can", "be", "declared", "as", "needed", ".", "..", "-", "->", "<", "queryResponseWriter", "name", "=", "\"", "velocity", "\"", "class", "=", "\"", "solr", ".", "VelocityResponseWriter", "\"", "startup", "=", "\"", "lazy", "\"", ">", "<", "str", "name", "=", "\"", "template", ".", "base", ".", "dir", "\"", ">$", "{", "velocity", ".", "template", ".", "base", ".", "dir", ":", "}<", "/", "str", ">", "<", "str", "name", "=", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ">$", "{", "velocity", ".", "solr", ".", "resource", ".", "loader", ".", "enabled", ":", "true", "}", "</", "str", ">", "<", "str", "name", "=", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ">$", "{", "velocity", ".", "params", ".", "resource", ".", "loader", ".", "enabled", ":", "false", "}", "</", "str", ">", "<", "/", "queryResponseWriter", ">", "<", "!-", "-", "XSLT", "response", "writer", "transforms", "the", "XML", "output", "by", "any", "xslt", "file", "found", "in", "Solr", "'", "s", "conf", "/", "xslt", "directory", ".", "Changes", "to", "xslt", "files", "are", "checked", "for", "every", "xsltCacheLifetimeSeconds", ".", "@", "@", "-", "27", ",", "25", "+", "27", ",", "18", "@", "@", "Its", "JAR", "and", "dependencies", "must", "be", "added", "(", "via", "`", "<", "lib", ">", "`", "or", "solr", "/", "home", "lib", "inclusion", ")", ",", "<", "!-", "-", "<", "str", "name", "=", "\"", "init", ".", "properties", ".", "file", "\"", ">", "velocity", "-", "init", ".", "properties", "<", "/", "str", ">", "<", "bool", "name", "=", "\"", "params", ".", "resource", ".", "loader", ".", "enabled", "\"", ">", "true", "<", "/", "bool", ">", "<", "bool", "name", "=", "\"", "solr", ".", "resource", ".", "loader", ".", "enabled", "\"", ">", "false", "<", "/", "bool", ">", "<", "lst", "name", "=", "\"", "tools", "\"", ">", "<", "str", "name", "=", "\"", "mytool", "\"", ">", "com", ".", "example", ".", "MyCustomTool", "<", "/", "str", ">", "<", "/", "lst", ">", "-", "->", "<", "/", "queryResponseWriter", ">", "The", "above", "example", "shows", "the", "optional", "initialization", "and", "custom", "tool", "parameters", "used", "by", "VelocityResponseWriter", ";", "these", "are", "detailed", "in", "the", "following", "table", ".", "These", "initialization", "parameters", "are", "only", "specified", "in", "the", "writer", "registration", "in", "`", "solrconfig", ".", "xml", "`", ",", "not", "as", "request", "-", "time", "parameters", ".", "See", "further", "below", "for", "request", "-", "time", "parameters", ".", "The", "above", "example", "shows", "the", "optional", "initialization", "and", "custom", "tool", "parameters", "used", "by", "VelocityResponseWriter", ";", "these", "are", "detailed", "in", "the", "following", "table", ".", "These", "initialization", "parameters", "are", "only", "specified", "in", "the", "writer", "registration", "in", "`", "solrconfig", ".", "xml", "`", ",", "not", "as", "request", "-", "time", "parameters", ".", "In", "this", "example", ",", "all", "Solr", "nodes", "should", "be", "started", "with", "`", "-", "Dparams", ".", "resource", ".", "loader", ".", "enabled", "=", "true", "`", ".", "See", "further", "below", "for", "request", "-", "time", "parameters", ".", "=", "=", "Configuration", "&", "Usage", "=", "==", "VelocityResponseWriter", "Initialization", "Parameters", "`", "template", ".", "base", ".", "dir", "`", "::", "If", "specified", "and", "exists", "as", "a", "file", "system", "directory", ",", "a", "file", "resource", "loader", "will", "be", "added", "for", "this", "directory", ".", "Templates", "in", "this", "directory", "will", "override", "\"", "solr", "\"", "resource", "loader", "templates", ".", "`", "init", ".", "properties", ".", "file", "`", "::", "Specifies", "a", "properties", "file", "name", "which", "must", "exist", "in", "the", "Solr", "`", "conf", "/", "`", "directory", "(", "*", "not", "*", "under", "a", "`", "velocity", "/", "`", "subdirectory", ")", "or", "root", "of", "a", "JAR", "file", "in", "a", "<", "lib", ">", ".", "=", "==", "VelocityResponseWriter", "Startup", "Parameters", "`", "params", ".", "resource", ".", "loader", ".", "enabled", "`", "::", "The", "\"", "params", "\"", "resource", "loader", "allows", "templates", "to", "be", "specified", "in", "Solr", "request", "parameters", ".", "For", "example", ":", "@", "@", "-", "58", ",", "6", "+", "51", ",", "13", "@", "@", "where", "`", "v", ".", "template", "=", "custom", "`", "says", "to", "render", "a", "template", "called", "\"", "custom", "\"", "and", "the", "valu", "`", "solr", ".", "resource", ".", "loader", ".", "enabled", "`", "::", "The", "\"", "solr", "\"", "resource", "loader", "is", "the", "only", "template", "loader", "registered", "by", "default", ".", "Templates", "are", "served", "from", "resources", "visible", "to", "the", "SolrResourceLoader", "under", "a", "`", "velocity", "/", "`", "subdirectory", ".", "The", "VelocityResponseWriter", "itself", "has", "some", "built", "-", "in", "templates", "(", "in", "its", "JAR", "file", ",", "under", "`", "velocity", "/", "`)", "that", "are", "available", "automatically", "through", "this", "loader", ".", "These", "built", "-", "in", "templates", "can", "be", "overridden", "when", "the", "same", "template", "name", "is", "in", "conf", "/", "velocity", "/", "or", "by", "using", "the", "`", "template", ".", "base", ".", "dir", "`", "option", ".", "=", "==", "VelocityResponseWriter", "Initialization", "Parameters", "`", "template", ".", "base", ".", "dir", "`", "::", "If", "specified", "and", "exists", "as", "a", "file", "system", "directory", ",", "a", "file", "resource", "loader", "will", "be", "added", "for", "this", "directory", ".", "Templates", "in", "this", "directory", "will", "override", "\"", "solr", "\"", "resource", "loader", "templates", ".", "`", "init", ".", "properties", ".", "file", "`", "::", "Specifies", "a", "properties", "file", "name", "which", "must", "exist", "in", "the", "Solr", "`", "conf", "/", "`", "directory", "(", "*", "not", "*", "under", "a", "`", "velocity", "/", "`", "subdirectory", ")", "or", "root", "of", "a", "JAR", "file", "in", "a", "<", "lib", ">", ".", "`", "tools", "`", "::", "External", "\"", "tools", "\"", "can", "be", "specified", "as", "list", "of", "string", "name", "/", "value", "(", "tool", "name", "/", "class", "name", ")", "pairs", ".", "Tools", ",", "in", "the", "Velocity", "context", ",", "are", "simply", "Java", "objects", ".", "Tool", "classes", "are", "constructed", "using", "a", "no", "-", "arg", "constructor", "(", "or", "a", "single", "-", "SolrCore", "-", "arg", "constructor", "if", "it", "exists", ")", "and", "added", "to", "the", "Velocity", "context", "with", "the", "specified", "name", "."], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "51", ",", "6", "+", "51", ",", "7", "@", "@", "import", "javax", ".", "annotation", ".", "Nullable", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "nio", ".", "file", ".", "Files", ";", "import", "java", ".", "nio", ".", "file", ".", "Path", ";", "@", "@", "-", "138", ",", "9", "+", "139", ",", "11", "@", "@", "protected", "void", "channelRead0", "(", "final", "ChannelHandlerContext", "ctx", ",", "final", "HttpObject", "ms", "final", "DiskFileUpload", "fileUpload", "=", "(", "DiskFileUpload", ")", "data", ";", "checkState", "(", "fileUpload", ".", "isCompleted", "(", "))", ";", "final", "Path", "dest", "=", "currentUploadDir", ".", "resolve", "(", "fileUpload", ".", "getFilename", "(", "))", ";", "/", "/", "wrapping", "around", "another", "File", "instantiation", "is", "a", "simple", "way", "to", "remove", "any", "path", "information", "-", "we", "'", "re", "/", "/", "solely", "interested", "in", "the", "filename", "final", "Path", "dest", "=", "currentUploadDir", ".", "resolve", "(", "new", "File", "(", "fileUpload", ".", "getFilename", "(", "))", ".", "getName", "(", "))", ";", "fileUpload", ".", "renameTo", "(", "dest", ".", "toFile", "(", "))", ";", "LOG", ".", "trace", "(", "\"", "Upload", "of", "file", "{", "}", "complete", ".", "\",", "fileUpload", ".", "getFilename", "(", "))", ";", "LOG", ".", "trace", "(", "\"", "Upload", "of", "file", "{", "}", "into", "destination", "{", "}", "complete", ".", "\",", "fileUpload", ".", "getFilename", "(", "),", "dest", ".", "toString", "(", "))", ";", "}", "else", "if", "(", "data", ".", "getHttpDataType", "(", ")", "=", "=", "InterfaceHttpData", ".", "HttpDataType", ".", "Attribute", ")", "{", "final", "Attribute", "request", "=", "(", "Attribute", ")", "data", ";", "/", "/", "this", "could", "also", "be", "implemented", "by", "using", "the", "first", "found", "Attribute", "as", "the", "payload", "@", "@", "-", "19", ",", "9", "+", "19", ",", "15", "@", "@", "package", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "io", ".", "network", ".", "netty", ".", "NettyLeakDetectionResource", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "handler", ".", "HandlerRequest", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "MessageHeaders", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "MessageParameters", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "RequestBody", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "util", ".", "RestMapperUtils", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "webmonitor", ".", "RestfulGateway", ";", "import", "org", ".", "apache", ".", "flink", ".", "util", ".", "FileUtils", ";", "import", "org", ".", "apache", ".", "flink", ".", "util", ".", "TestLogger", ";", "import", "org", ".", "apache", ".", "flink", ".", "util", ".", "function", ".", "BiConsumerWithException", ";", "import", "org", ".", "apache", ".", "flink", ".", "shaded", ".", "jackson2", ".", "com", ".", "fasterxml", ".", "jackson", ".", "databind", ".", "ObjectMapper", ";", "import", "org", ".", "apache", ".", "flink", ".", "shaded", ".", "netty4", ".", "io", ".", "netty", ".", "handler", ".", "codec", ".", "http", ".", "HttpResponseStatus", ";", "@", "@", "-", "31", ",", "17", "+", "37", ",", "27", "@", "@", "import", "okhttp3", ".", "OkHttpClient", ";", "import", "okhttp3", ".", "Request", ";", "import", "okhttp3", ".", "Response", ";", "import", "org", ".", "junit", ".", "After", ";", "import", "org", ".", "junit", ".", "ClassRule", ";", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "StringWriter", ";", "import", "java", ".", "lang", ".", "reflect", ".", "Field", ";", "import", "java", ".", "nio", ".", "file", ".", "Path", ";", "import", "java", ".", "util", ".", "ArrayList", ";", "import", "java", ".", "util", ".", "Comparator", ";", "import", "java", ".", "util", ".", "Iterator", ";", "import", "java", ".", "util", ".", "LinkedHashSet", ";", "import", "java", ".", "util", ".", "List", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "SortedMap", ";", "import", "java", ".", "util", ".", "TreeMap", ";", "import", "java", ".", "util", ".", "concurrent", ".", "TimeUnit", ";", "import", "java", ".", "util", ".", "stream", ".", "Collectors", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertArrayEquals", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertEquals", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "fail", ";", "@", "@", "-", "52", ",", "70", "+", "68", ",", "74", "@", "@", "*", "/", "public", "class", "FileUploadHandlerTest", "extends", "TestLogger", "{", "@", "ClassRule", "public", "static", "final", "MultipartUploadResource", "MULTIPART_UPLOAD_RESOURCE", "=", "new", "MultipartUploadResource", "(", ");", "@", "Rule", "public", "final", "MultipartUploadResource", "multipartUpdateResource", "=", "new", "MultipartUploadResource", "(", ");", "private", "static", "final", "ObjectMapper", "OBJECT_MAPPER", "=", "RestMapperUtils", ".", "getStrictObjectMapper", "(", ");", "@", "ClassRule", "public", "static", "final", "NettyLeakDetectionResource", "LEAK_DETECTION", "=", "new", "NettyLeakDetectionResource", "(", ");", "@", "After", "public", "void", "reset", "(", ")", "{", "MULTIPART_UPLOAD_RESOURCE", ".", "resetState", "(", ");", "}", "private", "static", "Request", "buildMalformedRequest", "(", "String", "headerUrl", ")", "{", "private", "Request", "buildMalformedRequest", "(", "String", "headerUrl", ")", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addFilePart", "(", "builder", ")", ";", "/", "/", "this", "causes", "a", "failure", "in", "the", "FileUploadHandler", "since", "the", "request", "should", "only", "contain", "form", "-", "data", "builder", "=", "builder", ".", "addPart", "(", "okhttp3", ".", "RequestBody", ".", "create", "(", "MediaType", ".", "parse", "(", "\"", "text", "/", "plain", "\"", "),", "\"", "crash", "\"", "))", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "static", "Request", "buildMixedRequestWithUnknownAttribute", "(", "String", "headerUrl", ")", "throws", "IOException", "{", "private", "Request", "buildMixedRequestWithUnknownAttribute", "(", "String", "headerUrl", ")", "throws", "IOException", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addJsonPart", "(", "builder", ",", "new", "MultipartUploadResource", ".", "TestRequestBody", "(", "),", "\"", "hello", "\"", ");", "builder", "=", "addFilePart", "(", "builder", ")", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "static", "Request", "buildFileRequest", "(", "String", "headerUrl", ")", "{", "private", "Request", "buildRequestWithCustomFilenames", "(", "String", "headerUrl", ",", "String", "filename1", ",", "String", "filename2", ")", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addFilePart", "(", "builder", ",", "multipartUpdateResource", ".", "file1", ",", "filename1", ")", ";", "builder", "=", "addFilePart", "(", "builder", ",", "multipartUpdateResource", ".", "file2", ",", "filename2", ")", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "Request", "buildFileRequest", "(", "String", "headerUrl", ")", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addFilePart", "(", "builder", ")", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "static", "Request", "buildJsonRequest", "(", "String", "headerUrl", ",", "MultipartUploadResource", ".", "TestRequestBody", "json", ")", "throws", "IOException", "{", "private", "Request", "buildJsonRequest", "(", "String", "headerUrl", ",", "MultipartUploadResource", ".", "TestRequestBody", "json", ")", "throws", "IOException", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addJsonPart", "(", "builder", ",", "json", ",", "FileUploadHandler", ".", "HTTP_ATTRIBUTE_REQUEST", ")", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "static", "Request", "buildMixedRequest", "(", "String", "headerUrl", ",", "MultipartUploadResource", ".", "TestRequestBody", "json", ")", "throws", "IOException", "{", "private", "Request", "buildMixedRequest", "(", "String", "headerUrl", ",", "MultipartUploadResource", ".", "TestRequestBody", "json", ")", "throws", "IOException", "{", "MultipartBody", ".", "Builder", "builder", "=", "new", "MultipartBody", ".", "Builder", "(", ");", "builder", "=", "addJsonPart", "(", "builder", ",", "json", ",", "FileUploadHandler", ".", "HTTP_ATTRIBUTE_REQUEST", ")", ";", "builder", "=", "addFilePart", "(", "builder", ")", ";", "return", "finalizeRequest", "(", "builder", ",", "headerUrl", ")", ";", "}", "private", "static", "Request", "finalizeRequest", "(", "MultipartBody", ".", "Builder", "builder", ",", "String", "headerUrl", ")", "{", "private", "Request", "finalizeRequest", "(", "MultipartBody", ".", "Builder", "builder", ",", "String", "headerUrl", ")", "{", "MultipartBody", "multipartBody", "=", "builder", ".", "setType", "(", "MultipartBody", ".", "FORM", ")", ".", "build", "(", ");", "return", "new", "Request", ".", "Builder", "(", ")", ".", "url", "(", "MULTIPART_UPLOAD_RESOURCE", ".", "serverAddress", "+", "headerUrl", ")", ".", "url", "(", "multipartUpdateResource", ".", "serverAddress", "+", "headerUrl", ")", ".", "post", "(", "multipartBody", ")", ".", "build", "(", ");", "}", "private", "static", "MultipartBody", ".", "Builder", "addFilePart", "(", "MultipartBody", ".", "Builder", "builder", ")", "{", "for", "(", "File", "file", ":", "MULTIPART_UPLOAD_RESOURCE", ".", "getFilesToUpload", "(", "))", "{", "okhttp3", ".", "RequestBody", "filePayload", "=", "okhttp3", ".", "RequestBody", ".", "create", "(", "MediaType", ".", "parse", "(", "\"", "application", "/", "octet", "-", "stream", "\"", "),", "file", ")", ";", "private", "MultipartBody", ".", "Builder", "addFilePart", "(", "final", "MultipartBody", ".", "Builder", "builder", ")", "{", "multipartUpdateResource", ".", "getFilesToUpload", "(", ").", "forEach", "(", "f", "-", ">", "addFilePart", "(", "builder", ",", "f", ",", "f", ".", "getName", "(", "))", ");", "return", "builder", ";", "}", "builder", "=", "builder", ".", "addFormDataPart", "(", "file", ".", "getName", "(", "),", "file", ".", "getName", "(", "),", "filePayload", ")", ";", "}", "private", "static", "MultipartBody", ".", "Builder", "addFilePart", "(", "MultipartBody", ".", "Builder", "builder", ",", "File", "file", ",", "String", "filename", ")", "{", "okhttp3", ".", "RequestBody", "filePayload", "=", "okhttp3", ".", "RequestBody", ".", "create", "(", "MediaType", ".", "parse", "(", "\"", "application", "/", "octet", "-", "stream", "\"", "),", "file", ")", ";", "builder", "=", "builder", ".", "addFormDataPart", "(", "file", ".", "getName", "(", "),", "filename", ",", "filePayload", ")", ";", "return", "builder", ";", "}", "@", "@", "-", "133", ",", "9", "+", "153", ",", "9", "@", "@", "private", "static", "Request", "finalizeRequest", "(", "MultipartBody", ".", "Builder", "builder", ",", "String", "hea", "public", "void", "testUploadDirectoryRegeneration", "(", ")", "throws", "Exception", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "MultipartUploadResource", ".", "MultipartFileHandler", "fileHandler", "=", "MULTIPART_UPLOAD_RESOURCE", ".", "getFileHandler", "(", ");", "MultipartUploadResource", ".", "MultipartFileHandler", "fileHandler", "=", "multipartUpdateResource", ".", "getFileHandler", "(", ");", "FileUtils", ".", "deleteDirectory", "(", "MULTIPART_UPLOAD_RESOURCE", ".", "getUploadDirectory", "(", ").", "toFile", "(", "))", ";", "FileUtils", ".", "deleteDirectory", "(", "multipartUpdateResource", ".", "getUploadDirectory", "(", ").", "toFile", "(", "))", ";", "Request", "fileRequest", "=", "buildFileRequest", "(", "fileHandler", ".", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "))", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "fileRequest", ")", ".", "execute", "(", "))", "{", "@", "@", "-", "149", ",", "7", "+", "169", ",", "7", "@", "@", "public", "void", "testUploadDirectoryRegeneration", "(", ")", "throws", "Exception", "{", "public", "void", "testMixedMultipart", "(", ")", "throws", "Exception", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "MultipartUploadResource", ".", "MultipartMixedHandler", "mixedHandler", "=", "MULTIPART_UPLOAD_RESOURCE", ".", "getMixedHandler", "(", ");", "MultipartUploadResource", ".", "MultipartMixedHandler", "mixedHandler", "=", "multipartUpdateResource", ".", "getMixedHandler", "(", ");", "Request", "jsonRequest", "=", "buildJsonRequest", "(", "mixedHandler", ".", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "),", "new", "MultipartUploadResource", ".", "TestRequestBody", "(", "))", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "jsonRequest", ")", ".", "execute", "(", "))", "{", "@", "@", "-", "177", ",", "7", "+", "197", ",", "7", "@", "@", "public", "void", "testMixedMultipart", "(", ")", "throws", "Exception", "{", "public", "void", "testJsonMultipart", "(", ")", "throws", "Exception", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "MultipartUploadResource", ".", "MultipartJsonHandler", "jsonHandler", "=", "MULTIPART_UPLOAD_RESOURCE", ".", "getJsonHandler", "(", ");", "MultipartUploadResource", ".", "MultipartJsonHandler", "jsonHandler", "=", "multipartUpdateResource", ".", "getJsonHandler", "(", ");", "MultipartUploadResource", ".", "TestRequestBody", "json", "=", "new", "MultipartUploadResource", ".", "TestRequestBody", "(", ");", "Request", "jsonRequest", "=", "buildJsonRequest", "(", "jsonHandler", ".", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "),", "json", ")", ";", "@", "@", "-", "205", ",", "7", "+", "225", ",", "7", "@", "@", "public", "void", "testJsonMultipart", "(", ")", "throws", "Exception", "{", "public", "void", "testFileMultipart", "(", ")", "throws", "Exception", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "MultipartUploadResource", ".", "MultipartFileHandler", "fileHandler", "=", "MULTIPART_UPLOAD_RESOURCE", ".", "getFileHandler", "(", ");", "MultipartUploadResource", ".", "MultipartFileHandler", "fileHandler", "=", "multipartUpdateResource", ".", "getFileHandler", "(", ");", "Request", "jsonRequest", "=", "buildJsonRequest", "(", "fileHandler", ".", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "),", "new", "MultipartUploadResource", ".", "TestRequestBody", "(", "))", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "jsonRequest", ")", ".", "execute", "(", "))", "{", "@", "@", "-", "231", ",", "11", "+", "251", ",", "12", "@", "@", "public", "void", "testFileMultipart", "(", ")", "throws", "Exception", "{", "public", "void", "testUploadCleanupOnUnknownAttribute", "(", ")", "throws", "IOException", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "Request", "request", "=", "buildMixedRequestWithUnknownAttribute", "(", "MULTIPART_UPLOAD_RESOURCE", ".", "getMixedHandler", "(", ").", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "))", ";", "Request", "request", "=", "buildMixedRequestWithUnknownAttribute", "(", "multipartUpdateResource", ".", "getMixedHandler", "(", ").", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "))", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "request", ")", ".", "execute", "(", "))", "{", "assertEquals", "(", "HttpResponseStatus", ".", "BAD_REQUEST", ".", "code", "(", "),", "response", ".", "code", "(", "))", ";", "}", "MULTIPART_UPLOAD_RESOURCE", ".", "assertUploadDirectoryIsEmpty", "(", ");", "multipartUpdateResource", ".", "assertUploadDirectoryIsEmpty", "(", ");", "verifyNoFileIsRegisteredToDeleteOnExitHook", "(", ");", "}", "@", "@", "-", "247", ",", "16", "+", "268", ",", "117", "@", "@", "public", "void", "testUploadCleanupOnUnknownAttribute", "(", ")", "throws", "IOException", "{", "public", "void", "testUploadCleanupOnFailure", "(", ")", "throws", "IOException", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "Request", "request", "=", "buildMalformedRequest", "(", "MULTIPART_UPLOAD_RESOURCE", ".", "getMixedHandler", "(", ").", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "))", ";", "Request", "request", "=", "buildMalformedRequest", "(", "multipartUpdateResource", ".", "getMixedHandler", "(", ").", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "))", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "request", ")", ".", "execute", "(", "))", "{", "/", "/", "decoding", "errors", "aren", "'", "t", "handled", "separately", "by", "the", "FileUploadHandler", "assertEquals", "(", "HttpResponseStatus", ".", "INTERNAL_SERVER_ERROR", ".", "code", "(", "),", "response", ".", "code", "(", "))", ";", "}", "MULTIPART_UPLOAD_RESOURCE", ".", "assertUploadDirectoryIsEmpty", "(", ");", "multipartUpdateResource", ".", "assertUploadDirectoryIsEmpty", "(", ");", "verifyNoFileIsRegisteredToDeleteOnExitHook", "(", ");", "}", "@", "Test", "public", "void", "testFileUploadUsingCustomFilename", "(", ")", "throws", "IOException", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "String", "customFilename1", "=", "\"", "different", "-", "name", "-", "1", ".", "jar", "\"", ";", "String", "customFilename2", "=", "\"", "different", "-", "name", "-", "2", ".", "jar", "\"", ";", "multipartUpdateResource", ".", "setFileUploadVerifier", "(", "new", "CustomFilenameVerifier", "(", "customFilename1", ",", "multipartUpdateResource", ".", "file1", ".", "toPath", "(", "),", "customFilename2", ",", "multipartUpdateResource", ".", "file2", ".", "toPath", "(", "))", ");", "MessageHeaders", "<", "?,", "?", ",", "?", ">", "messageHeaders", "=", "multipartUpdateResource", ".", "getFileHandler", "(", ").", "getMessageHeaders", "(", ");", "Request", "request", "=", "buildRequestWithCustomFilenames", "(", "messageHeaders", ".", "getTargetRestEndpointURL", "(", "),", "customFilename1", ",", "customFilename2", ")", ";", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "request", ")", ".", "execute", "(", "))", "{", "assertEquals", "(", "messageHeaders", ".", "getResponseStatusCode", "(", ").", "code", "(", "),", "response", ".", "code", "(", "))", ";", "}", "verifyNoFileIsRegisteredToDeleteOnExitHook", "(", ");", "}", "@", "Test", "public", "void", "testFileUploadUsingCustomFilenameWithParentFolderPath", "(", ")", "throws", "IOException", "{", "OkHttpClient", "client", "=", "createOkHttpClientWithNoTimeouts", "(", ");", "String", "customFilename1", "=", "\"", "different", "-", "name", "-", "1", ".", "jar", "\"", ";", "String", "customFilename2", "=", "\"", "different", "-", "name", "-", "2", ".", "jar", "\"", ";", "multipartUpdateResource", ".", "setFileUploadVerifier", "(", "new", "CustomFilenameVerifier", "(", "customFilename1", ",", "multipartUpdateResource", ".", "file1", ".", "toPath", "(", "),", "customFilename2", ",", "multipartUpdateResource", ".", "file2", ".", "toPath", "(", "))", ");", "/", "/", "referring", "to", "the", "parent", "folder", "within", "the", "filename", "should", "be", "ignored", "MessageHeaders", "<", "?,", "?", ",", "?", ">", "messageHeaders", "=", "multipartUpdateResource", ".", "getFileHandler", "(", ").", "getMessageHeaders", "(", ");", "Request", "request", "=", "buildRequestWithCustomFilenames", "(", "multipartUpdateResource", ".", "getFileHandler", "(", ").", "getMessageHeaders", "(", ").", "getTargetRestEndpointURL", "(", "),", "String", ".", "format", "(", "\".", "./", "%", "s", "\"", ",", "customFilename1", ")", ",", "String", ".", "format", "(", "\".", "./", "%", "s", "\"", ",", "customFilename2", ")", ");", "try", "(", "Response", "response", "=", "client", ".", "newCall", "(", "request", ")", ".", "execute", "(", "))", "{", "assertEquals", "(", "messageHeaders", ".", "getResponseStatusCode", "(", ").", "code", "(", "),", "response", ".", "code", "(", "))", ";", "}", "verifyNoFileIsRegisteredToDeleteOnExitHook", "(", ");", "}", "private", "static", "class", "CustomFilenameVerifier", "implements", "BiConsumerWithException", "<", "HandlerRequest", "<", "?", "extends", "RequestBody", ",", "?", "extends", "MessageParameters", ">", ",", "RestfulGateway", ",", "Exception", ">", "{", "private", "final", "String", "customFilename1", ";", "private", "final", "Path", "fileContent1", ";", "private", "final", "String", "customFilename2", ";", "private", "final", "Path", "fileContent2", ";", "public", "CustomFilenameVerifier", "(", "String", "customFilename1", ",", "Path", "fileContent1", ",", "String", "customFilename2", ",", "Path", "fileContent2", ")", "{", "this", ".", "customFilename1", "=", "customFilename1", ";", "this", ".", "fileContent1", "=", "fileContent1", ";", "this", ".", "customFilename2", "=", "customFilename2", ";", "this", ".", "fileContent2", "=", "fileContent2", ";", "}", "@", "Override", "public", "void", "accept", "(", "HandlerRequest", "<", "?", "extends", "RequestBody", ",", "?", "extends", "MessageParameters", ">", "request", ",", "RestfulGateway", "restfulGateway", ")", "throws", "Exception", "{", "List", "<", "Path", ">", "uploadedFiles", "=", "request", ".", "getUploadedFiles", "(", ").", "stream", "(", ").", "map", "(", "File", ":", ":", "toPath", ")", ".", "collect", "(", "Collectors", ".", "toList", "(", "))", ";", "List", "<", "Path", ">", "actualList", "=", "new", "ArrayList", "<", ">(", "uploadedFiles", ")", ";", "actualList", ".", "sort", "(", "Comparator", ".", "comparing", "(", "Path", ":", ":", "toString", ")", ");", "SortedMap", "<", "String", ",", "Path", ">", "expectedFilenamesAndContent", "=", "new", "TreeMap", "<", ">(", ");", "expectedFilenamesAndContent", ".", "put", "(", "customFilename1", ",", "fileContent1", ")", ";", "expectedFilenamesAndContent", ".", "put", "(", "customFilename2", ",", "fileContent2", ")", ";", "assertEquals", "(", "expectedFilenamesAndContent", ".", "size", "(", "),", "uploadedFiles", ".", "size", "(", "))", ";", "Iterator", "<", "Path", ">", "uploadedFileIterator", "=", "actualList", ".", "iterator", "(", ");", "for", "(", "Map", ".", "Entry", "<", "String", ",", "Path", ">", "expectedFilenameAndContent", ":", "expectedFilenamesAndContent", ".", "entrySet", "(", "))", "{", "String", "expectedFilename", "=", "expectedFilenameAndContent", ".", "getKey", "(", ");", "Path", "expectedContent", "=", "expectedFilenameAndContent", ".", "getValue", "(", ");", "assertTrue", "(", "uploadedFileIterator", ".", "hasNext", "(", "))", ";", "Path", "actual", "=", "uploadedFileIterator", ".", "next", "(", ");", "assertEquals", "(", "expectedFilename", ",", "actual", ".", "getFileName", "(", ").", "toString", "(", "))", ";", "byte", "[", "]", "originalContent", "=", "java", ".", "nio", ".", "file", ".", "Files", ".", "readAllBytes", "(", "expectedContent", ")", ";", "byte", "[", "]", "receivedContent", "=", "java", ".", "nio", ".", "file", ".", "Files", ".", "readAllBytes", "(", "actual", ")", ";", "assertArrayEquals", "(", "originalContent", ",", "receivedContent", ")", ";", "}", "}", "}", "private", "OkHttpClient", "createOkHttpClientWithNoTimeouts", "(", ")", "{", "/", "/", "don", "'", "t", "fail", "if", "some", "OkHttpClient", "operations", "take", "longer", ".", "See", "FLINK", "-", "17725", "return", "new", "OkHttpClient", ".", "Builder", "(", ")", "@", "@", "-", "29", ",", "12", "+", "29", ",", "14", "@", "@", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "EmptyRequestBody", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "EmptyResponseBody", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "MessageHeaders", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "MessageParameters", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "messages", ".", "RequestBody", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rest", ".", "util", ".", "TestRestServerEndpoint", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "rpc", ".", "RpcUtils", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "webmonitor", ".", "RestfulGateway", ";", "import", "org", ".", "apache", ".", "flink", ".", "runtime", ".", "webmonitor", ".", "retriever", ".", "GatewayRetriever", ";", "import", "org", ".", "apache", ".", "flink", ".", "util", ".", "Preconditions", ";", "import", "org", ".", "apache", ".", "flink", ".", "util", ".", "function", ".", "BiConsumerWithException", ";", "import", "org", ".", "apache", ".", "flink", ".", "shaded", ".", "jackson2", ".", "com", ".", "fasterxml", ".", "jackson", ".", "annotation", ".", "JsonCreator", ";", "import", "org", ".", "apache", ".", "flink", ".", "shaded", ".", "jackson2", ".", "com", ".", "fasterxml", ".", "jackson", ".", "annotation", ".", "JsonProperty", ";", "@", "@", "-", "90", ",", "6", "+", "92", ",", "8", "@", "@", "private", "Path", "configuredUploadDir", ";", "private", "BiConsumerWithException", "<", "HandlerRequest", "<", "?,", "?", ">,", "RestfulGateway", ",", "RestHandlerException", ">", "fileUploadVerifier", ";", "@", "Override", "public", "void", "before", "(", ")", "throws", "Exception", "{", "temporaryFolder", ".", "create", "(", ");", "@", "@", "-", "115", ",", "9", "+", "119", ",", "9", "@", "@", "public", "void", "before", "(", ")", "throws", "Exception", "{", "file2", "=", "temporaryFolder", ".", "newFile", "(", ");", "Files", ".", "write", "(", "file2", ".", "toPath", "(", "),", "\"", "world", "\"", ".", "getBytes", "(", "ConfigConstants", ".", "DEFAULT_CHARSET", ")", ");", "mixedHandler", "=", "new", "MultipartMixedHandler", "(", "mockGatewayRetriever", ",", "Arrays", ".", "asList", "(", "file1", ".", "toPath", "(", "),", "file2", ".", "toPath", "(", "))", ");", "mixedHandler", "=", "new", "MultipartMixedHandler", "(", "mockGatewayRetriever", ")", ";", "jsonHandler", "=", "new", "MultipartJsonHandler", "(", "mockGatewayRetriever", ")", ";", "fileHandler", "=", "new", "MultipartFileHandler", "(", "mockGatewayRetriever", ",", "Arrays", ".", "asList", "(", "file1", ".", "toPath", "(", "),", "file2", ".", "toPath", "(", "))", ");", "fileHandler", "=", "new", "MultipartFileHandler", "(", "mockGatewayRetriever", ")", ";", "serverEndpoint", "=", "TestRestServerEndpoint", ".", "builder", "(", "serverConfig", ")", ".", "withHandler", "(", "mixedHandler", ")", "@", "@", "-", "127", ",", "6", "+", "131", ",", "41", "@", "@", "public", "void", "before", "(", ")", "throws", "Exception", "{", "serverAddress", "=", "serverEndpoint", ".", "getRestBaseUrl", "(", ");", "serverSocketAddress", "=", "serverEndpoint", ".", "getServerAddress", "(", ");", "this", ".", "setFileUploadVerifier", "(", "(", "request", ",", "restfulGateway", ")", "-", ">", "{", "/", "/", "the", "default", "verifier", "checks", "for", "identiy", "(", "i", ".", "e", ".", "same", "name", "and", "content", ")", "of", "all", "uploaded", "files", "List", "<", "Path", ">", "expectedFiles", "=", "Arrays", ".", "asList", "(", "file1", ".", "toPath", "(", "),", "file2", ".", "toPath", "(", "))", ";", "List", "<", "Path", ">", "uploadedFiles", "=", "request", ".", "getUploadedFiles", "(", ").", "stream", "(", ").", "map", "(", "File", ":", ":", "toPath", ")", ".", "collect", "(", "Collectors", ".", "toList", "(", "))", ";", "assertEquals", "(", "expectedFiles", ".", "size", "(", "),", "uploadedFiles", ".", "size", "(", "))", ";", "List", "<", "Path", ">", "expectedList", "=", "new", "ArrayList", "<", ">(", "expectedFiles", ")", ";", "List", "<", "Path", ">", "actualList", "=", "new", "ArrayList", "<", ">(", "uploadedFiles", ")", ";", "expectedList", ".", "sort", "(", "Comparator", ".", "comparing", "(", "Path", ":", ":", "toString", ")", ");", "actualList", ".", "sort", "(", "Comparator", ".", "comparing", "(", "Path", ":", ":", "toString", ")", ");", "for", "(", "int", "x", "=", "0", ";", "x", "<", "expectedList", ".", "size", "(", ");", "x", "+", "+)", "{", "Path", "expected", "=", "expectedList", ".", "get", "(", "x", ")", ";", "Path", "actual", "=", "actualList", ".", "get", "(", "x", ")", ";", "assertEquals", "(", "expected", ".", "getFileName", "(", ").", "toString", "(", "),", "actual", ".", "getFileName", "(", ").", "toString", "(", "))", ";", "byte", "[", "]", "originalContent", "=", "Files", ".", "readAllBytes", "(", "expected", ")", ";", "byte", "[", "]", "receivedContent", "=", "Files", ".", "readAllBytes", "(", "actual", ")", ";", "assertArrayEquals", "(", "originalContent", ",", "receivedContent", ")", ";", "}", "}", ");", "}", "public", "void", "setFileUploadVerifier", "(", "BiConsumerWithException", "<", "HandlerRequest", "<", "?", "extends", "RequestBody", ",", "?", "extends", "MessageParameters", ">", ",", "RestfulGateway", ",", "Exception", ">", "verifier", ")", "{", "this", ".", "fileUploadVerifier", "=", "(", "request", ",", "restfulGateway", ")", "-", ">", "{", "try", "{", "verifier", ".", "accept", "(", "request", ",", "restfulGateway", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "return", "505", "to", "differentiate", "from", "common", "BAD_REQUEST", "responses", "in", "this", "test", "throw", "new", "RestHandlerException", "(", "\"", "Test", "verification", "failed", ".", "\",", "HttpResponseStatus", ".", "HTTP_VERSION_NOT_SUPPORTED", ",", "e", ")", ";", "}", "}", ";", "}", "public", "Collection", "<", "File", ">", "getFilesToUpload", "(", ")", "{", "@", "@", "-", "192", ",", "67", "+", "231", ",", "67", "@", "@", "public", "void", "assertUploadDirectoryIsEmpty", "(", ")", "throws", "IOException", "{", "/", "**", "*", "Handler", "that", "accepts", "a", "mixed", "request", "consisting", "of", "a", "{", "@", "link", "TestRequestBody", "}", "and", "{", "@", "link", "#", "file1", "}", "and", "{", "@", "link", "#", "file2", "}", ".", "*", "/", "public", "static", "class", "MultipartMixedHandler", "extends", "AbstractRestHandler", "<", "RestfulGateway", ",", "TestRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "private", "final", "Collection", "<", "Path", ">", "expectedFiles", ";", "public", "class", "MultipartMixedHandler", "extends", "AbstractRestHandler", "<", "RestfulGateway", ",", "TestRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "volatile", "TestRequestBody", "lastReceivedRequest", "=", "null", ";", "MultipartMixedHandler", "(", "GatewayRetriever", "<", "RestfulGateway", ">", "leaderRetriever", ",", "Collection", "<", "Path", ">", "expectedFiles", ")", "{", "MultipartMixedHandler", "(", "GatewayRetriever", "<", "RestfulGateway", ">", "leaderRetriever", ")", "{", "super", "(", "leaderRetriever", ",", "RpcUtils", ".", "INF_TIMEOUT", ",", "Collections", ".", "emptyMap", "(", "),", "MultipartMixedHeaders", ".", "INSTANCE", ")", ";", "this", ".", "expectedFiles", "=", "expectedFiles", ";", "}", "@", "Override", "protected", "CompletableFuture", "<", "EmptyResponseBody", ">", "handleRequest", "(", "@", "Nonnull", "HandlerRequest", "<", "TestRequestBody", ",", "EmptyMessageParameters", ">", "request", ",", "@", "Nonnull", "RestfulGateway", "gateway", ")", "throws", "RestHandlerException", "{", "MultipartFileHandler", ".", "verifyFileUpload", "(", "expectedFiles", ",", "request", ".", "getUploadedFiles", "(", ").", "stream", "(", ").", "map", "(", "File", ":", ":", "toPath", ")", ".", "collect", "(", "Collectors", ".", "toList", "(", "))", ");", "MultipartUploadResource", ".", "this", ".", "fileUploadVerifier", ".", "accept", "(", "request", ",", "gateway", ")", ";", "this", ".", "lastReceivedRequest", "=", "request", ".", "getRequestBody", "(", ");", "return", "CompletableFuture", ".", "completedFuture", "(", "EmptyResponseBody", ".", "getInstance", "(", "))", ";", "}", "private", "static", "final", "class", "MultipartMixedHeaders", "implements", "MessageHeaders", "<", "TestRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "private", "static", "final", "MultipartMixedHeaders", "INSTANCE", "=", "new", "MultipartMixedHeaders", "(", ");", "}", "private", "MultipartMixedHeaders", "(", ")", "{", "}", "private", "static", "final", "class", "MultipartMixedHeaders", "implements", "MessageHeaders", "<", "TestRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "private", "static", "final", "MultipartMixedHeaders", "INSTANCE", "=", "new", "MultipartMixedHeaders", "(", ");", "@", "Override", "public", "Class", "<", "TestRequestBody", ">", "getRequestClass", "(", ")", "{", "return", "TestRequestBody", ".", "class", ";", "}", "private", "MultipartMixedHeaders", "(", ")", "{", "}", "@", "Override", "public", "Class", "<", "EmptyResponseBody", ">", "getResponseClass", "(", ")", "{", "return", "EmptyResponseBody", ".", "class", ";", "}", "@", "Override", "public", "Class", "<", "TestRequestBody", ">", "getRequestClass", "(", ")", "{", "return", "TestRequestBody", ".", "class", ";", "}", "@", "Override", "public", "HttpResponseStatus", "getResponseStatusCode", "(", ")", "{", "return", "HttpResponseStatus", ".", "OK", ";", "}", "@", "Override", "public", "Class", "<", "EmptyResponseBody", ">", "getResponseClass", "(", ")", "{", "return", "EmptyResponseBody", ".", "class", ";", "}", "@", "Override", "public", "String", "getDescription", "(", ")", "{", "return", "\"", "\";", "}", "@", "Override", "public", "HttpResponseStatus", "getResponseStatusCode", "(", ")", "{", "return", "HttpResponseStatus", ".", "OK", ";", "}", "@", "Override", "public", "EmptyMessageParameters", "getUnresolvedMessageParameters", "(", ")", "{", "return", "EmptyMessageParameters", ".", "getInstance", "(", ");", "}", "@", "Override", "public", "String", "getDescription", "(", ")", "{", "return", "\"", "\";", "}", "@", "Override", "public", "HttpMethodWrapper", "getHttpMethod", "(", ")", "{", "return", "HttpMethodWrapper", ".", "POST", ";", "}", "@", "Override", "public", "EmptyMessageParameters", "getUnresolvedMessageParameters", "(", ")", "{", "return", "EmptyMessageParameters", ".", "getInstance", "(", ");", "}", "@", "Override", "public", "String", "getTargetRestEndpointURL", "(", ")", "{", "return", "\"", "/", "test", "/", "upload", "/", "mixed", "\"", ";", "}", "@", "Override", "public", "HttpMethodWrapper", "getHttpMethod", "(", ")", "{", "return", "HttpMethodWrapper", ".", "POST", ";", "}", "@", "Override", "public", "boolean", "acceptsFileUploads", "(", ")", "{", "return", "true", ";", "}", "@", "Override", "public", "String", "getTargetRestEndpointURL", "(", ")", "{", "return", "\"", "/", "test", "/", "upload", "/", "mixed", "\"", ";", "}", "@", "Override", "public", "boolean", "acceptsFileUploads", "(", ")", "{", "return", "true", ";", "}", "}", "@", "@", "-", "300", ",", "68", "+", "339", ",", "40", "@", "@", "public", "boolean", "acceptsFileUploads", "(", ")", "{", "}", "/", "**", "*", "Handler", "that", "accepts", "a", "file", "request", "consisting", "of", "and", "{", "@", "link", "#", "file1", "}", "and", "{", "@", "link", "#", "file2", "}", ".", "*", "Handler", "that", "accepts", "a", "file", "request", "and", "calls", "{", "@", "link", "MultipartUploadResource", "#", "fileUploadVerifier", "}", "to", "verify", "it", ".", "*", "/", "public", "static", "class", "MultipartFileHandler", "extends", "AbstractRestHandler", "<", "RestfulGateway", ",", "EmptyRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "private", "final", "Collection", "<", "Path", ">", "expectedFiles", ";", "public", "class", "MultipartFileHandler", "extends", "AbstractRestHandler", "<", "RestfulGateway", ",", "EmptyRequestBody", ",", "EmptyResponseBody", ",", "EmptyMessageParameters", ">", "{", "MultipartFileHandler", "(", "GatewayRetriever", "<", "RestfulGateway", ">", "leaderRetriever", ",", "Collection", "<", "Path", ">", "expectedFiles", ")", "{", "MultipartFileHandler", "(", "GatewayRetriever", "<", "RestfulGateway", ">", "leaderRetriever", ")", "{", "super", "(", "leaderRetriever", ",", "RpcUtils", ".", "INF_TIMEOUT", ",", "Collections", ".", "emptyMap", "(", "),", "MultipartFileHeaders", ".", "INSTANCE", ")", ";", "this", ".", "expectedFiles", "=", "expectedFiles", ";", "}", "@", "Override", "protected", "CompletableFuture", "<", "EmptyResponseBody", ">", "handleRequest", "(", "@", "Nonnull", "HandlerRequest", "<", "EmptyRequestBody", ",", "EmptyMessageParameters", ">", "request", ",", "@", "Nonnull", "RestfulGateway", "gateway", ")", "throws", "RestHandlerException", "{", "verifyFileUpload", "(", "expectedFiles", ",", "request", ".", "getUploadedFiles", "(", ").", "stream", "(", ").", "map", "(", "File", ":", ":", "toPath", ")", ".", "collect", "(", "Collectors", ".", "toList", "(", "))", ");", "MultipartUploadResource", ".", "this", ".", "fileUploadVerifier", ".", "accept", "(", "request", ",", "gateway", ")", ";", "return", "CompletableFuture", ".", "completedFuture", "(", "EmptyResponseBody", ".", "getInstance", "(", "))", ";", "}", "}", "static", "void", "verifyFileUpload", "(", "Collection", "<", "Path", ">", "expectedFiles", ",", "Collection", "<", "Path", ">", "uploadedFiles", ")", "throws", "RestHandlerException", "{", "try", "{", "assertEquals", "(", "expectedFiles", ".", "size", "(", "),", "uploadedFiles", ".", "size", "(", "))", ";", "List", "<", "Path", ">", "expectedList", "=", "new", "ArrayList", "<", ">(", "expectedFiles", ")", ";", "List", "<", "Path", ">", "actualList", "=", "new", "ArrayList", "<", ">(", "uploadedFiles", ")", ";", "expectedList", ".", "sort", "(", "Comparator", ".", "comparing", "(", "Path", ":", ":", "toString", ")", ");", "actualList", ".", "sort", "(", "Comparator", ".", "comparing", "(", "Path", ":", ":", "toString", ")", ");", "for", "(", "int", "x", "=", "0", ";", "x", "<", "expectedList", ".", "size", "(", ");", "x", "+", "+)", "{", "Path", "expected", "=", "expectedList", ".", "get", "(", "x", ")", ";", "Path", "actual", "=", "actualList", ".", "get", "(", "x", ")", ";", "assertEquals", "(", "expected", ".", "getFileName", "(", ").", "toString", "(", "),", "actual", ".", "getFileName", "(", ").", "toString", "(", "))", ";", "private", "static", "class", "MultipartFileHeaders", "extends", "TestHeadersBase", "<", "EmptyRequestBody", ">", "{", "static", "final", "MultipartFileHeaders", "INSTANCE", "=", "new", "MultipartFileHeaders", "(", ");", "byte", "[", "]", "originalContent", "=", "Files", ".", "readAllBytes", "(", "expected", ")", ";", "byte", "[", "]", "receivedContent", "=", "Files", ".", "readAllBytes", "(", "actual", ")", ";", "assertArrayEquals", "(", "originalContent", ",", "receivedContent", ")", ";", "}", "}", "catch", "(", "Exception", "e", ")", "{", "/", "/", "return", "505", "to", "differentiate", "from", "common", "BAD_REQUEST", "responses", "in", "this", "test", "throw", "new", "RestHandlerException", "(", "\"", "Test", "verification", "failed", ".", "\",", "HttpResponseStatus", ".", "HTTP_VERSION_NOT_SUPPORTED", ",", "e", ")", ";", "}", "private", "MultipartFileHeaders", "(", ")", "{", "}", "private", "static", "final", "class", "MultipartFileHeaders", "extends", "TestHeadersBase", "<", "EmptyRequestBody", ">", "{", "private", "static", "final", "MultipartFileHeaders", "INSTANCE", "=", "new", "MultipartFileHeaders", "(", ");", "private", "MultipartFileHeaders", "(", ")", "{", "}", "@", "Override", "public", "Class", "<", "EmptyRequestBody", ">", "getRequestClass", "(", ")", "{", "return", "EmptyRequestBody", ".", "class", ";", "}", "@", "Override", "public", "Class", "<", "EmptyRequestBody", ">", "getRequestClass", "(", ")", "{", "return", "EmptyRequestBody", ".", "class", ";", "}", "@", "Override", "public", "String", "getTargetRestEndpointURL", "(", ")", "{", "return", "\"", "/", "test", "/", "upload", "/", "file", "\"", ";", "}", "@", "Override", "public", "String", "getTargetRestEndpointURL", "(", ")", "{", "return", "\"", "/", "test", "/", "upload", "/", "file", "\"", ";", "}", "@", "Override", "public", "boolean", "acceptsFileUploads", "(", ")", "{", "return", "true", ";", "}", "@", "Override", "public", "boolean", "acceptsFileUploads", "(", ")", "{", "return", "true", ";", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "302", ",", "18", "+", "302", ",", "22", "@", "@", "static", "int", "uwbd", "(", "void", "*", "param", ")", "/", "**", "Start", "the", "UWB", "daemon", "*", "/", "void", "uwbd_start", "(", "struct", "uwb_rc", "*", "rc", ")", "{", "rc", "-", ">", "uwbd", ".", "task", "=", "kthread_run", "(", "uwbd", ",", "rc", ",", "\"", "uwbd", "\"", ");", "if", "(", "rc", "-", ">", "uwbd", ".", "task", "=", "=", "NULL", ")", "struct", "task_struct", "*", "task", "=", "kthread_run", "(", "uwbd", ",", "rc", ",", "\"", "uwbd", "\"", ");", "if", "(", "IS_ERR", "(", "task", ")", ")", "{", "rc", "-", ">", "uwbd", ".", "task", "=", "NULL", ";", "printk", "(", "KERN_ERR", "\"", "UWB", ":", "Cannot", "start", "management", "daemon", ";", "\"", "\"", "UWB", "won", "'", "t", "work", "\\", "n", "\"", ");", "else", "}", "else", "{", "rc", "-", ">", "uwbd", ".", "task", "=", "task", ";", "rc", "-", ">", "uwbd", ".", "pid", "=", "rc", "-", ">", "uwbd", ".", "task", "-", ">", "pid", ";", "}", "}", "/", "*", "Stop", "the", "UWB", "daemon", "and", "free", "any", "unprocessed", "events", "*", "/", "void", "uwbd_stop", "(", "struct", "uwb_rc", "*", "rc", ")", "{", "kthread_stop", "(", "rc", "-", ">", "uwbd", ".", "task", ")", ";", "if", "(", "rc", "-", ">", "uwbd", ".", "task", ")", "kthread_stop", "(", "rc", "-", ">", "uwbd", ".", "task", ")", ";", "uwbd_flush", "(", "rc", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "8", ",", "7", "+", "8", ",", "7", "@", "@", "var", "path", "=", "require", "(", "'", "path", "'", ")", "var", "nopt", "=", "require", "(", "'", "nopt", "'", ")", "var", "ini", "=", "require", "(", "'", "ini", "'", ")", "var", "Umask", "=", "configDefs", ".", "Umask", "var", "correctMkdir", "=", "require", "(", "'.", "./", "utils", "/", "correct", "-", "mkdir", ".", "js", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "var", "umask", "=", "require", "(", "'.", "./", "utils", "/", "umask", "'", ")", "var", "isWindows", "=", "require", "(", "'.", "./", "utils", "/", "is", "-", "windows", ".", "js", "'", ")", "@", "@", "-", "153", ",", "7", "+", "153", ",", "7", "@", "@", "function", "load_", "(", "builtin", ",", "rc", ",", "cli", ",", "cb", ")", "{", "/", "/", "annoying", "humans", "and", "their", "expectations", "!", "if", "(", "conf", ".", "get", "(", "'", "prefix", "'", "))", "{", "var", "etc", "=", "path", ".", "resolve", "(", "conf", ".", "get", "(", "'", "prefix", "'", "),", "'", "etc", "'", ")", "correctMkdir", "(", "etc", ",", "function", "(", ")", "{", "mkdirp", "(", "etc", ",", "function", "(", ")", "{", "defaults", ".", "globalconfig", "=", "path", ".", "resolve", "(", "etc", ",", "'", "npmrc", "'", ")", "defaults", ".", "globalignorefile", "=", "path", ".", "resolve", "(", "etc", ",", "'", "npmignore", "'", ")", "afterUserContinuation", "(", ")", "@", "@", "-", "235", ",", "7", "+", "235", ",", "7", "@", "@", "Conf", ".", "prototype", ".", "loadExtras", "=", "function", "(", "cb", ")", "{", "this", ".", "loadUid", "(", "function", "(", "er", ")", "{", "if", "(", "er", ")", "return", "cb", "(", "er", ")", "/", "/", "Without", "prefix", ",", "nothing", "will", "ever", "work", "correctMkdir", "(", "this", ".", "prefix", ",", "cb", ")", "mkdirp", "(", "this", ".", "prefix", ",", "cb", ")", "}", ".", "bind", "(", "this", ")", ")", "}", ".", "bind", "(", "this", ")", ")", "}", "@", "@", "-", "292", ",", "7", "+", "292", ",", "7", "@", "@", "Conf", ".", "prototype", ".", "save", "=", "function", "(", "where", ",", "cb", ")", "{", "done", "(", "null", ")", "}", ")", "}", "else", "{", "correctMkdir", "(", "path", ".", "dirname", "(", "target", ".", "path", ")", ",", "function", "(", "er", ")", "{", "mkdirp", "(", "path", ".", "dirname", "(", "target", ".", "path", ")", ",", "function", "(", "er", ")", "{", "if", "(", "er", ")", "return", "then", "(", "er", ")", "fs", ".", "writeFile", "(", "target", ".", "path", ",", "data", ",", "'", "utf8", "'", ",", "function", "(", "er", ")", "{", "if", "(", "er", ")", "return", "then", "(", "er", ")", "@", "@", "-", "3", ",", "7", "+", "3", ",", "7", "@", "@", "module", ".", "exports", "=", "setUser", "var", "assert", "=", "require", "(", "'", "assert", "'", ")", "var", "path", "=", "require", "(", "'", "path", "'", ")", "var", "fs", "=", "require", "(", "'", "fs", "'", ")", "var", "correctMkdir", "=", "require", "(", "'.", "./", "utils", "/", "correct", "-", "mkdir", ".", "js", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "function", "setUser", "(", "cb", ")", "{", "var", "defaultConf", "=", "this", ".", "root", "@", "@", "-", "19", ",", "7", "+", "19", ",", "7", "@", "@", "function", "setUser", "(", "cb", ")", "{", "}", "var", "prefix", "=", "path", ".", "resolve", "(", "this", ".", "get", "(", "'", "prefix", "'", "))", "correctMkdir", "(", "prefix", ",", "function", "(", "er", ")", "{", "mkdirp", "(", "prefix", ",", "function", "(", "er", ")", "{", "if", "(", "er", ")", "return", "cb", "(", "er", ")", "fs", ".", "stat", "(", "prefix", ",", "function", "(", "er", ",", "st", ")", "{", "defaultConf", ".", "user", "=", "st", "&", "&", "st", ".", "uid", "@", "@", "-", "102", ",", "7", "+", "102", ",", "7", "@", "@", "var", "readPackageJson", "=", "require", "(", "'", "read", "-", "package", "-", "json", "'", ")", "var", "chain", "=", "require", "(", "'", "slide", "'", ").", "chain", "var", "asyncMap", "=", "require", "(", "'", "slide", "'", ").", "asyncMap", "var", "archy", "=", "require", "(", "'", "archy", "'", ")", "var", "correctMkdir", "=", "require", "(", "'.", "/", "utils", "/", "correct", "-", "mkdir", ".", "js", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "var", "rimraf", "=", "require", "(", "'", "rimraf", "'", ")", "var", "iferr", "=", "require", "(", "'", "iferr", "'", ")", "var", "validate", "=", "require", "(", "'", "aproba", "'", ")", "@", "@", "-", "648", ",", "7", "+", "648", ",", "7", "@", "@", "Installer", ".", "prototype", ".", "readGlobalPackageData", "=", "function", "(", "cb", ")", "{", "log", ".", "silly", "(", "'", "install", "'", ",", "'", "readGlobalPackageData", "'", ")", "var", "self", "=", "this", "this", ".", "loadArgMetadata", "(", "iferr", "(", "cb", ",", "function", "(", ")", "{", "correctMkdir", "(", "self", ".", "where", ",", "iferr", "(", "cb", ",", "function", "(", ")", "{", "mkdirp", "(", "self", ".", "where", ",", "iferr", "(", "cb", ",", "function", "(", ")", "{", "var", "pkgs", "=", "{", "}", "self", ".", "args", ".", "forEach", "(", "function", "(", "pkg", ")", "{", "pkgs", "[", "pkg", ".", "name", "]", "=", "true", "@", "@", "-", "665", ",", "7", "+", "665", ",", "7", "@", "@", "Installer", ".", "prototype", ".", "readLocalPackageData", "=", "function", "(", "cb", ")", "{", "validate", "(", "'", "F", "'", ",", "arguments", ")", "log", ".", "silly", "(", "'", "install", "'", ",", "'", "readLocalPackageData", "'", ")", "var", "self", "=", "this", "correctMkdir", "(", "this", ".", "where", ",", "iferr", "(", "cb", ",", "function", "(", ")", "{", "mkdirp", "(", "this", ".", "where", ",", "iferr", "(", "cb", ",", "function", "(", ")", "{", "readPackageTree", "(", "self", ".", "where", ",", "iferr", "(", "cb", ",", "function", "(", "currentTree", ")", "{", "self", ".", "currentTree", "=", "currentTree", "self", ".", "currentTree", ".", "warnings", "=", "[", "]", "@", "@", "-", "4", ",", "7", "+", "4", ",", "7", "@", "@", "const", "BB", "=", "require", "(", "'", "bluebird", "'", ")", "const", "stat", "=", "BB", ".", "promisify", "(", "require", "(", "'", "graceful", "-", "fs", "'", ").", "stat", ")", "const", "gentlyRm", "=", "BB", ".", "promisify", "(", "require", "(", "'.", "./", "..", "/", "utils", "/", "gently", "-", "rm", ".", "js", "'", "))", "const", "correctMkdir", "=", "BB", ".", "promisify", "(", "require", "(", "'.", "./", "..", "/", "utils", "/", "correct", "-", "mkdir", "'", "))", "const", "mkdirp", "=", "BB", ".", "promisify", "(", "require", "(", "'", "mkdirp", "'", "))", "const", "moduleStagingPath", "=", "require", "(", "'.", "./", "module", "-", "staging", "-", "path", ".", "js", "'", ")", "const", "move", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "move", ".", "js", "'", ")", "const", "npa", "=", "require", "(", "'", "npm", "-", "package", "-", "arg", "'", ")", "@", "@", "-", "127", ",", "7", "+", "127", ",", "7", "@", "@", "function", "stageBundledModule", "(", "bundler", ",", "child", ",", "staging", ",", "parentPath", ")", "{", "function", "finishModule", "(", "bundler", ",", "child", ",", "stageTo", ",", "stageFrom", ")", "{", "/", "/", "If", "we", "were", "the", "one", "'", "s", "who", "bundled", "this", "module", "\u2026", "if", "(", "child", ".", "fromBundle", "=", "==", "bundler", ")", "{", "return", "correctMkdir", "(", "path", ".", "dirname", "(", "stageTo", ")", ").", "then", "(", "()", "=", ">", "{", "return", "mkdirp", "(", "path", ".", "dirname", "(", "stageTo", ")", ").", "then", "(", "()", "=", ">", "{", "return", "move", "(", "stageFrom", ",", "stageTo", ")", "}", ")", "}", "else", "{", "@", "@", "-", "3", ",", "6", "+", "3", ",", "7", "@", "@", "const", "path", "=", "require", "(", "'", "path", "'", ")", "const", "fs", "=", "require", "(", "'", "graceful", "-", "fs", "'", ")", "const", "Bluebird", "=", "require", "(", "'", "bluebird", "'", ")", "const", "rimraf", "=", "Bluebird", ".", "promisify", "(", "require", "(", "'", "rimraf", "'", "))", "const", "mkdirp", "=", "Bluebird", ".", "promisify", "(", "require", "(", "'", "mkdirp", "'", "))", "const", "lstat", "=", "Bluebird", ".", "promisify", "(", "fs", ".", "lstat", ")", "const", "readdir", "=", "Bluebird", ".", "promisify", "(", "fs", ".", "readdir", ")", "const", "symlink", "=", "Bluebird", ".", "promisify", "(", "fs", ".", "symlink", ")", "@", "@", "-", "13", ",", "7", "+", "14", ",", "6", "@", "@", "const", "moveOpts", "=", "{", "fs", ":", "fs", ",", "Promise", ":", "Bluebird", ",", "maxConcurrency", ":", "4", "}", "const", "getRequested", "=", "require", "(", "'.", "./", "get", "-", "requested", ".", "js", "'", ")", "const", "log", "=", "require", "(", "'", "npmlog", "'", ")", "const", "packageId", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "package", "-", "id", ".", "js", "'", ")", "const", "correctMkdir", "=", "Bluebird", ".", "promisify", "(", "require", "(", "'.", "./", "..", "/", "utils", "/", "correct", "-", "mkdir", ".", "js", "'", "))", "module", ".", "exports", "=", "function", "(", "staging", ",", "pkg", ",", "log", ")", "{", "log", ".", "silly", "(", "'", "finalize", "'", ",", "pkg", ".", "realpath", ")", "@", "@", "-", "48", ",", "7", "+", "48", ",", "7", "@", "@", "module", ".", "exports", "=", "function", "(", "staging", ",", "pkg", ",", "log", ")", "{", "}", "function", "makeParentPath", "(", "dir", ")", "{", "return", "correctMkdir", "(", "path", ".", "dirname", "(", "dir", ")", ")", "return", "mkdirp", "(", "path", ".", "dirname", "(", "dir", ")", ")", "}", "function", "moveStagingToDestination", "(", ")", "{", "@", "@", "-", "81", ",", "7", "+", "81", ",", "7", "@", "@", "module", ".", "exports", "=", "function", "(", "staging", ",", "pkg", ",", "log", ")", "{", "if", "(", "!", "movedDestAway", ")", "return", "return", "readdir", "(", "path", ".", "join", "(", "delpath", ",", "'", "node_modules", "'", "))", ".", "catch", "(", "()", "=", ">", "[", "])", ".", "then", "(", "(", "modules", ")", "=", ">", "{", "if", "(", "!", "modules", ".", "length", ")", "return", "return", "correctMkdir", "(", "path", ".", "join", "(", "pkg", ".", "realpath", ",", "'", "node_modules", "'", "))", ".", "then", "(", "()", "=", ">", "Bluebird", ".", "map", "(", "modules", ",", "(", "file", ")", "=", ">", "{", "return", "mkdirp", "(", "path", ".", "join", "(", "pkg", ".", "realpath", ",", "'", "node_modules", "'", "))", ".", "then", "(", "()", "=", ">", "Bluebird", ".", "map", "(", "modules", ",", "(", "file", ")", "=", ">", "{", "const", "from", "=", "path", ".", "join", "(", "delpath", ",", "'", "node_modules", "'", ",", "file", ")", "const", "to", "=", "path", ".", "join", "(", "pkg", ".", "realpath", ",", "'", "node_modules", "'", ",", "file", ")", "return", "move", "(", "from", ",", "to", ",", "moveOpts", ")", "@", "@", "-", "4", ",", "7", "+", "4", ",", "7", "@", "@", "var", "path", "=", "require", "(", "'", "path", "'", ")", "var", "chain", "=", "require", "(", "'", "slide", "'", ").", "chain", "var", "iferr", "=", "require", "(", "'", "iferr", "'", ")", "var", "rimraf", "=", "require", "(", "'", "rimraf", "'", ")", "var", "correctMkdir", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "correct", "-", "mkdir", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "var", "rmStuff", "=", "require", "(", "'.", "./", "..", "/", "unbuild", ".", "js", "'", ").", "rmStuff", "var", "lifecycle", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "lifecycle", ".", "js", "'", ")", "var", "move", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "move", ".", "js", "'", ")", "@", "@", "-", "67", ",", "7", "+", "67", ",", "7", "@", "@", "function", "moveModuleOnly", "(", "from", ",", "to", ",", "log", ",", "done", ")", "{", "function", "makeDestination", "(", "next", ")", "{", "return", "function", "(", ")", "{", "log", ".", "silly", "(", "'", "move", "'", ",", "'", "make", "sure", "destination", "parent", "exists", "'", ",", "path", ".", "resolve", "(", "to", ",", "'", "..", "')", ")", "correctMkdir", "(", "path", ".", "resolve", "(", "to", ",", "'", "..", "')", ",", "iferr", "(", "done", ",", "moveNodeModules", "(", "next", ")", "))", "mkdirp", "(", "path", ".", "resolve", "(", "to", ",", "'", "..", "')", ",", "iferr", "(", "done", ",", "moveNodeModules", "(", "next", ")", "))", "}", "}", "@", "@", "-", "87", ",", "7", "+", "87", ",", "7", "@", "@", "function", "moveModuleOnly", "(", "from", ",", "to", ",", "log", ",", "done", ")", "{", "function", "moveNodeModulesBack", "(", "next", ")", "{", "return", "function", "(", ")", "{", "correctMkdir", "(", "from", ",", "iferr", "(", "done", ",", "function", "(", ")", "{", "mkdirp", "(", "from", ",", "iferr", "(", "done", ",", "function", "(", ")", "{", "log", ".", "silly", "(", "'", "move", "'", ",", "'", "put", "source", "node_modules", "back", "'", ",", "fromModules", ")", "move", "(", "tempFromModules", ",", "fromModules", ")", ".", "then", "(", "next", ",", "done", ")", "}", "))", "@", "@", "-", "3", ",", "7", "+", "3", ",", "7", "@", "@", "var", "path", "=", "require", "(", "'", "path", "'", ")", "var", "fs", "=", "require", "(", "'", "graceful", "-", "fs", "'", ")", "var", "rimraf", "=", "require", "(", "'", "rimraf", "'", ")", "var", "asyncMap", "=", "require", "(", "'", "slide", "'", ").", "asyncMap", "var", "correctMkdir", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "correct", "-", "mkdir", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "var", "npm", "=", "require", "(", "'.", "./", "..", "/", "npm", ".", "js", "'", ")", "var", "andIgnoreErrors", "=", "require", "(", "'.", "./", "and", "-", "ignore", "-", "errors", ".", "js", "'", ")", "var", "move", "=", "require", "(", "'.", "./", "..", "/", "utils", "/", "move", ".", "js", "'", ")", "@", "@", "-", "52", ",", "7", "+", "52", ",", "7", "@", "@", "function", "removeDir", "(", "pkg", ",", "log", ",", "next", ")", "{", "function", "makeTarget", "(", "readdirEr", ",", "files", ")", "{", "if", "(", "readdirEr", ")", "return", "cleanup", "(", ")", "if", "(", "!", "files", ".", "length", ")", "return", "cleanup", "(", ")", "correctMkdir", "(", "path", ".", "join", "(", "pkg", ".", "path", ",", "'", "node_modules", "'", "),", "function", "(", "mkdirEr", ")", "{", "moveModules", "(", "mkdirEr", ",", "files", ")", "}", ")", "mkdirp", "(", "path", ".", "join", "(", "pkg", ".", "path", ",", "'", "node_modules", "'", "),", "function", "(", "mkdirEr", ")", "{", "moveModules", "(", "mkdirEr", ",", "files", ")", "}", ")", "}", "function", "moveModules", "(", "mkdirEr", ",", "files", ")", "{", "@", "@", "-", "1", ",", "14", "+", "1", ",", "14", "@", "@", "module", ".", "exports", "=", "fileCompletion", "var", "correctMkdir", "=", "require", "(", "'.", "./", "correct", "-", "mkdir", ".", "js", "'", ")", "var", "mkdir", "=", "require", "(", "'", "mkdirp", "'", ")", "var", "glob", "=", "require", "(", "'", "glob", "'", ")", "function", "fileCompletion", "(", "root", ",", "req", ",", "depth", ",", "cb", ")", "{", "if", "(", "typeof", "cb", "!", "==", "'", "function", "'", ")", "{", "cb", "=", "depth", "depth", "=", "Infinity", "}", "correctMkdir", "(", "root", ",", "function", "(", "er", ")", "{", "mkdir", "(", "root", ",", "function", "(", "er", ")", "{", "if", "(", "er", ")", "return", "cb", "(", "er", ")", "/", "/", "can", "be", "either", "exactly", "the", "req", ",", "or", "a", "descendent", "@", "@", "-", "6", ",", "21", "+", "6", ",", "21", "@", "@", "var", "log", "=", "require", "(", "'", "npmlog", "'", ")", "var", "mkdirp", "=", "require", "(", "'", "mkdirp", "'", ")", "/", "/", "memoize", "the", "directories", "created", "by", "this", "step", "var", "stats", "=", "{", "}", "var", "effectiveOwner", "module", ".", "exports", "=", "function", "correctMkdir", "(", "path", ",", "cb", ")", "{", "cb", "=", "dezalgo", "(", "cb", ")", "cb", "=", "inflight", "(", "'", "correctMkdir", ":", "'", "+", "path", ",", "cb", ")", "if", "(", "!", "cb", ")", "{", "return", "log", ".", "silly", "(", "'", "correctMkdir", "'", ",", "path", ",", "'", "correctMkdir", "already", "in", "flight", ";", "waiting", "'", ")", "return", "log", ".", "verbose", "(", "'", "correctMkdir", "'", ",", "path", ",", "'", "correctMkdir", "already", "in", "flight", ";", "waiting", "'", ")", "}", "else", "{", "log", ".", "silly", "(", "'", "correctMkdir", "'", ",", "path", ",", "'", "correctMkdir", "not", "in", "flight", ";", "initializing", "'", ")", "log", ".", "verbose", "(", "'", "correctMkdir", "'", ",", "path", ",", "'", "correctMkdir", "not", "in", "flight", ";", "initializing", "'", ")", "}", "var", "stats", "=", "{", "}", "if", "(", "stats", "[", "path", "]", ")", "return", "cb", "(", "null", ",", "stats", "[", "path", "]", ")", "fs", ".", "stat", "(", "path", ",", "function", "(", "er", ",", "st", ")", "{", "if", "(", "er", ")", "return", "makeDirectory", "(", "path", ",", "stats", ",", "cb", ")", "if", "(", "er", ")", "return", "makeDirectory", "(", "path", ",", "cb", ")", "if", "(", "!", "st", ".", "isDirectory", "(", "))", "{", "log", ".", "error", "(", "'", "correctMkdir", "'", ",", "'", "invalid", "dir", "%", "s", "'", ",", "path", ")", "@", "@", "-", "60", ",", "12", "+", "60", ",", "12", "@", "@", "function", "calculateOwner", "(", ")", "{", "return", "effectiveOwner", "}", "function", "makeDirectory", "(", "path", ",", "stats", ",", "cb", ")", "{", "function", "makeDirectory", "(", "path", ",", "cb", ")", "{", "cb", "=", "inflight", "(", "'", "makeDirectory", ":", "'", "+", "path", ",", "cb", ")", "if", "(", "!", "cb", ")", "{", "return", "log", ".", "silly", "(", "'", "makeDirectory", "'", ",", "path", ",", "'", "creation", "already", "in", "flight", ";", "waiting", "'", ")", "return", "log", ".", "verbose", "(", "'", "makeDirectory", "'", ",", "path", ",", "'", "creation", "already", "in", "flight", ";", "waiting", "'", ")", "}", "else", "{", "log", ".", "silly", "(", "'", "makeDirectory", "'", ",", "path", ",", "'", "creation", "not", "in", "flight", ";", "initializing", "'", ")", "log", ".", "verbose", "(", "'", "makeDirectory", "'", ",", "path", ",", "'", "creation", "not", "in", "flight", ";", "initializing", "'", ")", "}", "var", "owner", "=", "calculateOwner", "(", ")"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "818", ",", "6", "+", "818", ",", "20", "@", "@", "static", "int", "segmented_read_std", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "return", "ctxt", "-", ">", "ops", "-", ">", "read_std", "(", "ctxt", ",", "linear", ",", "data", ",", "size", ",", "&", "ctxt", "-", ">", "exception", ")", ";", "}", "static", "int", "segmented_write_std", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "struct", "segmented_address", "addr", ",", "void", "*", "data", ",", "unsigned", "int", "size", ")", "{", "int", "rc", ";", "ulong", "linear", ";", "rc", "=", "linearize", "(", "ctxt", ",", "addr", ",", "size", ",", "true", ",", "&", "linear", ")", ";", "if", "(", "rc", "!", "=", "X86EMUL_CONTINUE", ")", "return", "rc", ";", "return", "ctxt", "-", ">", "ops", "-", ">", "write_std", "(", "ctxt", ",", "linear", ",", "data", ",", "size", ",", "&", "ctxt", "-", ">", "exception", ")", ";", "}", "/", "*", "*", "Prefetch", "the", "remaining", "bytes", "of", "the", "instruction", "without", "crossing", "page", "*", "boundary", "if", "they", "are", "not", "in", "fetch_cache", "yet", ".", "@", "@", "-", "3685", ",", "8", "+", "3699", ",", "8", "@", "@", "static", "int", "emulate_store_desc_ptr", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "}", "/", "*", "Disable", "writeback", ".", "*", "/", "ctxt", "-", ">", "dst", ".", "type", "=", "OP_NONE", ";", "return", "segmented_write", "(", "ctxt", ",", "ctxt", "-", ">", "dst", ".", "addr", ".", "mem", ",", "&", "desc_ptr", ",", "2", "+", "ctxt", "-", ">", "op_bytes", ")", ";", "return", "segmented_write_std", "(", "ctxt", ",", "ctxt", "-", ">", "dst", ".", "addr", ".", "mem", ",", "&", "desc_ptr", ",", "2", "+", "ctxt", "-", ">", "op_bytes", ")", ";", "}", "static", "int", "em_sgdt", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ")", "@", "@", "-", "3932", ",", "7", "+", "3946", ",", "7", "@", "@", "static", "int", "em_fxsave", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ")", "else", "size", "=", "offsetof", "(", "struct", "fxregs_state", ",", "xmm_space", "[", "0", "]", ");", "return", "segmented_write", "(", "ctxt", ",", "ctxt", "-", ">", "memop", ".", "addr", ".", "mem", ",", "&", "fx_state", ",", "size", ")", ";", "return", "segmented_write_std", "(", "ctxt", ",", "ctxt", "-", ">", "memop", ".", "addr", ".", "mem", ",", "&", "fx_state", ",", "size", ")", ";", "}", "static", "int", "fxrstor_fixup", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "@", "@", "-", "3974", ",", "7", "+", "3988", ",", "7", "@", "@", "static", "int", "em_fxrstor", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ")", "if", "(", "rc", "!", "=", "X86EMUL_CONTINUE", ")", "return", "rc", ";", "rc", "=", "segmented_read", "(", "ctxt", ",", "ctxt", "-", ">", "memop", ".", "addr", ".", "mem", ",", "&", "fx_state", ",", "512", ")", ";", "rc", "=", "segmented_read_std", "(", "ctxt", ",", "ctxt", "-", ">", "memop", ".", "addr", ".", "mem", ",", "&", "fx_state", ",", "512", ")", ";", "if", "(", "rc", "!", "=", "X86EMUL_CONTINUE", ")", "return", "rc", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "129", ",", "17", "+", "129", ",", "7", "@", "@", "public", "void", "process", "(", "InputStream", "zipEntryInputStream", ",", "ZipEntry", "zipEntry", ")", "throws", "I", "}", "if", "(", "ZipResultType", ".", "FILE", ".", "equals", "(", "zipResultType", ")", ")", "{", "final", "File", "tempDir", "=", "new", "File", "(", "workDirectory", ",", "message", ".", "getHeaders", "(", ").", "getId", "(", ").", "toString", "(", "))", ";", "tempDir", ".", "mkdirs", "(", ");", "/", "/", "NOSONAR", "false", "positive", "final", "File", "destinationFile", "=", "new", "File", "(", "tempDir", ",", "zipEntryName", ")", ";", "/", "*", "If", "we", "see", "the", "relative", "traversal", "string", "of", "\"", "..", "\"", "we", "need", "to", "make", "sure", "*", "that", "the", "outputdir", "+", "name", "doesn", "'", "t", "leave", "the", "outputdir", ".", "*", "/", "if", "(", "!", "destinationFile", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "workDirectory", ".", "getCanonicalPath", "(", "))", ")", "{", "throw", "new", "ZipException", "(", "\"", "The", "file", "\"", "+", "zipEntryName", "+", "\"", "is", "trying", "to", "leave", "the", "target", "output", "directory", "of", "\"", "+", "workDirectory", ")", ";", "}", "final", "File", "destinationFile", "=", "checkPath", "(", "message", ",", "zipEntryName", ")", ";", "if", "(", "zipEntry", ".", "isDirectory", "(", "))", "{", "destinationFile", ".", "mkdirs", "(", ");", "/", "/", "NOSONAR", "false", "positive", "@", "@", "-", "151", ",", "6", "+", "141", ",", "7", "@", "@", "public", "void", "process", "(", "InputStream", "zipEntryInputStream", ",", "ZipEntry", "zipEntry", ")", "throws", "I", "}", "else", "if", "(", "ZipResultType", ".", "BYTE_ARRAY", ".", "equals", "(", "zipResultType", ")", ")", "{", "if", "(", "!", "zipEntry", ".", "isDirectory", "(", "))", "{", "checkPath", "(", "message", ",", "zipEntryName", ")", ";", "byte", "[", "]", "data", "=", "IOUtils", ".", "toByteArray", "(", "zipEntryInputStream", ")", ";", "uncompressedData", ".", "put", "(", "zipEntryName", ",", "data", ")", ";", "}", "@", "@", "-", "159", ",", "6", "+", "150", ",", "21", "@", "@", "else", "if", "(", "ZipResultType", ".", "BYTE_ARRAY", ".", "equals", "(", "zipResultType", ")", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "Unsupported", "zipResultType", "\"", "+", "zipResultType", ")", ";", "}", "}", "public", "File", "checkPath", "(", "final", "Message", "<", "?>", "message", ",", "final", "String", "zipEntryName", ")", "throws", "IOException", "{", "final", "File", "tempDir", "=", "new", "File", "(", "workDirectory", ",", "message", ".", "getHeaders", "(", ").", "getId", "(", ").", "toString", "(", "))", ";", "tempDir", ".", "mkdirs", "(", ");", "/", "/", "NOSONAR", "false", "positive", "final", "File", "destinationFile", "=", "new", "File", "(", "tempDir", ",", "zipEntryName", ")", ";", "/", "*", "If", "we", "see", "the", "relative", "traversal", "string", "of", "\"", "..", "\"", "we", "need", "to", "make", "sure", "*", "that", "the", "outputdir", "+", "name", "doesn", "'", "t", "leave", "the", "outputdir", ".", "*", "/", "if", "(", "!", "destinationFile", ".", "getCanonicalPath", "(", ").", "startsWith", "(", "workDirectory", ".", "getCanonicalPath", "(", "))", ")", "{", "throw", "new", "ZipException", "(", "\"", "The", "file", "\"", "+", "zipEntryName", "\"", "is", "trying", "to", "leave", "the", "target", "output", "directory", "of", "\"", "+", "workDirectory", ")", ";", "}", "return", "destinationFile", ";", "}", "}", ");", "if", "(", "uncompressedData", ".", "isEmpty", "(", "))", "{", "@", "@", "-", "16", ",", "6", "+", "16", ",", "10", "@", "@", "package", "org", ".", "springframework", ".", "integration", ".", "zip", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "containsString", ";", "import", "static", "org", ".", "hamcrest", ".", "Matchers", ".", "instanceOf", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "fail", ";", "import", "java", ".", "io", ".", "File", ";", "import", "java", ".", "io", ".", "IOException", ";", "import", "java", ".", "io", ".", "InputStream", ";", "@", "@", "-", "28", ",", "6", "+", "32", ",", "7", "@", "@", "import", "org", ".", "junit", ".", "Rule", ";", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "junit", ".", "rules", ".", "TemporaryFolder", ";", "import", "org", ".", "zeroturnaround", ".", "zip", ".", "ZipException", ";", "import", "org", ".", "springframework", ".", "context", ".", "annotation", ".", "AnnotationConfigApplicationContext", ";", "import", "org", ".", "springframework", ".", "context", ".", "annotation", ".", "Bean", ";", "@", "@", "-", "36", ",", "8", "+", "41", ",", "10", "@", "@", "import", "org", ".", "springframework", ".", "core", ".", "io", ".", "Resource", ";", "import", "org", ".", "springframework", ".", "core", ".", "io", ".", "ResourceLoader", ";", "import", "org", ".", "springframework", ".", "integration", ".", "support", ".", "MessageBuilder", ";", "import", "org", ".", "springframework", ".", "integration", ".", "transformer", ".", "MessageTransformationException", ";", "import", "org", ".", "springframework", ".", "messaging", ".", "Message", ";", "import", "org", ".", "springframework", ".", "messaging", ".", "MessageChannel", ";", "import", "org", ".", "springframework", ".", "messaging", ".", "MessageHandlingException", ";", "/", "**", "*", "@", "@", "-", "146", ",", "6", "+", "153", ",", "25", "@", "@", "public", "void", "unZipWithMultipleEntries", "(", ")", "throws", "Exception", "{", "}", "@", "Test", "public", "void", "unZipTraversal", "(", ")", "throws", "Exception", "{", "final", "Resource", "resource", "=", "this", ".", "resourceLoader", ".", "getResource", "(", "\"", "classpath", ":", "testzipdata", "/", "zip", "-", "malicious", "-", "traversal", ".", "zip", "\"", ");", "final", "InputStream", "is", "=", "resource", ".", "getInputStream", "(", ");", "byte", "[", "]", "zipdata", "=", "IOUtils", ".", "toByteArray", "(", "is", ")", ";", "final", "Message", "<", "byte", "[", "]>", "message", "=", "MessageBuilder", ".", "withPayload", "(", "zipdata", ")", ".", "build", "(", ");", "try", "{", "input", ".", "send", "(", "message", ")", ";", "fail", "(", "\"", "Expected", "Exception", "\"", ");", "}", "catch", "(", "Exception", "e", ")", "{", "Assert", ".", "assertThat", "(", "e", ",", "instanceOf", "(", "MessageTransformationException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", "),", "instanceOf", "(", "MessageHandlingException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", ").", "getCause", "(", "),", "instanceOf", "(", "ZipException", ".", "class", ")", ");", "Assert", ".", "assertThat", "(", "e", ".", "getCause", "(", ").", "getCause", "(", ").", "getMessage", "(", "),", "containsString", "(", "\"", "is", "trying", "to", "leave", "the", "target", "output", "directory", "\"", "))", ";", "}", "}", "@", "Configuration", "@", "ImportResource", "(", "\"", "classpath", ":", "org", "/", "springframework", "/", "integration", "/", "zip", "/", "UnZip2FileTests", "-", "context", ".", "xml", "\"", ")", "public", "static", "class", "ContextConfiguration", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "209", ",", "7", "+", "209", ",", "7", "@", "@", "public", "void", "loadUrl", "(", "String", "url", ")", "{", "@", "Override", "public", "void", "showWebPage", "(", "String", "url", ",", "boolean", "openExternal", ",", "boolean", "clearHistory", ",", "Map", "<", "String", ",", "Object", ">", "params", ")", "{", "LOG", ".", "d", "(", "TAG", ",", "\"", "showWebPage", "(", "%", "s", ",", "%", "b", ",", "%", "b", ",", "HashMap", "\"", ",", "url", ",", "openExternal", ",", "clearHistory", ")", ";", "LOG", ".", "d", "(", "TAG", ",", "\"", "showWebPage", "(", "%", "s", ",", "%", "b", ",", "%", "b", ",", "HashMap", ")", "\",", "url", ",", "openExternal", ",", "clearHistory", ")", ";", "/", "/", "If", "clearing", "history", "if", "(", "clearHistory", ")", "{", "@", "@", "-", "223", ",", "10", "+", "223", ",", "13", "@", "@", "public", "void", "showWebPage", "(", "String", "url", ",", "boolean", "openExternal", ",", "boolean", "clearHistory", ",", "/", "/", "TODO", ":", "What", "about", "params", "?", "/", "/", "Load", "new", "URL", "loadUrlIntoView", "(", "url", ",", "true", ")", ";", "return", ";", "}", "else", "{", "LOG", ".", "w", "(", "TAG", ",", "\"", "showWebPage", ":", "Refusing", "to", "load", "URL", "into", "webview", "since", "it", "is", "not", "in", "the", "<", "allow", "-", "navigation", ">", "whitelist", ".", "URL", "=", "\"", "+", "url", ")", ";", "}", "/", "/", "Load", "in", "default", "viewer", "if", "not", "LOG", ".", "w", "(", "TAG", ",", "\"", "showWebPage", ":", "Cannot", "load", "URL", "into", "webview", "since", "it", "is", "not", "in", "white", "list", ".", "Loading", "into", "browser", "instead", ".", "(", "URL", "=", "\"", "+", "url", "+", "\"", ")\"", ");", "}", "if", "(", "!", "pluginManager", ".", "shouldOpenExternalUrl", "(", "url", ")", ")", "{", "LOG", ".", "w", "(", "TAG", ",", "\"", "showWebPage", ":", "Refusing", "to", "send", "intent", "for", "URL", "since", "it", "is", "not", "in", "the", "<", "allow", "-", "intent", ">", "whitelist", ".", "URL", "=", "\"", "+", "url", ")", ";", "return", ";", "}", "try", "{", "/", "/", "Omitting", "the", "MIME", "type", "for", "file", ":", "URLs", "causes", "\"", "No", "Activity", "found", "to", "handle", "Intent", "\"", "."], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1105", ",", "6", "+", "1105", ",", "7", "@", "@", "ssize_t", "tpm_read", "(", "struct", "file", "*", "file", ",", "char", "__user", "*", "buf", ",", "{", "struct", "tpm_chip", "*", "chip", "=", "file", "-", ">", "private_data", ";", "ssize_t", "ret_size", ";", "int", "rc", ";", "del_singleshot_timer_sync", "(", "&", "chip", "-", ">", "user_read_timer", ")", ";", "flush_work_sync", "(", "&", "chip", "-", ">", "work", ")", ";", "@", "@", "-", "1115", ",", "8", "+", "1116", ",", "11", "@", "@", "ssize_t", "tpm_read", "(", "struct", "file", "*", "file", ",", "char", "__user", "*", "buf", ",", "ret_size", "=", "size", ";", "mutex_lock", "(", "&", "chip", "-", ">", "buffer_mutex", ")", ";", "if", "(", "copy_to_user", "(", "buf", ",", "chip", "-", ">", "data_buffer", ",", "ret_size", ")", ")", "rc", "=", "copy_to_user", "(", "buf", ",", "chip", "-", ">", "data_buffer", ",", "ret_size", ")", ";", "memset", "(", "chip", "-", ">", "data_buffer", ",", "0", ",", "ret_size", ")", ";", "if", "(", "rc", ")", "ret_size", "=", "-", "EFAULT", ";", "mutex_unlock", "(", "&", "chip", "-", ">", "buffer_mutex", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2002", "-", "2011", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2002", "-", "2018", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "@", "@", "-", "10", ",", "23", "+", "10", ",", "14", "@", "@", "*", "an", "\"", "AS", "IS", "\"", "BASIS", ",", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND", ",", "either", "express", "or", "implied", ".", "See", "the", "License", "for", "the", "*", "specific", "language", "governing", "permissions", "and", "limitations", "under", "the", "License", ".", "*", "/", "package", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ";", "import", "java", ".", "net", ".", "URI", ";", "import", "java", ".", "security", ".", "Principal", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "LinkedHashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Set", ";", "import", "org", ".", "springframework", ".", "http", ".", "ResponseEntity", ";", "import", "org", ".", "springframework", ".", "security", ".", "access", ".", "AccessDeniedException", ";", "import", "org", ".", "springframework", ".", "security", ".", "authentication", ".", "InsufficientAuthenticationException", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "Authentication", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "AuthenticationException", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "GrantedAuthority", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "OAuth2AccessToken", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "exceptions", ".", "BadClientCredentialsException", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "exceptions", ".", "ClientAuthenticationException", ";", "@", "@", "-", "51", ",", "6", "+", "42", ",", "7", "@", "@", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "code", ".", "InMemoryAuthorizationCodeServices", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "implicit", ".", "ImplicitTokenRequest", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "request", ".", "DefaultOAuth2RequestValidator", ";", "import", "org", ".", "springframework", ".", "util", ".", "ObjectUtils", ";", "import", "org", ".", "springframework", ".", "util", ".", "StringUtils", ";", "import", "org", ".", "springframework", ".", "web", ".", "HttpSessionRequiredException", ";", "import", "org", ".", "springframework", ".", "web", ".", "bind", ".", "annotation", ".", "ExceptionHandler", ";", "@", "@", "-", "68", ",", "6", "+", "60", ",", "16", "@", "@", "import", "org", ".", "springframework", ".", "web", ".", "util", ".", "UriComponents", ";", "import", "org", ".", "springframework", ".", "web", ".", "util", ".", "UriComponentsBuilder", ";", "import", "java", ".", "net", ".", "URI", ";", "import", "java", ".", "security", ".", "Principal", ";", "import", "java", ".", "util", ".", "Collections", ";", "import", "java", ".", "util", ".", "Date", ";", "import", "java", ".", "util", ".", "HashMap", ";", "import", "java", ".", "util", ".", "HashSet", ";", "import", "java", ".", "util", ".", "LinkedHashMap", ";", "import", "java", ".", "util", ".", "Map", ";", "import", "java", ".", "util", ".", "Set", ";", "/", "**", "*", "<", "p", ">", "*", "Implementation", "of", "the", "Authorization", "Endpoint", "from", "the", "OAuth2", "specification", ".", "Accepts", "authorization", "requests", ",", "and", "@", "@", "-", "86", ",", "8", "+", "88", ",", "11", "@", "@", "*", "*", "/", "@", "FrameworkEndpoint", "@", "SessionAttributes", "(", "\"", "authorizationRequest", "\"", ")", "@", "SessionAttributes", "(", "{", "AuthorizationEndpoint", ".", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "AuthorizationEndpoint", ".", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", "}", ")", "public", "class", "AuthorizationEndpoint", "extends", "AbstractEndpoint", "{", "static", "final", "String", "AUTHORIZATION_REQUEST_ATTR_NAME", "=", "\"", "authorizationRequest", "\"", ";", "static", "final", "String", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", "=", "\"", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ".", "AuthorizationEndpoint", ".", "ORIGINAL_AUTHORIZATION_REQUEST", "\"", ";", "private", "AuthorizationCodeServices", "authorizationCodeServices", "=", "new", "InMemoryAuthorizationCodeServices", "(", ");", "@", "@", "-", "174", ",", "10", "+", "179", ",", "10", "@", "@", "public", "ModelAndView", "authorize", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "@", "RequestParam", "Map", "<", "Strin", "}", "}", "/", "/", "Place", "auth", "request", "into", "the", "model", "so", "that", "it", "is", "stored", "in", "the", "session", "/", "/", "for", "approveOrDeny", "to", "use", ".", "That", "way", "we", "make", "sure", "that", "auth", "request", "comes", "from", "the", "session", ",", "/", "/", "so", "any", "auth", "request", "parameters", "passed", "to", "approveOrDeny", "will", "be", "ignored", "and", "retrieved", "from", "the", "session", ".", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "authorizationRequest", ")", ";", "/", "/", "Store", "authorizationRequest", "AND", "an", "immutable", "Map", "of", "authorizationRequest", "in", "session", "/", "/", "which", "will", "be", "used", "to", "validate", "against", "in", "approveOrDeny", "(", ")", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "return", "getUserApprovalPageResponse", "(", "model", ",", "authorizationRequest", ",", "(", "Authentication", ")", "principal", ")", ";", "@", "@", "-", "189", ",", "6", "+", "194", ",", "33", "@", "@", "public", "ModelAndView", "authorize", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "@", "RequestParam", "Map", "<", "Strin", "}", "Map", "<", "String", ",", "Object", ">", "unmodifiableMap", "(", "AuthorizationRequest", "authorizationRequest", ")", "{", "Map", "<", "String", ",", "Object", ">", "authorizationRequestMap", "=", "new", "HashMap", "<", "String", ",", "Object", ">", "()", ";", "authorizationRequestMap", ".", "put", "(", "OAuth2Utils", ".", "CLIENT_ID", ",", "authorizationRequest", ".", "getClientId", "(", "))", ";", "authorizationRequestMap", ".", "put", "(", "OAuth2Utils", ".", "STATE", ",", "authorizationRequest", ".", "getState", "(", "))", ";", "authorizationRequestMap", ".", "put", "(", "OAuth2Utils", ".", "REDIRECT_URI", ",", "authorizationRequest", ".", "getRedirectUri", "(", "))", ";", "if", "(", "authorizationRequest", ".", "getResponseTypes", "(", ")", "!", "=", "null", ")", "{", "authorizationRequestMap", ".", "put", "(", "OAuth2Utils", ".", "RESPONSE_TYPE", ",", "Collections", ".", "unmodifiableSet", "(", "new", "HashSet", "<", "String", ">", "(", "authorizationRequest", ".", "getResponseTypes", "(", "))", "))", ";", "}", "if", "(", "authorizationRequest", ".", "getScope", "(", ")", "!", "=", "null", ")", "{", "authorizationRequestMap", ".", "put", "(", "OAuth2Utils", ".", "SCOPE", ",", "Collections", ".", "unmodifiableSet", "(", "new", "HashSet", "<", "String", ">", "(", "authorizationRequest", ".", "getScope", "(", "))", "))", ";", "}", "authorizationRequestMap", ".", "put", "(", "\"", "approved", "\"", ",", "authorizationRequest", ".", "isApproved", "(", "))", ";", "if", "(", "authorizationRequest", ".", "getResourceIds", "(", ")", "!", "=", "null", ")", "{", "authorizationRequestMap", ".", "put", "(", "\"", "resourceIds", "\"", ",", "Collections", ".", "unmodifiableSet", "(", "new", "HashSet", "<", "String", ">", "(", "authorizationRequest", ".", "getResourceIds", "(", "))", "))", ";", "}", "if", "(", "authorizationRequest", ".", "getAuthorities", "(", ")", "!", "=", "null", ")", "{", "authorizationRequestMap", ".", "put", "(", "\"", "authorities", "\"", ",", "Collections", ".", "unmodifiableSet", "(", "new", "HashSet", "<", "GrantedAuthority", ">", "(", "authorizationRequest", ".", "getAuthorities", "(", "))", "))", ";", "}", "return", "Collections", ".", "unmodifiableMap", "(", "authorizationRequestMap", ")", ";", "}", "@", "RequestMapping", "(", "value", "=", "\"", "/", "oauth", "/", "authorize", "\"", ",", "method", "=", "RequestMethod", ".", "POST", ",", "params", "=", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ")", "public", "View", "approveOrDeny", "(", "@", "RequestParam", "Map", "<", "String", ",", "String", ">", "approvalParameters", ",", "Map", "<", "String", ",", "?", ">", "model", ",", "SessionStatus", "sessionStatus", ",", "Principal", "principal", ")", "{", "@", "@", "-", "199", ",", "13", "+", "231", ",", "20", "@", "@", "public", "View", "approveOrDeny", "(", "@", "RequestParam", "Map", "<", "String", ",", "String", ">", "approvalParameters", ",", "\"", "User", "must", "be", "authenticated", "with", "Spring", "Security", "before", "authorizing", "an", "access", "token", ".", "\")", ";", "}", "AuthorizationRequest", "authorizationRequest", "=", "(", "AuthorizationRequest", ")", "model", ".", "get", "(", "\"", "authorizationRequest", "\"", ");", "AuthorizationRequest", "authorizationRequest", "=", "(", "AuthorizationRequest", ")", "model", ".", "get", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ")", ";", "if", "(", "authorizationRequest", "=", "=", "null", ")", "{", "sessionStatus", ".", "setComplete", "(", ");", "throw", "new", "InvalidRequestException", "(", "\"", "Cannot", "approve", "uninitialized", "authorization", "request", ".", "\")", ";", "}", "/", "/", "Check", "to", "ensure", "the", "Authorization", "Request", "was", "not", "modified", "during", "the", "user", "approval", "step", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "Map", "<", "String", ",", "Object", ">", "originalAuthorizationRequest", "=", "(", "Map", "<", "String", ",", "Object", ">", ")", "model", ".", "get", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ")", ";", "if", "(", "isAuthorizationRequestModified", "(", "authorizationRequest", ",", "originalAuthorizationRequest", ")", ")", "{", "throw", "new", "InvalidRequestException", "(", "\"", "Changes", "were", "detected", "from", "the", "original", "authorization", "request", ".", "\")", ";", "}", "try", "{", "Set", "<", "String", ">", "responseTypes", "=", "authorizationRequest", ".", "getResponseTypes", "(", ");", "@", "@", "-", "238", ",", "6", "+", "277", ",", "52", "@", "@", "public", "View", "approveOrDeny", "(", "@", "RequestParam", "Map", "<", "String", ",", "String", ">", "approvalParameters", ",", "}", "private", "boolean", "isAuthorizationRequestModified", "(", "AuthorizationRequest", "authorizationRequest", ",", "Map", "<", "String", ",", "Object", ">", "originalAuthorizationRequest", ")", "{", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getClientId", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "OAuth2Utils", ".", "CLIENT_ID", ")", "))", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getState", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "OAuth2Utils", ".", "STATE", ")", "))", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getRedirectUri", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "OAuth2Utils", ".", "REDIRECT_URI", ")", "))", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getResponseTypes", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "OAuth2Utils", ".", "RESPONSE_TYPE", ")", "))", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getScope", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "OAuth2Utils", ".", "SCOPE", ")", "))", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "isApproved", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "\"", "approved", "\"", "))", ")", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getResourceIds", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "\"", "resourceIds", "\"", "))", ")", "{", "return", "true", ";", "}", "if", "(", "!", "ObjectUtils", ".", "nullSafeEquals", "(", "authorizationRequest", ".", "getAuthorities", "(", "),", "originalAuthorizationRequest", ".", "get", "(", "\"", "authorities", "\"", "))", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "/", "/", "We", "need", "explicit", "approval", "from", "the", "user", ".", "private", "ModelAndView", "getUserApprovalPageResponse", "(", "Map", "<", "String", ",", "Object", ">", "model", ",", "AuthorizationRequest", "authorizationRequest", ",", "Authentication", "principal", ")", "{", "@", "@", "-", "529", ",", "7", "+", "614", ",", "7", "@", "@", "private", "AuthorizationRequest", "getAuthorizationRequestForError", "(", "ServletWebRequest", "w", "/", "/", "If", "it", "'", "s", "already", "there", "then", "we", "are", "in", "the", "approveOrDeny", "phase", "and", "we", "can", "use", "the", "saved", "request", "AuthorizationRequest", "authorizationRequest", "=", "(", "AuthorizationRequest", ")", "sessionAttributeStore", ".", "retrieveAttribute", "(", "webRequest", ",", "\"", "authorizationRequest", "\"", ");", "webRequest", ",", "AUTHORIZATION_REQUEST_ATTR_NAME", ")", ";", "if", "(", "authorizationRequest", "!", "=", "null", ")", "{", "return", "authorizationRequest", ";", "}", "@", "@", "-", "1", ",", "5", "+", "1", ",", "5", "@", "@", "/", "*", "*", "Copyright", "2006", "-", "2011", "the", "original", "author", "or", "authors", ".", "*", "Copyright", "2006", "-", "2018", "the", "original", "author", "or", "authors", ".", "*", "*", "Licensed", "under", "the", "Apache", "License", ",", "Version", "2", ".", "0", "(", "the", "\"", "License", "\"", ");", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "*", "the", "License", ".", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at", "@", "@", "-", "16", ",", "6", "+", "16", ",", "8", "@", "@", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertFalse", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertNull", ";", "import", "static", "org", ".", "junit", ".", "Assert", ".", "assertTrue", ";", "import", "static", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ".", "AuthorizationEndpoint", ".", "AUTHORIZATION_REQUEST_ATTR_NAME", ";", "import", "static", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "provider", ".", "endpoint", ".", "AuthorizationEndpoint", ".", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ";", "import", "java", ".", "util", ".", "Arrays", ";", "import", "java", ".", "util", ".", "Collections", ";", "@", "@", "-", "29", ",", "6", "+", "31", ",", "7", "@", "@", "import", "org", ".", "junit", ".", "Test", ";", "import", "org", ".", "springframework", ".", "security", ".", "authentication", ".", "UsernamePasswordAuthenticationToken", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "Authentication", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "authority", ".", "AuthorityUtils", ";", "import", "org", ".", "springframework", ".", "security", ".", "core", ".", "authority", ".", "SimpleGrantedAuthority", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "DefaultOAuth2AccessToken", ";", "import", "org", ".", "springframework", ".", "security", ".", "oauth2", ".", "common", ".", "OAuth2AccessToken", ";", "@", "@", "-", "152", ",", "8", "+", "155", ",", "9", "@", "@", "public", "void", "testStartAuthorizationCodeFlowForClientCredentialsFails", "(", ")", "throws", "Exc", "@", "Test", "public", "void", "testAuthorizationCodeWithFragment", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "#", "bar", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "#", "bar", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "code", "=", "thecode", "#", "bar", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "162", ",", "9", "+", "166", ",", "9", "@", "@", "public", "void", "testAuthorizationCodeWithFragment", "(", ")", "throws", "Exception", "{", "@", "Test", "public", "void", "testAuthorizationCodeWithQueryParams", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "&", "code", "=", "thecode", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "173", ",", "8", "+", "177", ",", "9", "@", "@", "public", "void", "testAuthorizationCodeWithQueryParams", "(", ")", "throws", "Exception", "{", "@", "Test", "public", "void", "testAuthorizationCodeWithTrickyState", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "=", "?", "s", "\"", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "=", "?", "s", "\"", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "code", "=", "thecode", "&", "state", "=", "%", "20", "%", "3D", "?", "s", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "183", ",", "10", "+", "188", ",", "10", "@", "@", "public", "void", "testAuthorizationCodeWithTrickyState", "(", ")", "throws", "Exception", "{", "@", "Test", "public", "void", "testAuthorizationCodeWithMultipleQueryParams", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "&", "bar", "=", "foo", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "&", "bar", "=", "foo", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "bar", "&", "bar", "=", "foo", "&", "code", "=", "thecode", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "195", ",", "10", "+", "200", ",", "10", "@", "@", "public", "void", "testAuthorizationCodeWithMultipleQueryParams", "(", ")", "throws", "Exception", "{", "@", "Test", "public", "void", "testAuthorizationCodeWithTrickyQueryParams", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "b", "=", "&", "bar", "=", "f", "$", "\",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "?", "foo", "=", "b", "=", "&", "bar", "=", "f", "$", "\",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "String", "url", "=", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", ");", "@", "@", "-", "211", ",", "10", "+", "216", ",", "10", "@", "@", "public", "void", "testAuthorizationCodeWithTrickyQueryParams", "(", ")", "throws", "Exception", "{", "@", "Test", "public", "void", "testAuthorizationCodeWithTrickyEncodedQueryParams", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "/", "path", "?", "foo", "=", "b", "%", "20", "%", "3D", "&", "bar", "=", "f", "%", "20", "$", "\",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "/", "path", "?", "foo", "=", "b", "%", "20", "%", "3D", "&", "bar", "=", "f", "%", "20", "$", "\",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "/", "path", "?", "foo", "=", "b", "%", "20", "%", "3D", "&", "bar", "=", "f", "%", "20", "$", "&", "code", "=", "thecode", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "223", ",", "10", "+", "228", ",", "10", "@", "@", "public", "void", "testAuthorizationCodeWithTrickyEncodedQueryParams", "(", ")", "throws", "Exception", "@", "Test", "public", "void", "testAuthorizationCodeWithMoreTrickyEncodedQueryParams", "(", ")", "throws", "Exception", "{", "endpoint", ".", "setAuthorizationCodeServices", "(", "new", "StubAuthorizationCodeServices", "(", "))", ";", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", "?", "t", "=", "a", "%", "3Db", "%", "26ep", "%", "3Dtest", "%", "2540test", ".", "me", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", "?", "t", "=", "a", "%", "3Db", "%", "26ep", "%", "3Dtest", "%", "2540test", ".", "me", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "Collections", ".", "singletonMap", "(", "OAuth2Utils", ".", "USER_OAUTH_APPROVAL", ",", "\"", "true", "\"", "),", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", "?", "t", "=", "a", "%", "3Db", "%", "26ep", "%", "3Dtest", "%", "2540test", ".", "me", "&", "code", "=", "thecode", "\"", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", "))", ";", "@", "@", "-", "508", ",", "15", "+", "513", ",", "17", "@", "@", "public", "void", "testApproveOrDeny", "(", ")", "throws", "Exception", "{", "request", ".", "setApproved", "(", "true", ")", ";", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "request", ")", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "assertTrue", "(", "\"", "Wrong", "view", ":", "\"", "+", "result", ",", "(", "(", "RedirectView", ")", "result", ")", ".", "getUrl", "(", ").", "startsWith", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", "))", ";", "}", "@", "Test", "public", "void", "testApprovalDenied", "(", ")", "throws", "Exception", "{", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ");", "AuthorizationRequest", "request", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "null", ",", "null", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "false", "\"", ");", "View", "result", "=", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "@", "@", "-", "541", ",", "7", "+", "548", ",", "7", "@", "@", "public", "void", "testRedirectUriOptionalForAuthorization", "(", ")", "throws", "Exception", "{", ".", "getRequestParameters", "(", "),", "sessionStatus", ",", "principal", ")", ";", "/", "/", "RedirectUri", "parameter", "should", "be", "null", "(", "SECOAUTH", "-", "333", ")", ",", "however", "the", "resolvedRedirectUri", "not", "AuthorizationRequest", "authorizationRequest", "=", "(", "AuthorizationRequest", ")", "result", ".", "getModelMap", "(", ").", "get", "(", "\"", "authorizationRequest", "\"", ");", "AUTHORIZATION_REQUEST_ATTR_NAME", ")", ";", "assertNull", "(", "authorizationRequest", ".", "getRequestParameters", "(", ").", "get", "(", "OAuth2Utils", ".", "REDIRECT_URI", ")", ");", "assertEquals", "(", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "authorizationRequest", ".", "getRedirectUri", "(", "))", ";", "}", "@", "@", "-", "556", ",", "9", "+", "563", ",", "107", "@", "@", "public", "void", "testApproveOrDenyWithOAuth2RequestWithoutRedirectUri", "(", ")", "throws", "Except", "request", ".", "setApproved", "(", "true", ")", ";", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "model", ".", "put", "(", "\"", "authorizationRequest", "\"", ",", "request", ")", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "request", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "request", ")", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedClientId", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setClientId", "(", "\"", "bar", "\"", ");", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedState", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setState", "(", "\"", "state", "-", "5678", "\"", ");", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedRedirectUri", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setRedirectUri", "(", "\"", "http", ":", "//", "somewhere", ".", "com", "\"", ");", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedResponseTypes", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setResponseTypes", "(", "Collections", ".", "singleton", "(", "\"", "implicit", "\"", "))", ";", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedScope", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setScope", "(", "Arrays", ".", "asList", "(", "\"", "read", "\"", ",", "\"", "write", "\"", "))", ";", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedApproved", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "authorizationRequest", ".", "setApproved", "(", "false", ")", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setApproved", "(", "true", ")", ";", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedResourceIds", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setResourceIds", "(", "Collections", ".", "singleton", "(", "\"", "resource", "-", "other", "\"", "))", ";", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "@", "Test", "(", "expected", "=", "InvalidRequestException", ".", "class", ")", "public", "void", "testApproveWithModifiedAuthorities", "(", ")", "throws", "Exception", "{", "AuthorizationRequest", "authorizationRequest", "=", "getAuthorizationRequest", "(", "\"", "foo", "\"", ",", "\"", "http", ":", "//", "anywhere", ".", "com", "\"", ",", "\"", "state", "-", "1234", "\"", ",", "\"", "read", "\"", ",", "Collections", ".", "singleton", "(", "\"", "code", "\"", "))", ";", "model", ".", "put", "(", "AUTHORIZATION_REQUEST_ATTR_NAME", ",", "authorizationRequest", ")", ";", "model", ".", "put", "(", "ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME", ",", "endpoint", ".", "unmodifiableMap", "(", "authorizationRequest", ")", ");", "authorizationRequest", ".", "setAuthorities", "(", "AuthorityUtils", ".", "commaSeparatedStringToAuthorityList", "(", "\"", "authority", "-", "other", "\"", "))", ";", "/", "/", "Modify", "authorization", "request", "Map", "<", "String", ",", "String", ">", "approvalParameters", "=", "new", "HashMap", "<", "String", ",", "String", ">", "()", ";", "approvalParameters", ".", "put", "(", "\"", "user_oauth_approval", "\"", ",", "\"", "true", "\"", ");", "endpoint", ".", "approveOrDeny", "(", "approvalParameters", ",", "model", ",", "sessionStatus", ",", "principal", ")", ";", "}", "private", "class", "StubAuthorizationCodeServices", "implements", "AuthorizationCodeServices", "{"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1761", ",", "7", "+", "1761", ",", "7", "@", "@", "static", "void", "edge_bulk_in_callback", "(", "struct", "urb", "*", "urb", ")", "port_number", "=", "edge_port", "-", ">", "port", "-", ">", "port_number", ";", "if", "(", "edge_port", "-", ">", "lsr_event", ")", "{", "if", "(", "urb", "-", ">", "actual_length", ">", "0", "&", "&", "edge_port", "-", ">", "lsr_event", ")", "{", "edge_port", "-", ">", "lsr_event", "=", "0", ";", "dev_dbg", "(", "dev", ",", "\"", "%", "s", "=", "==", "==", "Port", "%", "u", "LSR", "Status", "=", "%", "02x", ",", "Data", "=", "%", "02x", "=", "==", "==", "=\\", "n", "\"", ",", "__func__", ",", "port_number", ",", "edge_port", "-", ">", "lsr_mask", ",", "*", "data", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "1585", ",", "7", "+", "1585", ",", "6", "@", "@", "static", "int", "write_segment_descriptor", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "&", "ctxt", "-", ">", "exception", ")", ";", "}", "/", "*", "Does", "not", "support", "long", "mode", "*", "/", "static", "int", "__load_segment_descriptor", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "u16", "selector", ",", "int", "seg", ",", "u8", "cpl", ",", "enum", "x86_transfer_type", "transfer", ",", "@", "@", "-", "1622", ",", "20", "+", "1621", ",", "34", "@", "@", "static", "int", "__load_segment_descriptor", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "rpl", "=", "selector", "&", "3", ";", "/", "*", "NULL", "selector", "is", "not", "valid", "for", "TR", ",", "CS", "and", "SS", "(", "except", "for", "long", "mode", ")", "*", "/", "if", "(", "(", "seg", "=", "=", "VCPU_SREG_CS", "|", "|", "(", "seg", "=", "=", "VCPU_SREG_SS", "&", "&", "(", "ctxt", "-", ">", "mode", "!", "=", "X86EMUL_MODE_PROT64", "|", "|", "rpl", "!", "=", "cpl", ")", ")", "|", "|", "seg", "=", "=", "VCPU_SREG_TR", ")", "&", "&", "null_selector", ")", "goto", "exception", ";", "/", "*", "TR", "should", "be", "in", "GDT", "only", "*", "/", "if", "(", "seg", "=", "=", "VCPU_SREG_TR", "&", "&", "(", "selector", "&", "(", "1", "<", "<", "2", ")", "))", "goto", "exception", ";", "if", "(", "null_selector", ")", "/", "*", "for", "NULL", "selector", "skip", "all", "following", "checks", "*", "/", "/", "*", "NULL", "selector", "is", "not", "valid", "for", "TR", ",", "CS", "and", "(", "except", "for", "long", "mode", ")", "SS", "*", "/", "if", "(", "null_selector", ")", "{", "if", "(", "seg", "=", "=", "VCPU_SREG_CS", "|", "|", "seg", "=", "=", "VCPU_SREG_TR", ")", "goto", "exception", ";", "if", "(", "seg", "=", "=", "VCPU_SREG_SS", ")", "{", "if", "(", "ctxt", "-", ">", "mode", "!", "=", "X86EMUL_MODE_PROT64", "|", "|", "rpl", "!", "=", "cpl", ")", "goto", "exception", ";", "/", "*", "*", "ctxt", "-", ">", "ops", "-", ">", "set_segment", "expects", "the", "CPL", "to", "be", "in", "*", "SS", ".", "DPL", ",", "so", "fake", "an", "expand", "-", "up", "32", "-", "bit", "data", "segment", ".", "*", "/", "seg_desc", ".", "type", "=", "3", ";", "seg_desc", ".", "p", "=", "1", ";", "seg_desc", ".", "s", "=", "1", ";", "seg_desc", ".", "dpl", "=", "cpl", ";", "seg_desc", ".", "d", "=", "1", ";", "seg_desc", ".", "g", "=", "1", ";", "}", "/", "*", "Skip", "all", "following", "checks", "*", "/", "goto", "load", ";", "}", "ret", "=", "read_segment_descriptor", "(", "ctxt", ",", "selector", ",", "&", "seg_desc", ",", "&", "desc_addr", ")", ";", "if", "(", "ret", "!", "=", "X86EMUL_CONTINUE", ")", "@", "@", "-", "1751", ",", "6", "+", "1764", ",", "21", "@", "@", "static", "int", "load_segment_descriptor", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "u16", "selector", ",", "int", "seg", ")", "{", "u8", "cpl", "=", "ctxt", "-", ">", "ops", "-", ">", "cpl", "(", "ctxt", ")", ";", "/", "*", "*", "None", "of", "MOV", ",", "POP", "and", "LSS", "can", "load", "a", "NULL", "selector", "in", "CPL", "=", "3", ",", "but", "*", "they", "can", "load", "it", "at", "CPL", "<", "3", "(", "Intel", "'", "s", "manual", "says", "only", "LSS", "can", ",", "*", "but", "it", "'", "s", "wrong", ")", ".", "*", "*", "However", ",", "the", "Intel", "manual", "says", "that", "putting", "IST", "=", "1", "/", "DPL", "=", "3", "in", "*", "an", "interrupt", "gate", "will", "result", "in", "SS", "=", "3", "(", "the", "AMD", "manual", "instead", "*", "says", "it", "doesn", "'", "t", ")", ",", "so", "allow", "SS", "=", "3", "in", "__load_segment_descriptor", "*", "and", "only", "forbid", "it", "here", ".", "*", "/", "if", "(", "seg", "=", "=", "VCPU_SREG_SS", "&", "&", "selector", "=", "=", "3", "&", "&", "ctxt", "-", ">", "mode", "=", "=", "X86EMUL_MODE_PROT64", ")", "return", "emulate_exception", "(", "ctxt", ",", "GP_VECTOR", ",", "0", ",", "true", ")", ";", "return", "__load_segment_descriptor", "(", "ctxt", ",", "selector", ",", "seg", ",", "cpl", ",", "X86_TRANSFER_NONE", ",", "NULL", ")", ";", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "730", ",", "43", "+", "730", ",", "50", "@", "@", "size_t", "iov_iter_copy_from_user_atomic", "(", "struct", "page", "*", "page", ",", "}", "EXPORT_SYMBOL", "(", "iov_iter_copy_from_user_atomic", ")", ";", "static", "inline", "void", "pipe_truncate", "(", "struct", "iov_iter", "*", "i", ")", "{", "struct", "pipe_inode_info", "*", "pipe", "=", "i", "-", ">", "pipe", ";", "if", "(", "pipe", "-", ">", "nrbufs", ")", "{", "size_t", "off", "=", "i", "-", ">", "iov_offset", ";", "int", "idx", "=", "i", "-", ">", "idx", ";", "int", "nrbufs", "=", "(", "idx", "-", "pipe", "-", ">", "curbuf", ")", "&", "(", "pipe", "-", ">", "buffers", "-", "1", ")", ";", "if", "(", "off", ")", "{", "pipe", "-", ">", "bufs", "[", "idx", "]", ".", "len", "=", "off", "-", "pipe", "-", ">", "bufs", "[", "idx", "]", ".", "offset", ";", "idx", "=", "next_idx", "(", "idx", ",", "pipe", ")", ";", "nrbufs", "+", "+;", "}", "while", "(", "pipe", "-", ">", "nrbufs", ">", "nrbufs", ")", "{", "pipe_buf_release", "(", "pipe", ",", "&", "pipe", "-", ">", "bufs", "[", "idx", "]", ");", "idx", "=", "next_idx", "(", "idx", ",", "pipe", ")", ";", "pipe", "-", ">", "nrbufs", "-", "-;", "}", "}", "}", "static", "void", "pipe_advance", "(", "struct", "iov_iter", "*", "i", ",", "size_t", "size", ")", "{", "struct", "pipe_inode_info", "*", "pipe", "=", "i", "-", ">", "pipe", ";", "struct", "pipe_buffer", "*", "buf", ";", "int", "idx", "=", "i", "-", ">", "idx", ";", "size_t", "off", "=", "i", "-", ">", "iov_offset", ",", "orig_sz", ";", "if", "(", "unlikely", "(", "i", "-", ">", "count", "<", "size", ")", ")", "size", "=", "i", "-", ">", "count", ";", "orig_sz", "=", "size", ";", "if", "(", "size", ")", "{", "struct", "pipe_buffer", "*", "buf", ";", "size_t", "off", "=", "i", "-", ">", "iov_offset", ",", "left", "=", "size", ";", "int", "idx", "=", "i", "-", ">", "idx", ";", "if", "(", "off", ")", "/", "*", "make", "it", "relative", "to", "the", "beginning", "of", "buffer", "*", "/", "size", "+", "=", "off", "-", "pipe", "-", ">", "bufs", "[", "idx", "]", ".", "offset", ";", "left", "+", "=", "off", "-", "pipe", "-", ">", "bufs", "[", "idx", "]", ".", "offset", ";", "while", "(", "1", ")", "{", "buf", "=", "&", "pipe", "-", ">", "bufs", "[", "idx", "]", ";", "if", "(", "size", "<", "=", "buf", "-", ">", "len", ")", "if", "(", "left", "<", "=", "buf", "-", ">", "len", ")", "break", ";", "size", "-", "=", "buf", "-", ">", "len", ";", "left", "-", "=", "buf", "-", ">", "len", ";", "idx", "=", "next_idx", "(", "idx", ",", "pipe", ")", ";", "}", "buf", "-", ">", "len", "=", "size", ";", "i", "-", ">", "idx", "=", "idx", ";", "off", "=", "i", "-", ">", "iov_offset", "=", "buf", "-", ">", "offset", "+", "size", ";", "}", "if", "(", "off", ")", "idx", "=", "next_idx", "(", "idx", ",", "pipe", ")", ";", "if", "(", "pipe", "-", ">", "nrbufs", ")", "{", "int", "unused", "=", "(", "pipe", "-", ">", "curbuf", "+", "pipe", "-", ">", "nrbufs", ")", "&", "(", "pipe", "-", ">", "buffers", "-", "1", ")", ";", "/", "*", "[", "curbuf", ",", "unused", ")", "is", "in", "use", ".", "Free", "[", "idx", ",", "unused", ")", "*", "/", "while", "(", "idx", "!", "=", "unused", ")", "{", "pipe_buf_release", "(", "pipe", ",", "&", "pipe", "-", ">", "bufs", "[", "idx", "]", ");", "idx", "=", "next_idx", "(", "idx", ",", "pipe", ")", ";", "pipe", "-", ">", "nrbufs", "-", "-;", "}", "i", "-", ">", "iov_offset", "=", "buf", "-", ">", "offset", "+", "left", ";", "}", "i", "-", ">", "count", "-", "=", "orig_sz", ";", "i", "-", ">", "count", "-", "=", "size", ";", "/", "*", ".", "..", "and", "discard", "everything", "past", "that", "point", "*", "/", "pipe_truncate", "(", "i", ")", ";", "}", "void", "iov_iter_advance", "(", "struct", "iov_iter", "*", "i", ",", "size_t", "size", ")", "@", "@", "-", "826", ",", "6", "+", "833", ",", "7", "@", "@", "void", "iov_iter_pipe", "(", "struct", "iov_iter", "*", "i", ",", "int", "direction", ",", "size_t", "count", ")", "{", "BUG_ON", "(", "direction", "!", "=", "ITER_PIPE", ")", ";", "WARN_ON", "(", "pipe", "-", ">", "nrbufs", "=", "=", "pipe", "-", ">", "buffers", ")", ";", "i", "-", ">", "type", "=", "direction", ";", "i", "-", ">", "pipe", "=", "pipe", ";", "i", "-", ">", "idx", "=", "(", "pipe", "-", ">", "curbuf", "+", "pipe", "-", ">", "nrbufs", ")", "&", "(", "pipe", "-", ">", "buffers", "-", "1", ")", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "165", ",", "8", "+", "165", ",", "10", "@", "@", "import", "org", ".", "apache", ".", "mina", ".", "core", ".", "future", ".", "WriteFuture", ";", "import", "org", ".", "apache", ".", "mina", ".", "core", ".", "service", ".", "IoConnector", ";", "import", "org", ".", "apache", ".", "mina", ".", "core", ".", "session", ".", "IoSession", ";", "import", "org", ".", "apache", ".", "mina", ".", "filter", ".", "FilterEvent", ";", "import", "org", ".", "apache", ".", "mina", ".", "filter", ".", "codec", ".", "ProtocolCodecFilter", ";", "import", "org", ".", "apache", ".", "mina", ".", "filter", ".", "codec", ".", "ProtocolEncoderException", ";", "import", "org", ".", "apache", ".", "mina", ".", "filter", ".", "ssl", ".", "SslEvent", ";", "import", "org", ".", "apache", ".", "mina", ".", "filter", ".", "ssl", ".", "SslFilter", ";", "import", "org", ".", "apache", ".", "mina", ".", "transport", ".", "socket", ".", "SocketSessionConfig", ";", "import", "org", ".", "apache", ".", "mina", ".", "transport", ".", "socket", ".", "nio", ".", "NioSocketConnector", ";", "@", "@", "-", "242", ",", "6", "+", "244", ",", "9", "@", "@", "/", "**", "The", "krb5", "configuration", "property", "*", "/", "private", "static", "final", "String", "KRB5_CONF", "=", "\"", "java", ".", "security", ".", "krb5", ".", "conf", "\"", ";", "/", "**", "A", "future", "used", "to", "block", "any", "action", "until", "the", "handhake", "is", "completed", "*", "/", "private", "HandshakeFuture", "handshakeFuture", ";", "/", "/", "~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "common", "error", "messages", "~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~~", "~", "static", "final", "String", "TIME_OUT_ERROR", "=", "\"", "TimeOut", "occurred", "\"", ";", "@", "@", "-", "668", ",", "6", "+", "673", ",", "26", "@", "@", "public", "boolean", "connect", "(", ")", "throws", "LdapException", "while", "(", "maxRetry", ">", "System", ".", "currentTimeMillis", "(", ")", "&", "&", "!", "interrupted", ")", "{", "connectionFuture", "=", "connector", ".", "connect", "(", "address", ")", ";", "if", "(", "config", ".", "isUseSsl", "(", ")", ")", "{", "try", "{", "boolean", "isSecured", "=", "handshakeFuture", ".", "get", "(", "timeout", ",", "TimeUnit", ".", "MILLISECONDS", ")", ";", "if", "(", "!", "isSecured", ")", "{", "throw", "new", "LdapOperationException", "(", "ResultCodeEnum", ".", "OTHER", ",", "I18n", ".", "err", "(", "I18n", ".", "ERR_4100_TLS_HANDSHAKE_ERROR", ")", ")", ";", "}", "}", "catch", "(", "Exception", "e", ")", "{", "String", "msg", "=", "\"", "Failed", "to", "initialize", "the", "SSL", "context", "\"", ";", "LOG", ".", "error", "(", "msg", ",", "e", ")", ";", "throw", "new", "LdapException", "(", "msg", ",", "e", ")", ";", "}", "}", "boolean", "result", "=", "false", ";", "@", "@", "-", "861", ",", "7", "+", "886", ",", "6", "@", "@", "else", "if", "(", "responseFuture", "instanceof", "SearchFuture", ")", "/", "/", "Get", "back", "the", "session", "ldapSession", "=", "connectionFuture", ".", "getSession", "(", ");", "connected", ".", "set", "(", "true", ")", ";", "/", "/", "Store", "the", "container", "into", "the", "session", "if", "we", "don", "'", "t", "have", "one", "@", "SuppressWarnings", "(", "\"", "unchecked", "\"", ")", "@", "@", "-", "2432", ",", "27", "+", "2456", ",", "6", "@", "@", "private", "boolean", "isNoticeOfDisconnect", "(", "Message", "message", ")", "public", "void", "messageReceived", "(", "IoSession", "session", ",", "Object", "message", ")", "throws", "Exception", "{", "/", "/", "Feed", "the", "response", "and", "store", "it", "into", "the", "session", "if", "(", "message", "instanceof", "SslFilter", ".", "SslFilterMessage", ")", "{", "/", "/", "This", "is", "a", "SSL", "message", "telling", "if", "the", "session", "has", "been", "secured", "or", "not", "HandshakeFuture", "handshakeFuture", "=", "(", "HandshakeFuture", ")", "ldapSession", ".", "getAttribute", "(", "\"", "HANDSHAKE_FUTURE", "\"", ")", ";", "if", "(", "message", "=", "=", "SslFilter", ".", "SESSION_SECURED", ")", "{", "/", "/", "SECURED", "handshakeFuture", ".", "secured", "(", ");", "}", "else", "{", "/", "/", "UNSECURED", "handshakeFuture", ".", "cancel", "(", ");", "}", "ldapSession", ".", "removeAttribute", "(", "\"", "HANDSHAKE_FUTURE", "\"", ")", ";", "return", ";", "}", "Message", "response", "=", "(", "Message", ")", "message", ";", "if", "(", "LOG", ".", "isDebugEnabled", "(", ")", ")", "@", "@", "-", "4529", ",", "6", "+", "4532", ",", "7", "@", "@", "public", "void", "sessionCreated", "(", "IoSession", "session", ")", "throws", "Exception", "codec", ",", "config", ".", "getBinaryAttributeDetector", "(", ")", ")", ";", "session", ".", "setAttribute", "(", "LdapDecoder", ".", "MESSAGE_CONTAINER_ATTR", ",", "ldapMessageContainer", ")", ";", "connected", ".", "set", "(", "true", ")", ";", "}", "@", "@", "-", "4680", ",", "20", "+", "4684", ",", "16", "@", "@", "private", "void", "addSslFilter", "(", ")", "throws", "LdapException", "{", "\"", "TLSv1", "\"", ",", "\"", "TLSv1", ".", "1", "\"", ",", "\"", "TLSv1", ".", "2", "\"", "}", ")", ";", "}", "/", "/", "for", "LDAPS", "/", "/", "for", "LDAPS", "/", "TLS", "handshakeFuture", "=", "new", "HandshakeFuture", "(", ");", "if", "(", "(", "ldapSession", "=", "=", "null", ")", "|", "|", "!", "connected", ".", "get", "(", ")", ")", "{", "connector", ".", "getFilterChain", "(", ").", "addFirst", "(", "SSL_FILTER_KEY", ",", "sslFilter", ")", ";", "}", "else", "/", "/", "for", "StartTLS", "{", "HandshakeFuture", "handshakeFuture", "=", "new", "HandshakeFuture", "(", ");", "ldapSession", ".", "setAttribute", "(", "SslFilter", ".", "USE_NOTIFICATION", ",", "Boolean", ".", "TRUE", ")", ";", "ldapSession", ".", "setAttribute", "(", "\"", "HANDSHAKE_FUTURE", "\"", ",", "handshakeFuture", ")", ";", "ldapSession", ".", "getFilterChain", "(", ").", "addFirst", "(", "SSL_FILTER_KEY", ",", "sslFilter", ")", ";", "boolean", "isSecured", "=", "handshakeFuture", ".", "get", "(", "timeout", ",", "TimeUnit", ".", "MILLISECONDS", ")", ";", "if", "(", "!", "isSecured", ")", "@", "@", "-", "4911", ",", "13", "+", "4911", ",", "6", "@", "@", "public", "BindFuture", "bindSasl", "(", "SaslRequest", "saslRequest", ")", "throws", "LdapException", "*", "/", "private", "void", "writeRequest", "(", "Request", "request", ")", "throws", "LdapException", "{", "/", "/", "If", "we", "are", "meant", "to", "be", "using", "a", "secure", "connection", "but", "the", "ssl", "filter", "isn", "'", "in", "the", "filter", "chain", "then", "/", "/", "throw", "immediately", "if", "(", "config", ".", "isUseSsl", "(", ")", "&", "&", "!", "ldapSession", ".", "getFilterChain", "(", ").", "contains", "(", "\"", "sslFilter", "\"", ")", ")", "{", "throw", "new", "InvalidConnectionException", "(", "\"", "Attempting", "to", "send", "over", "an", "insecure", "connection", "\"", ")", ";", "}", "/", "/", "Send", "the", "request", "to", "the", "server", "WriteFuture", "writeFuture", "=", "ldapSession", ".", "write", "(", "request", ")", ";", "@", "@", "-", "5090", ",", "4", "+", "5083", ",", "18", "@", "@", "public", "void", "setConnectionConfig", "(", "SocketSessionConfig", "connectionConfig", ")", "{", "this", ".", "connectionConfig", "=", "connectionConfig", ";", "}", "/", "**", "*", "{", "@", "inheritDoc", "}", "*", "/", "@", "Override", "public", "void", "event", "(", "IoSession", "session", ",", "FilterEvent", "event", ")", "throws", "Exception", "{", "/", "/", "Check", "if", "it", "'", "s", "a", "SSLevent", "if", "(", "(", "event", "instanceof", "SslEvent", ")", "&", "&", "(", "(", "SslEvent", ")", "event", "=", "=", "SslEvent", ".", "SECURED", ")", ")", "{", "handshakeFuture", ".", "secured", "(", ");", "}", "}", "}"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": ["@", "@", "-", "175", ",", "6", "+", "175", ",", "7", "@", "@", "enum", "{", "ecryptfs_opt_sig", ",", "ecryptfs_opt_ecryptfs_sig", ",", "ecryptfs_opt_encrypted_view", ",", "ecryptfs_opt_fnek_sig", ",", "ecryptfs_opt_fn_cipher", ",", "ecryptfs_opt_fn_cipher_key_bytes", ",", "ecryptfs_opt_unlink_sigs", ",", "ecryptfs_opt_mount_auth_tok_only", ",", "ecryptfs_opt_check_dev_ruid", ",", "ecryptfs_opt_err", "}", ";", "static", "const", "match_table_t", "tokens", "=", "{", "@", "@", "-", "191", ",", "6", "+", "192", ",", "7", "@", "@", "static", "const", "match_table_t", "tokens", "=", "{", "{", "ecryptfs_opt_fn_cipher_key_bytes", ",", "\"", "ecryptfs_fn_key_bytes", "=", "%", "u", "\"", "},", "{", "ecryptfs_opt_unlink_sigs", ",", "\"", "ecryptfs_unlink_sigs", "\"", "},", "{", "ecryptfs_opt_mount_auth_tok_only", ",", "\"", "ecryptfs_mount_auth_tok_only", "\"", "},", "{", "ecryptfs_opt_check_dev_ruid", ",", "\"", "ecryptfs_check_dev_ruid", "\"", "},", "{", "ecryptfs_opt_err", ",", "NULL", "}", "}", ";", "@", "@", "-", "236", ",", "6", "+", "238", ",", "7", "@", "@", "static", "void", "ecryptfs_init_mount_crypt_stat", "(", "*", "ecryptfs_parse_options", "*", "@", "sb", ":", "The", "ecryptfs", "super", "block", "*", "@", "options", ":", "The", "options", "passed", "to", "the", "kernel", "*", "@", "check_ruid", ":", "set", "to", "1", "if", "device", "uid", "should", "be", "checked", "against", "the", "ruid", "*", "*", "Parse", "mount", "options", ":", "*", "debug", "=", "N", "-", "ecryptfs_verbosity", "level", "for", "debug", "output", "@", "@", "-", "251", ",", "7", "+", "254", ",", "8", "@", "@", "static", "void", "ecryptfs_init_mount_crypt_stat", "(", "*", "*", "Returns", "zero", "on", "success", ";", "non", "-", "zero", "on", "error", "*", "/", "static", "int", "ecryptfs_parse_options", "(", "struct", "ecryptfs_sb_info", "*", "sbi", ",", "char", "*", "options", ")", "static", "int", "ecryptfs_parse_options", "(", "struct", "ecryptfs_sb_info", "*", "sbi", ",", "char", "*", "options", ",", "uid_t", "*", "check_ruid", ")", "{", "char", "*", "p", ";", "int", "rc", "=", "0", ";", "@", "@", "-", "276", ",", "6", "+", "280", ",", "8", "@", "@", "static", "int", "ecryptfs_parse_options", "(", "struct", "ecryptfs_sb_info", "*", "sbi", ",", "char", "*", "options", ")", "char", "*", "cipher_key_bytes_src", ";", "char", "*", "fn_cipher_key_bytes_src", ";", "*", "check_ruid", "=", "0", ";", "if", "(", "!", "options", ")", "{", "rc", "=", "-", "EINVAL", ";", "goto", "out", ";", "@", "@", "-", "380", ",", "6", "+", "386", ",", "9", "@", "@", "static", "int", "ecryptfs_parse_options", "(", "struct", "ecryptfs_sb_info", "*", "sbi", ",", "char", "*", "options", ")", "mount_crypt_stat", "-", ">", "flags", "|", "=", "ECRYPTFS_GLOBAL_MOUNT_AUTH_TOK_ONLY", ";", "break", ";", "case", "ecryptfs_opt_check_dev_ruid", ":", "*", "check_ruid", "=", "1", ";", "break", ";", "case", "ecryptfs_opt_err", ":", "default", ":", "printk", "(", "KERN_WARNING", "@", "@", "-", "475", ",", "6", "+", "484", ",", "7", "@", "@", "static", "struct", "dentry", "*", "ecryptfs_mount", "(", "struct", "file_system_type", "*", "fs_type", ",", "int", "flags", "const", "char", "*", "err", "=", "\"", "Getting", "sb", "failed", "\"", ";", "struct", "inode", "*", "inode", ";", "struct", "path", "path", ";", "uid_t", "check_ruid", ";", "int", "rc", ";", "sbi", "=", "kmem_cache_zalloc", "(", "ecryptfs_sb_info_cache", ",", "GFP_KERNEL", ")", ";", "@", "@", "-", "483", ",", "7", "+", "493", ",", "7", "@", "@", "static", "struct", "dentry", "*", "ecryptfs_mount", "(", "struct", "file_system_type", "*", "fs_type", ",", "int", "flags", "goto", "out", ";", "}", "rc", "=", "ecryptfs_parse_options", "(", "sbi", ",", "raw_data", ")", ";", "rc", "=", "ecryptfs_parse_options", "(", "sbi", ",", "raw_data", ",", "&", "check_ruid", ")", ";", "if", "(", "rc", ")", "{", "err", "=", "\"", "Error", "parsing", "options", "\"", ";", "goto", "out", ";", "@", "@", "-", "521", ",", "6", "+", "531", ",", "15", "@", "@", "static", "struct", "dentry", "*", "ecryptfs_mount", "(", "struct", "file_system_type", "*", "fs_type", ",", "int", "flags", "\"", "known", "incompatibilities", "\\", "n", "\"", ");", "goto", "out_free", ";", "}", "if", "(", "check_ruid", "&", "&", "path", ".", "dentry", "-", ">", "d_inode", "-", ">", "i_uid", "!", "=", "current_uid", "(", "))", "{", "rc", "=", "-", "EPERM", ";", "printk", "(", "KERN_ERR", "\"", "Mount", "of", "device", "(", "uid", ":", "%", "d", ")", "not", "owned", "by", "\"", "\"", "requested", "user", "(", "uid", ":", "%", "d", ")", "\\", "n", "\"", ",", "path", ".", "dentry", "-", ">", "d_inode", "-", ">", "i_uid", ",", "current_uid", "(", "))", ";", "goto", "out_free", ";", "}", "ecryptfs_set_superblock_lower", "(", "s", ",", "path", ".", "dentry", "-", ">", "d_sb", ")", ";", "s", "-", ">", "s_maxbytes", "=", "path", ".", "dentry", "-", ">", "d_sb", "-", ">", "s_maxbytes", ";", "s", "-", ">", "s_blocksize", "=", "path", ".", "dentry", "-", ">", "d_sb", "-", ">", "s_blocksize", ";"], "docstring_tokens": ["some", "aspect"], "extra_label": "1"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
{"contents": ["empty"], "code_tokens": [], "docstring_tokens": ["no", "aspect"], "extra_label": "0"}
